{"version":3,"file":"8482.0.50.0.1717594600319.js","mappings":"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EAK7C,MAAM6E,EAAc,CAClB,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,M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","sources":["webpack:///../../libs/remix-simulator/src/VmProxy.ts","webpack:///../../libs/remix-simulator/src/index.ts","webpack:///../../libs/remix-simulator/src/methods/accounts.ts","webpack:///../../libs/remix-simulator/src/methods/blocks.ts","webpack:///../../libs/remix-simulator/src/methods/debug.ts","webpack:///../../libs/remix-simulator/src/methods/filters.ts","webpack:///../../libs/remix-simulator/src/methods/misc.ts","webpack:///../../libs/remix-simulator/src/methods/net.ts","webpack:///../../libs/remix-simulator/src/methods/transactions.ts","webpack:///../../libs/remix-simulator/src/methods/txProcess.ts","webpack:///../../libs/remix-simulator/src/provider.ts","webpack:///../../libs/remix-simulator/src/server.ts","webpack:///../../libs/remix-simulator/src/utils/logs.ts","webpack:///../../libs/remix-simulator/src/vm-context.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/blockchain.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/consensus/casper.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/consensus/clique.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/consensus/ethash.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/consensus/index.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/db/cache.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/db/constants.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/db/helpers.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/db/manager.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/db/operation.ts","webpack:///../../node_modules/@ethereumjs/blockchain/src/index.ts","webpack:///../../node_modules/@ethereumjs/ethash/src/index.ts","webpack:///../../node_modules/@ethereumjs/ethash/src/util.ts","webpack:///../node_modules/bigint-mod-arith/dist/index.browser.esm.js","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/fromBuffer.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/randBytes.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/randBits.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/randBetween.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/workerUtils.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/isProbablyPrime.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/bigint-crypto-utils/src/ts/prime.ts","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/ethereum-cryptography/keccak.js","webpack:///../../node_modules/@ethereumjs/ethash/node_modules/ethereum-cryptography/utils.js","webpack:///../../node_modules/@ethereumjs/evm/src/eof.ts","webpack:///../../node_modules/@ethereumjs/evm/src/evm.ts","webpack:///../../node_modules/@ethereumjs/evm/src/exceptions.ts","webpack:///../../node_modules/@ethereumjs/evm/src/index.ts","webpack:///../../node_modules/@ethereumjs/evm/src/interpreter.ts","webpack:///../../node_modules/@ethereumjs/evm/src/journal.ts","webpack:///../../node_modules/@ethereumjs/evm/src/logger.ts","webpack:///../../node_modules/@ethereumjs/evm/src/memory.ts","webpack:///../../node_modules/@ethereumjs/evm/src/message.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/EIP1283.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/EIP2200.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/EIP2929.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/codes.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/functions.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/gas.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/index.ts","webpack:///../../node_modules/@ethereumjs/evm/src/opcodes/util.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/01-ecrecover.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/02-sha256.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/03-ripemd160.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/04-identity.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/05-modexp.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/06-ecadd.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/07-ecmul.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/08-ecpairing.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/09-blake2f.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/0a-kzg-point-evaluation.ts","webpack:///../../node_modules/@ethereumjs/evm/src/precompiles/index.ts","webpack:///../../node_modules/@ethereumjs/evm/src/stack.ts","webpack:///../../node_modules/@ethereumjs/evm/src/transientStorage.ts","webpack:///../../node_modules/@ethereumjs/evm/src/types.ts","webpack:///../../node_modules/@ethereumjs/evm/node_modules/ethereum-cryptography/keccak.js","webpack:///../../node_modules/@ethereumjs/evm/node_modules/ethereum-cryptography/ripemd160.js","webpack:///../../node_modules/@ethereumjs/evm/node_modules/ethereum-cryptography/sha256.js","webpack:///../../node_modules/@ethereumjs/evm/node_modules/ethereum-cryptography/utils.js","webpack:///../../node_modules/@ethereumjs/statemanager/src/accessWitness.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/account.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/cache.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/code.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/index.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/originalStorageCache.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/storage.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/cache/types.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/index.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/rpcStateManager.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/stateManager.ts","webpack:///../../node_modules/@ethereumjs/statemanager/src/statelessVerkleStateManager.ts","webpack:///../../node_modules/@ethereumjs/statemanager/node_modules/ethereum-cryptography/keccak.js","webpack:///../../node_modules/@ethereumjs/statemanager/node_modules/ethereum-cryptography/utils.js","webpack:///../../node_modules/@ethereumjs/verkle/src/db/checkpoint.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/db/index.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/index.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/baseVerkleNode.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/index.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/internalNode.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/leafNode.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/types.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/node/util.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/types.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/util/bytes.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/util/crypto.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/util/index.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/util/tasks.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/util/walkController.ts","webpack:///../../node_modules/@ethereumjs/verkle/src/verkleTree.ts","webpack:///../../node_modules/@ethereumjs/vm/src/bloom/index.ts","webpack:///../../node_modules/@ethereumjs/vm/src/buildBlock.ts","webpack:///../../node_modules/@ethereumjs/vm/src/index.ts","webpack:///../../node_modules/@ethereumjs/vm/src/runBlock.ts","webpack:///../../node_modules/@ethereumjs/vm/src/runTx.ts","webpack:///../../node_modules/@ethereumjs/vm/src/vm.ts","webpack:///../../node_modules/@ethereumjs/vm/node_modules/ethereum-cryptography/keccak.js","webpack:///../../node_modules/@ethereumjs/vm/node_modules/ethereum-cryptography/utils.js","webpack:///../../node_modules/@noble/curves/src/_shortw_utils.ts","webpack:///../../node_modules/@noble/curves/src/abstract/curve.ts","webpack:///../../node_modules/@noble/curves/src/abstract/hash-to-curve.ts","webpack:///../../node_modules/@noble/curves/src/abstract/modular.ts","webpack:///../../node_modules/@noble/curves/src/abstract/utils.ts","webpack:///../../node_modules/@noble/curves/src/abstract/weierstrass.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts","webpack:///../../node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts","webpack:///../../node_modules/@noble/curves/src/secp256k1.ts","webpack:///../../node_modules/@noble/hashes/src/ripemd160.ts","webpack:///../../node_modules/@nrwl/js/node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///../../node_modules/@nrwl/js/node_modules/@babel/runtime/helpers/esm/get.js","webpack:///../../node_modules/ansi-gray/index.js","webpack:///../../node_modules/ansi-wrap/index.js","webpack:///../../node_modules/body-parser/index.js","webpack:///../../node_modules/body-parser/lib/read.js","webpack:///../../node_modules/body-parser/lib/types/json.js","webpack:///../../node_modules/body-parser/lib/types/raw.js","webpack:///../../node_modules/body-parser/lib/types/text.js","webpack:///../../node_modules/body-parser/lib/types/urlencoded.js","webpack:///../../node_modules/body-parser/node_modules/debug/src/browser.js","webpack:///../../node_modules/body-parser/node_modules/debug/src/debug.js","webpack:///../../node_modules/body-parser/node_modules/ms/index.js","webpack:///../../node_modules/body-parser/node_modules/raw-body/index.js","webpack:///../../node_modules/browserify-zlib/lib/binding.js","webpack:///../../node_modules/browserify-zlib/lib/index.js","webpack:///../../node_modules/bytes/index.js","webpack:///../../node_modules/color-support/browser.js","webpack:///../../node_modules/content-type/index.js","webpack:///../../node_modules/cors/lib/index.js","webpack:///../../node_modules/crc-32/crc32.js","webpack:///../../node_modules/depd/lib/browser/index.js","webpack:///../../node_modules/destroy/index.js","webpack:///../../node_modules/ee-first/index.js","webpack:///../../node_modules/http-errors/index.js","webpack:///../../node_modules/http-errors/node_modules/inherits/inherits_browser.js","webpack:///../../node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///../../node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///../../node_modules/iconv-lite/encodings/index.js","webpack:///../../node_modules/iconv-lite/encodings/internal.js","webpack:///../../node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///../../node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///../../node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///../../node_modules/iconv-lite/encodings/utf16.js","webpack:///../../node_modules/iconv-lite/encodings/utf7.js","webpack:///../../node_modules/iconv-lite/lib/bom-handling.js","webpack:///../../node_modules/iconv-lite/lib/index.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/ContainerBase/container/ContainerBase/index.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/ContainerBase/index.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/HashContainer/Base/container/HashContainer/Base/index.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/HashContainer/Base/index.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/HashContainer/container/HashContainer/HashMap.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/HashContainer/HashMap.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/HashContainer/container/HashContainer/HashSet.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/HashContainer/HashSet.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/OtherContainer/container/OtherContainer/PriorityQueue.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/OtherContainer/PriorityQueue.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/OtherContainer/container/OtherContainer/Queue.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/OtherContainer/Queue.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/OtherContainer/container/OtherContainer/Stack.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/OtherContainer/Stack.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Base/container/SequentialContainer/Base/RandomIterator.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/SequentialContainer/Base/RandomIterator.ts","webpack:///container/SequentialContainer/Base/index.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/SequentialContainer/Base/index.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/SequentialContainer/container/SequentialContainer/Deque.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/SequentialContainer/Deque.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/SequentialContainer/container/SequentialContainer/LinkList.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/SequentialContainer/LinkList.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/SequentialContainer/container/SequentialContainer/Vector.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/SequentialContainer/Vector.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/container/TreeContainer/Base/TreeIterator.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/TreeContainer/Base/TreeIterator.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/container/TreeContainer/Base/TreeNode.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/TreeContainer/Base/TreeNode.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/TreeContainer/Base/container/TreeContainer/Base/index.js","webpack:///../../node_modules/js-sdsl/dist/cjs/container/src/container/TreeContainer/Base/index.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/TreeContainer/container/TreeContainer/OrderedMap.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/TreeContainer/OrderedMap.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/container/TreeContainer/container/TreeContainer/OrderedSet.js","webpack:///../../node_modules/js-sdsl/dist/cjs/src/container/TreeContainer/OrderedSet.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/index.js","webpack:///../../node_modules/js-sdsl/src/index.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/utils/utils/checkObject.js","webpack:///../../node_modules/js-sdsl/dist/src/utils/checkObject.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/utils/utils/math.js","webpack:///../../node_modules/js-sdsl/dist/src/utils/math.ts","webpack:///../../node_modules/js-sdsl/dist/cjs/utils/utils/throwError.js","webpack:///../../node_modules/js-sdsl/dist/src/utils/throwError.ts","webpack:///../../node_modules/media-typer/index.js","webpack:///../../node_modules/merge/lib/src/index.js","webpack:///../../node_modules/mime-db/index.js","webpack:///../../node_modules/mime-types/index.js","webpack:///../../node_modules/object-assign/index.js","webpack:///../../node_modules/on-finished/index.js","webpack:///../../node_modules/pako/lib/utils/common.js","webpack:///../../node_modules/pako/lib/zlib/adler32.js","webpack:///../../node_modules/pako/lib/zlib/constants.js","webpack:///../../node_modules/pako/lib/zlib/crc32.js","webpack:///../../node_modules/pako/lib/zlib/deflate.js","webpack:///../../node_modules/pako/lib/zlib/inffast.js","webpack:///../../node_modules/pako/lib/zlib/inflate.js","webpack:///../../node_modules/pako/lib/zlib/inftrees.js","webpack:///../../node_modules/pako/lib/zlib/messages.js","webpack:///../../node_modules/pako/lib/zlib/trees.js","webpack:///../../node_modules/pako/lib/zlib/zstream.js","webpack:///../../node_modules/qs/lib/formats.js","webpack:///../../node_modules/qs/lib/index.js","webpack:///../../node_modules/qs/lib/parse.js","webpack:///../../node_modules/qs/lib/stringify.js","webpack:///../../node_modules/qs/lib/utils.js","webpack:///../../node_modules/rust-verkle-wasm/web/rust_verkle_wasm.js","webpack:///../../node_modules/rustbn-wasm/dist/cjs/rustbn.js","webpack:///../../node_modules/rustbn-wasm/dist/cjs/wasm.js","webpack:///../../node_modules/rustbn-wasm/node_modules/@scure/base/lib/index.js","webpack:///../../node_modules/setimmediate/setImmediate.js","webpack:///../../node_modules/setprototypeof/index.js","webpack:///../../node_modules/side-channel/index.js","webpack:///../../node_modules/side-channel/node_modules/get-intrinsic/index.js","webpack:///../../node_modules/side-channel/node_modules/object-inspect/index.js","webpack:///../../node_modules/statuses/index.js","webpack:///../../node_modules/time-stamp/index.js","webpack:///../../node_modules/toidentifier/index.js","webpack:///../../node_modules/type-is/index.js","webpack:///../../node_modules/unpipe/index.js","webpack:///../../node_modules/vary/index.js","webpack:///../../node_modules/web3-core/src/formatters.ts","webpack:///../../node_modules/web3-core/src/index.ts","webpack:///../../node_modules/web3-core/src/utils.ts","webpack:///../../node_modules/web3-core/src/web3_batch_request.ts","webpack:///../../node_modules/web3-core/src/web3_config.ts","webpack:///../../node_modules/web3-core/src/web3_context.ts","webpack:///../../node_modules/web3-core/src/web3_event_emitter.ts","webpack:///../../node_modules/web3-core/src/web3_promi_event.ts","webpack:///../../node_modules/web3-core/src/web3_request_manager.ts","webpack:///../../node_modules/web3-core/src/web3_subscription_manager.ts","webpack:///../../node_modules/web3-core/src/web3_subscriptions.ts","webpack:///../../node_modules/web3-eth-abi/src/api/errors_api.ts","webpack:///../../node_modules/web3-eth-abi/src/api/events_api.ts","webpack:///../../node_modules/web3-eth-abi/src/api/functions_api.ts","webpack:///../../node_modules/web3-eth-abi/src/api/logs_api.ts","webpack:///../../node_modules/web3-eth-abi/src/api/parameters_api.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/address.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/array.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/bool.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/bytes.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/index.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/number.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/numbersLimits.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/string.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/tuple.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/base/utils.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/decode.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/encode.ts","webpack:///../../node_modules/web3-eth-abi/src/coders/utils.ts","webpack:///../../node_modules/web3-eth-abi/src/decode_contract_error_data.ts","webpack:///../../node_modules/web3-eth-abi/src/eip_712.ts","webpack:///../../node_modules/web3-eth-abi/src/index.ts","webpack:///../../node_modules/web3-eth-abi/src/utils.ts","webpack:///../../node_modules/web3-eth-accounts/src/account.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/chains/goerli.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/chains/mainnet.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/chains/sepolia.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/common.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/1153.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/1559.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2315.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2537.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2565.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2718.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2929.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/2930.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3198.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3529.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3540.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3541.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3554.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3607.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3651.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3670.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3675.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3855.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/3860.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/4345.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/4399.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/5133.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/eips/index.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/enums.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/arrowGlacier.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/berlin.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/byzantium.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/chainstart.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/constantinople.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/dao.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/grayGlacier.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/homestead.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/index.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/istanbul.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/london.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/merge.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/mergeForkIdTransition.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/muirGlacier.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/petersburg.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/shanghai.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/spuriousDragon.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/hardforks/tangerineWhistle.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/index.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/types.ts","webpack:///../../node_modules/web3-eth-accounts/src/common/utils.ts","webpack:///../../node_modules/web3-eth-accounts/src/index.ts","webpack:///../../node_modules/web3-eth-accounts/src/schemas.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/address.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/baseTransaction.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/constants.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/eip1559Transaction.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/eip2930Transaction.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/index.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/legacyTransaction.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/transactionFactory.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/types.ts","webpack:///../../node_modules/web3-eth-accounts/src/tx/utils.ts","webpack:///../../node_modules/web3-eth-accounts/src/wallet.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@ethereumjs/rlp/src/index.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/_assert.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/_sha2.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/_u64.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/crypto.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/hmac.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/pbkdf2.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/scrypt.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/sha256.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/sha3.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/sha512.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/@noble/hashes/src/utils.ts","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/aes.js","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/keccak.js","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/pbkdf2.js","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/scrypt.js","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/secp256k1.js","webpack:///../../node_modules/web3-eth-accounts/node_modules/ethereum-cryptography/utils.js","webpack:///../../node_modules/web3-eth-contract/src/contract.ts","webpack:///../../node_modules/web3-eth-contract/src/encoding.ts","webpack:///../../node_modules/web3-eth-contract/src/index.ts","webpack:///../../node_modules/web3-eth-contract/src/log_subscription.ts","webpack:///../../node_modules/web3-eth-contract/src/utils.ts","webpack:///../../node_modules/web3-eth-ens/src/abi/ens/ENSRegistry.ts","webpack:///../../node_modules/web3-eth-ens/src/abi/ens/PublicResolver.ts","webpack:///../../node_modules/web3-eth-ens/src/config.ts","webpack:///../../node_modules/web3-eth-ens/src/ens.ts","webpack:///../../node_modules/web3-eth-ens/src/index.ts","webpack:///../../node_modules/web3-eth-ens/src/registry.ts","webpack:///../../node_modules/web3-eth-ens/src/resolver.ts","webpack:///../../node_modules/web3-eth-ens/src/utils.ts","webpack:///../../node_modules/web3-eth-iban/src/iban.ts","webpack:///../../node_modules/web3-eth-iban/src/index.ts","webpack:///../../node_modules/web3-eth-personal/src/index.ts","webpack:///../../node_modules/web3-eth-personal/src/personal.ts","webpack:///../../node_modules/web3-eth-personal/src/rpc_method_wrappers.ts","webpack:///../../node_modules/web3-eth/src/constants.ts","webpack:///../../node_modules/web3-eth/src/index.ts","webpack:///../../node_modules/web3-eth/src/rpc_method_wrappers.ts","webpack:///../../node_modules/web3-eth/src/schemas.ts","webpack:///../../node_modules/web3-eth/src/utils/decode_signed_transaction.ts","webpack:///../../node_modules/web3-eth/src/utils/decoding.ts","webpack:///../../node_modules/web3-eth/src/utils/detect_transaction_type.ts","webpack:///../../node_modules/web3-eth/src/utils/format_transaction.ts","webpack:///../../node_modules/web3-eth/src/utils/get_revert_reason.ts","webpack:///../../node_modules/web3-eth/src/utils/get_transaction_error.ts","webpack:///../../node_modules/web3-eth/src/utils/get_transaction_gas_pricing.ts","webpack:///../../node_modules/web3-eth/src/utils/prepare_transaction_for_signing.ts","webpack:///../../node_modules/web3-eth/src/utils/reject_if_block_timeout.ts","webpack:///../../node_modules/web3-eth/src/utils/send_tx_helper.ts","webpack:///../../node_modules/web3-eth/src/utils/transaction_builder.ts","webpack:///../../node_modules/web3-eth/src/utils/try_send_transaction.ts","webpack:///../../node_modules/web3-eth/src/utils/wait_for_transaction_receipt.ts","webpack:///../../node_modules/web3-eth/src/utils/watch_transaction_by_pooling.ts","webpack:///../../node_modules/web3-eth/src/utils/watch_transaction_by_subscription.ts","webpack:///../../node_modules/web3-eth/src/utils/watch_transaction_for_confirmations.ts","webpack:///../../node_modules/web3-eth/src/validation.ts","webpack:///../../node_modules/web3-eth/src/web3_eth.ts","webpack:///../../node_modules/web3-eth/src/web3_subscriptions.ts","webpack:///../../node_modules/web3-net/src/index.ts","webpack:///../../node_modules/web3-net/src/net.ts","webpack:///../../node_modules/web3-net/src/rpc_method_wrappers.ts","webpack:///../../node_modules/web3-providers-http/src/index.ts","webpack:///../../node_modules/web3-providers-http/node_modules/cross-fetch/dist/browser-ponyfill.js","webpack:///../../node_modules/web3-providers-ws/src/index.ts","webpack:///../../node_modules/web3-providers-ws/node_modules/isomorphic-ws/browser.js","webpack:///../../node_modules/web3-rpc-methods/src/eth_rpc_methods.ts","webpack:///../../node_modules/web3-rpc-methods/src/index.ts","webpack:///../../node_modules/web3-rpc-methods/src/net_rpc_methods.ts","webpack:///../../node_modules/web3-rpc-methods/src/personal_rpc_methods.ts","webpack:///../../node_modules/web3/src/abi.ts","webpack:///../../node_modules/web3/src/accounts.ts","webpack:///../../node_modules/web3/src/eth.exports.ts","webpack:///../../node_modules/web3/src/index.ts","webpack:///../../node_modules/web3/src/providers.exports.ts","webpack:///../../node_modules/web3/src/version.ts","webpack:///../../node_modules/web3/src/web3.ts","webpack:///../../node_modules/@adraffy/ens-normalize/dist/index.cjs","webpack:///../../node_modules/abitype/dist/chunk-WP7KDV47.mjs","webpack:///../../node_modules/abitype/dist/chunk-NHABU752.mjs","webpack:///../../node_modules/abitype/dist/index.mjs"],"sourcesContent":["import { util } from '@remix-project/remix-lib'\nconst { toHexPaddedString, formatMemory } = util\nimport { helpers } from '@remix-project/remix-lib'\nconst { normalizeHexAddress } = helpers.ui\nimport { ConsoleLogs, hash } from '@remix-project/remix-lib'\nimport { toChecksumAddress, bytesToHex, Address, toBytes, bigIntToHex } from '@ethereumjs/util'\nimport utils, { toBigInt } from 'web3-utils'\nimport { isBigInt } from 'web3-validator'\nimport { ethers } from 'ethers'\nimport { VMContext } from './vm-context'\nimport type { EVMStateManagerInterface } from '@ethereumjs/common'\nimport type { EVMResult, InterpreterStep, Message } from '@ethereumjs/evm'\nimport type { AfterTxEvent, VM } from '@ethereumjs/vm'\nimport type { TypedTransaction } from '@ethereumjs/tx'\n\nexport class VmProxy {\n  vmContext: VMContext\n  vm: VM\n  vmTraces\n  txs\n  txsReceipt\n  hhLogs\n  processingHash\n  processingAddress\n  processingIndex\n  previousDepth\n  incr\n  eth\n  debug\n  providers\n  currentProvider\n  storageCache\n  sha3Preimages\n  sha3\n  toHex\n  toAscii\n  fromAscii\n  fromDecimal\n  fromWei\n  toWei\n  toBigNumber\n  isAddress\n  utils\n  txsMapBlock\n  blocks\n  stateCopy: EVMStateManagerInterface\n  flagrecordVMSteps: boolean\n  lastMemoryUpdate: Array<string>\n  callIncrement: bigint\n  txRunning: boolean\n\n  constructor (vmContext: VMContext) {\n    this.vmContext = vmContext\n    this.stateCopy\n    this.vm = null\n    this.vmTraces = {}\n    this.txs = {}\n    this.txsReceipt = {}\n    this.hhLogs = {}\n    this.processingHash = null\n    this.processingAddress = null\n    this.processingIndex = null\n    this.previousDepth = 0\n    this.incr = 0\n    this.eth = {}\n    this.debug = {}\n    this.eth.getCode = (address, cb) => this.getCode(address, cb)\n    this.eth.getTransaction = (txHash, cb) => this.getTransaction(txHash, cb)\n    this.eth.getTransactionReceipt = (txHash, cb) => this.getTransactionReceipt(txHash, cb)\n    this.eth.getTransactionFromBlock = (blockNumber, txIndex, cb) => this.getTransactionFromBlock(blockNumber, txIndex, cb)\n    this.eth.getBlockNumber = (cb) => this.getBlockNumber(cb)\n    this.eth.getStorageAt = (address: string, position: string, blockNumber: string, cb) => this.getStorageAt(address, position, blockNumber, cb)\n    this.debug.traceTransaction = (txHash, options, cb) => this.traceTransaction(txHash, options, cb)\n    this.debug.storageRangeAt = (blockNumber, txIndex, address, start, maxLength, cb) => this.storageRangeAt(blockNumber, txIndex, address, start, maxLength, cb)\n    this.debug.preimage = (hashedKey, cb) => this.preimage(hashedKey, cb)\n    this.providers = { HttpProvider: function (url) {} }\n    this.currentProvider = { host: 'vm provider' }\n    this.storageCache = {}\n    this.sha3Preimages = {}\n    // util\n    this.sha3 = (...args) => utils.sha3.apply(this, args)\n    this.toHex = (...args) => utils.toHex.apply(this, args)\n    this.toAscii = (...args) => utils.toAscii.apply(this, args)\n    this.fromAscii = (...args) => utils.fromAscii.apply(this, args)\n    this.fromDecimal = (...args) => utils.fromDecimal.apply(this, args)\n    this.fromWei = (...args) => utils.fromWei.apply(this, args)\n    this.toWei = (...args) => utils.toWei.apply(this, args)\n    this.toBigNumber = (...args) => toBigInt.apply(this, args)\n    this.isAddress = (...args) => utils.isAddress.apply(this, args)\n    this.utils = utils\n    this.txsMapBlock = {}\n    this.blocks = {}\n    this.lastMemoryUpdate = []\n    this.flagrecordVMSteps = true\n    this.callIncrement = BigInt(1)\n    this.txRunning = false\n  }\n\n  setVM (vm) {\n    if (this.vm === vm) return\n    this.vm = vm\n    this.vm.evm.events.on('step', async (data: InterpreterStep, resolve: (result?: any) => void) => {\n      await this.pushTrace(data)\n      resolve()\n    })\n    this.vm.events.on('afterTx', async (data: AfterTxEvent, resolve: (result?: any) => void) => {\n      await this.txProcessed(data)\n      this.txRunning = false\n      resolve()\n    })\n    this.vm.events.on('beforeTx', async (data: TypedTransaction, resolve: (result?: any) => void) => {\n      this.txRunning = true\n      await this.txWillProcess(data)\n      resolve()\n    })\n  }\n\n  releaseCurrentHash () {\n    const ret = this.processingHash\n    this.processingHash = undefined\n    return ret\n  }\n\n  recordVMSteps (record) {\n    this.flagrecordVMSteps = record\n  }\n\n  async txWillProcess (data: TypedTransaction) {\n    if (!this.flagrecordVMSteps) return\n    this.lastMemoryUpdate = []\n    this.stateCopy = await this.vm.stateManager.shallowCopy()\n    this.incr++\n    this.processingHash = bytesToHex(data.hash())\n    this.vmTraces[this.processingHash] = {\n      gas: '0x0',\n      return: '0x0',\n      structLogs: []\n    }\n    const tx = {}\n    tx['hash'] = this.processingHash\n    tx['from'] = toChecksumAddress(data.getSenderAddress().toString())\n    if (data.to) {\n      tx['to'] = toChecksumAddress(data.to.toString())\n    }\n    this.processingAddress = tx['to']\n    tx['input'] = bytesToHex(data.data)\n    tx['gas'] = data.gasLimit.toString(10)\n    if (data.value) {\n      tx['value'] = data.value.toString(10)\n    }\n    this.txs[this.processingHash] = tx\n    this.txsReceipt[this.processingHash] = tx\n    this.storageCache[this.processingHash] = {}\n    this.storageCache['after_' + this.processingHash] = {}\n    if (data.to) {\n      (async (processingHash, processingAccount, processingAddress, self) => {\n        try {\n          const storage = await self.stateCopy.dumpStorage(processingAccount)\n          self.storageCache[processingHash][processingAddress] = storage\n        } catch (e) {\n          console.log(e)\n        }\n      })(this.processingHash, data.to, tx['to'], this)\n    }\n    this.processingIndex = 0\n  }\n\n  async txProcessed (data: AfterTxEvent) {\n    if (!this.flagrecordVMSteps) return\n    const lastOp = this.vmTraces[this.processingHash].structLogs[this.processingIndex - 1]\n    if (lastOp) {\n      lastOp.error = lastOp.op !== 'RETURN' && lastOp.op !== 'STOP' && lastOp.op !== 'DESTRUCT'\n    }\n    const gasUsed = '0x' + data.totalGasSpent.toString(16)\n    this.vmTraces[this.processingHash].gas = gasUsed\n    this.txsReceipt[this.processingHash].gasUsed = gasUsed\n    const logs = []\n    for (const l in data.execResult.logs) {\n      const log = data.execResult.logs[l]\n      const topics = []\n      if (log[1].length > 0) {\n        for (const k in log[1]) {\n          // @ts-ignore\n          topics.push(bytesToHex(log[1][k]))\n        }\n      } else {\n        topics.push('0x')\n      }\n      logs.push({\n        address: toChecksumAddress(bytesToHex(log[0])),\n        data: bytesToHex(log[2]),\n        topics: topics,\n        rawVMResponse: log\n      })\n    }\n    this.txsReceipt[this.processingHash].logs = logs\n    this.txsReceipt[this.processingHash].transactionHash = this.processingHash\n    const status = data.execResult.exceptionError ? 0 : 1\n    this.txsReceipt[this.processingHash].status = `0x${status}`\n\n    const to = this.txs[this.processingHash].to\n    if (to) {\n      try {\n        await (async (processingHash, processingAddress, self) => {\n          try {\n            const account = Address.fromString(processingAddress)\n            const storage = await self.vm.stateManager.dumpStorage(account)\n            self.storageCache['after_' + processingHash][processingAddress] = storage\n          } catch (e) {\n            console.log(e)\n          }\n        })(this.processingHash, to, this)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    if (data.createdAddress) {\n      const address = data.createdAddress.toString()\n      const checksumedAddress = toChecksumAddress(address)\n      this.vmTraces[this.processingHash].return = checksumedAddress\n      this.txsReceipt[this.processingHash].contractAddress = checksumedAddress\n    } else if (data.execResult.returnValue) {\n      this.vmTraces[this.processingHash].return = bytesToHex(data.execResult.returnValue)\n    } else {\n      this.vmTraces[this.processingHash].return = '0x'\n    }\n    this.processingIndex = null\n    this.processingAddress = null\n    this.processingHash = null\n    this.previousDepth = 0\n    this.stateCopy = null\n  }\n\n  async pushTrace (data: InterpreterStep) {\n    if (!this.flagrecordVMSteps) return\n\n    try {\n      const depth = data.depth + 1 // geth starts the depth from 1\n      if (!this.processingHash) {\n        return\n      }\n      let previousOpcode\n      if (this.vmTraces[this.processingHash] && this.vmTraces[this.processingHash].structLogs[this.processingIndex - 1]) {\n        previousOpcode = this.vmTraces[this.processingHash].structLogs[this.processingIndex - 1]\n      }\n      if (this.previousDepth > depth && previousOpcode) {\n        // returning from context, set error it is not STOP, RETURN\n        previousOpcode.invalidDepthChange = previousOpcode.op !== 'RETURN' && previousOpcode.op !== 'STOP'\n      }\n      const step = {\n        stack: { ...data.stack },\n        storage: {},\n        memory: null,\n        op: data.opcode.name,\n        pc: data.pc,\n        gasCost: data.opcode.fee.toString(),\n        gas: data.gasLeft.toString(),\n        depth: depth\n      }\n      step.stack.length = Object.keys(data.stack).length\n\n      if (previousOpcode && (previousOpcode.op === 'CALLDATACOPY' || previousOpcode.op === 'CODECOPY' || previousOpcode.op === 'EXTCODECOPY' || previousOpcode.op === 'RETURNDATACOPY' || previousOpcode.op === 'MSTORE' || previousOpcode.op === 'MSTORE8')) {\n        step.memory = new Uint8Array(data.memory)\n        this.lastMemoryUpdate = step.memory\n      }\n      this.vmTraces[this.processingHash].structLogs.push(step)\n      // Track hardhat console.log call\n      if (step.op === 'STATICCALL' && toHexPaddedString(step.stack[step.stack.length - 2]) === '0x000000000000000000000000000000000000000000636f6e736f6c652e6c6f67') {\n        const payloadStart = parseInt(toHexPaddedString(step.stack[step.stack.length - 3]), 16)\n        const memory = formatMemory(data.memory)\n        const memoryStr = memory.join('')\n        let payload = memoryStr.substring(payloadStart * 2, memoryStr.length)\n        const fnselectorStr = payload.substring(0, 8)\n        const fnselectorStrInHex = '0x' + fnselectorStr\n        const fnselector = parseInt(fnselectorStrInHex)\n        const fnArgs = ConsoleLogs[fnselector]\n        const iface = new ethers.utils.Interface([`function log${fnArgs} view`])\n        const functionDesc = iface.getFunction(`log${fnArgs}`)\n        const sigHash = iface.getSighash(`log${fnArgs}`)\n        if (fnArgs.includes('uint') && sigHash !== fnselectorStrInHex) {\n          payload = payload.replace(fnselectorStr, sigHash)\n        } else {\n          payload = '0x' + payload\n        }\n        let consoleArgs = iface.decodeFunctionData(functionDesc, payload)\n        consoleArgs = consoleArgs.map((value) => {\n          // Copied from: https://github.com/web3/web3.js/blob/e68194bdc590d811d4bf66dde12f99659861a110/packages/web3-utils/src/utils.js#L48C10-L48C10\n          if (value && ((value.constructor && value.constructor.name === 'BigNumber') || isBigInt(value))) {\n            return value.toString()\n          }\n          return value\n        })\n        this.hhLogs[this.processingHash] = this.hhLogs[this.processingHash] ? this.hhLogs[this.processingHash] : []\n        this.hhLogs[this.processingHash].push(consoleArgs)\n      }\n\n      if (step.op === 'CREATE' || step.op === 'CALL') {\n        if (step.op === 'CREATE') {\n          this.processingAddress = '(Contract Creation - Step ' + this.processingIndex + ')'\n          this.storageCache[this.processingHash][this.processingAddress] = {}\n        } else {\n          this.processingAddress = normalizeHexAddress(toHexPaddedString(step.stack[step.stack.length - 2]))\n          this.processingAddress = toChecksumAddress(this.processingAddress)\n          if (!this.storageCache[this.processingHash][this.processingAddress]) {\n            (async (processingHash, processingAddress, self) => {\n              try {\n                const account = Address.fromString(processingAddress)\n                const storage = await self.stateCopy.dumpStorage(account)\n                self.storageCache[processingHash][processingAddress] = storage\n              } catch (e) {\n                console.log(e)\n              }\n            })(this.processingHash, this.processingAddress, this)\n          }\n        }\n      }\n      if (previousOpcode && (previousOpcode.op === 'SHA3' || previousOpcode.op === 'KECCAK256')) {\n        const preimage = this.getSha3Input(previousOpcode.stack, formatMemory(this.lastMemoryUpdate))\n        const imageHash = toHexPaddedString(step.stack[step.stack.length - 1]).replace('0x', '')\n        this.sha3Preimages[imageHash] = {\n          preimage: preimage\n        }\n      }\n      this.processingIndex++\n      this.previousDepth = depth\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  getCode (address, cb) {\n    address = toChecksumAddress(address)\n    this.vm.stateManager.getContractCode(Address.fromString(address)).then((result) => {\n      cb(null, bytesToHex(result))\n    }).catch((error) => {\n      cb(error)\n    })\n  }\n\n  setProvider (provider) {}\n\n  traceTransaction (txHash, options, cb) {\n    if (this.vmTraces[txHash]) {\n      if (cb) {\n        cb(null, this.vmTraces[txHash])\n      }\n      return this.vmTraces[txHash]\n    }\n    if (cb) {\n      cb('unable to retrieve traces ' + txHash, null)\n    }\n  }\n\n  getStorageAt (address: string, position: string, blockNumber: string, cb) {\n    // we don't use the range params here\n    address = toChecksumAddress(address)\n\n    blockNumber = blockNumber === 'latest' ? this.vmContext.latestBlockNumber : blockNumber\n\n    const block = this.vmContext.blocks[blockNumber]\n    const txHash = bytesToHex(block.transactions[block.transactions.length - 1].hash())\n\n    if (this.storageCache['after_' + txHash] && this.storageCache['after_' + txHash][address]) {\n      const slot = bytesToHex(hash.keccak(toBytes(ethers.utils.hexZeroPad(position, 32))))\n      const storage = this.storageCache['after_' + txHash][address]\n      return cb(null, storage[slot].value)\n    }\n    // Before https://github.com/ethereum/remix-project/pull/1703, it used to throw error as\n    // 'unable to retrieve storage ' + txIndex + ' ' + address\n    cb(null, '0x0')\n  }\n\n  storageRangeAt (blockNumber, txIndex, address, start, maxLength, cb) {\n    // we don't use the range params here\n    address = toChecksumAddress(address)\n\n    const block = this.vmContext.blocks[blockNumber]\n    const txHash = bytesToHex(block.transactions[txIndex].hash())\n\n    if (this.storageCache[txHash] && this.storageCache[txHash][address]) {\n      const storage = this.storageCache[txHash][address]\n      return cb(null, {\n        storage: JSON.parse(JSON.stringify(storage)),\n        nextKey: null\n      })\n    }\n    // Before https://github.com/ethereum/remix-project/pull/1703, it used to throw error as\n    // 'unable to retrieve storage ' + txIndex + ' ' + address\n    cb(null, { storage: {} })\n  }\n\n  getBlockNumber (cb) { cb(null, 'vm provider') }\n\n  getTransaction (txHash, cb) {\n    if (this.txs[txHash]) {\n      if (cb) {\n        cb(null, this.txs[txHash])\n      }\n      return this.txs[txHash]\n    }\n    if (cb) {\n      cb('unable to retrieve tx ' + txHash, null)\n    }\n  }\n\n  getTransactionReceipt (txHash, cb) {\n    // same as getTransaction but return the created address also\n    if (this.txsReceipt[txHash]) {\n      if (cb) {\n        cb(null, this.txsReceipt[txHash])\n      }\n      return this.txsReceipt[txHash]\n    }\n    if (cb) {\n      cb('unable to retrieve txReceipt ' + txHash, null)\n    }\n  }\n\n  getTransactionFromBlock (blockNumber, txIndex, cb) {\n    const mes = 'not supposed to be needed by remix in vmmode'\n    console.log(mes)\n    if (cb) {\n      cb(mes, null)\n    }\n  }\n\n  preimage (hashedKey, cb) {\n    hashedKey = hashedKey.replace('0x', '')\n    cb(null, this.sha3Preimages[hashedKey] !== undefined ? this.sha3Preimages[hashedKey].preimage : null)\n  }\n\n  getSha3Input (stack, memory) {\n    const memoryStart = toHexPaddedString(stack[stack.length - 1])\n    const memoryLength = toHexPaddedString(stack[stack.length - 2])\n    const memStartDec = toBigInt(memoryStart).toString(10)\n    const memoryStartInt = parseInt(memStartDec) * 2\n    const memLengthDec = toBigInt(memoryLength).toString(10)\n    const memoryLengthInt = parseInt(memLengthDec.toString()) * 2\n\n    let i = Math.floor(memoryStartInt / 32)\n    const maxIndex = Math.floor(memoryLengthInt / 32) + i\n    if (!memory[i]) {\n      return this.emptyFill(memoryLength)\n    }\n    let sha3Input = memory[i].slice(memoryStartInt - 32 * i)\n    i++\n    while (i < maxIndex) {\n      sha3Input += memory[i] ? memory[i] : this.emptyFill(32)\n      i++\n    }\n    if (sha3Input.length < memoryLength) {\n      const leftSize = memoryLengthInt - sha3Input.length\n      sha3Input += memory[i] ? memory[i].slice(0, leftSize) : this.emptyFill(leftSize)\n    }\n    return sha3Input\n  }\n\n  emptyFill (size) {\n    return (new Array(size)).join('0')\n  }\n}\n","export { Provider, extend, JSONRPCRequestPayload, JSONRPCResponsePayload, JSONRPCResponseCallback } from './provider'\nexport { Server } from './server'\n","import { privateToAddress, toChecksumAddress, isValidPrivate, Address, toBytes, bytesToHex, Account } from '@ethereumjs/util'\nimport { privateKeyToAccount } from 'web3-eth-accounts'\nimport { toBigInt } from 'web3-utils'\nimport * as crypto from 'crypto'\n\nexport class Web3Accounts {\n  accounts: Record<string, unknown>\n  accountsKeys: Record<string, unknown>\n  vmContext\n\n  constructor (vmContext) {\n    this.vmContext = vmContext\n    // TODO: make it random and/or use remix-libs\n\n    this.accounts = {}\n    this.accountsKeys = {}\n  }\n\n  async resetAccounts (): Promise<void> {\n    this.accounts = {}\n    this.accountsKeys = {}\n    await this._addAccount('503f38a9c967ed597e47fe25643985f032b072db8075426a92110f82df48dfcb', '0x56BC75E2D63100000')\n    await this._addAccount('7e5bfb82febc4c2c8529167104271ceec190eafdca277314912eaabdb67c6e5f', '0x56BC75E2D63100000')\n    await this._addAccount('cc6d63f85de8fef05446ebdd3c537c72152d0fc437fd7aa62b3019b79bd1fdd4', '0x56BC75E2D63100000')\n    await this._addAccount('638b5c6c8c5903b15f0d3bf5d3f175c64e6e98a10bdb9768a2003bf773dcb86a', '0x56BC75E2D63100000')\n    await this._addAccount('f49bf239b6e554fdd08694fde6c67dac4d01c04e0dda5ee11abee478983f3bc0', '0x56BC75E2D63100000')\n    await this._addAccount('adeee250542d3790253046eee928d8058fd544294a5219bea152d1badbada395', '0x56BC75E2D63100000')\n    await this._addAccount('097ffe12069dcb3c3d99e6771e2cbf491a9b8b2f93ff4d3468f550c5e8264755', '0x56BC75E2D63100000')\n    await this._addAccount('5f58e8b9f1867ef00578b6f03e159428ab168f776aa445bc3ecdb02c7db8e865', '0x56BC75E2D63100000')\n    await this._addAccount('290e721ac87c7b3f31bef7b70104b9280ed3fa1425a59451490c9c02bf50d08f', '0x56BC75E2D63100000')\n    await this._addAccount('27efe944ff128cf510ab447b529eec28772f13bf65ebf1cbd504192c4f26e9d8', '0x56BC75E2D63100000')\n    await this._addAccount('3cd7232cd6f3fc66a57a6bedc1a8ed6c228fff0a327e169c2bcc5e869ed49511', '0x56BC75E2D63100000')\n    await this._addAccount('2ac6c190b09897cd8987869cc7b918cfea07ee82038d492abce033c75c1b1d0c', '0x56BC75E2D63100000')\n    await this._addAccount('dae9801649ba2d95a21e688b56f77905e5667c44ce868ec83f82e838712a2c7a', '0x56BC75E2D63100000')\n    await this._addAccount('d74aa6d18aa79a05f3473dd030a97d3305737cbc8337d940344345c1f6b72eea', '0x56BC75E2D63100000')\n    await this._addAccount('71975fbf7fe448e004ac7ae54cad0a383c3906055a65468714156a07385e96ce', '0x56BC75E2D63100000')\n  }\n\n  async _addAccount (privateKey, balance) {\n    try {\n      privateKey = toBytes('0x' + privateKey)\n      const address: Uint8Array = privateToAddress(privateKey)\n      const addressStr = toChecksumAddress(bytesToHex(address))\n      this.accounts[addressStr] = { privateKey, nonce: 0 }\n      this.accountsKeys[addressStr] = bytesToHex(privateKey)\n\n      const stateManager = this.vmContext.vm().stateManager\n      const account = await stateManager.getAccount(Address.fromString(addressStr))\n      if (!account) {\n        const account = new Account(BigInt(0), toBigInt(balance || '0xf00000000000000001'))\n        await stateManager.putAccount(Address.fromString(addressStr), account)\n      } else {\n        account.balance = toBigInt(balance || '0xf00000000000000001')\n        await stateManager.putAccount(Address.fromString(addressStr), account)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n\n  }\n\n  newAccount (cb) {\n    let privateKey:Buffer\n    do {\n      privateKey = crypto.randomBytes(32)\n    } while (!isValidPrivate(privateKey))\n    this._addAccount(privateKey, '0x56BC75E2D63100000')\n    return cb(null, bytesToHex(privateToAddress(privateKey)))\n  }\n\n  methods (): Record<string, unknown> {\n    return {\n      eth_accounts: this.eth_accounts.bind(this),\n      eth_getBalance: this.eth_getBalance.bind(this),\n      eth_sign: this.eth_sign.bind(this),\n      eth_chainId: this.eth_chainId.bind(this)\n    }\n  }\n\n  eth_accounts (_payload, cb) {\n    return cb(null, Object.keys(this.accounts))\n  }\n\n  eth_getBalance (payload, cb) {\n    const address = payload.params[0]\n    this.vmContext.vm().stateManager.getAccount(Address.fromString(address)).then((account) => {\n      cb(null, toBigInt(account.balance).toString(10))\n    }).catch((error) => {\n      cb(error)\n    })\n  }\n\n  eth_sign (payload, cb) {\n    const address = payload.params[0]\n    const message = payload.params[1]\n\n    const privateKey = this.accountsKeys[toChecksumAddress(address)]\n    if (!privateKey) {\n      return cb(new Error('unknown account'))\n    }\n    const account = privateKeyToAccount(privateKey as string)\n\n    const data = account.sign(message)\n\n    cb(null, data.signature)\n  }\n\n  eth_chainId (_payload, cb) {\n    return cb(null, '0x539') // 0x539 is hex of 1337\n  }\n}\n","import { toHex } from 'web3-utils'\nimport { VMContext } from '../vm-context'\nimport { bigIntToHex, bytesToHex } from '@ethereumjs/util'\n\nexport class Blocks {\n  vmContext: VMContext\n  coinbase: string\n  TX_INDEX = '0x0' // currently there's always only 1 tx per block, so the transaction index will always be 0x0\n  constructor (vmContext, _options) {\n    this.vmContext = vmContext\n    const options = _options || {}\n    this.coinbase = options.coinbase || '0x0000000000000000000000000000000000000000'\n  }\n\n  methods (): Record<string, unknown> {\n    return {\n      eth_getBlockByNumber: this.eth_getBlockByNumber.bind(this),\n      eth_gasPrice: this.eth_gasPrice.bind(this),\n      eth_coinbase: this.eth_coinbase.bind(this),\n      eth_blockNumber: this.eth_blockNumber.bind(this),\n      eth_getBlockByHash: this.eth_getBlockByHash.bind(this),\n      eth_getBlockTransactionCountByHash: this.eth_getBlockTransactionCountByHash.bind(this),\n      eth_getBlockTransactionCountByNumber: this.eth_getBlockTransactionCountByNumber.bind(this),\n      eth_getUncleCountByBlockHash: this.eth_getUncleCountByBlockHash.bind(this),\n      eth_getUncleCountByBlockNumber: this.eth_getUncleCountByBlockNumber.bind(this),\n      eth_getStorageAt: this.eth_getStorageAt.bind(this)\n    }\n  }\n\n  eth_getBlockByNumber (payload, cb) {\n    let blockIndex = payload.params[0]\n    if (blockIndex === 'latest') {\n      blockIndex = this.vmContext.latestBlockNumber\n    }\n\n    if (Number.isInteger(blockIndex)) {\n      blockIndex = '0x' + blockIndex.toString(16)\n    }\n    const block = this.vmContext.blocks[blockIndex]\n\n    if (!block) {\n      return cb(new Error('block not found'))\n    }\n\n    const transactions = block.transactions.map((t) => {\n      const hash = bytesToHex(t.hash())\n      const tx = this.vmContext.txByHash[hash]\n      const receipt = this.vmContext.currentVm.web3vm.txsReceipt[hash]\n      if (receipt) {\n        return {\n          blockHash: bytesToHex(block.hash()),\n          blockNumber: bigIntToHex(block.header.number),\n          from: receipt.from,\n          gas: bigIntToHex(receipt.gas),\n          chainId: '0xd05',\n          gasPrice: '0x4a817c800', // 20000000000\n          hash: receipt.transactionHash,\n          input: receipt.input,\n          nonce: bigIntToHex(tx.nonce),\n          transactionIndex: this.TX_INDEX,\n          value: bigIntToHex(tx.value),\n          to: receipt.to ? receipt.to : null\n        }\n      }\n    })\n    const b = {\n      baseFeePerGas: '0x01',\n      number: bigIntToHex(block.header.number),\n      hash: this.toHex(block.hash()),\n      parentHash: this.toHex(block.header.parentHash),\n      nonce: this.toHex(block.header.nonce),\n      sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n      logsBloom: '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\n      transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n      stateRoot: this.toHex(block.header.stateRoot),\n      miner: this.coinbase,\n      difficulty: bigIntToHex(block.header.difficulty),\n      totalDifficulty: bigIntToHex((block.header as any).totalDifficulty || 0),\n      extraData: this.toHex(block.header.extraData),\n      size: '0x027f07', // 163591\n      gasLimit: bigIntToHex(block.header.gasLimit),\n      gasUsed: bigIntToHex(block.header.gasUsed),\n      timestamp: bigIntToHex(block.header.timestamp),\n      transactions,\n      uncles: []\n    }\n    cb(null, b)\n  }\n\n  toHex (value) {\n    if (!value) return '0x0'\n    const v = bytesToHex(value)\n    return ((v === '0x' || v === '') ? '0x0' : v)\n  }\n\n  eth_getBlockByHash (payload, cb) {\n    const block = this.vmContext.blocks[payload.params[0]]\n\n    const transactions = block.transactions.map((t) => {\n      const hash = bytesToHex(t.hash())\n      const tx = this.vmContext.txByHash[hash]\n      const receipt = this.vmContext.currentVm.web3vm.txsReceipt[hash]\n      if (receipt) {\n        return {\n          blockHash: bytesToHex(block.hash()),\n          blockNumber: bigIntToHex(block.header.number),\n          from: receipt.from,\n          gas: toHex(receipt.gas),\n          chainId: '0xd05',\n          gasPrice: '0x4a817c800', // 20000000000\n          hash: receipt.transactionHash,\n          input: receipt.input,\n          nonce: bigIntToHex(tx.nonce),\n          transactionIndex: this.TX_INDEX,\n          value: bigIntToHex(tx.value),\n          to: receipt.to ? receipt.to : null\n        }\n      }\n    })\n    const b = {\n      baseFeePerGas: '0x01',\n      number: bigIntToHex(block.header.number),\n      hash: this.toHex(block.hash()),\n      parentHash: this.toHex(block.header.parentHash),\n      nonce: this.toHex(block.header.nonce),\n      sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n      logsBloom: '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\n      transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n      stateRoot: this.toHex(block.header.stateRoot),\n      miner: this.coinbase,\n      difficulty: bigIntToHex(block.header.difficulty),\n      totalDifficulty: bigIntToHex((block.header as any).totalDifficulty || 0),\n      extraData: this.toHex(block.header.extraData),\n      size: '0x027f07', // 163591\n      gasLimit: bigIntToHex(block.header.gasLimit),\n      gasUsed: bigIntToHex(block.header.gasUsed),\n      timestamp: bigIntToHex(block.header.timestamp),\n      transactions,\n      uncles: []\n    }\n\n    cb(null, b)\n  }\n\n  eth_gasPrice (payload, cb) {\n    cb(null, 1)\n  }\n\n  eth_coinbase (payload, cb) {\n    cb(null, this.coinbase)\n  }\n\n  eth_blockNumber (payload, cb) {\n    cb(null, parseInt(this.vmContext.latestBlockNumber))\n  }\n\n  eth_getBlockTransactionCountByHash (payload, cb) {\n    const block = this.vmContext.blocks[payload.params[0]]\n\n    cb(null, block.transactions.length)\n  }\n\n  eth_getBlockTransactionCountByNumber (payload, cb) {\n    const block = this.vmContext.blocks[payload.params[0]]\n\n    cb(null, block.transactions.length)\n  }\n\n  eth_getUncleCountByBlockHash (payload, cb) {\n    cb(null, 0)\n  }\n\n  eth_getUncleCountByBlockNumber (payload, cb) {\n    cb(null, 0)\n  }\n\n  eth_getStorageAt (payload, cb) {\n    return this.vmContext.web3().eth.getStorageAt(\n      payload.params[0],\n      payload.params[1],\n      payload.params[2],\n      cb)\n  }\n}\n","export class Debug {\n  vmContext\n\n  constructor (vmContext) {\n    this.vmContext = vmContext\n  }\n\n  methods () {\n    return {\n      debug_traceTransaction: this.debug_traceTransaction.bind(this),\n      debug_preimage: this.debug_preimage.bind(this),\n      debug_storageRangeAt: this.debug_storageRangeAt.bind(this)\n    }\n  }\n\n  debug_traceTransaction (payload, cb) {\n    this.vmContext.web3().debug.traceTransaction(payload.params[0], {}, cb)\n  }\n\n  debug_preimage (payload, cb) {\n    this.vmContext.web3().debug.preimage(payload.params[0], cb)\n  }\n\n  debug_storageRangeAt (payload, cb) {\n    this.vmContext.web3().debug.storageRangeAt(\n      payload.params[0],\n      payload.params[1],\n      payload.params[2],\n      payload.params[3],\n      payload.params[4],\n      cb)\n  }\n}\n","export class Filters {\n  vmContext\n\n  constructor (vmContext) {\n    this.vmContext = vmContext\n  }\n\n  methods () {\n    return {\n      eth_getLogs: this.eth_getLogs.bind(this),\n      eth_subscribe: this.eth_subscribe.bind(this),\n      eth_unsubscribe: this.eth_unsubscribe.bind(this)\n    }\n  }\n\n  eth_getLogs (payload, cb) {\n    const results = this.vmContext.logsManager.getLogsFor(payload.params[0])\n    cb(null, results)\n  }\n\n  eth_subscribe (payload, cb) {\n    const subscriptionId = this.vmContext.logsManager.subscribe(payload.params)\n    cb(null, subscriptionId)\n  }\n\n  eth_unsubscribe (payload, cb) {\n    this.vmContext.logsManager.unsubscribe(payload.params[0])\n    cb(null, true)\n  }\n\n  eth_newFilter (payload, cb) {\n    const filterId = this.vmContext.logsManager.newFilter('filter', payload.params[0])\n    cb(null, filterId)\n  }\n\n  eth_newBlockFilter (payload, cb) {\n    const filterId = this.vmContext.logsManager.newFilter('block')\n    cb(null, filterId)\n  }\n\n  eth_newPendingTransactionFilter (payload, cb) {\n    const filterId = this.vmContext.logsManager.newFilter('pendingTransactions')\n    cb(null, filterId)\n  }\n\n  eth_uninstallfilter (payload, cb) {\n    const result = this.vmContext.logsManager.uninstallFilter(payload.params[0])\n    cb(null, result)\n  }\n\n  eth_getFilterChanges (payload, cb) {\n    const filterId = payload.params[0]\n    const results = this.vmContext.logsManager.getLogsForFilter(filterId)\n    cb(null, results)\n  }\n\n  eth_getFilterLogs (payload, cb) {\n    const filterId = payload.params[0]\n    const results = this.vmContext.logsManager.getLogsForFilter(filterId, true)\n    cb(null, results)\n  }\n}\n","import { sha3 } from 'web3-utils'\nconst version = require('../../package.json').version\n\nexport function methods () {\n  return {\n    web3_clientVersion: web3_clientVersion,\n    eth_protocolVersion: eth_protocolVersion,\n    eth_syncing: eth_syncing,\n    eth_mining: eth_mining,\n    eth_hashrate: eth_hashrate,\n    web3_sha3: web3_sha3,\n    eth_getCompilers: eth_getCompilers,\n    eth_compileSolidity: eth_compileSolidity,\n    eth_compileLLL: eth_compileLLL,\n    eth_compileSerpent: eth_compileSerpent\n  }\n}\n\nexport function web3_clientVersion (payload, cb) {\n  cb(null, 'Remix Simulator/' + version)\n}\n\nexport function eth_protocolVersion (payload, cb) {\n  cb(null, '0x3f')\n}\n\nexport function eth_syncing (payload, cb) {\n  cb(null, false)\n}\n\nexport function eth_mining (payload, cb) {\n  // TODO: should depend on the state\n  cb(null, false)\n}\n\nexport function eth_hashrate (payload, cb) {\n  cb(null, '0x0')\n}\n\nexport function web3_sha3 (payload, cb) {\n  const str: string = payload.params[0]\n  cb(null, sha3(str))\n}\n\nexport function eth_getCompilers (payload, cb) {\n  cb(null, [])\n}\n\nexport function eth_compileSolidity (payload, cb) {\n  cb(null, 'unsupported')\n}\n\nexport function eth_compileLLL (payload, cb) {\n  cb(null, 'unsupported')\n}\n\nexport function eth_compileSerpent (payload, cb) {\n  cb(null, 'unsupported')\n}\n","export function methods (): Record<string, unknown> {\n  return {\n    net_version: net_version,\n    net_listening: net_listening,\n    net_peerCount: net_peerCount\n  }\n}\n\nexport function net_version (payload, cb): void {\n  // should be configured networkId\n  cb(null, 1337)\n}\n\nexport function net_listening (payload, cb): void {\n  cb(null, true)\n}\n\nexport function net_peerCount (payload, cb): void {\n  cb(null, 0)\n}\n","import { toHex, toNumber, toBigInt } from 'web3-utils'\nimport { toChecksumAddress, Address, bigIntToHex, bytesToHex } from '@ethereumjs/util'\nimport { processTx } from './txProcess'\nimport { execution } from '@remix-project/remix-lib'\nimport { ethers } from 'ethers'\nimport { VMexecutionResult } from '@remix-project/remix-lib'\nimport { VMContext } from '../vm-context'\nimport { Log, EvmError } from '@ethereumjs/evm'\nconst TxRunnerVM = execution.TxRunnerVM\nconst TxRunner = execution.TxRunner\n\nexport type VMExecResult = {\n  exceptionError: EvmError\n  executionGasUsed: bigint\n  gas: bigint\n  gasRefund: bigint\n  logs: Log[]\n  returnValue: string\n}\n\nexport class Transactions {\n  vmContext: VMContext\n  accounts\n  tags\n  txRunnerVMInstance\n  txRunnerInstance\n  TX_INDEX = '0x0' // currently there's always only 1 tx per block, so the transaction index will always be 0x0\n  comingCallId\n\n  constructor (vmContext) {\n    this.vmContext = vmContext\n    this.tags = {}\n  }\n\n  init (accounts, blocksData: Buffer[]) {\n    this.accounts = accounts\n    const api = {\n      logMessage: (msg) => {\n      },\n      logHtmlMessage: (msg) => {\n      },\n      config: {\n        getUnpersistedProperty: (key) => {\n          return true\n        },\n        get: () => {\n          return true\n        }\n      },\n      detectNetwork: (cb) => {\n        cb()\n      },\n      personalMode: () => {\n        return false\n      }\n    }\n\n    this.txRunnerVMInstance = new TxRunnerVM(accounts, api, _ => this.vmContext.vmObject(), blocksData)\n    this.txRunnerInstance = new TxRunner(this.txRunnerVMInstance, {})\n    this.txRunnerInstance.vmaccounts = accounts\n  }\n\n  methods () {\n    return {\n      eth_sendTransaction: this.eth_sendTransaction.bind(this),\n      eth_getTransactionReceipt: this.eth_getTransactionReceipt.bind(this),\n      eth_getCode: this.eth_getCode.bind(this),\n      eth_call: this.eth_call.bind(this),\n      eth_estimateGas: this.eth_estimateGas.bind(this),\n      eth_getTransactionCount: this.eth_getTransactionCount.bind(this),\n      eth_getTransactionByHash: this.eth_getTransactionByHash.bind(this),\n      eth_getTransactionByBlockHashAndIndex: this.eth_getTransactionByBlockHashAndIndex.bind(this),\n      eth_getTransactionByBlockNumberAndIndex: this.eth_getTransactionByBlockNumberAndIndex.bind(this),\n      eth_getExecutionResultFromSimulator: this.eth_getExecutionResultFromSimulator.bind(this),\n      eth_getHHLogsForTx: this.eth_getHHLogsForTx.bind(this),\n      eth_getHashFromTagBySimulator: this.eth_getHashFromTagBySimulator.bind(this),\n      eth_registerCallId: this.eth_registerCallId.bind(this),\n      eth_getStateDb: this.eth_getStateDb.bind(this),\n      eth_getBlocksData: this.eth_getBlocksData.bind(this)\n    }\n  }\n\n  eth_sendTransaction (payload, cb) {\n    // from might be lowercased address (web3)\n    if (payload.params && payload.params.length > 0 && payload.params[0].from) {\n      payload.params[0].from = toChecksumAddress(payload.params[0].from)\n    }\n    processTx(this.txRunnerInstance, payload, false, (error, result: VMexecutionResult) => {\n      if (!error && result) {\n        this.vmContext.addBlock(result.block)\n        const hash = bytesToHex(result.tx.hash())\n        this.vmContext.trackTx(hash, result.block, result.tx)\n        const returnValue = `${bytesToHex(result.result.execResult.returnValue) || '0x0'}`\n        const execResult: VMExecResult = {\n          exceptionError: result.result.execResult.exceptionError,\n          executionGasUsed: result.result.execResult.executionGasUsed,\n          gas: result.result.execResult.gas,\n          gasRefund: result.result.execResult.gasRefund,\n          logs: result.result.execResult.logs,\n          returnValue\n        }\n        this.vmContext.trackExecResult(hash, execResult)\n        return cb(null, result.transactionHash)\n      }\n      cb(error)\n    })\n  }\n\n  eth_getExecutionResultFromSimulator (payload, cb) {\n    const txHash = payload.params[0]\n    cb(null, this.vmContext.exeResults[txHash])\n  }\n\n  eth_getHHLogsForTx (payload, cb) {\n    const txHash = payload.params[0]\n    cb(null, this.vmContext.currentVm.web3vm.hhLogs[txHash] ? this.vmContext.currentVm.web3vm.hhLogs[txHash] : [])\n  }\n\n  eth_getTransactionReceipt (payload, cb) {\n    this.vmContext.web3().eth.getTransactionReceipt(payload.params[0], (error, receipt) => {\n      if (error) {\n        return cb(error)\n      }\n\n      const txBlock = this.vmContext.blockByTxHash[receipt.hash]\n\n      const logs = this.vmContext.logsManager.getLogsByTxHash(receipt.hash)\n\n      const r: Record <string, unknown> = {\n        transactionHash: receipt.hash,\n        transactionIndex: this.TX_INDEX,\n        blockHash: bytesToHex(txBlock.hash()),\n        blockNumber: bigIntToHex(txBlock.header.number),\n        gasUsed: receipt.gasUsed,\n        cumulativeGasUsed: receipt.gasUsed, // only 1 tx per block\n        contractAddress: receipt.contractAddress,\n        logs,\n        status: receipt.status,\n        to: receipt.to\n      }\n\n      if (r.blockNumber === '0x') {\n        r.blockNumber = '0x0'\n      }\n\n      cb(null, r)\n    })\n  }\n\n  eth_estimateGas (payload, cb) {\n    // from might be lowercased address (web3)\n    if (payload.params && payload.params.length > 0 && payload.params[0].from) {\n      payload.params[0].from = toChecksumAddress(payload.params[0].from)\n    }\n    if (payload.params && payload.params.length > 0 && payload.params[0].to) {\n      payload.params[0].to = toChecksumAddress(payload.params[0].to)\n    }\n\n    payload.params[0].gas = 10000000 * 10\n    this.vmContext.web3().recordVMSteps(false)\n    this.txRunnerInstance.internalRunner.standaloneTx = true\n    processTx(this.txRunnerInstance, payload, true, (error, value: VMexecutionResult) => {\n      this.txRunnerInstance.internalRunner.standaloneTx = false\n      this.vmContext.web3().recordVMSteps(true)\n      if (error) return cb(error)\n      const result: any = value.result\n      if ((result as any).receipt?.status === '0x0' || (result as any).receipt?.status === 0) {\n        try {\n          const msg = `${bytesToHex(result.execResult.returnValue) || '0x00'}`\n          const abiCoder = new ethers.utils.AbiCoder()\n          const reason = abiCoder.decode(['string'], '0x' + msg.slice(10))[0]\n          return cb('revert ' + reason)\n        } catch (e) {\n          return cb(e.message)\n        }\n      }\n      if (result.execResult && result.execResult.exceptionError && result.execResult.exceptionError.errorType === 'EvmError') {\n        return cb(result.execResult.exceptionError.error)\n      }\n      let gasUsed = Number(toNumber(result.execResult.executionGasUsed))\n      if (result.execResult.gasRefund) {\n        gasUsed += Number(toNumber(result.execResult.gasRefund))\n      }\n      gasUsed = gasUsed + Number(toNumber(value.tx.getBaseFee()))\n      cb(null, Math.ceil(gasUsed + (15 * gasUsed) / 100))\n    })\n  }\n\n  eth_getCode (payload, cb) {\n    const address = payload.params[0]\n\n    this.vmContext.web3().eth.getCode(address, (error, result) => {\n      if (error) {\n        console.dir('error getting code')\n        console.dir(error)\n      }\n      cb(error, result)\n    })\n  }\n\n  eth_registerCallId (payload, cb) {\n    this.comingCallId = payload.params[0]\n    cb()\n  }\n\n  eth_getStateDb (_, cb) {\n    const run = async () => {\n      if ((this.vmContext.currentVm.stateManager as any)._getCodeDB) {\n        return cb(null, await (this.vmContext.currentVm.stateManager as any)._getCodeDB())\n      }\n      throw new Error('current state does not support \"getStateDetails\"')\n    }\n    run()\n  }\n\n  eth_getBlocksData (_, cb) {\n    cb(null, {\n      blocks: this.txRunnerVMInstance.blocks,\n      latestBlockNumber: this.txRunnerVMInstance.blocks.length - 1\n    })\n  }\n\n  eth_call (payload, cb) {\n    // from might be lowercased address (web3)\n    if (payload.params && payload.params.length > 0 && payload.params[0].from) {\n      payload.params[0].from = toChecksumAddress(payload.params[0].from)\n    }\n    if (payload.params && payload.params.length > 0 && payload.params[0].to) {\n      payload.params[0].to = toChecksumAddress(payload.params[0].to)\n    }\n\n    payload.params[0].value = undefined\n    const tag = payload.params[0].timestamp\n    processTx(this.txRunnerInstance, payload, true, (error, result: VMexecutionResult) => {\n      if (!error && result) {\n        this.vmContext.addBlock(result.block, null, true)\n        const hash = bytesToHex(result.tx.hash())\n        this.vmContext.trackTx(hash, result.block, result.tx)\n        const returnValue = `${bytesToHex(result.result.execResult.returnValue) || '0x0'}`\n        const execResult: VMExecResult = {\n          exceptionError: result.result.execResult.exceptionError,\n          executionGasUsed: result.result.execResult.executionGasUsed,\n          gas: result.result.execResult.gas,\n          gasRefund: result.result.execResult.gasRefund,\n          logs: result.result.execResult.logs,\n          returnValue: returnValue\n        }\n        // calls are not supposed to return a transaction hash. we do this for keeping track of it and allowing debugging calls.\n        // either the tag is specified as a timestamp in a tx or the caller should call registerCallId before calling the call.\n        if (tag) this.tags[tag] = result.transactionHash\n        else if (this.comingCallId) {\n          this.tags[this.comingCallId] = result.transactionHash\n          this.comingCallId = null\n        }\n        this.vmContext.trackExecResult(hash, execResult)\n        return cb(null, returnValue)\n      }\n      cb(error)\n    })\n  }\n\n  eth_getHashFromTagBySimulator (payload, cb) {\n    return cb(null, this.tags[payload.params[0]])\n  }\n\n  eth_getTransactionCount (payload, cb) {\n    const address = payload.params[0]\n\n    this.vmContext.vm().stateManager.getAccount(Address.fromString(address)).then((account) => {\n      const nonce = toBigInt(account.nonce).toString(10)\n      cb(null, nonce)\n    }).catch((error) => {\n      cb(error)\n    })\n  }\n\n  eth_getTransactionByHash (payload, cb) {\n    const address = payload.params[0]\n\n    this.vmContext.web3().eth.getTransactionReceipt(address, (error, receipt) => {\n      if (error) {\n        return cb(error)\n      }\n\n      const txBlock = this.vmContext.blockByTxHash[receipt.transactionHash]\n      const tx = this.vmContext.txByHash[receipt.transactionHash]\n\n      // TODO: params to add later\n      const r: Record<string, unknown> = {\n        blockHash: bytesToHex(txBlock.hash()),\n        blockNumber: bigIntToHex(txBlock.header.number),\n        from: receipt.from,\n        gas: toHex(BigInt(receipt.gas)),\n        chainId: '0xd05',\n        // 'gasPrice': '2000000000000', // 0x123\n        gasPrice: '0x4a817c800', // 20000000000\n        hash: receipt.transactionHash,\n        input: receipt.input,\n        nonce: bigIntToHex(tx.nonce),\n        transactionIndex: this.TX_INDEX,\n        value: bigIntToHex(tx.value)\n        // \"value\":\"0xf3dbb76162000\" // 4290000000000000\n        // \"v\": \"0x25\", // 37\n        // \"r\": \"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\",\n        // \"s\": \"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\"\n      }\n\n      if (receipt.to) {\n        r['to'] = receipt.to\n      }\n\n      if (r.value === '0x') {\n        r.value = '0x0'\n      }\n\n      if (r.blockNumber === '0x') {\n        r.blockNumber = '0x0'\n      }\n\n      cb(null, r)\n    })\n  }\n\n  eth_getTransactionByBlockHashAndIndex (payload, cb) {\n    const txIndex = payload.params[1]\n\n    const txBlock = this.vmContext.blocks[payload.params[0]]\n    const txHash = bytesToHex(txBlock.transactions[toNumber(txIndex) as number].hash())\n\n    this.vmContext.web3().eth.getTransactionReceipt(txHash, (error, receipt) => {\n      if (error) {\n        return cb(error)\n      }\n\n      const tx = this.vmContext.txByHash[receipt.transactionHash]\n\n      // TODO: params to add later\n      const r: Record<string, unknown> = {\n        blockHash: bytesToHex(txBlock.hash()),\n        blockNumber: bigIntToHex(txBlock.header.number),\n        from: receipt.from,\n        gas: toHex(BigInt(receipt.gas)),\n        chainId: '0xd05',\n        // 'gasPrice': '2000000000000', // 0x123\n        gasPrice: '0x4a817c800', // 20000000000\n        hash: receipt.transactionHash,\n        input: receipt.input,\n        nonce: bigIntToHex(tx.nonce),\n        transactionIndex: this.TX_INDEX,\n        value: receipt.value\n        // \"value\":\"0xf3dbb76162000\" // 4290000000000000\n        // \"v\": \"0x25\", // 37\n        // \"r\": \"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\",\n        // \"s\": \"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\"\n      }\n\n      if (receipt.to) {\n        r['to'] = receipt.to\n      }\n\n      if (r.value === '0x') {\n        r.value = '0x0'\n      }\n\n      cb(null, r)\n    })\n  }\n\n  eth_getTransactionByBlockNumberAndIndex (payload, cb) {\n    const txIndex = payload.params[1]\n\n    const txBlock = this.vmContext.blocks[payload.params[0]]\n    const txHash = bytesToHex(txBlock.transactions[toNumber(txIndex) as number].hash())\n\n    this.vmContext.web3().eth.getTransactionReceipt(txHash, (error, receipt) => {\n      if (error) {\n        return cb(error)\n      }\n\n      const tx = this.vmContext.txByHash[receipt.transactionHash]\n\n      // TODO: params to add later\n      const r: Record<string, unknown> = {\n        blockHash: bytesToHex(txBlock.hash()),\n        blockNumber: bigIntToHex(txBlock.header.number),\n        from: receipt.from,\n        gas: toHex(BigInt(receipt.gas)),\n        // 'gasPrice': '2000000000000', // 0x123\n        chainId: '0xd05',\n        gasPrice: '0x4a817c800', // 20000000000\n        hash: receipt.transactionHash,\n        input: receipt.input,\n        nonce: bigIntToHex(tx.nonce),\n        transactionIndex: this.TX_INDEX,\n        value: receipt.value\n        // \"value\":\"0xf3dbb76162000\" // 4290000000000000\n        // \"v\": \"0x25\", // 37\n        // \"r\": \"0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea\",\n        // \"s\": \"0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c\"\n      }\n\n      if (receipt.to) {\n        r['to'] = receipt.to\n      }\n\n      if (r.value === '0x') {\n        r.value = '0x0'\n      }\n\n      cb(null, r)\n    })\n  }\n}\n","import { execution } from '@remix-project/remix-lib'\nconst TxExecution = execution.txExecution\n\nfunction runCall (payload, from, to, data, value, gasLimit, txRunner, callbacks, callback) {\n  const finalCallback = function (err, result) {\n    if (err) {\n      return callback(err)\n    }\n    return callback(null, result)\n  }\n\n  TxExecution.callFunction(from, to, data, value, gasLimit, { constant: true }, txRunner, callbacks, finalCallback)\n}\n\nfunction runTx (payload, from, to, data, value, gasLimit, txRunner, callbacks, callback) {\n  const finalCallback = function (err, result) {\n    if (err) {\n      return callback(err)\n    }\n    callback(null, result)\n  }\n\n  TxExecution.callFunction(from, to, data, value, gasLimit, { constant: false }, txRunner, callbacks, finalCallback)\n}\n\nfunction createContract (payload, from, data, value, gasLimit, txRunner, callbacks, callback) {\n  const finalCallback = function (err, result) {\n    if (err) {\n      return callback(err)\n    }\n    callback(null, result)\n  }\n\n  TxExecution.createContract(from, data, value, gasLimit, txRunner, callbacks, finalCallback)\n}\n\nexport function processTx (txRunnerInstance, payload, isCall, callback) {\n  let { from, to, data, input, value, gas } = payload.params[0] // eslint-disable-line\n  gas = gas || 3000000\n\n  const callbacks = {\n    confirmationCb: (network, tx, gasEstimation, continueTxExecution, cancelCb) => {\n      continueTxExecution(null)\n    },\n    gasEstimationForceSend: (error, continueTxExecution, cancelCb) => {\n      if (error) {\n        continueTxExecution(error)\n      }\n      continueTxExecution()\n    },\n    promptCb: (okCb, cancelCb) => {\n      okCb()\n    }\n  }\n\n  if (isCall) {\n    runCall(payload, from, to, data||input, value, gas, txRunnerInstance, callbacks, callback)\n  } else if (to) {\n    runTx(payload, from, to, data||input, value, gas, txRunnerInstance, callbacks, callback)\n  } else {\n    createContract(payload, from, data||input, value, gas, txRunnerInstance, callbacks, callback)\n  }\n}\n","import { Blocks } from './methods/blocks'\n\nimport { info } from './utils/logs'\nimport merge from 'merge'\n\nimport { Web3Accounts } from './methods/accounts'\nimport { Filters } from './methods/filters'\nimport { methods as miscMethods } from './methods/misc'\nimport { methods as netMethods } from './methods/net'\nimport { Transactions } from './methods/transactions'\nimport { Debug } from './methods/debug'\nimport { VMContext } from './vm-context'\nimport { Web3PluginBase } from 'web3'\nimport { Block } from '@ethereumjs/block'\n\nexport interface JSONRPCRequestPayload {\n  params: any[];\n  method: string;\n  id: number;\n  jsonrpc: string;\n}\n\nexport interface JSONRPCResponsePayload {\n  result: any;\n  id: number;\n  jsonrpc: string;\n}\n\nexport type JSONRPCResponseCallback = (err: Error, result?: JSONRPCResponsePayload) => void\n\nexport type State = Record<string, string>\n\nexport type ProviderOptions = {\n  fork?: string,\n  nodeUrl?: string,\n  blockNumber?: number | 'latest',\n  stateDb?: State,\n  details?: boolean\n  blocks?: string[],\n  coinbase?: string\n}\n\nexport class Provider {\n  options: ProviderOptions\n  vmContext\n  Accounts\n  Transactions\n  methods\n  connected: boolean\n  initialized: boolean\n  pendingRequests: Array<any>\n\n  constructor (options: ProviderOptions = {} as ProviderOptions) {\n    this.options = options\n    this.connected = true\n    this.vmContext = new VMContext(options['fork'], options['nodeUrl'], options['blockNumber'], options['stateDb'], options['blocks'])\n\n    this.Accounts = new Web3Accounts(this.vmContext)\n    this.Transactions = new Transactions(this.vmContext)\n\n    this.methods = {}\n    this.methods = merge(this.methods, this.Accounts.methods())\n    this.methods = merge(this.methods, (new Blocks(this.vmContext, options)).methods())\n    this.methods = merge(this.methods, miscMethods())\n    this.methods = merge(this.methods, (new Filters(this.vmContext)).methods())\n    this.methods = merge(this.methods, netMethods())\n    this.methods = merge(this.methods, this.Transactions.methods())\n    this.methods = merge(this.methods, (new Debug(this.vmContext)).methods())\n  }\n\n  async init () {\n    this.initialized = false\n    this.pendingRequests = []\n    await this.vmContext.init()\n    await this.Accounts.resetAccounts()\n    this.Transactions.init(this.Accounts.accounts, this.vmContext.serializedBlocks)\n    this.initialized = true\n    if (this.pendingRequests.length > 0) {\n      this.pendingRequests.map((req) => {\n        this.sendAsync(req.payload, req.callback)\n      })\n      this.pendingRequests = []\n    }\n  }\n\n  _send(payload: JSONRPCRequestPayload, callback: (err: Error, result?: JSONRPCResponsePayload) => void) {\n    // log.info('payload method is ', payload.method) // commented because, this floods the IDE console\n    if (!this.initialized) {\n      this.pendingRequests.push({ payload, callback })\n      return\n    }\n    const method = this.methods[payload.method]\n    if (this.options.details) {\n      info(payload)\n    }\n    if (method) {\n      return method.call(method, payload, (err, result) => {\n        if (this.options.details) {\n          info(err)\n          info(result)\n        }\n        if (err) {\n          return callback(err)\n        }\n        const response = { id: payload.id, jsonrpc: '2.0', result: result }\n        callback(null, response)\n      })\n    }\n    callback(new Error('unknown method ' + payload.method))\n  }\n\n  sendAsync (payload: JSONRPCRequestPayload, callback: (err: Error, result?: JSONRPCResponsePayload) => void) {\n    return new Promise((resolve,reject)=>{\n      const cb = (err, result) => {\n        if (typeof callback==='function'){\n          callback(err,result)\n        }\n        if (err){\n          return reject(err)\n        }\n        return resolve(result)\n      }\n      this._send(payload, cb)\n    })\n  }\n\n  send (payload, callback) {\n    return this.sendAsync(payload,callback)\n  }\n\n  isConnected () {\n    return true\n  }\n\n  disconnect () {\n    return false\n  }\n\n  supportsSubscriptions () {\n    return true\n  }\n\n  on (type, cb) {\n    this.vmContext.logsManager.addListener(type, cb)\n  }\n}\n\nexport function extend (web3) {\n  if (!web3.remix){\n    web3.registerPlugin(new Web3TestPlugin())\n  }\n}\n\nclass Web3TestPlugin extends Web3PluginBase {\n  public pluginNamespace = 'remix'\n\n  public getExecutionResultFromSimulator(transactionHash) {\n    return this.requestManager.send({\n      method: 'eth_getExecutionResultFromSimulator',\n      params: [transactionHash]\n    })\n  }\n\n  public getHHLogsForTx(transactionHash) {\n    return this.requestManager.send({\n      method: 'eth_getHHLogsForTx',\n      params: [transactionHash]\n    })\n  }\n\n  public getHashFromTagBySimulator(timestamp) {\n    return this.requestManager.send({\n      method: 'eth_getHashFromTagBySimulator',\n      params: [timestamp]\n    })\n  }\n\n  public registerCallId(id) {\n    return this.requestManager.send({\n      method: 'eth_registerCallId',\n      params: [id]\n    })\n  }\n\n  public getStateDb() {\n    return this.requestManager.send({\n      method: 'eth_getStateDb',\n      params: []\n    })\n  }\n\n  public getBlocksData() {\n    return this.requestManager.send({\n      method: 'eth_getBlocksData',\n      params: []\n    })\n  }\n}\n","import cors from 'cors'\nimport bodyParser from 'body-parser'\nimport { Provider, ProviderOptions } from './provider'\nimport { log, error } from './utils/logs'\n\nexport type CliOptions = {\n  rpc?: boolean,\n  port: number\n  ip: string\n}\n\nexport class Server {\n  provider\n\n  constructor (options?: ProviderOptions) {\n    this.provider = new Provider(options)\n    this.provider.init().then(() => {\n      log('Provider initiated')\n      log('Test accounts:')\n      log(Object.keys(this.provider.Accounts.accounts))\n    }).catch((error) => {\n      log(error)\n    })\n  }\n\n  async start (cliOptions: CliOptions) {\n    const expressWs = (await import('express-ws')).default\n    const express = (await import('express')).default\n    const app = express()\n    const wsApp = expressWs(app)\n\n    app.use(cors())\n    app.use(bodyParser.urlencoded({ extended: true }))\n    app.use(bodyParser.json())\n\n    app.get('/', (req, res) => {\n      res.send('Welcome to remix-simulator')\n    })\n\n    if (cliOptions.rpc) {\n      app.use((req, res) => {\n        if (req && req.body && (req.body.method === 'eth_sendTransaction' || req.body.method === 'eth_call')) {\n          log('Receiving call/transaction:')\n          log(req.body.params)\n        }\n        this.provider.sendAsync(req.body, (err, jsonResponse) => {\n          if (err) {\n            error(err)\n            return res.send(JSON.stringify({ error: err }))\n          }\n          if (req && req.body && (req.body.method === 'eth_sendTransaction' || req.body.method === 'eth_call')) {\n            log(jsonResponse)\n          }\n          res.send(jsonResponse)\n        })\n      })\n    } else {\n      wsApp.app.ws('/', (ws, req) => {\n        ws.on('message', (msg) => {\n          const body = JSON.parse(msg.toString())\n          if (body && (body.method === 'eth_sendTransaction' || body.method === 'eth_call')) {\n            log('Receiving call/transaction:')\n            log(body.params)\n          }\n          this.provider.sendAsync(body, (err, jsonResponse) => {\n            if (err) {\n              error(err)\n              return ws.send(JSON.stringify({ error: err }))\n            }\n            if (body && (body.method === 'eth_sendTransaction' || body.method === 'eth_call')) {\n              log(jsonResponse)\n            }\n            ws.send(JSON.stringify(jsonResponse))\n          })\n        })\n\n        this.provider.on('data', (result) => {\n          ws.send(JSON.stringify(result))\n        })\n      })\n    }\n\n    app.listen(cliOptions.port, cliOptions.ip, () => {\n      if (!cliOptions.rpc) {\n        log('Remix Simulator listening on ws://' + cliOptions.ip + ':' + cliOptions.port)\n        log('http json-rpc is deprecated and disabled by default. To enable it use --rpc')\n      } else {\n        log('Remix Simulator listening on http://' + cliOptions.ip + ':' + cliOptions.port)\n      }\n    })\n  }\n}\n\n","'use strict'\n\nimport gray from 'ansi-gray'\nimport timestamp from 'time-stamp'\nimport supportsColor from 'color-support'\n\nfunction hasFlag (flag) {\n  return ((typeof (process) !== 'undefined') && (process.argv.indexOf('--' + flag) !== -1))\n}\n\nfunction addColor (str) {\n  if (hasFlag('no-color')) {\n    return str\n  }\n\n  if (hasFlag('color')) {\n    return gray(str)\n  }\n\n  if (supportsColor()) {\n    return gray(str)\n  }\n\n  return str\n}\n\nfunction stdout (arg) {\n  if (typeof (process) === 'undefined' || !process.stdout) return\n  process.stdout.write(arg)\n}\n\nfunction stderr (arg) {\n  if (typeof (process) === 'undefined' || process.stderr) return\n  process.stderr.write(arg)\n}\n\nfunction getTimestamp () {\n  const coloredTimestamp = addColor(timestamp('HH:mm:ss'))\n  return '[' + coloredTimestamp + ']'\n}\n\nexport function log (...args: any[]) {\n  const time = getTimestamp()\n  stdout(time + ' ')\n  console.log(args)\n}\n\nexport function info (...args: any[]) {\n  const time = getTimestamp()\n  stdout(time + ' ')\n  console.info(args)\n}\n\nexport function dir (...args: any[]) {\n  const time = getTimestamp()\n  stdout(time + ' ')\n  console.dir(args)\n}\n\nexport function warn (...args: any[]) {\n  const time = getTimestamp()\n  stderr(time + ' ')\n  console.warn(args)\n}\n\nexport function error (...args: any[]) {\n  const time = getTimestamp()\n  stderr(time + ' ')\n  console.error(args)\n}\n","/* global ethereum */\n'use strict'\nimport { hash } from '@remix-project/remix-lib'\nimport { bytesToHex, Account, bigIntToHex, MapDB, toBytes, bytesToBigInt } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { Address } from '@ethereumjs/util'\nimport { decode } from 'rlp'\nimport { ethers } from 'ethers'\nimport { execution } from '@remix-project/remix-lib'\nconst { LogsManager } = execution\nimport { VmProxy } from './VmProxy'\nimport { VM } from '@ethereumjs/vm'\nimport { Common, ConsensusType } from '@ethereumjs/common'\nimport { Trie } from '@ethereumjs/trie'\nimport { DefaultStateManager } from '@ethereumjs/statemanager'\nimport { EVMStateManagerInterface, StorageDump } from '@ethereumjs/common'\nimport { EVM } from '@ethereumjs/evm'\nimport { Blockchain } from '@ethereumjs/blockchain'\nimport { Block } from '@ethereumjs/block'\nimport { TypedTransaction } from '@ethereumjs/tx'\nimport { State } from './provider'\nimport { hexToBytes } from 'web3-utils'\n\n/**\n * Options for constructing a {@link StateManager}.\n */\nexport interface DefaultStateManagerOpts {\n  /**\n   * A {@link Trie} instance\n   */\n  trie?: Trie\n  /**\n   * Option to prefix codehashes in the database. This defaults to `true`.\n   * If this is disabled, note that it is possible to corrupt the trie, by deploying code\n   * which code is equal to the preimage of a trie-node.\n   * E.g. by putting the code `0x80` into the empty trie, will lead to a corrupted trie.\n   */\n  prefixCodeHashes?: boolean\n}\n\n/*\n  extend vm state manager and instantiate VM\n*/\nclass StateManagerCommonStorageDump extends DefaultStateManager {\n  keyHashes: { [key: string]: string }\n  constructor (opts: DefaultStateManagerOpts = {}) {\n    super(opts)\n    this.keyHashes = {}\n  }\n\n  getDb () {\n    // @ts-ignore\n    return this._trie.database().db\n  }\n\n  putContractStorage (address, key, value) {\n    this.keyHashes[bytesToHex(hash.keccak(key))] = bytesToHex(key)\n    return super.putContractStorage(address, key, value)\n  }\n\n  shallowCopy(): StateManagerCommonStorageDump {\n    const copyState = new StateManagerCommonStorageDump({\n      trie: this._trie.shallowCopy(false),\n    })\n    copyState.keyHashes = this.keyHashes\n    return copyState\n  }\n\n  async dumpStorage (address): Promise<StorageDump> {\n    await this.flush()\n    const account = await this.getAccount(address)\n    if (!account) {\n      throw new Error(`dumpStorage f() can only be called for an existing account`)\n    }\n    return new Promise((resolve, reject) => {\n      try {\n        const trie = this._getStorageTrie(address, account)\n        const storage = {}\n        const stream = trie.createReadStream()\n\n        stream.on('data', (val) => {\n          const value: any = decode(val.value)\n          storage[bytesToHex(val.key)] = {\n            key: this.keyHashes[bytesToHex(val.key)],\n            value: bytesToHex(value)\n          }\n        })\n        stream.on('end', () => {\n          resolve(storage)\n        })\n        stream.on('error', (e) => {\n          reject(e)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n}\n\nexport interface CustomEthersStateManagerOpts {\n  provider: string | ethers.providers.StaticJsonRpcProvider | ethers.providers.JsonRpcProvider\n  blockTag: string,\n  /**\n   * A {@link Trie} instance\n   */\n  trie?: Trie\n}\n\nclass CustomEthersStateManager extends StateManagerCommonStorageDump {\n  private provider: ethers.providers.StaticJsonRpcProvider | ethers.providers.JsonRpcProvider\n  private blockTag: string\n\n  constructor(opts: CustomEthersStateManagerOpts) {\n    super(opts)\n    if (typeof opts.provider === 'string') {\n      this.provider = new ethers.providers.StaticJsonRpcProvider(opts.provider)\n    } else if (opts.provider instanceof ethers.providers.JsonRpcProvider) {\n      this.provider = opts.provider\n    } else {\n      throw new Error(`valid JsonRpcProvider or url required; got ${opts.provider}`)\n    }\n\n    this.blockTag = opts.blockTag\n  }\n\n  /**\n   * Sets the new block tag used when querying the provider and clears the\n   * internal cache.\n   * @param blockTag - the new block tag to use when querying the provider\n   */\n  setBlockTag(blockTag: bigint | 'earliest'): void {\n    this.blockTag = blockTag === 'earliest' ? blockTag : bigIntToHex(blockTag)\n  }\n\n  shallowCopy(): CustomEthersStateManager {\n    const newState = new CustomEthersStateManager({\n      provider: this.provider,\n      blockTag: this.blockTag,\n      trie: this._trie.shallowCopy(false),\n    })\n    return newState\n  }\n\n  /**\n   * Gets the code corresponding to the provided `address`.\n   * @param address - Address to get the `code` for\n   * @returns {Promise<Buffer>} - Resolves with the code corresponding to the provided address.\n   * Returns an empty `Buffer` if the account has no associated code.\n   */\n  async getContractCode(address: Address): Promise<Uint8Array> {\n    const code = await super.getContractCode(address)\n    if (code && code.length > 0) return code\n    else {\n      const code = toBytes(await this.provider.getCode(address.toString(), this.blockTag))\n      await super.putContractCode(address, code)\n      return code\n    }\n  }\n\n  /**\n   * Gets the storage value associated with the provided `address` and `key`. This method returns\n   * the shortest representation of the stored value.\n   * @param address -  Address of the account to get the storage for\n   * @param key - Key in the account's storage to get the value for. Must be 32 bytes long.\n   * @returns {Promise<Buffer>} - The storage value for the account\n   * corresponding to the provided address at the provided key.\n   * If this does not exist an empty `Buffer` is returned.\n   */\n  async getContractStorage(address: Address, key: Buffer): Promise<Uint8Array> {\n    let storage = await super.getContractStorage(address, key)\n    if (storage && storage.length > 0) return storage\n    else {\n      storage = toBytes(await this.provider.getStorageAt(\n        address.toString(),\n        bytesToBigInt(key),\n        this.blockTag)\n      )\n      await super.putContractStorage(address, key, storage)\n      return storage\n    }\n  }\n\n  /**\n   * Checks if an `account` exists at `address`\n   * @param address - Address of the `account` to check\n   */\n  async accountExists(address: Address): Promise<boolean> {\n    const account = await super.getAccount(address)\n    if (!account.isEmpty()) return true\n\n    // Get merkle proof for `address` from provider\n    const proof = await this.provider.send('eth_getProof', [address.toString(), [], this.blockTag])\n\n    const proofBuf = proof.accountProof.map((proofNode: string) => toBytes(proofNode))\n\n    const trie = new Trie({ useKeyHashing: true })\n    const verified = await trie.verifyProof(\n      Buffer.from(keccak256(proofBuf[0])),\n      address.bytes,\n      proofBuf\n    )\n    if (verified) {\n      const codeHash = proof.codeHash === '0x0000000000000000000000000000000000000000000000000000000000000000' ? '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470' : proof.codeHash\n      const account = Account.fromAccountData({\n        balance: BigInt(proof.balance),\n        nonce: BigInt(proof.nonce),\n        codeHash: hexToBytes(codeHash)\n        // storageRoot: toBuffer([]), // we have to remove this in order to force the creation of the Trie in the local state.\n      })\n      super.putAccount(address, account)\n    }\n    // if not verified (i.e. verifyProof returns null), account does not exist\n    return verified === null ? false : true\n  }\n\n  /**\n   * Retrieves an account from the provider and stores in the local trie\n   * @param address Address of account to be retrieved from provider\n   * @private\n   */\n  async getAccountFromProvider(address: Address): Promise<Account> {\n    let accountData\n    try {\n      accountData = await this.provider.send('eth_getProof', [\n        address.toString(),\n        [],\n        this.blockTag,\n      ])\n    } catch (e) {\n      console.log(e)\n    }\n    let account\n    if (!accountData) {\n      account = Account.fromAccountData({\n        balance: BigInt(0),\n        nonce: BigInt(0),\n        codeHash: hexToBytes('0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')\n      })\n    } else {\n      const codeHash = accountData.codeHash === '0x0000000000000000000000000000000000000000000000000000000000000000' ? '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470' : accountData.codeHash\n      account = Account.fromAccountData({\n        balance: BigInt(accountData.balance),\n        nonce: BigInt(accountData.nonce),\n        codeHash: hexToBytes(codeHash)\n        // storageRoot: toBuffer([]), // we have to remove this in order to force the creation of the Trie in the local state.\n      })\n    }\n    return account\n  }\n}\n\nexport type CurrentVm = {\n  vm: VM,\n  web3vm: VmProxy,\n  stateManager: EVMStateManagerInterface,\n  common: Common\n}\n\nexport class VMCommon extends Common {\n\n  /**\n    * Always return the fork set at initialization\n    */\n  setHardforkBy() {\n    return this._hardfork;\n  }\n}\n\n/*\n  trigger contextChanged, web3EndpointChanged\n*/\nexport class VMContext {\n  currentFork: string\n  blockGasLimitDefault: number\n  blockGasLimit: number\n  blocks: Record<string, Block>\n  latestBlockNumber: string\n  blockByTxHash: Record<string, Block>\n  txByHash: Record<string, TypedTransaction>\n  currentVm: CurrentVm\n  web3vm: VmProxy\n  logsManager: any // LogsManager\n  exeResults: Record<string, TypedTransaction>\n  nodeUrl: string\n  blockNumber: number | 'latest'\n  stateDb: State\n  rawBlocks: string[]\n  serializedBlocks: Uint8Array[]\n\n  constructor (fork?: string, nodeUrl?: string, blockNumber?: number | 'latest', stateDb?: State, blocksData?: string[]) {\n    this.blockGasLimitDefault = 4300000\n    this.blockGasLimit = this.blockGasLimitDefault\n    this.currentFork = fork || 'cancun'\n    this.nodeUrl = nodeUrl\n    this.stateDb = stateDb\n    this.blockNumber = blockNumber\n    this.blocks = {}\n    this.latestBlockNumber = \"0x0\"\n    this.blockByTxHash = {}\n    this.txByHash = {}\n    this.exeResults = {}\n    this.logsManager = new LogsManager()\n    this.rawBlocks = blocksData\n    this.serializedBlocks = []\n  }\n\n  async init () {\n    this.currentVm = await this.createVm(this.currentFork)\n  }\n\n  async createVm (hardfork) {\n    let stateManager: EVMStateManagerInterface\n    if (this.nodeUrl) {\n      let block = this.blockNumber\n      if (this.blockNumber === 'latest') {\n        const provider = new ethers.providers.StaticJsonRpcProvider(this.nodeUrl)\n        block = await provider.getBlockNumber()\n        stateManager = new CustomEthersStateManager({\n          provider: this.nodeUrl,\n          blockTag: '0x' + block.toString(16)\n        })\n        this.blockNumber = block\n      } else {\n        stateManager = new CustomEthersStateManager({\n          provider: this.nodeUrl,\n          blockTag: '0x' + block.toString(16)\n        })\n      }\n    } else {\n      const db = this.stateDb ? new Map(Object.entries(this.stateDb).map(([k, v]) => [k, hexToBytes(v)])) : new Map()\n      const mapDb = new MapDB(db)\n      const trie = await Trie.create({ useKeyHashing: true, db: mapDb, useRootPersistence: true })\n\n      stateManager = new StateManagerCommonStorageDump({ trie })\n    }\n\n    const consensusType = hardfork === 'berlin' || hardfork === 'london' ? ConsensusType.ProofOfWork : ConsensusType.ProofOfStake\n    const difficulty = consensusType === ConsensusType.ProofOfStake ? 0 : 69762765929000\n\n    const common = new VMCommon({ chain: 'mainnet', hardfork })\n    const blocks = (this.rawBlocks || []).map(block => {\n      const serializedBlock = hexToBytes(block)\n      this.serializedBlocks.push(serializedBlock)\n      return Block.fromRLPSerializedBlock(serializedBlock, { common })\n    })\n    const genesisBlock: Block = blocks.length > 0 && (blocks[0] || {}).isGenesis ? blocks[0] : Block.fromBlockData({\n      header: {\n        timestamp: (new Date().getTime() / 1000 | 0),\n        number: 0,\n        coinbase: '0x0e9281e9c6a0808672eaba6bd1220e144c9bb07a',\n        difficulty,\n        gasLimit: 8000000\n      }\n    }, { common })\n\n    const blockchain = await Blockchain.create({ common, validateBlocks: false, validateConsensus: false, genesisBlock })\n    const evm = await EVM.create({ common, allowUnlimitedContractSize: true, stateManager, blockchain })\n\n    const vm = await VM.create({\n      common,\n      activatePrecompiles: true,\n      stateManager,\n      blockchain,\n      evm\n    })\n    // VmProxy and VMContext are very intricated.\n    // VmProxy is used to track the EVM execution (to listen on opcode execution, in order for instance to generate the VM trace)\n    const web3vm = new VmProxy(this)\n    web3vm.setVM(vm)\n    this.addBlock(genesisBlock, true)\n    if (blocks.length > 0) blocks.splice(0, 1)\n    for (const block of blocks) {\n      await blockchain.putBlock(block)\n      this.addBlock(block, false, false, web3vm)\n    }\n    return { vm, web3vm, stateManager, common, blocks }\n  }\n\n  getCurrentFork () {\n    return this.currentFork\n  }\n\n  web3 () {\n    return this.currentVm.web3vm\n  }\n\n  vm () {\n    return this.currentVm.vm\n  }\n\n  vmObject () {\n    return this.currentVm\n  }\n\n  addBlock (block: Block, genesis?: boolean, isCall?: boolean, web3vm?: VmProxy) {\n    let blockNumber = bigIntToHex(block.header.number)\n    if (blockNumber === '0x') {\n      blockNumber = '0x0'\n    }\n\n    this.blocks[bytesToHex(block.hash())] = block\n    this.blocks[blockNumber] = block\n    this.latestBlockNumber = blockNumber\n\n    if (!isCall && !genesis && web3vm) this.logsManager.checkBlock(blockNumber, block, web3vm)\n    if (!isCall && !genesis && !web3vm) this.logsManager.checkBlock(blockNumber, block, this.web3())\n  }\n\n  trackTx (txHash, block, tx) {\n    this.blockByTxHash[txHash] = block\n    this.txByHash[txHash] = tx\n  }\n\n  trackExecResult (tx, execReult) {\n    this.exeResults[tx] = execReult\n  }\n}\n","import { Block, BlockHeader } from '@ethereumjs/block'\nimport {\n  Chain,\n  ChainGenesis,\n  Common,\n  ConsensusAlgorithm,\n  ConsensusType,\n  Hardfork,\n} from '@ethereumjs/common'\nimport { genesisStateRoot as genMerkleGenesisStateRoot } from '@ethereumjs/trie'\nimport {\n  AsyncEventEmitter,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_8,\n  KECCAK256_RLP,\n  Lock,\n  MapDB,\n  bytesToHex,\n  bytesToUnprefixedHex,\n  concatBytes,\n  equalsBytes,\n} from '@ethereumjs/util'\n\nimport { CasperConsensus, CliqueConsensus, EthashConsensus } from './consensus/index.js'\nimport {\n  DBOp,\n  DBSaveLookups,\n  DBSetBlockOrHeader,\n  DBSetHashToNumber,\n  DBSetTD,\n} from './db/helpers.js'\nimport { DBManager } from './db/manager.js'\nimport { DBTarget } from './db/operation.js'\n\nimport type {\n  BlockchainEvents,\n  BlockchainInterface,\n  BlockchainOptions,\n  Consensus,\n  OnBlock,\n} from './types.js'\nimport type { BlockData } from '@ethereumjs/block'\nimport type { CliqueConfig } from '@ethereumjs/common'\nimport type { BigIntLike, DB, DBObject, GenesisState } from '@ethereumjs/util'\n\n/**\n * Verkle or Merkle genesis root\n * @param genesisState\n * @param common\n * @returns\n */\nasync function genGenesisStateRoot(\n  genesisState: GenesisState,\n  common: Common\n): Promise<Uint8Array> {\n  const genCommon = common.copy()\n  genCommon.setHardforkBy({\n    blockNumber: 0,\n    td: BigInt(genCommon.genesis().difficulty),\n    timestamp: genCommon.genesis().timestamp,\n  })\n  if (genCommon.isActivatedEIP(6800)) {\n    throw Error(`Verkle tree state not yet supported`)\n  } else {\n    return genMerkleGenesisStateRoot(genesisState)\n  }\n}\n\n/**\n * Returns the genesis state root if chain is well known or an empty state's root otherwise\n */\nasync function getGenesisStateRoot(chainId: Chain, common: Common): Promise<Uint8Array> {\n  const chainGenesis = ChainGenesis[chainId]\n  return chainGenesis !== undefined ? chainGenesis.stateRoot : genGenesisStateRoot({}, common)\n}\n\n/**\n * This class stores and interacts with blocks.\n */\nexport class Blockchain implements BlockchainInterface {\n  consensus: Consensus\n  db: DB<Uint8Array | string, Uint8Array | string | DBObject>\n  dbManager: DBManager\n  events: AsyncEventEmitter<BlockchainEvents>\n\n  private _genesisBlock?: Block /** The genesis block of this blockchain */\n  private _customGenesisState?: GenesisState /** Custom genesis state */\n\n  /**\n   * The following two heads and the heads stored within the `_heads` always point\n   * to a hash in the canonical chain and never to a stale hash.\n   * With the exception of `_headHeaderHash` this does not necessarily need to be\n   * the hash with the highest total difficulty.\n   */\n  /** The hash of the current head block */\n  private _headBlockHash?: Uint8Array\n  /** The hash of the current head header */\n  private _headHeaderHash?: Uint8Array\n\n  /**\n   * A Map which stores the head of each key (for instance the \"vm\" key) which is\n   * updated along a {@link Blockchain.iterator} method run and can be used to (re)run\n   * non-verified blocks (for instance in the VM).\n   */\n  private _heads: { [key: string]: Uint8Array }\n\n  private _lock: Lock\n\n  public readonly common: Common\n  private _hardforkByHeadBlockNumber: boolean\n  private readonly _validateConsensus: boolean\n  private readonly _validateBlocks: boolean\n\n  /**\n   * This is used to track which canonical blocks are deleted. After a method calls\n   * `_deleteCanonicalChainReferences`, if this array has any items, the\n   * `deletedCanonicalBlocks` event is emitted with the array as argument.\n   */\n  private _deletedBlocks: Block[] = []\n\n  /**\n   * Safe creation of a new Blockchain object awaiting the initialization function,\n   * encouraged method to use when creating a blockchain object.\n   *\n   * @param opts Constructor options, see {@link BlockchainOptions}\n   */\n\n  public static async create(opts: BlockchainOptions = {}) {\n    const blockchain = new Blockchain(opts)\n\n    await blockchain.consensus.setup({ blockchain })\n\n    let stateRoot = opts.genesisBlock?.header.stateRoot ?? opts.genesisStateRoot\n    if (stateRoot === undefined) {\n      if (blockchain._customGenesisState !== undefined) {\n        stateRoot = await genGenesisStateRoot(blockchain._customGenesisState, blockchain.common)\n      } else {\n        stateRoot = await getGenesisStateRoot(\n          Number(blockchain.common.chainId()) as Chain,\n          blockchain.common\n        )\n      }\n    }\n\n    const genesisBlock = opts.genesisBlock ?? blockchain.createGenesisBlock(stateRoot)\n\n    let genesisHash = await blockchain.dbManager.numberToHash(BIGINT_0)\n\n    const dbGenesisBlock =\n      genesisHash !== undefined ? await blockchain.dbManager.getBlock(genesisHash) : undefined\n\n    // If the DB has a genesis block, then verify that the genesis block in the\n    // DB is indeed the Genesis block generated or assigned.\n    if (dbGenesisBlock !== undefined && !equalsBytes(genesisBlock.hash(), dbGenesisBlock.hash())) {\n      throw new Error(\n        'The genesis block in the DB has a different hash than the provided genesis block.'\n      )\n    }\n\n    genesisHash = genesisBlock.hash()\n\n    if (!dbGenesisBlock) {\n      // If there is no genesis block put the genesis block in the DB.\n      // For that TD, the BlockOrHeader, and the Lookups have to be saved.\n      const dbOps: DBOp[] = []\n      dbOps.push(DBSetTD(genesisBlock.header.difficulty, BIGINT_0, genesisHash))\n      DBSetBlockOrHeader(genesisBlock).map((op) => dbOps.push(op))\n      DBSaveLookups(genesisHash, BIGINT_0).map((op) => dbOps.push(op))\n      await blockchain.dbManager.batch(dbOps)\n      await blockchain.consensus.genesisInit(genesisBlock)\n    }\n\n    // At this point, we can safely set the genesis:\n    // it is either the one we put in the DB, or it is equal to the one\n    // which we read from the DB.\n    blockchain._genesisBlock = genesisBlock\n\n    // load verified iterator heads\n    const heads = await blockchain.dbManager.getHeads()\n    blockchain._heads = heads !== undefined ? heads : {}\n\n    // load headerchain head\n    let hash = await blockchain.dbManager.getHeadHeader()\n    blockchain._headHeaderHash = hash !== undefined ? hash : genesisHash\n\n    // load blockchain head\n    hash = await blockchain.dbManager.getHeadBlock()\n    blockchain._headBlockHash = hash !== undefined ? hash : genesisHash\n\n    if (blockchain._hardforkByHeadBlockNumber) {\n      const latestHeader = await blockchain._getHeader(blockchain._headHeaderHash)\n      const td = await blockchain.getParentTD(latestHeader)\n      await blockchain.checkAndTransitionHardForkByNumber(\n        latestHeader.number,\n        td,\n        latestHeader.timestamp\n      )\n    }\n\n    return blockchain\n  }\n\n  /**\n   * Creates a blockchain from a list of block objects,\n   * objects must be readable by {@link Block.fromBlockData}\n   *\n   * @param blockData List of block objects\n   * @param opts Constructor options, see {@link BlockchainOptions}\n   */\n  public static async fromBlocksData(blocksData: BlockData[], opts: BlockchainOptions = {}) {\n    const blockchain = await Blockchain.create(opts)\n    for (const blockData of blocksData) {\n      const block = Block.fromBlockData(blockData, {\n        common: blockchain.common,\n        setHardfork: true,\n      })\n      await blockchain.putBlock(block)\n    }\n    return blockchain\n  }\n\n  /**\n   * Creates new Blockchain object.\n   *\n   * @deprecated The direct usage of this constructor is discouraged since\n   * non-finalized async initialization might lead to side effects. Please\n   * use the async {@link Blockchain.create} constructor instead (same API).\n   *\n   * @param opts An object with the options that this constructor takes. See\n   * {@link BlockchainOptions}.\n   */\n  protected constructor(opts: BlockchainOptions = {}) {\n    if (opts.common) {\n      this.common = opts.common\n    } else {\n      const DEFAULT_CHAIN = Chain.Mainnet\n      const DEFAULT_HARDFORK = Hardfork.Chainstart\n      this.common = new Common({\n        chain: DEFAULT_CHAIN,\n        hardfork: DEFAULT_HARDFORK,\n      })\n    }\n\n    this._hardforkByHeadBlockNumber = opts.hardforkByHeadBlockNumber ?? false\n    this._validateConsensus = opts.validateConsensus ?? true\n    this._validateBlocks = opts.validateBlocks ?? true\n    this._customGenesisState = opts.genesisState\n\n    this.db = opts.db !== undefined ? opts.db : new MapDB()\n\n    this.dbManager = new DBManager(this.db, this.common)\n\n    this.events = new AsyncEventEmitter()\n\n    if (opts.consensus) {\n      this.consensus = opts.consensus\n    } else {\n      switch (this.common.consensusAlgorithm()) {\n        case ConsensusAlgorithm.Casper:\n          this.consensus = new CasperConsensus()\n          break\n        case ConsensusAlgorithm.Clique:\n          this.consensus = new CliqueConsensus()\n          break\n        case ConsensusAlgorithm.Ethash:\n          this.consensus = new EthashConsensus()\n          break\n        default:\n          throw new Error(`consensus algorithm ${this.common.consensusAlgorithm()} not supported`)\n      }\n    }\n\n    if (this._validateConsensus) {\n      if (this.common.consensusType() === ConsensusType.ProofOfWork) {\n        if (this.common.consensusAlgorithm() !== ConsensusAlgorithm.Ethash) {\n          throw new Error('consensus validation only supported for pow ethash algorithm')\n        }\n      }\n      if (this.common.consensusType() === ConsensusType.ProofOfAuthority) {\n        if (this.common.consensusAlgorithm() !== ConsensusAlgorithm.Clique) {\n          throw new Error(\n            'consensus (signature) validation only supported for poa clique algorithm'\n          )\n        }\n      }\n    }\n\n    this._heads = {}\n\n    this._lock = new Lock()\n\n    if (opts.genesisBlock && !opts.genesisBlock.isGenesis()) {\n      throw 'supplied block is not a genesis block'\n    }\n  }\n\n  /**\n   * Returns a deep copy of this {@link Blockchain} instance.\n   *\n   * Note: this does not make a copy of the underlying db\n   * since it is unknown if the source is on disk or in memory.\n   * This should not be a significant issue in most usage since\n   * the queries will only reflect the instance's known data.\n   * If you would like this copied blockchain to use another db\n   * set the {@link db} of this returned instance to a copy of\n   * the original.\n   */\n  shallowCopy(): Blockchain {\n    const copiedBlockchain = Object.create(\n      Object.getPrototypeOf(this),\n      Object.getOwnPropertyDescriptors(this)\n    )\n    copiedBlockchain.common = this.common.copy()\n    return copiedBlockchain\n  }\n\n  /**\n   * Run a function after acquiring a lock. It is implied that we have already\n   * initialized the module (or we are calling this from the init function, like\n   * `_setCanonicalGenesisBlock`)\n   * @param action - function to run after acquiring a lock\n   * @hidden\n   */\n  private async runWithLock<T>(action: () => Promise<T>): Promise<T> {\n    try {\n      await this._lock.acquire()\n      const value = await action()\n      return value\n    } finally {\n      this._lock.release()\n    }\n  }\n\n  /**\n   * Returns the specified iterator head.\n   *\n   * This function replaces the old Blockchain.getHead() method. Note that\n   * the function deviates from the old behavior and returns the\n   * genesis hash instead of the current head block if an iterator\n   * has not been run. This matches the behavior of {@link Blockchain.iterator}.\n   *\n   * @param name - Optional name of the iterator head (default: 'vm')\n   */\n  async getIteratorHead(name = 'vm'): Promise<Block> {\n    return this.runWithLock<Block>(async () => {\n      return (await this.getHead(name, false))!\n    })\n  }\n\n  /**\n   * This method differs from `getIteratorHead`. If the head is not found, it returns `undefined`.\n   * @param name - Optional name of the iterator head (default: 'vm')\n   * @returns\n   */\n  async getIteratorHeadSafe(name = 'vm'): Promise<Block | undefined> {\n    return this.runWithLock<Block | undefined>(async () => {\n      return this.getHead(name, true)\n    })\n  }\n\n  private async getHead(name: string, returnUndefinedIfNotSet: boolean = false) {\n    const headHash = this._heads[name]\n    if (headHash === undefined && returnUndefinedIfNotSet) {\n      return undefined\n    }\n    const hash = this._heads[name] ?? this.genesisBlock.hash()\n    const block = await this.getBlock(hash)\n    return block\n  }\n\n  /**\n   * Returns the latest header in the canonical chain.\n   */\n  async getCanonicalHeadHeader(): Promise<BlockHeader> {\n    return this.runWithLock<BlockHeader>(async () => {\n      if (!this._headHeaderHash) throw new Error('No head header set')\n      const block = await this.getBlock(this._headHeaderHash)\n      return block.header\n    })\n  }\n\n  /**\n   * Returns the latest full block in the canonical chain.\n   */\n  async getCanonicalHeadBlock(): Promise<Block> {\n    return this.runWithLock<Block>(async () => {\n      if (!this._headBlockHash) throw new Error('No head block set')\n      return this.getBlock(this._headBlockHash)\n    })\n  }\n\n  /**\n   * Adds blocks to the blockchain.\n   *\n   * If an invalid block is met the function will throw, blocks before will\n   * nevertheless remain in the DB. If any of the saved blocks has a higher\n   * total difficulty than the current max total difficulty the canonical\n   * chain is rebuilt and any stale heads/hashes are overwritten.\n   * @param blocks - The blocks to be added to the blockchain\n   */\n  async putBlocks(blocks: Block[]) {\n    for (let i = 0; i < blocks.length; i++) {\n      await this.putBlock(blocks[i])\n    }\n  }\n\n  /**\n   * Adds a block to the blockchain.\n   *\n   * If the block is valid and has a higher total difficulty than the current\n   * max total difficulty, the canonical chain is rebuilt and any stale\n   * heads/hashes are overwritten.\n   * @param block - The block to be added to the blockchain\n   */\n  async putBlock(block: Block) {\n    await this._putBlockOrHeader(block)\n  }\n\n  /**\n   * Adds many headers to the blockchain.\n   *\n   * If an invalid header is met the function will throw, headers before will\n   * nevertheless remain in the DB. If any of the saved headers has a higher\n   * total difficulty than the current max total difficulty the canonical\n   * chain is rebuilt and any stale heads/hashes are overwritten.\n   * @param headers - The headers to be added to the blockchain\n   */\n  async putHeaders(headers: Array<any>) {\n    for (let i = 0; i < headers.length; i++) {\n      await this.putHeader(headers[i])\n    }\n  }\n\n  /**\n   * Adds a header to the blockchain.\n   *\n   * If this header is valid and it has a higher total difficulty than the current\n   * max total difficulty, the canonical chain is rebuilt and any stale\n   * heads/hashes are overwritten.\n   * @param header - The header to be added to the blockchain\n   */\n  async putHeader(header: BlockHeader) {\n    await this._putBlockOrHeader(header)\n  }\n\n  /**\n   * Resets the canonical chain to canonicalHead number\n   *\n   * This updates the head hashes (if affected) to the hash corresponding to\n   * canonicalHead and cleans up canonical references greater than canonicalHead\n   * @param canonicalHead - The number to which chain should be reset to\n   */\n\n  async resetCanonicalHead(canonicalHead: bigint) {\n    await this.runWithLock<void>(async () => {\n      const hash = await this.dbManager.numberToHash(canonicalHead)\n      if (hash === undefined) {\n        throw new Error(`no block for ${canonicalHead} found in DB`)\n      }\n      const header = await this._getHeader(hash, canonicalHead)\n      const td = await this.getParentTD(header)\n\n      const dbOps: DBOp[] = []\n      await this._deleteCanonicalChainReferences(canonicalHead + BIGINT_1, hash, dbOps)\n      const ops = dbOps.concat(this._saveHeadOps())\n\n      await this.dbManager.batch(ops)\n      await this.checkAndTransitionHardForkByNumber(canonicalHead, td, header.timestamp)\n    })\n    if (this._deletedBlocks.length > 0) {\n      this.events.emit('deletedCanonicalBlocks', this._deletedBlocks)\n      this._deletedBlocks = []\n    }\n  }\n\n  /**\n   * Entrypoint for putting any block or block header. Verifies this block,\n   * checks the total TD: if this TD is higher than the current highest TD, we\n   * have thus found a new canonical block and have to rewrite the canonical\n   * chain. This also updates the head block hashes. If any of the older known\n   * canonical chains just became stale, then we also reset every _heads header\n   * which points to a stale header to the last verified header which was in the\n   * old canonical chain, but also in the new canonical chain. This thus rolls\n   * back these headers so that these can be updated to the \"new\" canonical\n   * header using the iterator method.\n   * @hidden\n   */\n  private async _putBlockOrHeader(item: Block | BlockHeader) {\n    await this.runWithLock<void>(async () => {\n      // Save the current sane state incase _putBlockOrHeader midway with some\n      // dirty changes in head trackers\n      const oldHeads = Object.assign({}, this._heads)\n      const oldHeadHeaderHash = this._headHeaderHash\n      const oldHeadBlockHash = this._headBlockHash\n      try {\n        const block =\n          item instanceof BlockHeader\n            ? new Block(item, undefined, undefined, undefined, { common: item.common }, undefined)\n            : item\n        const isGenesis = block.isGenesis()\n\n        // we cannot overwrite the Genesis block after initializing the Blockchain\n        if (isGenesis) {\n          if (equalsBytes(this.genesisBlock.hash(), block.hash())) {\n            // Try to re-put the existing genesis block, accept this\n            return\n          }\n          throw new Error(\n            'Cannot put a different genesis block than current blockchain genesis: create a new Blockchain'\n          )\n        }\n\n        const { header } = block\n        const blockHash = header.hash()\n        const blockNumber = header.number\n        let td = header.difficulty\n        const currentTd = { header: BIGINT_0, block: BIGINT_0 }\n        let dbOps: DBOp[] = []\n\n        if (block.common.chainId() !== this.common.chainId()) {\n          throw new Error(\n            `Chain mismatch while trying to put block or header. Chain ID of block: ${block.common.chainId}, chain ID of blockchain : ${this.common.chainId}`\n          )\n        }\n\n        if (this._validateBlocks && !isGenesis) {\n          // this calls into `getBlock`, which is why we cannot lock yet\n          await this.validateBlock(block)\n        }\n\n        if (this._validateConsensus) {\n          await this.consensus.validateConsensus(block)\n        }\n\n        // set total difficulty in the current context scope\n        if (this._headHeaderHash) {\n          currentTd.header = await this.getTotalDifficulty(this._headHeaderHash)\n        }\n        if (this._headBlockHash) {\n          currentTd.block = await this.getTotalDifficulty(this._headBlockHash)\n        }\n\n        // calculate the total difficulty of the new block\n        const parentTd = await this.getParentTD(header)\n        if (!block.isGenesis()) {\n          td += parentTd\n        }\n\n        // save total difficulty to the database\n        dbOps = dbOps.concat(DBSetTD(td, blockNumber, blockHash))\n\n        // save header/block to the database\n        dbOps = dbOps.concat(DBSetBlockOrHeader(block))\n\n        let commonAncestor: undefined | BlockHeader\n        let ancestorHeaders: undefined | BlockHeader[]\n        // if total difficulty is higher than current, add it to canonical chain\n        if (\n          block.isGenesis() ||\n          td > currentTd.header ||\n          block.common.consensusType() === ConsensusType.ProofOfStake\n        ) {\n          const foundCommon = await this.findCommonAncestor(header)\n          commonAncestor = foundCommon.commonAncestor\n          ancestorHeaders = foundCommon.ancestorHeaders\n\n          this._headHeaderHash = blockHash\n          if (item instanceof Block) {\n            this._headBlockHash = blockHash\n          }\n          if (this._hardforkByHeadBlockNumber) {\n            await this.checkAndTransitionHardForkByNumber(blockNumber, parentTd, header.timestamp)\n          }\n\n          // delete higher number assignments and overwrite stale canonical chain\n          await this._deleteCanonicalChainReferences(blockNumber + BIGINT_1, blockHash, dbOps)\n          // from the current header block, check the blockchain in reverse (i.e.\n          // traverse `parentHash`) until `numberToHash` matches the current\n          // number/hash in the canonical chain also: overwrite any heads if these\n          // heads are stale in `_heads` and `_headBlockHash`\n          await this._rebuildCanonical(header, dbOps)\n        } else {\n          // the TD is lower than the current highest TD so we will add the block\n          // to the DB, but will not mark it as the canonical chain.\n          if (td > currentTd.block && item instanceof Block) {\n            this._headBlockHash = blockHash\n          }\n          // save hash to number lookup info even if rebuild not needed\n          dbOps.push(DBSetHashToNumber(blockHash, blockNumber))\n        }\n\n        const ops = dbOps.concat(this._saveHeadOps())\n        await this.dbManager.batch(ops)\n\n        await this.consensus.newBlock(block, commonAncestor, ancestorHeaders)\n      } catch (e) {\n        // restore head to the previouly sane state\n        this._heads = oldHeads\n        this._headHeaderHash = oldHeadHeaderHash\n        this._headBlockHash = oldHeadBlockHash\n        throw e\n      }\n    })\n    if (this._deletedBlocks.length > 0) {\n      this.events.emit('deletedCanonicalBlocks', this._deletedBlocks)\n      this._deletedBlocks = []\n    }\n  }\n\n  /**\n   * Validates a block header, throwing if invalid. It is being validated against the reported `parentHash`.\n   * It verifies the current block against the `parentHash`:\n   * - The `parentHash` is part of the blockchain (it is a valid header)\n   * - Current block number is parent block number + 1\n   * - Current block has a strictly higher timestamp\n   * - Additional PoW checks ->\n   *   - Current block has valid difficulty and gas limit\n   *   - In case that the header is an uncle header, it should not be too old or young in the chain.\n   * - Additional PoA clique checks ->\n   *   - Checks on coinbase and mixHash\n   *   - Current block has a timestamp diff greater or equal to PERIOD\n   *   - Current block has difficulty correctly marked as INTURN or NOTURN\n   * @param header - header to be validated\n   * @param height - If this is an uncle header, this is the height of the block that is including it\n   */\n  public async validateHeader(header: BlockHeader, height?: bigint) {\n    if (header.isGenesis()) {\n      return\n    }\n    const parentHeader = (await this.getBlock(header.parentHash)).header\n\n    const { number } = header\n    if (number !== parentHeader.number + BIGINT_1) {\n      throw new Error(`invalid number ${header.errorStr()}`)\n    }\n\n    if (header.timestamp <= parentHeader.timestamp) {\n      throw new Error(`invalid timestamp ${header.errorStr()}`)\n    }\n\n    if (!(header.common.consensusType() === 'pos')) await this.consensus.validateDifficulty(header)\n\n    if (this.common.consensusAlgorithm() === ConsensusAlgorithm.Clique) {\n      const period = (this.common.consensusConfig() as CliqueConfig).period\n      // Timestamp diff between blocks is lower than PERIOD (clique)\n      if (parentHeader.timestamp + BigInt(period) > header.timestamp) {\n        throw new Error(`invalid timestamp diff (lower than period) ${header.errorStr()}`)\n      }\n    }\n\n    header.validateGasLimit(parentHeader)\n\n    if (height !== undefined) {\n      const dif = height - parentHeader.number\n\n      if (!(dif < BIGINT_8 && dif > BIGINT_1)) {\n        throw new Error(\n          `uncle block has a parent that is too old or too young ${header.errorStr()}`\n        )\n      }\n    }\n\n    // check blockchain dependent EIP1559 values\n    if (header.common.isActivatedEIP(1559) === true) {\n      // check if the base fee is correct\n      let expectedBaseFee\n      const londonHfBlock = this.common.hardforkBlock(Hardfork.London)\n      const isInitialEIP1559Block = number === londonHfBlock\n      if (isInitialEIP1559Block) {\n        expectedBaseFee = header.common.param('gasConfig', 'initialBaseFee')\n      } else {\n        expectedBaseFee = parentHeader.calcNextBaseFee()\n      }\n\n      if (header.baseFeePerGas! !== expectedBaseFee) {\n        throw new Error(`Invalid block: base fee not correct ${header.errorStr()}`)\n      }\n    }\n\n    if (header.common.isActivatedEIP(4844) === true) {\n      const expectedExcessBlobGas = parentHeader.calcNextExcessBlobGas()\n      if (header.excessBlobGas !== expectedExcessBlobGas) {\n        throw new Error(`expected blob gas: ${expectedExcessBlobGas}, got: ${header.excessBlobGas}`)\n      }\n    }\n  }\n\n  /**\n   * Validates a block, by validating the header against the current chain, any uncle headers, and then\n   * whether the block is internally consistent\n   * @param block block to be validated\n   */\n  public async validateBlock(block: Block) {\n    await this.validateHeader(block.header)\n    await this._validateUncleHeaders(block)\n    await block.validateData(false)\n    // TODO: Rethink how validateHeader vs validateBlobTransactions works since the parentHeader is retrieved multiple times\n    // (one for each uncle header and then for validateBlobTxs).\n    const parentBlock = await this.getBlock(block.header.parentHash)\n    block.validateBlobTransactions(parentBlock.header)\n  }\n  /**\n   * The following rules are checked in this method:\n   * Uncle Header is a valid header.\n   * Uncle Header is an orphan, i.e. it is not one of the headers of the canonical chain.\n   * Uncle Header has a parentHash which points to the canonical chain. This parentHash is within the last 7 blocks.\n   * Uncle Header is not already included as uncle in another block.\n   * @param block - block for which uncles are being validated\n   */\n  private async _validateUncleHeaders(block: Block) {\n    const uncleHeaders = block.uncleHeaders\n    if (uncleHeaders.length === 0) {\n      return\n    }\n\n    // Each Uncle Header is a valid header\n    await Promise.all(uncleHeaders.map((uh) => this.validateHeader(uh, block.header.number)))\n\n    // Check how many blocks we should get in order to validate the uncle.\n    // In the worst case, we get 8 blocks, in the best case, we only get 1 block.\n    const canonicalBlockMap: Block[] = []\n    let lowestUncleNumber = block.header.number\n\n    uncleHeaders.map((header) => {\n      if (header.number < lowestUncleNumber) {\n        lowestUncleNumber = header.number\n      }\n    })\n\n    // Helper variable: set hash to `true` if hash is part of the canonical chain\n    const canonicalChainHashes: { [key: string]: boolean } = {}\n\n    // Helper variable: set hash to `true` if uncle hash is included in any canonical block\n    const includedUncles: { [key: string]: boolean } = {}\n\n    // Due to the header validation check above, we know that `getBlocks` is between 1 and 8 inclusive.\n    const getBlocks = Number(block.header.number - lowestUncleNumber + BIGINT_1)\n\n    // See Geth: https://github.com/ethereum/go-ethereum/blob/b63bffe8202d46ea10ac8c4f441c582642193ac8/consensus/ethash/consensus.go#L207\n    // Here we get the necessary blocks from the chain.\n    let parentHash = block.header.parentHash\n    for (let i = 0; i < getBlocks; i++) {\n      const parentBlock = await this.getBlock(parentHash)\n      canonicalBlockMap.push(parentBlock)\n\n      // mark block hash as part of the canonical chain\n      canonicalChainHashes[bytesToUnprefixedHex(parentBlock.hash())] = true\n\n      // for each of the uncles, mark the uncle as included\n      parentBlock.uncleHeaders.map((uh) => {\n        includedUncles[bytesToUnprefixedHex(uh.hash())] = true\n      })\n\n      parentHash = parentBlock.header.parentHash\n    }\n\n    // Here we check:\n    // Uncle Header is an orphan, i.e. it is not one of the headers of the canonical chain.\n    // Uncle Header is not already included as uncle in another block.\n    // Uncle Header has a parentHash which points to the canonical chain.\n\n    uncleHeaders.map((uh) => {\n      const uncleHash = bytesToUnprefixedHex(uh.hash())\n      const parentHash = bytesToUnprefixedHex(uh.parentHash)\n\n      if (!canonicalChainHashes[parentHash]) {\n        throw new Error(\n          `The parent hash of the uncle header is not part of the canonical chain ${block.errorStr()}`\n        )\n      }\n\n      if (includedUncles[uncleHash]) {\n        throw new Error(`The uncle is already included in the canonical chain ${block.errorStr()}`)\n      }\n\n      if (canonicalChainHashes[uncleHash]) {\n        throw new Error(`The uncle is a canonical block ${block.errorStr()}`)\n      }\n    })\n  }\n\n  /**\n   * Gets a block by its hash or number.  If a number is provided, the returned\n   * block will be the canonical block at that number in the chain\n   *\n   * @param blockId - The block's hash or number. If a hash is provided, then\n   * this will be immediately looked up, otherwise it will wait until we have\n   * unlocked the DB\n   */\n  async getBlock(blockId: Uint8Array | number | bigint): Promise<Block> {\n    // cannot wait for a lock here: it is used both in `validate` of `Block`\n    // (calls `getBlock` to get `parentHash`) it is also called from `runBlock`\n    // in the `VM` if we encounter a `BLOCKHASH` opcode: then a bigint is used we\n    // need to then read the block from the canonical chain Q: is this safe? We\n    // know it is OK if we call it from the iterator... (runBlock)\n    const block = await this.dbManager.getBlock(blockId)\n\n    if (block === undefined) {\n      if (typeof blockId === 'object') {\n        throw new Error(`Block with hash ${bytesToHex(blockId)} not found in DB`)\n      } else {\n        throw new Error(`Block number ${blockId} not found in DB`)\n      }\n    }\n    return block\n  }\n\n  /**\n   * Gets total difficulty for a block specified by hash and number\n   */\n  public async getTotalDifficulty(hash: Uint8Array, number?: bigint): Promise<bigint> {\n    if (number === undefined) {\n      number = await this.dbManager.hashToNumber(hash)\n      if (number === undefined) {\n        throw new Error(`Block with hash ${bytesToHex(hash)} not found in DB`)\n      }\n    }\n    return this.dbManager.getTotalDifficulty(hash, number)\n  }\n\n  /**\n   * Gets total difficulty for a header's parent, helpful for determining terminal block\n   * @param header - Block header whose parent td is desired\n   */\n  public async getParentTD(header: BlockHeader): Promise<bigint> {\n    return header.number === BIGINT_0\n      ? header.difficulty\n      : this.getTotalDifficulty(header.parentHash, header.number - BIGINT_1)\n  }\n\n  /**\n   * Looks up many blocks relative to blockId Note: due to `GetBlockHeaders\n   * (0x03)` (ETH wire protocol) we have to support skip/reverse as well.\n   * @param blockId - The block's hash or number\n   * @param maxBlocks - Max number of blocks to return\n   * @param skip - Number of blocks to skip apart\n   * @param reverse - Fetch blocks in reverse\n   */\n  async getBlocks(\n    blockId: Uint8Array | bigint | number,\n    maxBlocks: number,\n    skip: number,\n    reverse: boolean\n  ): Promise<Block[]> {\n    return this.runWithLock<Block[]>(async () => {\n      const blocks: Block[] = []\n      let i = -1\n\n      const nextBlock = async (blockId: Uint8Array | bigint | number): Promise<any> => {\n        let block\n        try {\n          block = await this.getBlock(blockId)\n        } catch (err: any) {\n          if (err.message.includes('not found in DB') === true) {\n            return\n          } else throw err\n        }\n\n        i++\n        const nextBlockNumber = block.header.number + BigInt(reverse ? -1 : 1)\n        if (i !== 0 && skip && i % (skip + 1) !== 0) {\n          return nextBlock(nextBlockNumber)\n        }\n        blocks.push(block)\n        if (blocks.length < maxBlocks) {\n          await nextBlock(nextBlockNumber)\n        }\n      }\n\n      await nextBlock(blockId)\n      return blocks\n    })\n  }\n\n  /**\n   * Given an ordered array, returns an array of hashes that are not in the\n   * blockchain yet. Uses binary search to find out what hashes are missing.\n   * Therefore, the array needs to be ordered upon number.\n   * @param hashes - Ordered array of hashes (ordered on `number`).\n   */\n  async selectNeededHashes(hashes: Array<Uint8Array>): Promise<Uint8Array[]> {\n    return this.runWithLock<Uint8Array[]>(async () => {\n      let max: number\n      let mid: number\n      let min: number\n\n      max = hashes.length - 1\n      mid = min = 0\n\n      while (max >= min) {\n        let number\n        try {\n          number = await this.dbManager.hashToNumber(hashes[mid])\n        } catch (err: any) {\n          if (err.message.includes('not found in DB') === true) {\n            number = undefined\n          } else throw err\n        }\n\n        if (number !== undefined) {\n          min = mid + 1\n        } else {\n          max = mid - 1\n        }\n        mid = Math.floor((min + max) / 2)\n      }\n      return hashes.slice(min)\n    })\n  }\n\n  /**\n   * Completely deletes a block from the blockchain including any references to\n   * this block. If this block was in the canonical chain, then also each child\n   * block of this block is deleted Also, if this was a canonical block, each\n   * head header which is part of this now stale chain will be set to the\n   * parentHeader of this block An example reason to execute is when running the\n   * block in the VM invalidates this block: this will then reset the canonical\n   * head to the past block (which has been validated in the past by the VM, so\n   * we can be sure it is correct).\n   * @param blockHash - The hash of the block to be deleted\n   */\n  async delBlock(blockHash: Uint8Array) {\n    // Q: is it safe to make this not wait for a lock? this is called from\n    // `BlockchainTestsRunner` in case `runBlock` throws (i.e. the block is invalid).\n    // But is this the way to go? If we know this is called from the\n    // iterator we are safe, but if this is called from anywhere\n    // else then this might lead to a concurrency problem?\n    await this._delBlock(blockHash)\n  }\n\n  /**\n   * @hidden\n   */\n  private async _delBlock(blockHash: Uint8Array) {\n    const dbOps: DBOp[] = []\n\n    // get header\n    const header = await this._getHeader(blockHash)\n    const blockHeader = header\n    const blockNumber = blockHeader.number\n    const parentHash = blockHeader.parentHash\n\n    // check if block is in the canonical chain\n    const canonicalHash = await this.safeNumberToHash(blockNumber)\n\n    const inCanonical = canonicalHash !== false && equalsBytes(canonicalHash, blockHash)\n\n    // delete the block, and if block is in the canonical chain, delete all\n    // children as well\n    await this._delChild(blockHash, blockNumber, inCanonical ? parentHash : null, dbOps)\n\n    // delete all number to hash mappings for deleted block number and above\n    if (inCanonical) {\n      await this._deleteCanonicalChainReferences(blockNumber, parentHash, dbOps)\n    }\n\n    await this.dbManager.batch(dbOps)\n\n    if (this._deletedBlocks.length > 0) {\n      this.events.emit('deletedCanonicalBlocks', this._deletedBlocks)\n      this._deletedBlocks = []\n    }\n  }\n\n  /**\n   * Updates the `DatabaseOperation` list to delete a block from the DB,\n   * identified by `blockHash` and `blockNumber`. Deletes fields from `Header`,\n   * `Body`, `HashToNumber` and `TotalDifficulty` tables. If child blocks of\n   * this current block are in the canonical chain, delete these as well. Does\n   * not actually commit these changes to the DB. Sets `_headHeaderHash` and\n   * `_headBlockHash` to `headHash` if any of these matches the current child to\n   * be deleted.\n   * @param blockHash - the block hash to delete\n   * @param blockNumber - the number corresponding to the block hash\n   * @param headHash - the current head of the chain (if null, do not update\n   * `_headHeaderHash` and `_headBlockHash`)\n   * @param ops - the `DatabaseOperation` list to add the delete operations to\n   * @hidden\n   */\n  private async _delChild(\n    blockHash: Uint8Array,\n    blockNumber: bigint,\n    headHash: Uint8Array | null,\n    ops: DBOp[]\n  ) {\n    // delete header, body, hash to number mapping and td\n    ops.push(DBOp.del(DBTarget.Header, { blockHash, blockNumber }))\n    ops.push(DBOp.del(DBTarget.Body, { blockHash, blockNumber }))\n    ops.push(DBOp.del(DBTarget.HashToNumber, { blockHash }))\n    ops.push(DBOp.del(DBTarget.TotalDifficulty, { blockHash, blockNumber }))\n\n    if (!headHash) {\n      return\n    }\n\n    if (\n      this._headHeaderHash !== undefined &&\n      equalsBytes(this._headHeaderHash, blockHash) === true\n    ) {\n      this._headHeaderHash = headHash\n    }\n\n    if (this._headBlockHash !== undefined && equalsBytes(this._headBlockHash, blockHash)) {\n      this._headBlockHash = headHash\n    }\n\n    try {\n      const childHeader = await this.getCanonicalHeader(blockNumber + BIGINT_1)\n      await this._delChild(childHeader.hash(), childHeader.number, headHash, ops)\n    } catch (err: any) {\n      if (err.message.includes('not found in canonical chain') !== true) {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Iterates through blocks starting at the specified iterator head and calls\n   * the onBlock function on each block. The current location of an iterator\n   * head can be retrieved using {@link Blockchain.getIteratorHead}.\n   *\n   * @param name - Name of the state root head\n   * @param onBlock - Function called on each block with params (block, reorg)\n   * @param maxBlocks - How many blocks to run. By default, run all unprocessed blocks in the canonical chain.\n   * @param releaseLockOnCallback - Do not lock the blockchain for running the callback (default: `false`)\n   * @returns number of blocks actually iterated\n   */\n  async iterator(\n    name: string,\n    onBlock: OnBlock,\n    maxBlocks?: number,\n    releaseLockOnCallback?: boolean\n  ): Promise<number> {\n    return this.runWithLock<number>(async (): Promise<number> => {\n      let headHash = this._heads[name] ?? this.genesisBlock.hash()\n\n      if (typeof maxBlocks === 'number' && maxBlocks < 0) {\n        throw 'If maxBlocks is provided, it has to be a non-negative number'\n      }\n\n      let headBlockNumber = await this.dbManager.hashToNumber(headHash)\n      // `headBlockNumber` should always exist since it defaults to the genesis block\n      let nextBlockNumber = headBlockNumber! + BIGINT_1\n      let blocksRanCounter = 0\n      let lastBlock: Block | undefined\n\n      try {\n        while (maxBlocks !== blocksRanCounter) {\n          try {\n            let nextBlock = await this.getBlock(nextBlockNumber)\n            const reorg = lastBlock\n              ? !equalsBytes(lastBlock.hash(), nextBlock.header.parentHash)\n              : false\n            if (reorg) {\n              // If reorg has happened, the _heads must have been updated so lets reload the counters\n              headHash = this._heads[name] ?? this.genesisBlock.hash()\n              headBlockNumber = await this.dbManager.hashToNumber(headHash)\n              nextBlockNumber = headBlockNumber! + BIGINT_1\n              nextBlock = await this.getBlock(nextBlockNumber)\n            }\n\n            // While running onBlock with released lock, reorgs can happen via putBlocks\n            let reorgWhileOnBlock = false\n            if (releaseLockOnCallback === true) {\n              this._lock.release()\n            }\n            try {\n              await onBlock(nextBlock, reorg)\n            } finally {\n              if (releaseLockOnCallback === true) {\n                await this._lock.acquire()\n                // If lock was released check if reorg occured\n                const nextBlockMayBeReorged = await this.getBlock(nextBlockNumber).catch(\n                  (_e) => null\n                )\n                reorgWhileOnBlock = nextBlockMayBeReorged\n                  ? !equalsBytes(nextBlockMayBeReorged.hash(), nextBlock.hash())\n                  : true\n              }\n            }\n\n            // if there was no reorg, update head\n            if (!reorgWhileOnBlock) {\n              this._heads[name] = nextBlock.hash()\n              lastBlock = nextBlock\n              nextBlockNumber++\n            }\n            // Successful execution of onBlock, move the head pointer\n            blocksRanCounter++\n          } catch (error: any) {\n            if ((error.message as string).includes('not found in DB')) {\n              break\n            } else {\n              throw error\n            }\n          }\n        }\n        return blocksRanCounter\n      } finally {\n        await this._saveHeads()\n      }\n    })\n  }\n\n  /**\n   * Set header hash of a certain `tag`.\n   * When calling the iterator, the iterator will start running the first child block after the header hash currently stored.\n   * @param tag - The tag to save the headHash to\n   * @param headHash - The head hash to save\n   */\n  async setIteratorHead(tag: string, headHash: Uint8Array) {\n    await this.runWithLock<void>(async () => {\n      this._heads[tag] = headHash\n      await this._saveHeads()\n    })\n  }\n\n  /* Methods regarding reorg operations */\n\n  /**\n   * Find the common ancestor of the new block and the old block.\n   * @param newHeader - the new block header\n   */\n  private async findCommonAncestor(newHeader: BlockHeader) {\n    if (!this._headHeaderHash) throw new Error('No head header set')\n    const ancestorHeaders = new Set<BlockHeader>()\n\n    let { header } = await this.getBlock(this._headHeaderHash)\n    if (header.number > newHeader.number) {\n      header = await this.getCanonicalHeader(newHeader.number)\n      ancestorHeaders.add(header)\n    } else {\n      while (header.number !== newHeader.number && newHeader.number > BIGINT_0) {\n        newHeader = await this._getHeader(newHeader.parentHash, newHeader.number - BIGINT_1)\n        ancestorHeaders.add(newHeader)\n      }\n    }\n    if (header.number !== newHeader.number) {\n      throw new Error('Failed to find ancient header')\n    }\n    while (!equalsBytes(header.hash(), newHeader.hash()) && header.number > BIGINT_0) {\n      header = await this.getCanonicalHeader(header.number - BIGINT_1)\n      ancestorHeaders.add(header)\n      newHeader = await this._getHeader(newHeader.parentHash, newHeader.number - BIGINT_1)\n      ancestorHeaders.add(newHeader)\n    }\n    if (!equalsBytes(header.hash(), newHeader.hash())) {\n      throw new Error('Failed to find ancient header')\n    }\n    return {\n      commonAncestor: header,\n      ancestorHeaders: Array.from(ancestorHeaders),\n    }\n  }\n\n  /**\n   * Pushes DB operations to delete canonical number assignments for specified\n   * block number and above. This only deletes `NumberToHash` references and not\n   * the blocks themselves. Note: this does not write to the DB but only pushes\n   * to a DB operations list.\n   * @param blockNumber - the block number from which we start deleting\n   * canonical chain assignments (including this block)\n   * @param headHash - the hash of the current canonical chain head. The _heads\n   * reference matching any hash of any of the deleted blocks will be set to\n   * this\n   * @param ops - the DatabaseOperation list to write DatabaseOperations to\n   * @hidden\n   */\n  private async _deleteCanonicalChainReferences(\n    blockNumber: bigint,\n    headHash: Uint8Array,\n    ops: DBOp[]\n  ) {\n    try {\n      let hash: Uint8Array | false\n\n      hash = await this.safeNumberToHash(blockNumber)\n      while (hash !== false) {\n        ops.push(DBOp.del(DBTarget.NumberToHash, { blockNumber }))\n\n        if (this.events.listenerCount('deletedCanonicalBlocks') > 0) {\n          const block = await this.getBlock(blockNumber)\n          this._deletedBlocks.push(block)\n        }\n\n        // reset stale iterator heads to current canonical head this can, for\n        // instance, make the VM run \"older\" (i.e. lower number blocks than last\n        // executed block) blocks to verify the chain up to the current, actual,\n        // head.\n        for (const name of Object.keys(this._heads)) {\n          if (equalsBytes(this._heads[name], hash)) {\n            this._heads[name] = headHash\n          }\n        }\n\n        // reset stale headHeader to current canonical\n        if (\n          this._headHeaderHash !== undefined &&\n          equalsBytes(this._headHeaderHash, hash) === true\n        ) {\n          this._headHeaderHash = headHash\n        }\n        // reset stale headBlock to current canonical\n        if (this._headBlockHash !== undefined && equalsBytes(this._headBlockHash, hash) === true) {\n          this._headBlockHash = headHash\n        }\n\n        blockNumber++\n\n        hash = await this.safeNumberToHash(blockNumber)\n      }\n    } catch (e) {\n      // Ensure that if this method throws, `_deletedBlocks` is reset to the empty array\n      this._deletedBlocks = []\n      throw e\n    }\n  }\n\n  /**\n   * Given a `header`, put all operations to change the canonical chain directly\n   * into `ops`. This walks the supplied `header` backwards. It is thus assumed\n   * that this header should be canonical header. For each header the\n   * corresponding hash corresponding to the current canonical chain in the DB\n   * is checked. If the number => hash reference does not correspond to the\n   * reference in the DB, we overwrite this reference with the implied number =>\n   * hash reference Also, each `_heads` member is checked; if these point to a\n   * stale hash, then the hash which we terminate the loop (i.e. the first hash\n   * which matches the number => hash of the implied chain) is put as this stale\n   * head hash. The same happens to _headBlockHash.\n   * @param header - The canonical header.\n   * @param ops - The database operations list.\n   * @hidden\n   */\n  private async _rebuildCanonical(header: BlockHeader, ops: DBOp[]) {\n    let currentNumber = header.number\n    let currentCanonicalHash: Uint8Array = header.hash()\n\n    // track the staleHash: this is the hash currently in the DB which matches\n    // the block number of the provided header.\n    let staleHash: Uint8Array | false = false\n    let staleHeads: string[] = []\n    let staleHeadBlock = false\n\n    const loopCondition = async () => {\n      staleHash = await this.safeNumberToHash(currentNumber)\n      currentCanonicalHash = header.hash()\n      return staleHash === false || !equalsBytes(currentCanonicalHash, staleHash)\n    }\n\n    while (await loopCondition()) {\n      // handle genesis block\n      const blockHash = header.hash()\n      const blockNumber = header.number\n\n      if (blockNumber === BIGINT_0) {\n        break\n      }\n\n      DBSaveLookups(blockHash, blockNumber).map((op) => {\n        ops.push(op)\n      })\n\n      // mark each key `_heads` which is currently set to the hash in the DB as\n      // stale to overwrite later in `_deleteCanonicalChainReferences`.\n      for (const name of Object.keys(this._heads)) {\n        if (staleHash && equalsBytes(this._heads[name], staleHash)) {\n          staleHeads.push(name)\n        }\n      }\n      // flag stale headBlock for reset\n      if (\n        staleHash &&\n        this._headBlockHash !== undefined &&\n        equalsBytes(this._headBlockHash, staleHash) === true\n      ) {\n        staleHeadBlock = true\n      }\n\n      header = await this._getHeader(header.parentHash, --currentNumber)\n      if (header === undefined) {\n        staleHeads = []\n        break\n      }\n    }\n    // When the stale hash is equal to the blockHash of the provided header,\n    // set stale heads to last previously valid canonical block\n    for (const name of staleHeads) {\n      this._heads[name] = currentCanonicalHash\n    }\n    // set stale headBlock to last previously valid canonical block\n    if (staleHeadBlock) {\n      this._headBlockHash = currentCanonicalHash\n    }\n  }\n\n  /* Helper functions */\n\n  /**\n   * Builds the `DatabaseOperation[]` list which describes the DB operations to\n   * write the heads, head header hash and the head header block to the DB\n   * @hidden\n   */\n  private _saveHeadOps(): DBOp[] {\n    // Convert DB heads to hex strings for efficient storage in DB\n    // LevelDB doesn't handle Uint8Arrays properly when they are part\n    // of a JSON object being stored as a value in the DB\n    const hexHeads = Object.fromEntries(\n      Object.entries(this._heads).map((entry) => [entry[0], bytesToUnprefixedHex(entry[1])])\n    )\n    return [\n      DBOp.set(DBTarget.Heads, hexHeads),\n      DBOp.set(DBTarget.HeadHeader, this._headHeaderHash!),\n      DBOp.set(DBTarget.HeadBlock, this._headBlockHash!),\n    ]\n  }\n\n  /**\n   * Gets the `DatabaseOperation[]` list to save `_heads`, `_headHeaderHash` and\n   * `_headBlockHash` and writes these to the DB\n   * @hidden\n   */\n  private async _saveHeads() {\n    return this.dbManager.batch(this._saveHeadOps())\n  }\n\n  /**\n   * Gets a header by hash and number. Header can exist outside the canonical\n   * chain\n   *\n   * @hidden\n   */\n  private async _getHeader(hash: Uint8Array, number?: bigint) {\n    if (number === undefined) {\n      number = await this.dbManager.hashToNumber(hash)\n      if (number === undefined) throw new Error(`no header for ${bytesToHex(hash)} found in DB`)\n    }\n    return this.dbManager.getHeader(hash, number)\n  }\n\n  async checkAndTransitionHardForkByNumber(\n    number: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): Promise<void> {\n    this.common.setHardforkBy({\n      blockNumber: number,\n      td,\n      timestamp,\n    })\n\n    // If custom consensus algorithm is used, skip merge hardfork consensus checks\n    if (!Object.values(ConsensusAlgorithm).includes(this.consensus.algorithm as ConsensusAlgorithm))\n      return\n\n    switch (this.common.consensusAlgorithm()) {\n      case ConsensusAlgorithm.Casper:\n        if (!(this.consensus instanceof CasperConsensus)) {\n          this.consensus = new CasperConsensus()\n        }\n        break\n      case ConsensusAlgorithm.Clique:\n        if (!(this.consensus instanceof CliqueConsensus)) {\n          this.consensus = new CliqueConsensus()\n        }\n        break\n      case ConsensusAlgorithm.Ethash:\n        if (!(this.consensus instanceof EthashConsensus)) {\n          this.consensus = new EthashConsensus()\n        }\n        break\n      default:\n        throw new Error(`consensus algorithm ${this.common.consensusAlgorithm()} not supported`)\n    }\n    await this.consensus.setup({ blockchain: this })\n    await this.consensus.genesisInit(this.genesisBlock)\n  }\n\n  /**\n   * Gets a header by number. Header must be in the canonical chain\n   */\n  async getCanonicalHeader(number: bigint) {\n    const hash = await this.dbManager.numberToHash(number)\n    if (hash === undefined) {\n      throw new Error(`header with number ${number} not found in canonical chain`)\n    }\n    return this._getHeader(hash, number)\n  }\n\n  /**\n   * This method either returns a Uint8Array if there exists one in the DB or if it\n   * does not exist then return false If DB throws\n   * any other error, this function throws.\n   * @param number\n   */\n  async safeNumberToHash(number: bigint): Promise<Uint8Array | false> {\n    const hash = await this.dbManager.numberToHash(number)\n    return hash !== undefined ? hash : false\n  }\n\n  /**\n   * The genesis {@link Block} for the blockchain.\n   */\n  get genesisBlock(): Block {\n    if (!this._genesisBlock) throw new Error('genesis block not set (init may not be finished)')\n    return this._genesisBlock\n  }\n\n  /**\n   * Creates a genesis {@link Block} for the blockchain with params from {@link Common.genesis}\n   * @param stateRoot The genesis stateRoot\n   */\n  createGenesisBlock(stateRoot: Uint8Array): Block {\n    const common = this.common.copy()\n    common.setHardforkBy({\n      blockNumber: 0,\n      td: BigInt(common.genesis().difficulty),\n      timestamp: common.genesis().timestamp,\n    })\n\n    const header: BlockData['header'] = {\n      ...common.genesis(),\n      number: 0,\n      stateRoot,\n      withdrawalsRoot: common.isActivatedEIP(4895) ? KECCAK256_RLP : undefined,\n    }\n    if (common.consensusType() === 'poa') {\n      if (common.genesis().extraData) {\n        // Ensure exta data is populated from genesis data if provided\n        header.extraData = common.genesis().extraData\n      } else {\n        // Add required extraData (32 bytes vanity + 65 bytes filled with zeroes\n        header.extraData = concatBytes(new Uint8Array(32), new Uint8Array(65))\n      }\n    }\n    return Block.fromBlockData(\n      { header, withdrawals: common.isActivatedEIP(4895) ? [] : undefined },\n      { common }\n    )\n  }\n}\n","import { ConsensusAlgorithm } from '@ethereumjs/common'\nimport { BIGINT_0 } from '@ethereumjs/util'\n\nimport type { Consensus } from '../types.js'\nimport type { BlockHeader } from '@ethereumjs/block'\n\n/**\n * This class encapsulates Casper-related consensus functionality when used with the Blockchain class.\n */\nexport class CasperConsensus implements Consensus {\n  algorithm: ConsensusAlgorithm\n\n  constructor() {\n    this.algorithm = ConsensusAlgorithm.Casper\n  }\n\n  public async genesisInit(): Promise<void> {}\n\n  public async setup(): Promise<void> {}\n\n  public async validateConsensus(): Promise<void> {}\n\n  public async validateDifficulty(header: BlockHeader): Promise<void> {\n    if (header.difficulty !== BIGINT_0) {\n      const msg = 'invalid difficulty.  PoS blocks must have difficulty 0'\n      throw new Error(`${msg} ${header.errorStr()}`)\n    }\n  }\n  public async newBlock(): Promise<void> {}\n}\n","import { ConsensusAlgorithm } from '@ethereumjs/common'\nimport { RLP } from '@ethereumjs/rlp'\nimport {\n  Address,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_2,\n  TypeOutput,\n  bigIntToBytes,\n  bytesToBigInt,\n  equalsBytes,\n  hexToBytes,\n  toType,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\n\nimport type { Blockchain } from '../index.js'\nimport type { Consensus, ConsensusOptions } from '../types.js'\nimport type { Block, BlockHeader } from '@ethereumjs/block'\nimport type { CliqueConfig } from '@ethereumjs/common'\nconst { debug: createDebugLogger } = debugDefault\n\nconst debug = createDebugLogger('blockchain:clique')\n\n// Magic nonce number to vote on adding a new signer\nexport const CLIQUE_NONCE_AUTH = hexToBytes('0xffffffffffffffff')\n// Magic nonce number to vote on removing a signer.\nexport const CLIQUE_NONCE_DROP = new Uint8Array(8)\n\nconst CLIQUE_SIGNERS_KEY = 'CliqueSigners'\nconst CLIQUE_VOTES_KEY = 'CliqueVotes'\nconst CLIQUE_BLOCK_SIGNERS_SNAPSHOT_KEY = 'CliqueBlockSignersSnapshot'\n\n// Block difficulty for in-turn signatures\nexport const CLIQUE_DIFF_INTURN = BIGINT_2\n// Block difficulty for out-of-turn signatures\nexport const CLIQUE_DIFF_NOTURN = BIGINT_1\n\n// Clique Signer State\ntype CliqueSignerState = [blockNumber: bigint, signers: Address[]]\ntype CliqueLatestSignerStates = CliqueSignerState[]\n\n// Clique Vote\ntype CliqueVote = [\n  blockNumber: bigint,\n  vote: [signer: Address, beneficiary: Address, cliqueNonce: Uint8Array]\n]\ntype CliqueLatestVotes = CliqueVote[]\n\n// Clique Block Signer\ntype CliqueBlockSigner = [blockNumber: bigint, signer: Address]\ntype CliqueLatestBlockSigners = CliqueBlockSigner[]\n\n/**\n * This class encapsulates Clique-related consensus functionality when used with the Blockchain class.\n * Note: reorgs which happen between epoch transitions, which change the internal voting state over the reorg\n * will result in failure and is currently not supported.\n * The hotfix for this could be: re-load the latest epoch block (this has the clique state in the extraData of the header)\n * Now replay all blocks on top of it. This should validate the chain up to the new/reorged tip which previously threw.\n */\nexport class CliqueConsensus implements Consensus {\n  blockchain: Blockchain | undefined\n  algorithm: ConsensusAlgorithm\n\n  /**\n   * Keep signer history data (signer states and votes)\n   * for all block numbers >= HEAD_BLOCK - CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT\n   *\n   * This defines a limit for reorgs on PoA clique chains.\n   */\n  private CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT = 200\n\n  /**\n   * List with the latest signer states checkpointed on blocks where\n   * a change (added new or removed a signer) occurred.\n   *\n   * Format:\n   * [ [BLOCK_NUMBER_1, [SIGNER1, SIGNER 2,]], [BLOCK_NUMBER2, [SIGNER1, SIGNER3]], ...]\n   *\n   * The top element from the array represents the list of current signers.\n   * On reorgs elements from the array are removed until BLOCK_NUMBER > REORG_BLOCK.\n   *\n   * Always keep at least one item on the stack.\n   */\n  public _cliqueLatestSignerStates: CliqueLatestSignerStates = []\n\n  /**\n   * List with the latest signer votes.\n   *\n   * Format:\n   * [ [BLOCK_NUMBER_1, [SIGNER, BENEFICIARY, AUTH]], [BLOCK_NUMBER_1, [SIGNER, BENEFICIARY, AUTH]] ]\n   * where AUTH = CLIQUE_NONCE_AUTH | CLIQUE_NONCE_DROP\n   *\n   * For votes all elements here must be taken into account with a\n   * block number >= LAST_EPOCH_BLOCK\n   * (nevertheless keep entries with blocks before EPOCH_BLOCK in case a reorg happens\n   * during an epoch change)\n   *\n   * On reorgs elements from the array are removed until BLOCK_NUMBER > REORG_BLOCK.\n   */\n  public _cliqueLatestVotes: CliqueLatestVotes = []\n\n  /**\n   * List of signers for the last consecutive {@link Blockchain.cliqueSignerLimit} blocks.\n   * Kept as a snapshot for quickly checking for \"recently signed\" error.\n   * Format: [ [BLOCK_NUMBER, SIGNER_ADDRESS], ...]\n   *\n   * On reorgs elements from the array are removed until BLOCK_NUMBER > REORG_BLOCK.\n   */\n  public _cliqueLatestBlockSigners: CliqueLatestBlockSigners = []\n\n  constructor() {\n    this.algorithm = ConsensusAlgorithm.Clique\n  }\n\n  /**\n   *\n   * @param param dictionary containin a {@link Blockchain} object\n   *\n   * Note: this method must be called before consensus checks are used or type errors will occur\n   */\n  async setup({ blockchain }: ConsensusOptions): Promise<void> {\n    this.blockchain = blockchain\n    this._cliqueLatestSignerStates = await this.getCliqueLatestSignerStates()\n    this._cliqueLatestSignerStates.sort((a, b) => (a[0] > b[0] ? 1 : -1))\n    this._cliqueLatestVotes = await this.getCliqueLatestVotes()\n    this._cliqueLatestBlockSigners = await this.getCliqueLatestBlockSigners()\n  }\n\n  async genesisInit(genesisBlock: Block): Promise<void> {\n    await this.cliqueSaveGenesisSigners(genesisBlock)\n  }\n\n  async validateConsensus(block: Block): Promise<void> {\n    if (!this.blockchain) {\n      throw new Error('blockchain not provided')\n    }\n\n    const { header } = block\n    const valid = header.cliqueVerifySignature(this.cliqueActiveSigners(header.number))\n    if (!valid) {\n      throw new Error('invalid PoA block signature (clique)')\n    }\n    if (this.cliqueCheckRecentlySigned(header)) {\n      throw new Error('recently signed')\n    }\n\n    // validate checkpoint signers towards active signers on epoch transition blocks\n    if (header.cliqueIsEpochTransition()) {\n      // note: keep votes on epoch transition blocks in case of reorgs.\n      // only active (non-stale) votes will counted (if vote.blockNumber >= lastEpochBlockNumber\n\n      const checkpointSigners = header.cliqueEpochTransitionSigners()\n      const activeSigners = this.cliqueActiveSigners(header.number)\n      for (const [i, cSigner] of checkpointSigners.entries()) {\n        if (activeSigners[i]?.equals(cSigner) !== true) {\n          throw new Error(\n            `checkpoint signer not found in active signers list at index ${i}: ${cSigner}`\n          )\n        }\n      }\n    }\n  }\n\n  async validateDifficulty(header: BlockHeader): Promise<void> {\n    if (!this.blockchain) {\n      throw new Error('blockchain not provided')\n    }\n\n    if (header.difficulty !== CLIQUE_DIFF_INTURN && header.difficulty !== CLIQUE_DIFF_NOTURN) {\n      const msg = `difficulty for clique block must be INTURN (2) or NOTURN (1), received: ${header.difficulty}`\n      throw new Error(`${msg} ${header.errorStr()}`)\n    }\n\n    const signers = this.cliqueActiveSigners(header.number)\n    if (signers.length === 0) {\n      // abort if signers are unavailable\n      const msg = 'no signers available'\n      throw new Error(`${msg} ${header.errorStr()}`)\n    }\n    const signerIndex = signers.findIndex((address: Address) =>\n      address.equals(header.cliqueSigner())\n    )\n    const inTurn = header.number % BigInt(signers.length) === BigInt(signerIndex)\n    if (\n      (inTurn && header.difficulty === CLIQUE_DIFF_INTURN) ||\n      (!inTurn && header.difficulty === CLIQUE_DIFF_NOTURN)\n    ) {\n      return\n    }\n    throw new Error(`'invalid clique difficulty ${header.errorStr()}`)\n  }\n\n  async newBlock(block: Block, commonAncestor: BlockHeader | undefined): Promise<void> {\n    // Clique: update signer votes and state\n    const { header } = block\n    const commonAncestorNumber = commonAncestor?.number\n    if (commonAncestorNumber !== undefined) {\n      await this._cliqueDeleteSnapshots(commonAncestorNumber + BIGINT_1)\n      for (let number = commonAncestorNumber + BigInt(1); number <= header.number; number++) {\n        const canonicalHeader = await this.blockchain!.getCanonicalHeader(number)\n        await this._cliqueBuildSnapshots(canonicalHeader)\n      }\n    }\n  }\n\n  /**\n   * Save genesis signers to db\n   * @param genesisBlock genesis block\n   * @hidden\n   */\n  private async cliqueSaveGenesisSigners(genesisBlock: Block) {\n    const genesisSignerState: CliqueSignerState = [\n      BIGINT_0,\n      genesisBlock.header.cliqueEpochTransitionSigners(),\n    ]\n    await this.cliqueUpdateSignerStates(genesisSignerState)\n    debug(`[Block 0] Genesis block -> update signer states`)\n    await this.cliqueUpdateVotes()\n  }\n\n  /**\n   * Save signer state to db\n   * @param signerState\n   * @hidden\n   */\n  private async cliqueUpdateSignerStates(signerState?: CliqueSignerState) {\n    if (signerState) {\n      const blockNumber = signerState[0]\n      const known = this._cliqueLatestSignerStates.find((value) => {\n        if (value[0] === blockNumber) {\n          return true\n        }\n      })\n      if (known !== undefined) {\n        return\n      }\n      this._cliqueLatestSignerStates.push(signerState)\n      this._cliqueLatestSignerStates.sort((a, b) => (a[0] > b[0] ? 1 : -1))\n    }\n\n    // trim to CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT\n    const limit = this.CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT\n    const blockSigners = this._cliqueLatestBlockSigners\n    const lastBlockNumber = blockSigners[blockSigners.length - 1]?.[0]\n    if (lastBlockNumber) {\n      const blockLimit = lastBlockNumber - BigInt(limit)\n      const states = this._cliqueLatestSignerStates\n      const lastItem = states[states.length - 1]\n      this._cliqueLatestSignerStates = states.filter((state) => state[0] >= blockLimit)\n      if (this._cliqueLatestSignerStates.length === 0) {\n        // always keep at least one item on the stack\n        this._cliqueLatestSignerStates.push(lastItem)\n      }\n    }\n\n    // save to db\n    const formatted = this._cliqueLatestSignerStates.map((state) => [\n      bigIntToBytes(state[0]),\n      state[1].map((a) => a.toBytes()),\n    ])\n    await this.blockchain!.db.put(CLIQUE_SIGNERS_KEY, RLP.encode(formatted))\n    // Output active signers for debugging purposes\n    if (signerState !== undefined) {\n      let i = 0\n      try {\n        for (const signer of this.cliqueActiveSigners(signerState[0])) {\n          debug(`Clique signer [${i}]: ${signer} (block: ${signerState[0]})`)\n          i++\n        }\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n  }\n\n  /**\n   * Update clique votes and save to db\n   * @param header BlockHeader\n   * @hidden\n   */\n  private async cliqueUpdateVotes(header?: BlockHeader) {\n    // Block contains a vote on a new signer\n    if (header && !header.coinbase.isZero()) {\n      const signer = header.cliqueSigner()\n      const beneficiary = header.coinbase\n      const nonce = header.nonce\n      const latestVote: CliqueVote = [header.number, [signer, beneficiary, nonce]]\n\n      // Do two rounds here, one to execute on a potential previously reached consensus\n      // on the newly touched beneficiary, one with the added new vote\n      for (let round = 1; round <= 2; round++) {\n        // See if there is a new majority consensus to update the signer list\n        const lastEpochBlockNumber =\n          header.number -\n          (header.number %\n            BigInt((this.blockchain!.common.consensusConfig() as CliqueConfig).epoch))\n        const limit = this.cliqueSignerLimit(header.number)\n        let activeSigners = [...this.cliqueActiveSigners(header.number)]\n        let consensus = false\n\n        // AUTH vote analysis\n        let votes = this._cliqueLatestVotes.filter((vote) => {\n          return (\n            vote[0] >= BigInt(lastEpochBlockNumber) &&\n            !vote[1][0].equals(signer) &&\n            vote[1][1].equals(beneficiary) &&\n            equalsBytes(vote[1][2], CLIQUE_NONCE_AUTH)\n          )\n        })\n        const beneficiaryVotesAUTH: Address[] = []\n        for (const vote of votes) {\n          const num = beneficiaryVotesAUTH.filter((voteCMP) => {\n            return voteCMP.equals(vote[1][0])\n          }).length\n          if (num === 0) {\n            beneficiaryVotesAUTH.push(vote[1][0])\n          }\n        }\n        let numBeneficiaryVotesAUTH = beneficiaryVotesAUTH.length\n        if (round === 2 && equalsBytes(nonce, CLIQUE_NONCE_AUTH)) {\n          numBeneficiaryVotesAUTH += 1\n        }\n        // Majority consensus\n        if (numBeneficiaryVotesAUTH >= limit) {\n          consensus = true\n          // Authorize new signer\n          activeSigners.push(beneficiary)\n          activeSigners.sort((a, b) => {\n            // Sort by array size\n            const result =\n              toType(a.toString(), TypeOutput.BigInt) < toType(b.toString(), TypeOutput.BigInt)\n            if (result) {\n              return -1\n            } else {\n              return 1\n            }\n          })\n          // Discard votes for added signer\n          this._cliqueLatestVotes = this._cliqueLatestVotes.filter(\n            (vote) => !vote[1][1].equals(beneficiary)\n          )\n          debug(`[Block ${header.number}] Clique majority consensus (AUTH ${beneficiary})`)\n        }\n        // DROP vote\n        votes = this._cliqueLatestVotes.filter((vote) => {\n          return (\n            vote[0] >= BigInt(lastEpochBlockNumber) &&\n            !vote[1][0].equals(signer) &&\n            vote[1][1].equals(beneficiary) &&\n            equalsBytes(vote[1][2], CLIQUE_NONCE_DROP)\n          )\n        })\n        const beneficiaryVotesDROP: Address[] = []\n        for (const vote of votes) {\n          const num = beneficiaryVotesDROP.filter((voteCMP) => {\n            return voteCMP.equals(vote[1][0])\n          }).length\n          if (num === 0) {\n            beneficiaryVotesDROP.push(vote[1][0])\n          }\n        }\n        let numBeneficiaryVotesDROP = beneficiaryVotesDROP.length\n\n        if (round === 2 && equalsBytes(nonce, CLIQUE_NONCE_DROP)) {\n          numBeneficiaryVotesDROP += 1\n        }\n        // Majority consensus\n        if (numBeneficiaryVotesDROP >= limit) {\n          consensus = true\n          // Drop signer\n          activeSigners = activeSigners.filter((signer) => !signer.equals(beneficiary))\n          this._cliqueLatestVotes = this._cliqueLatestVotes.filter(\n            // Discard votes from removed signer and for removed signer\n            (vote) => !vote[1][0].equals(beneficiary) && !vote[1][1].equals(beneficiary)\n          )\n          debug(`[Block ${header.number}] Clique majority consensus (DROP ${beneficiary})`)\n        }\n        if (round === 1) {\n          // Always add the latest vote to the history no matter if already voted\n          // the same vote or not\n          this._cliqueLatestVotes.push(latestVote)\n          debug(\n            `[Block ${header.number}] New clique vote: ${signer} -> ${beneficiary} ${\n              equalsBytes(nonce, CLIQUE_NONCE_AUTH) ? 'AUTH' : 'DROP'\n            }`\n          )\n        }\n        if (consensus) {\n          if (round === 1) {\n            debug(\n              `[Block ${header.number}] Clique majority consensus on existing votes -> update signer states`\n            )\n          } else {\n            debug(\n              `[Block ${header.number}] Clique majority consensus on new vote -> update signer states`\n            )\n          }\n          const newSignerState: CliqueSignerState = [header.number, activeSigners]\n          await this.cliqueUpdateSignerStates(newSignerState)\n          return\n        }\n      }\n    }\n\n    // trim to lastEpochBlockNumber - CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT\n    const limit = this.CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT\n    const blockSigners = this._cliqueLatestBlockSigners\n    const lastBlockNumber = blockSigners[blockSigners.length - 1]?.[0]\n    if (lastBlockNumber) {\n      const lastEpochBlockNumber =\n        lastBlockNumber -\n        (lastBlockNumber %\n          BigInt((this.blockchain!.common.consensusConfig() as CliqueConfig).epoch))\n      const blockLimit = lastEpochBlockNumber - BigInt(limit)\n      this._cliqueLatestVotes = this._cliqueLatestVotes.filter((state) => state[0] >= blockLimit)\n    }\n\n    // save votes to db\n    const formatted = this._cliqueLatestVotes.map((v) => [\n      bigIntToBytes(v[0]),\n      [v[1][0].toBytes(), v[1][1].toBytes(), v[1][2]],\n    ])\n    await this.blockchain!.db.put(CLIQUE_VOTES_KEY, RLP.encode(formatted))\n  }\n\n  /**\n   * Returns a list with the current block signers\n   */\n  cliqueActiveSigners(blockNum: bigint): Address[] {\n    const signers = this._cliqueLatestSignerStates\n    if (signers.length === 0) {\n      return []\n    }\n    for (let i = signers.length - 1; i >= 0; i--) {\n      if (signers[i][0] < blockNum) {\n        return signers[i][1]\n      }\n    }\n    throw new Error(`Could not load signers for block ${blockNum}`)\n  }\n\n  /**\n   * Number of consecutive blocks out of which a signer may only sign one.\n   * Defined as `Math.floor(SIGNER_COUNT / 2) + 1` to enforce majority consensus.\n   * signer count -> signer limit:\n   *   1 -> 1, 2 -> 2, 3 -> 2, 4 -> 2, 5 -> 3, ...\n   * @hidden\n   */\n  private cliqueSignerLimit(blockNum: bigint) {\n    return Math.floor(this.cliqueActiveSigners(blockNum).length / 2) + 1\n  }\n\n  /**\n   * Checks if signer was recently signed.\n   * Returns true if signed too recently: more than once per {@link CliqueConsensus.cliqueSignerLimit} consecutive blocks.\n   * @param header BlockHeader\n   * @hidden\n   */\n  private cliqueCheckRecentlySigned(header: BlockHeader): boolean {\n    if (header.isGenesis() || header.number === BigInt(1)) {\n      // skip genesis, first block\n      return false\n    }\n    const limit = this.cliqueSignerLimit(header.number)\n    // construct recent block signers list with this block\n    let signers = this._cliqueLatestBlockSigners\n    signers = signers.slice(signers.length < limit ? 0 : 1)\n    if (signers.length > 0 && signers[signers.length - 1][0] !== header.number - BigInt(1)) {\n      // if the last signed block is not one minus the head we are trying to compare\n      // we do not have a complete picture of the state to verify if too recently signed\n      return false\n    }\n    signers.push([header.number, header.cliqueSigner()])\n    const seen = signers.filter((s) => s[1].equals(header.cliqueSigner())).length\n    return seen > 1\n  }\n\n  /**\n   * Remove clique snapshots with blockNumber higher than input.\n   * @param blockNumber - the block number from which we start deleting\n   * @hidden\n   */\n  private async _cliqueDeleteSnapshots(blockNumber: bigint) {\n    // remove blockNumber from clique snapshots\n    // (latest signer states, latest votes, latest block signers)\n    this._cliqueLatestSignerStates = this._cliqueLatestSignerStates.filter(\n      (s) => s[0] <= blockNumber\n    )\n    await this.cliqueUpdateSignerStates()\n\n    this._cliqueLatestVotes = this._cliqueLatestVotes.filter((v) => v[0] <= blockNumber)\n    await this.cliqueUpdateVotes()\n\n    this._cliqueLatestBlockSigners = this._cliqueLatestBlockSigners.filter(\n      (s) => s[0] <= blockNumber\n    )\n    await this.cliqueUpdateLatestBlockSigners()\n  }\n\n  /**\n   * Update snapshot of latest clique block signers.\n   * Used for checking for 'recently signed' error.\n   * Length trimmed to {@link Blockchain.cliqueSignerLimit}.\n   * @param header BlockHeader\n   * @hidden\n   */\n  private async cliqueUpdateLatestBlockSigners(header?: BlockHeader) {\n    if (header) {\n      if (header.isGenesis()) {\n        return\n      }\n      // add this block's signer\n      const signer: CliqueBlockSigner = [header.number, header.cliqueSigner()]\n      this._cliqueLatestBlockSigners.push(signer)\n\n      // trim length to `this.cliqueSignerLimit()`\n      const length = this._cliqueLatestBlockSigners.length\n      const limit = this.cliqueSignerLimit(header.number)\n      if (length > limit) {\n        this._cliqueLatestBlockSigners = this._cliqueLatestBlockSigners.slice(\n          length - limit,\n          length\n        )\n      }\n    }\n\n    // save to db\n    const formatted = this._cliqueLatestBlockSigners.map((b) => [\n      bigIntToBytes(b[0]),\n      b[1].toBytes(),\n    ])\n    await this.blockchain!.db.put(CLIQUE_BLOCK_SIGNERS_SNAPSHOT_KEY, RLP.encode(formatted))\n  }\n\n  /**\n   * Fetches clique signers.\n   * @hidden\n   */\n  private async getCliqueLatestSignerStates(): Promise<CliqueLatestSignerStates> {\n    const signerStates = await this.blockchain!.db.get(CLIQUE_SIGNERS_KEY)\n    if (signerStates === undefined) return []\n    const states = RLP.decode(signerStates as Uint8Array) as [Uint8Array, Uint8Array[]]\n    return states.map((state) => {\n      const blockNum = bytesToBigInt(state[0] as Uint8Array)\n      const addrs = (<any>state[1]).map((bytes: Uint8Array) => new Address(bytes))\n      return [blockNum, addrs]\n    }) as CliqueLatestSignerStates\n  }\n\n  /**\n   * Fetches clique votes.\n   * @hidden\n   */\n  private async getCliqueLatestVotes(): Promise<CliqueLatestVotes> {\n    const signerVotes = await this.blockchain!.db.get(CLIQUE_VOTES_KEY)\n    if (signerVotes === undefined) return []\n    const votes = RLP.decode(signerVotes as Uint8Array) as [\n      Uint8Array,\n      [Uint8Array, Uint8Array, Uint8Array]\n    ]\n    return votes.map((vote) => {\n      const blockNum = bytesToBigInt(vote[0] as Uint8Array)\n      const signer = new Address((vote[1] as any)[0])\n      const beneficiary = new Address((vote[1] as any)[1])\n      const nonce = (vote[1] as any)[2]\n      return [blockNum, [signer, beneficiary, nonce]]\n    }) as CliqueLatestVotes\n  }\n\n  /**\n   * Fetches snapshot of clique signers.\n   * @hidden\n   */\n  private async getCliqueLatestBlockSigners(): Promise<CliqueLatestBlockSigners> {\n    const blockSigners = await this.blockchain!.db.get(CLIQUE_BLOCK_SIGNERS_SNAPSHOT_KEY)\n    if (blockSigners === undefined) return []\n    const signers = RLP.decode(blockSigners as Uint8Array) as [Uint8Array, Uint8Array][]\n    return signers.map((s) => {\n      const blockNum = bytesToBigInt(s[0] as Uint8Array)\n      const signer = new Address(s[1])\n      return [blockNum, signer]\n    }) as CliqueLatestBlockSigners\n  }\n\n  /**\n   * Build clique snapshots.\n   * @param header - the new block header\n   * @hidden\n   */\n  private async _cliqueBuildSnapshots(header: BlockHeader) {\n    if (!header.cliqueIsEpochTransition()) {\n      await this.cliqueUpdateVotes(header)\n    }\n    await this.cliqueUpdateLatestBlockSigners(header)\n  }\n\n  /**\n   * Helper to determine if a signer is in or out of turn for the next block.\n   * @param signer The signer address\n   */\n  async cliqueSignerInTurn(signer: Address, blockNum: bigint): Promise<boolean> {\n    const signers = this.cliqueActiveSigners(blockNum)\n    const signerIndex = signers.findIndex((address) => address.equals(signer))\n    if (signerIndex === -1) {\n      throw new Error('Signer not found')\n    }\n    const { number } = await this.blockchain!.getCanonicalHeadHeader()\n    //eslint-disable-next-line\n    return (number + BigInt(1)) % BigInt(signers.length) === BigInt(signerIndex)\n  }\n}\n","import { ConsensusAlgorithm } from '@ethereumjs/common'\nimport { Ethash } from '@ethereumjs/ethash'\n\nimport type { Blockchain } from '../index.js'\nimport type { Consensus, ConsensusOptions } from '../types.js'\nimport type { Block, BlockHeader } from '@ethereumjs/block'\n\n/**\n * This class encapsulates Ethash-related consensus functionality when used with the Blockchain class.\n */\nexport class EthashConsensus implements Consensus {\n  blockchain: Blockchain | undefined\n  algorithm: ConsensusAlgorithm\n  _ethash: Ethash | undefined\n\n  constructor() {\n    this.algorithm = ConsensusAlgorithm.Ethash\n  }\n\n  async validateConsensus(block: Block): Promise<void> {\n    if (!this._ethash) {\n      throw new Error('blockchain not provided')\n    }\n    const valid = await this._ethash.verifyPOW(block)\n    if (!valid) {\n      throw new Error('invalid POW')\n    }\n  }\n\n  /**\n   * Checks that the block's `difficulty` matches the canonical difficulty of the parent header.\n   * @param header - header of block to be checked\n   */\n  async validateDifficulty(header: BlockHeader) {\n    if (!this.blockchain) {\n      throw new Error('blockchain not provided')\n    }\n    const parentHeader = (await this.blockchain.getBlock(header.parentHash)).header\n    if (header.ethashCanonicalDifficulty(parentHeader) !== header.difficulty) {\n      throw new Error(`invalid difficulty ${header.errorStr()}`)\n    }\n  }\n\n  public async genesisInit(): Promise<void> {}\n  public async setup({ blockchain }: ConsensusOptions): Promise<void> {\n    this.blockchain = blockchain\n    this._ethash = new Ethash(this.blockchain.db as any)\n  }\n  public async newBlock(): Promise<void> {}\n}\n","import { CasperConsensus } from './casper.js'\nimport { CliqueConsensus } from './clique.js'\nimport { EthashConsensus } from './ethash.js'\n\nexport { CasperConsensus, CliqueConsensus, EthashConsensus }\n","import { bytesToUnprefixedHex } from '@ethereumjs/util'\nimport { LRUCache } from 'lru-cache'\n\n/**\n * Simple LRU Cache that allows for keys of type Uint8Array\n * @hidden\n */\nexport class Cache<V> {\n  _cache: LRUCache<string, { value: V }, void>\n\n  constructor(opts: LRUCache.Options<string, { value: V }, void>) {\n    this._cache = new LRUCache(opts)\n  }\n\n  set(key: string | Uint8Array, value: V): void {\n    if (key instanceof Uint8Array) {\n      key = bytesToUnprefixedHex(key)\n    }\n    this._cache.set(key, { value })\n  }\n\n  get(key: string | Uint8Array): V | undefined {\n    if (key instanceof Uint8Array) {\n      key = bytesToUnprefixedHex(key)\n    }\n    const elem = this._cache.get(key)\n    return elem !== undefined ? elem.value : undefined\n  }\n\n  del(key: string | Uint8Array): void {\n    if (key instanceof Uint8Array) {\n      key = bytesToUnprefixedHex(key)\n    }\n    this._cache.delete(key)\n  }\n}\n","import { bigIntToBytes, concatBytes, utf8ToBytes } from '@ethereumjs/util'\n\n// Geth compatible DB keys\n\nconst HEADS_KEY = 'heads'\n\n/**\n * Current canonical head for light sync\n */\nconst HEAD_HEADER_KEY = 'LastHeader'\n\n/**\n * Current canonical head for full sync\n */\nconst HEAD_BLOCK_KEY = 'LastBlock'\n\n/**\n * headerPrefix + number + hash -> header\n */\nconst HEADER_PREFIX = utf8ToBytes('h')\n\n/**\n * headerPrefix + number + hash + tdSuffix -> td\n */\nconst TD_SUFFIX = utf8ToBytes('t')\n\n/**\n * headerPrefix + number + numSuffix -> hash\n */\nconst NUM_SUFFIX = utf8ToBytes('n')\n\n/**\n * blockHashPrefix + hash -> number\n */\nconst BLOCK_HASH_PEFIX = utf8ToBytes('H')\n\n/**\n * bodyPrefix + number + hash -> block body\n */\nconst BODY_PREFIX = utf8ToBytes('b')\n\n// Utility functions\n\n/**\n * Convert bigint to big endian Uint8Array\n */\nconst bytesBE8 = (n: bigint) => bigIntToBytes(BigInt.asUintN(64, n))\n\nconst tdKey = (n: bigint, hash: Uint8Array) =>\n  concatBytes(HEADER_PREFIX, bytesBE8(n), hash, TD_SUFFIX)\n\nconst headerKey = (n: bigint, hash: Uint8Array) => concatBytes(HEADER_PREFIX, bytesBE8(n), hash)\n\nconst bodyKey = (n: bigint, hash: Uint8Array) => concatBytes(BODY_PREFIX, bytesBE8(n), hash)\n\nconst numberToHashKey = (n: bigint) => concatBytes(HEADER_PREFIX, bytesBE8(n), NUM_SUFFIX)\n\nconst hashToNumberKey = (hash: Uint8Array) => concatBytes(BLOCK_HASH_PEFIX, hash)\n\n/**\n * @hidden\n */\nexport {\n  bodyKey,\n  bytesBE8,\n  hashToNumberKey,\n  HEAD_BLOCK_KEY,\n  HEAD_HEADER_KEY,\n  headerKey,\n  HEADS_KEY,\n  numberToHashKey,\n  tdKey,\n}\n","import { Block } from '@ethereumjs/block'\nimport { RLP } from '@ethereumjs/rlp'\nimport { BIGINT_0 } from '@ethereumjs/util'\n\nimport { bytesBE8 } from './constants.js'\nimport { DBOp, DBTarget } from './operation.js'\n\nimport type { BlockHeader } from '@ethereumjs/block'\n\n/*\n * This extra helper file serves as an interface between the blockchain API functionality\n * and the DB operations from `db/operation.ts` and also handles the right encoding of the keys\n */\n\nfunction DBSetTD(TD: bigint, blockNumber: bigint, blockHash: Uint8Array): DBOp {\n  return DBOp.set(DBTarget.TotalDifficulty, RLP.encode(TD), {\n    blockNumber,\n    blockHash,\n  })\n}\n\n/*\n * This method accepts either a BlockHeader or a Block and returns a list of DatabaseOperation instances\n *\n * - A \"Set Header Operation\" is always added\n * - A \"Set Body Operation\" is only added if the body is not empty (it has transactions/uncles) or if the block is the genesis block\n * (if there is a header but no block saved the DB will implicitly assume the block to be empty)\n */\nfunction DBSetBlockOrHeader(blockBody: Block | BlockHeader): DBOp[] {\n  const header: BlockHeader = blockBody instanceof Block ? blockBody.header : blockBody\n  const dbOps = []\n\n  const blockNumber = header.number\n  const blockHash = header.hash()\n\n  const headerValue = header.serialize()\n  dbOps.push(\n    DBOp.set(DBTarget.Header, headerValue, {\n      blockNumber,\n      blockHash,\n    })\n  )\n\n  const isGenesis = header.number === BIGINT_0\n\n  if (\n    isGenesis ||\n    (blockBody instanceof Block &&\n      (blockBody.transactions.length ||\n        (blockBody.withdrawals?.length ?? 0) ||\n        blockBody.uncleHeaders.length ||\n        (blockBody.executionWitness !== null && blockBody.executionWitness !== undefined)))\n  ) {\n    const bodyValue = RLP.encode(blockBody.raw().slice(1))\n    dbOps.push(\n      DBOp.set(DBTarget.Body, bodyValue, {\n        blockNumber,\n        blockHash,\n      })\n    )\n  }\n\n  return dbOps\n}\n\nfunction DBSetHashToNumber(blockHash: Uint8Array, blockNumber: bigint): DBOp {\n  const blockNumber8Byte = bytesBE8(blockNumber)\n  return DBOp.set(DBTarget.HashToNumber, blockNumber8Byte, {\n    blockHash,\n  })\n}\n\nfunction DBSaveLookups(blockHash: Uint8Array, blockNumber: bigint, skipNumIndex?: boolean): DBOp[] {\n  const ops = []\n  if (skipNumIndex !== true) {\n    ops.push(DBOp.set(DBTarget.NumberToHash, blockHash, { blockNumber }))\n  }\n\n  const blockNumber8Bytes = bytesBE8(blockNumber)\n  ops.push(\n    DBOp.set(DBTarget.HashToNumber, blockNumber8Bytes, {\n      blockHash,\n    })\n  )\n  return ops\n}\n\nexport { DBOp, DBSaveLookups, DBSetBlockOrHeader, DBSetHashToNumber, DBSetTD }\n","import { Block, BlockHeader, valuesArrayToHeaderData } from '@ethereumjs/block'\nimport { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  BIGINT_1,\n  KECCAK256_RLP,\n  KECCAK256_RLP_ARRAY,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n  unprefixedHexToBytes,\n} from '@ethereumjs/util'\n\nimport { Cache } from './cache.js'\nimport { DBOp, DBTarget } from './operation.js'\n\nimport type { DatabaseKey } from './operation.js'\nimport type { BlockBodyBytes, BlockBytes, BlockOptions } from '@ethereumjs/block'\nimport type { Common } from '@ethereumjs/common'\nimport type { BatchDBOp, DB, DBObject, DelBatch, PutBatch } from '@ethereumjs/util'\n\n/**\n * @hidden\n */\nexport interface GetOpts {\n  keyEncoding?: string\n  valueEncoding?: string\n  cache?: string\n}\n\nexport type CacheMap = { [key: string]: Cache<Uint8Array> }\n\n/**\n * Abstraction over a DB to facilitate storing/fetching blockchain-related\n * data, such as blocks and headers, indices, and the head block.\n * @hidden\n */\nexport class DBManager {\n  private _cache: CacheMap\n  public readonly common: Common\n  private _db: DB<Uint8Array | string, Uint8Array | string | DBObject>\n\n  constructor(db: DB<Uint8Array | string, Uint8Array | string | DBObject>, common: Common) {\n    this._db = db\n    this.common = common\n    this._cache = {\n      td: new Cache({ max: 1024 }),\n      header: new Cache({ max: 512 }),\n      body: new Cache({ max: 256 }),\n      numberToHash: new Cache({ max: 2048 }),\n      hashToNumber: new Cache({ max: 2048 }),\n    }\n  }\n\n  /**\n   * Fetches iterator heads from the db.\n   */\n  async getHeads(): Promise<{ [key: string]: Uint8Array }> {\n    const heads = (await this.get(DBTarget.Heads)) as DBObject\n    if (heads === undefined) return heads\n    const decodedHeads: { [key: string]: Uint8Array } = {}\n    for (const key of Object.keys(heads)) {\n      // Heads are stored in DB as hex strings since Level converts Uint8Arrays\n      // to nested JSON objects when they are included in a value being stored\n      // in the DB\n      decodedHeads[key] = unprefixedHexToBytes(heads[key] as string)\n    }\n    return decodedHeads\n  }\n\n  /**\n   * Fetches header of the head block.\n   */\n  async getHeadHeader(): Promise<Uint8Array | undefined> {\n    return this.get(DBTarget.HeadHeader)\n  }\n\n  /**\n   * Fetches head block.\n   */\n  async getHeadBlock(): Promise<Uint8Array | undefined> {\n    return this.get(DBTarget.HeadBlock)\n  }\n\n  /**\n   * Fetches a block (header and body) given a block id,\n   * which can be either its hash or its number.\n   */\n  async getBlock(blockId: Uint8Array | bigint | number): Promise<Block | undefined> {\n    if (typeof blockId === 'number' && Number.isInteger(blockId)) {\n      blockId = BigInt(blockId)\n    }\n\n    let number\n    let hash\n    if (blockId === undefined) return undefined\n    if (blockId instanceof Uint8Array) {\n      hash = blockId\n      number = await this.hashToNumber(blockId)\n    } else if (typeof blockId === 'bigint') {\n      number = blockId\n      hash = await this.numberToHash(blockId)\n    } else {\n      throw new Error('Unknown blockId type')\n    }\n\n    if (hash === undefined || number === undefined) return undefined\n    const header = await this.getHeader(hash, number)\n    const body = await this.getBody(hash, number)\n    if (body[0].length === 0 && body[1].length === 0) {\n      // Do extra validations on the header since we are assuming empty transactions and uncles\n      if (!equalsBytes(header.transactionsTrie, KECCAK256_RLP)) {\n        throw new Error('transactionsTrie root should be equal to hash of null')\n      }\n      if (!equalsBytes(header.uncleHash, KECCAK256_RLP_ARRAY)) {\n        throw new Error('uncle hash should be equal to hash of empty array')\n      }\n      // If this block had empty withdrawals push an empty array in body\n      if (header.withdrawalsRoot !== undefined) {\n        // Do extra validations for withdrawal before assuming empty withdrawals\n        if (\n          !equalsBytes(header.withdrawalsRoot, KECCAK256_RLP) &&\n          (body.length < 3 || body[2]?.length === 0)\n        ) {\n          throw new Error('withdrawals root shoot be equal to hash of null when no withdrawals')\n        }\n        if (body.length <= 3) body.push([])\n      }\n    }\n\n    const blockData = [header.raw(), ...body] as BlockBytes\n    const opts: BlockOptions = { common: this.common }\n    if (number === BIGINT_0) {\n      opts.setHardfork = await this.getTotalDifficulty(hash, BIGINT_0)\n    } else {\n      opts.setHardfork = await this.getTotalDifficulty(header.parentHash, number - BIGINT_1)\n    }\n    return Block.fromValuesArray(blockData, opts)\n  }\n\n  /**\n   * Fetches body of a block given its hash and number.\n   */\n  async getBody(blockHash: Uint8Array, blockNumber: bigint): Promise<BlockBodyBytes> {\n    const body = await this.get(DBTarget.Body, { blockHash, blockNumber })\n    if (body === undefined) {\n      return [[], []]\n    }\n    return RLP.decode(body) as BlockBodyBytes\n  }\n\n  /**\n   * Fetches header of a block given its hash and number.\n   */\n  async getHeader(blockHash: Uint8Array, blockNumber: bigint) {\n    const encodedHeader = await this.get(DBTarget.Header, { blockHash, blockNumber })\n    const headerValues = RLP.decode(encodedHeader)\n\n    const opts: BlockOptions = { common: this.common }\n    if (blockNumber === BIGINT_0) {\n      opts.setHardfork = await this.getTotalDifficulty(blockHash, BIGINT_0)\n    } else {\n      // Lets fetch the parent hash but not by number since this block might not\n      // be in canonical chain\n      const headerData = valuesArrayToHeaderData(headerValues as Uint8Array[])\n      const parentHash = headerData.parentHash as Uint8Array\n      opts.setHardfork = await this.getTotalDifficulty(parentHash, blockNumber - BIGINT_1)\n    }\n    return BlockHeader.fromValuesArray(headerValues as Uint8Array[], opts)\n  }\n\n  /**\n   * Fetches total difficulty for a block given its hash and number.\n   */\n  async getTotalDifficulty(blockHash: Uint8Array, blockNumber: bigint): Promise<bigint> {\n    const td = await this.get(DBTarget.TotalDifficulty, { blockHash, blockNumber })\n    return bytesToBigInt(RLP.decode(td) as Uint8Array)\n  }\n\n  /**\n   * Performs a block hash to block number lookup.\n   */\n  async hashToNumber(blockHash: Uint8Array): Promise<bigint | undefined> {\n    const value = await this.get(DBTarget.HashToNumber, { blockHash })\n    if (value === undefined) {\n      throw new Error(`value for ${bytesToHex(blockHash)} not found in DB`)\n    }\n    return value !== undefined ? bytesToBigInt(value) : undefined\n  }\n\n  /**\n   * Performs a block number to block hash lookup.\n   */\n  async numberToHash(blockNumber: bigint): Promise<Uint8Array | undefined> {\n    const value = await this.get(DBTarget.NumberToHash, { blockNumber })\n    return value\n  }\n\n  /**\n   * Fetches a key from the db. If `opts.cache` is specified\n   * it first tries to load from cache, and on cache miss will\n   * try to put the fetched item on cache afterwards.\n   */\n  async get(dbOperationTarget: DBTarget, key?: DatabaseKey): Promise<any> {\n    const dbGetOperation = DBOp.get(dbOperationTarget, key)\n\n    const cacheString = dbGetOperation.cacheString\n    const dbKey = dbGetOperation.baseDBOp.key\n\n    if (cacheString !== undefined) {\n      if (this._cache[cacheString] === undefined) {\n        throw new Error(`Invalid cache: ${cacheString}`)\n      }\n      let value = this._cache[cacheString].get(dbKey)\n      if (value === undefined) {\n        value = (await this._db.get(dbKey, {\n          keyEncoding: dbGetOperation.baseDBOp.keyEncoding,\n          valueEncoding: dbGetOperation.baseDBOp.valueEncoding,\n        })) as Uint8Array | undefined\n        if (value !== undefined) {\n          this._cache[cacheString].set(dbKey, value)\n        }\n      }\n\n      return value\n    }\n    return this._db.get(dbKey, {\n      keyEncoding: dbGetOperation.baseDBOp.keyEncoding,\n      valueEncoding: dbGetOperation.baseDBOp.valueEncoding,\n    })\n  }\n\n  /**\n   * Performs a batch operation on db.\n   */\n  async batch(ops: DBOp[]) {\n    const convertedOps: BatchDBOp[] = ops.map((op) => {\n      const type =\n        op.baseDBOp.type !== undefined\n          ? op.baseDBOp.type\n          : op.baseDBOp.value !== undefined\n          ? 'put'\n          : 'del'\n      const convertedOp = {\n        key: op.baseDBOp.key,\n        value: op.baseDBOp.value,\n        type,\n        opts: {\n          keyEncoding: op.baseDBOp.keyEncoding,\n          valueEncoding: op.baseDBOp.valueEncoding,\n        },\n      }\n      if (type === 'put') return convertedOp as PutBatch\n      else return convertedOp as DelBatch\n    })\n    // update the current cache for each operation\n    ops.map((op) => op.updateCache(this._cache))\n    return this._db.batch(convertedOps)\n  }\n}\n","import { KeyEncoding, ValueEncoding } from '@ethereumjs/util'\n\nimport {\n  HEADS_KEY,\n  HEAD_BLOCK_KEY,\n  HEAD_HEADER_KEY,\n  bodyKey,\n  hashToNumberKey,\n  headerKey,\n  numberToHashKey,\n  tdKey,\n} from './constants.js'\n\nimport type { CacheMap } from './manager.js'\n\nexport enum DBTarget {\n  Heads,\n  HeadHeader,\n  HeadBlock,\n  HashToNumber,\n  NumberToHash,\n  TotalDifficulty,\n  Body,\n  Header,\n  CliqueSignerStates,\n  CliqueVotes,\n  CliqueBlockSigners,\n}\n\n/**\n * DBOpData is a type which has the purpose of holding the actual data of the Database Operation.\n * @hidden\n */\nexport interface DBOpData {\n  type?: 'put' | 'del'\n  key: Uint8Array | string\n  keyEncoding: KeyEncoding\n  valueEncoding?: ValueEncoding\n  value?: Uint8Array | object\n}\n\n// a Database Key is identified by a block hash, a block number, or both\nexport type DatabaseKey = {\n  blockNumber?: bigint\n  blockHash?: Uint8Array\n}\n\n/**\n * The DBOp class aids creating database operations which is used by `level` using a more high-level interface\n */\nexport class DBOp {\n  public operationTarget: DBTarget\n  public baseDBOp: DBOpData\n  public cacheString: string | undefined\n\n  private constructor(operationTarget: DBTarget, key?: DatabaseKey) {\n    this.operationTarget = operationTarget\n\n    this.baseDBOp = {\n      key: '',\n      keyEncoding: KeyEncoding.Bytes,\n      valueEncoding: ValueEncoding.Bytes,\n    }\n\n    switch (operationTarget) {\n      case DBTarget.Heads: {\n        this.baseDBOp.key = HEADS_KEY\n        this.baseDBOp.valueEncoding = ValueEncoding.JSON\n        break\n      }\n      case DBTarget.HeadHeader: {\n        this.baseDBOp.key = HEAD_HEADER_KEY\n        this.baseDBOp.keyEncoding = KeyEncoding.String\n        break\n      }\n      case DBTarget.HeadBlock: {\n        this.baseDBOp.key = HEAD_BLOCK_KEY\n        this.baseDBOp.keyEncoding = KeyEncoding.String\n        break\n      }\n      case DBTarget.HashToNumber: {\n        this.baseDBOp.key = hashToNumberKey(key!.blockHash!)\n        this.cacheString = 'hashToNumber'\n        break\n      }\n      case DBTarget.NumberToHash: {\n        this.baseDBOp.key = numberToHashKey(key!.blockNumber!)\n        this.cacheString = 'numberToHash'\n        break\n      }\n      case DBTarget.TotalDifficulty: {\n        this.baseDBOp.key = tdKey(key!.blockNumber!, key!.blockHash!)\n        this.cacheString = 'td'\n        break\n      }\n      case DBTarget.Body: {\n        this.baseDBOp.key = bodyKey(key!.blockNumber!, key!.blockHash!)\n        this.cacheString = 'body'\n        break\n      }\n      case DBTarget.Header: {\n        this.baseDBOp.key = headerKey(key!.blockNumber!, key!.blockHash!)\n        this.cacheString = 'header'\n        break\n      }\n    }\n  }\n\n  public static get(operationTarget: DBTarget, key?: DatabaseKey): DBOp {\n    return new DBOp(operationTarget, key)\n  }\n\n  // set operation: note: value/key is not in default order\n  public static set(\n    operationTarget: DBTarget,\n    value: Uint8Array | object,\n    key?: DatabaseKey\n  ): DBOp {\n    const dbOperation = new DBOp(operationTarget, key)\n    dbOperation.baseDBOp.value = value\n    dbOperation.baseDBOp.type = 'put'\n\n    if (operationTarget === DBTarget.Heads) {\n      dbOperation.baseDBOp.valueEncoding = ValueEncoding.JSON\n    } else {\n      dbOperation.baseDBOp.valueEncoding = ValueEncoding.Bytes\n    }\n\n    return dbOperation\n  }\n\n  public static del(operationTarget: DBTarget, key?: DatabaseKey): DBOp {\n    const dbOperation = new DBOp(operationTarget, key)\n    dbOperation.baseDBOp.type = 'del'\n    return dbOperation\n  }\n\n  public updateCache(cacheMap: CacheMap) {\n    if (this.cacheString !== undefined && cacheMap[this.cacheString] !== undefined) {\n      if (this.baseDBOp.type === 'put') {\n        this.baseDBOp.value instanceof Uint8Array &&\n          cacheMap[this.cacheString].set(this.baseDBOp.key, this.baseDBOp.value)\n      } else if (this.baseDBOp.type === 'del') {\n        cacheMap[this.cacheString].del(this.baseDBOp.key)\n      } else {\n        throw new Error('unsupported db operation on cache')\n      }\n    }\n  }\n}\n","export { Blockchain } from './blockchain.js'\nexport { CasperConsensus, CliqueConsensus, EthashConsensus } from './consensus/index.js'\nexport {\n  DBOp,\n  DBSaveLookups,\n  DBSetBlockOrHeader,\n  DBSetHashToNumber,\n  DBSetTD,\n} from './db/helpers.js'\nexport * from './types.js'\n","import { Block, BlockHeader } from '@ethereumjs/block'\nimport { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  KeyEncoding,\n  TWO_POW256,\n  ValueEncoding,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToHex,\n  concatBytes,\n  equalsBytes,\n  hexToBytes,\n  setLengthLeft,\n  zeros,\n} from '@ethereumjs/util'\nimport { keccak256, keccak512 } from 'ethereum-cryptography/keccak.js'\n\nimport {\n  bytesReverse,\n  fnv,\n  fnvBytes,\n  getCacheSize,\n  getEpoc,\n  getFullSize,\n  getSeed,\n  params,\n} from './util.js'\n\nimport type { BlockData, HeaderData } from '@ethereumjs/block'\nimport type { DB, DBObject } from '@ethereumjs/util'\n\nfunction xor(a: Uint8Array, b: Uint8Array) {\n  const len = Math.max(a.length, b.length)\n  const res = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    res[i] = a[i] ^ b[i]\n  }\n  return res\n}\n\nexport type Solution = {\n  mixHash: Uint8Array\n  nonce: Uint8Array\n}\n\nexport class Miner {\n  private blockHeader: BlockHeader\n  private block?: Block\n  private ethash: Ethash\n\n  public solution?: Solution\n\n  private currentNonce: bigint\n  private headerHash?: Uint8Array\n  private stopMining: boolean\n\n  /**\n   * Create a Miner object\n   * @param mineObject - The object to mine on, either a `BlockHeader` or a `Block` object\n   * @param ethash - Ethash object to use for mining\n   */\n\n  constructor(mineObject: BlockHeader | Block, ethash: Ethash) {\n    if (mineObject instanceof BlockHeader) {\n      this.blockHeader = mineObject\n    } else if (mineObject instanceof Block) {\n      this.block = mineObject\n      this.blockHeader = mineObject.header\n    } else {\n      throw new Error('unsupported mineObject')\n    }\n    this.currentNonce = BIGINT_0\n    this.ethash = ethash\n    this.stopMining = false\n  }\n\n  /**\n   * Stop the miner on the next iteration\n   */\n  stop() {\n    this.stopMining = true\n  }\n\n  /**\n   * Iterate `iterations` time over nonces, returns a `BlockHeader` or `Block` if a solution is found, `undefined` otherwise\n   * @param iterations - Number of iterations to iterate over. If `-1` is passed, the loop runs until a solution is found\n   * @returns - `undefined` if no solution was found within the iterations, or a `BlockHeader` or `Block`\n   *           with valid PoW based upon what was passed in the constructor\n   */\n  async mine(iterations: number = 0): Promise<undefined | BlockHeader | Block> {\n    const solution = await this.iterate(iterations)\n\n    if (solution) {\n      if (this.block) {\n        const data = <BlockData>this.block.toJSON()\n        data.header!.mixHash = solution.mixHash\n        data.header!.nonce = solution.nonce\n        return Block.fromBlockData(data, { common: this.block.common })\n      } else {\n        const data = <HeaderData>this.blockHeader.toJSON()\n        data.mixHash = solution.mixHash\n        data.nonce = solution.nonce\n        return BlockHeader.fromHeaderData(data, { common: this.blockHeader.common })\n      }\n    }\n  }\n\n  /**\n   * Iterate `iterations` times over nonces to find a valid PoW. Caches solution if one is found\n   * @param iterations - Number of iterations to iterate over. If `-1` is passed, the loop runs until a solution is found\n   * @returns - `undefined` if no solution was found, or otherwise a `Solution` object\n   */\n  async iterate(iterations: number = 0): Promise<undefined | Solution> {\n    if (this.solution) {\n      return this.solution\n    }\n    if (!this.headerHash) {\n      this.headerHash = this.ethash.headerHash(this.blockHeader.raw())\n    }\n    const headerHash = this.headerHash\n    const { number, difficulty } = this.blockHeader\n\n    await this.ethash.loadEpoc(number)\n\n    while (iterations !== 0 && !this.stopMining) {\n      // The promise/setTimeout construction is necessary to ensure we jump out of the event loop\n      // Without this, for high-difficulty blocks JS never jumps out of the Promise\n      const solution: Solution | null = await new Promise((resolve) => {\n        setTimeout(() => {\n          const nonce = setLengthLeft(bigIntToBytes(this.currentNonce), 8)\n\n          const a = this.ethash.run(headerHash, nonce)\n          const result = bytesToBigInt(a.hash)\n\n          if (TWO_POW256 / difficulty > result) {\n            const solution: Solution = {\n              mixHash: a.mix,\n              nonce,\n            }\n            this.solution = solution\n            resolve(solution)\n            return\n          }\n\n          this.currentNonce++\n          iterations--\n\n          resolve(null)\n        }, 0)\n      })\n\n      if (solution !== null) {\n        return solution\n      }\n    }\n  }\n}\n\nexport class Ethash {\n  dbOpts: Object\n  cacheDB?: DB<number, DBObject>\n  cache: Uint8Array[]\n  epoc?: number\n  fullSize?: number\n  cacheSize?: number\n  seed?: Uint8Array\n\n  constructor(cacheDB?: DB<number, DBObject>) {\n    this.dbOpts = {\n      valueEncoding: 'json',\n    }\n    this.cacheDB = cacheDB\n    this.cache = []\n  }\n\n  mkcache(cacheSize: number, seed: Uint8Array) {\n    const n = Math.floor(cacheSize / params.HASH_BYTES)\n    const o = [keccak512(seed)]\n\n    let i\n    for (i = 1; i < n; i++) {\n      o.push(keccak512(o[o.length - 1]))\n    }\n\n    for (let _ = 0; _ < params.CACHE_ROUNDS; _++) {\n      for (i = 0; i < n; i++) {\n        const v = new DataView(o[i].buffer).getUint32(0, true) % n\n        o[i] = keccak512(xor(o[(i - 1 + n) % n], o[v]))\n      }\n    }\n\n    this.cache = o\n    return this.cache\n  }\n\n  calcDatasetItem(i: number): Uint8Array {\n    const n = this.cache.length\n    const r = Math.floor(params.HASH_BYTES / params.WORD_BYTES)\n    let mix = new Uint8Array(this.cache[i % n])\n    const mixView = new DataView(mix.buffer)\n    mixView.setUint32(0, mixView.getUint32(0, true) ^ i, true)\n    mix = keccak512(mix)\n    for (let j = 0; j < params.DATASET_PARENTS; j++) {\n      const cacheIndex = fnv(i ^ j, new DataView(mix.buffer).getUint32((j % r) * 4, true))\n      mix = fnvBytes(mix, this.cache[cacheIndex % n])\n    }\n    return keccak512(mix)\n  }\n\n  run(val: Uint8Array, nonce: Uint8Array, fullSize?: number) {\n    if (fullSize === undefined) {\n      if (this.fullSize === undefined) {\n        throw new Error('fullSize needed')\n      } else {\n        fullSize = this.fullSize\n      }\n    }\n    const n = Math.floor(fullSize / params.HASH_BYTES)\n    const w = Math.floor(params.MIX_BYTES / params.WORD_BYTES)\n    const s = keccak512(concatBytes(val, bytesReverse(nonce)))\n    const mixhashes = Math.floor(params.MIX_BYTES / params.HASH_BYTES)\n    let mix = concatBytes(...Array(mixhashes).fill(s))\n\n    let i\n    for (i = 0; i < params.ACCESSES; i++) {\n      const p =\n        (fnv(\n          i ^ new DataView(s.buffer).getUint32(0, true),\n          new DataView(mix.buffer).getUint32((i % w) * 4, true)\n        ) %\n          Math.floor(n / mixhashes)) *\n        mixhashes\n      const newdata: Uint8Array[] = []\n      for (let j = 0; j < mixhashes; j++) {\n        newdata.push(this.calcDatasetItem(p + j))\n      }\n      mix = fnvBytes(mix, concatBytes(...newdata))\n    }\n\n    const cmix = new Uint8Array(mix.length / 4)\n    const cmixView = new DataView(cmix.buffer)\n    const mixView = new DataView(mix.buffer)\n    for (i = 0; i < mix.length / 4; i = i + 4) {\n      const a = fnv(mixView.getUint32(i * 4, true), mixView.getUint32((i + 1) * 4, true))\n      const b = fnv(a, mixView.getUint32((i + 2) * 4, true))\n      const c = fnv(b, mixView.getUint32((i + 3) * 4, true))\n      cmixView.setUint32(i, c, true)\n    }\n\n    return {\n      mix: cmix,\n      hash: keccak256(concatBytes(s, cmix)),\n    }\n  }\n\n  cacheHash() {\n    // Concatenate all the cache bytes together\n    // We can't use `concatBytes` because calling `concatBytes(...this.cache)` results\n    // in a `Max call stack size exceeded` error due to the spread operator pushing all\n    // of the array elements onto the stack and the ethash cache can be quite large\n    const length = this.cache.reduce((a, arr) => a + arr.length, 0)\n    const result = new Uint8Array(length)\n    for (let i = 0, pad = 0; i < this.cache.length; i++) {\n      const arr = this.cache[i]\n      result.set(arr, pad)\n      pad += arr.length\n    }\n    return keccak256(result)\n  }\n\n  headerHash(rawHeader: Uint8Array[]) {\n    return keccak256(RLP.encode(rawHeader.slice(0, -2)))\n  }\n\n  /**\n   * Loads the seed and cache given a block number.\n   */\n  async loadEpoc(number: bigint) {\n    const epoc = getEpoc(number)\n\n    if (this.epoc === epoc) {\n      return\n    }\n\n    this.epoc = epoc\n\n    if (!this.cacheDB) {\n      throw new Error('cacheDB needed')\n    }\n\n    // gives the seed the first epoc found\n    const findLastSeed = async (epoc: number): Promise<[Uint8Array, number]> => {\n      if (epoc === 0) {\n        return [zeros(32), 0]\n      }\n\n      const dbData = await this.cacheDB!.get(epoc, {\n        keyEncoding: KeyEncoding.Number,\n        valueEncoding: ValueEncoding.JSON,\n      })\n      if (dbData !== undefined) {\n        const data = {\n          cache: (dbData.cache as string[]).map((el: string) => hexToBytes(el)),\n          fullSize: dbData.fullSize,\n          cacheSize: dbData.cacheSize,\n          seed: hexToBytes(dbData.seed as string),\n        }\n        return [data.seed, epoc]\n      } else {\n        return findLastSeed(epoc - 1)\n      }\n    }\n\n    let data\n    const dbData = await this.cacheDB!.get(epoc, {\n      keyEncoding: KeyEncoding.Number,\n      valueEncoding: ValueEncoding.JSON,\n    })\n    if (dbData !== undefined) {\n      data = {\n        cache: (dbData.cache as string[]).map((el: string) => hexToBytes(el)),\n        fullSize: dbData.fullSize,\n        cacheSize: dbData.cacheSize,\n        seed: hexToBytes(dbData.seed as string),\n      }\n    }\n    if (!data) {\n      this.cacheSize = await getCacheSize(epoc)\n      this.fullSize = await getFullSize(epoc)\n\n      const [seed, foundEpoc] = await findLastSeed(epoc)\n      this.seed = getSeed(seed, foundEpoc, epoc)\n      const cache = this.mkcache(this.cacheSize!, this.seed!)\n      // store the generated cache\n      await this.cacheDB!.put(\n        epoc,\n        {\n          cacheSize: this.cacheSize,\n          fullSize: this.fullSize,\n          seed: bytesToHex(this.seed),\n          cache: cache.map((el) => bytesToHex(el)),\n        },\n        {\n          keyEncoding: KeyEncoding.Number,\n          valueEncoding: ValueEncoding.JSON,\n        }\n      )\n    } else {\n      this.cache = data.cache.map((a: Uint8Array) => {\n        return Uint8Array.from(a)\n      })\n      this.cacheSize = data.cacheSize as number\n      this.fullSize = data.fullSize as number\n      this.seed = Uint8Array.from(data.seed)\n    }\n  }\n\n  /**\n   * Returns a `Miner` object\n   * To mine a `BlockHeader` or `Block`, use the one-liner `await ethash.getMiner(block).mine(-1)`\n   * @param mineObject - Object to mine on, either a `BlockHeader` or a `Block`\n   * @returns - A miner object\n   */\n  getMiner(mineObject: BlockHeader | Block): Miner {\n    return new Miner(mineObject, this)\n  }\n\n  async _verifyPOW(header: BlockHeader) {\n    const headerHash = this.headerHash(header.raw())\n    const { number, difficulty, mixHash, nonce } = header\n\n    await this.loadEpoc(number)\n    const a = this.run(headerHash, nonce)\n    const result = bytesToBigInt(a.hash)\n    return equalsBytes(a.mix, mixHash) && TWO_POW256 / difficulty > result\n  }\n\n  async verifyPOW(block: Block) {\n    // don't validate genesis blocks\n    if (block.header.isGenesis()) {\n      return true\n    }\n\n    const valid = await this._verifyPOW(block.header)\n    if (!valid) {\n      return false\n    }\n\n    for (let index = 0; index < block.uncleHeaders.length; index++) {\n      const valid = await this._verifyPOW(block.uncleHeaders[index])\n      if (!valid) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n","import { isProbablyPrime } from 'bigint-crypto-utils'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nexport const params = {\n  DATASET_BYTES_INIT: 1073741824, // 2^30\n  DATASET_BYTES_GROWTH: 8388608, // 2 ^ 23\n  CACHE_BYTES_INIT: 16777216, // 2**24 number of bytes in dataset at genesis\n  CACHE_BYTES_GROWTH: 131072, // 2**17 cache growth per epoch\n  CACHE_MULTIPLIER: 1024, // Size of the DAG relative to the cache\n  EPOCH_LENGTH: 30000, // blocks per epoch\n  MIX_BYTES: 128, // width of mix\n  HASH_BYTES: 64, // hash length in bytes\n  DATASET_PARENTS: 256, // number of parents of each dataset element\n  CACHE_ROUNDS: 3, // number of rounds in cache production\n  ACCESSES: 64,\n  WORD_BYTES: 4,\n}\n\nexport async function getCacheSize(epoc: number) {\n  const { CACHE_BYTES_INIT, CACHE_BYTES_GROWTH, HASH_BYTES } = params\n  let sz = CACHE_BYTES_INIT + CACHE_BYTES_GROWTH * epoc\n  sz -= HASH_BYTES\n  while (!(await isProbablyPrime(sz / HASH_BYTES, undefined, true))) {\n    sz -= 2 * HASH_BYTES\n  }\n  return sz\n}\n\nexport async function getFullSize(epoc: number) {\n  const { DATASET_BYTES_INIT, DATASET_BYTES_GROWTH, MIX_BYTES } = params\n  let sz = DATASET_BYTES_INIT + DATASET_BYTES_GROWTH * epoc\n  sz -= MIX_BYTES\n  while (!(await isProbablyPrime(sz / MIX_BYTES, undefined, true))) {\n    sz -= 2 * MIX_BYTES\n  }\n  return sz\n}\n\nexport function getEpoc(blockNumber: bigint) {\n  return Number(blockNumber / BigInt(params.EPOCH_LENGTH))\n}\n\n/**\n * Generates a seed give the end epoc and optional the beginning epoc and the\n * beginning epoc seed\n * @method getSeed\n * @param seed Uint8Array\n * @param begin Number\n * @param end Number\n */\nexport function getSeed(seed: Uint8Array, begin: number, end: number) {\n  for (let i = begin; i < end; i++) {\n    seed = keccak256(seed)\n  }\n  return seed\n}\n\nexport function fnv(x: number, y: number) {\n  return ((((x * 0x01000000) | 0) + ((x * 0x193) | 0)) ^ y) >>> 0\n}\n\nexport function fnvBytes(a: Uint8Array, b: Uint8Array) {\n  const r = new Uint8Array(a.length)\n  const rView = new DataView(r.buffer)\n  for (let i = 0; i < a.length; i = i + 4) {\n    rView.setUint32(\n      i,\n      fnv(new DataView(a.buffer).getUint32(i, true), new DataView(b.buffer).getUint32(i, true)),\n      true\n    )\n  }\n  return r\n}\n\nexport function bytesReverse(a: Uint8Array) {\n  const length = a.length\n  const b = new Uint8Array(length)\n  for (let i = 0; i < length; i++) {\n    b[i] = a[length - i - 1]\n  }\n  return b\n}\n",null,"export function fromBuffer (buf: Uint8Array | Buffer): bigint {\n  let ret = 0n\n  for (const i of buf.values()) {\n    const bi = BigInt(i)\n    ret = (ret << 8n) + bi\n  }\n  return ret\n}\n","if (!IS_BROWSER) var crypto = await import('crypto') // eslint-disable-line no-var\n\n/**\n * Secure random bytes for both node and browsers. Node version uses crypto.randomBytes() and browser one self.crypto.getRandomValues()\n *\n * @param byteLength - The desired number of random bytes\n * @param forceLength - Set to true if you want to force the output to have a bit length of 8*byteLength. It basically forces the msb to be 1\n *\n * @throws {@link RangeError} if byteLength < 1\n *\n * @returns A promise that resolves to a UInt8Array/Buffer (Browser/Node.js) filled with cryptographically secure random bytes\n */\nexport function randBytes (byteLength: number, forceLength = false): Promise<Uint8Array|Buffer> { // eslint-disable-line\n  if (byteLength < 1) throw new RangeError('byteLength MUST be > 0')\n\n  return new Promise(function (resolve, reject) {\n    if (!IS_BROWSER) {\n      crypto.randomBytes(byteLength, function (err, buf: Buffer) {\n        if (err !== null) reject(err)\n        // If fixed length is required we put the first bit to 1 -> to get the necessary bitLength\n        if (forceLength) buf[0] = buf[0] | 128\n        resolve(buf)\n      })\n    } else { // browser\n      const buf = new Uint8Array(byteLength)\n      // the maximum number of bytes of entropy available via self.crypto.getRandomValues is 65536\n      if (byteLength <= 65536) {\n        self.crypto.getRandomValues(buf)\n      } else {\n        for (let i = 0; i < Math.ceil(byteLength / 65536); i++) {\n          const begin = i * 65536\n          const end = ((begin + 65535) < byteLength) ? begin + 65535 : byteLength - 1\n          self.crypto.getRandomValues(buf.subarray(begin, end))\n        }\n      }\n      // If fixed length is required we put the first bit to 1 -> to get the necessary bitLength\n      if (forceLength) buf[0] = buf[0] | 128\n      resolve(buf)\n    }\n  })\n}\n\n/**\n * Secure random bytes for both node and browsers. Node version uses crypto.randomFill() and browser one self.crypto.getRandomValues()\n * This is the synchronous version, consider using the asynchronous one for improved efficiency.\n *\n * @param byteLength - The desired number of random bytes\n * @param forceLength - Set to true if you want to force the output to have a bit length of 8*byteLength. It basically forces the msb to be 1\n *\n * @throws {@link RangeError} if byteLength < 1\n *\n * @returns A UInt8Array/Buffer (Browser/Node.js) filled with cryptographically secure random bytes\n */\nexport function randBytesSync (byteLength: number, forceLength: boolean = false): Uint8Array | Buffer {\n  if (byteLength < 1) throw new RangeError('byteLength MUST be > 0')\n\n  /* eslint-disable no-lone-blocks */\n  if (!IS_BROWSER) { // node\n    const buf = crypto.randomBytes(byteLength)\n    // If fixed length is required we put the first bit to 1 -> to get the necessary bitLength\n    if (forceLength) buf[0] = buf[0] | 128\n    return buf\n  } else { // browser\n    const buf = new Uint8Array(byteLength)\n    // the maximum number of bytes of entropy available via self.crypto.getRandomValues is 65536\n    if (byteLength <= 65536) {\n      self.crypto.getRandomValues(buf)\n    } else {\n      for (let i = 0; i < Math.ceil(byteLength / 65536); i++) {\n        const begin = i * 65536\n        const end = ((begin + 65535) < byteLength) ? begin + 65535 : byteLength - 1\n        self.crypto.getRandomValues(buf.subarray(begin, end))\n      }\n    }\n    // If fixed length is required we put the first bit to 1 -> to get the necessary bitLength\n    if (forceLength) buf[0] = buf[0] | 128\n    return buf\n  }\n  /* eslint-enable no-lone-blocks */\n}\n","import { randBytes, randBytesSync } from './randBytes.js'\n\n/**\n * Secure random bits for both node and browsers. Node version uses crypto.randomFill() and browser one self.crypto.getRandomValues()\n *\n * @param bitLength - The desired number of random bits\n * @param forceLength - Set to true if you want to force the output to have a specific bit length. It basically forces the msb to be 1\n *\n * @throws {@link RangeError} if bitLength < 1\n *\n * @returns A Promise that resolves to a UInt8Array/Buffer (Browser/Node.js) filled with cryptographically secure random bits\n */\nexport function randBits (bitLength: number, forceLength: boolean = false): Promise<Uint8Array|Buffer> { // eslint-disable-line\n  if (bitLength < 1) throw new RangeError('bitLength MUST be > 0')\n\n  const byteLength = Math.ceil(bitLength / 8)\n  const bitLengthMod8 = bitLength % 8\n\n  return new Promise((resolve, reject) => {\n    randBytes(byteLength, false).then(function (rndBytes) { // eslint-disable-line\n      if (bitLengthMod8 !== 0) {\n        // Fill with 0's the extra bits\n        rndBytes[0] = rndBytes[0] & (2 ** bitLengthMod8 - 1)\n      }\n      if (forceLength) {\n        const mask = (bitLengthMod8 !== 0) ? 2 ** (bitLengthMod8 - 1) : 128\n        rndBytes[0] = rndBytes[0] | mask\n      }\n      resolve(rndBytes)\n    })\n  })\n}\n\n/**\n * Secure random bits for both node and browsers. Node version uses crypto.randomFill() and browser one self.crypto.getRandomValues()\n * @param bitLength - The desired number of random bits\n * @param forceLength - Set to true if you want to force the output to have a specific bit length. It basically forces the msb to be 1\n *\n * @throws {@link RangeError} if bitLength < 1\n *\n * @returns A Uint8Array/Buffer (Browser/Node.js) filled with cryptographically secure random bits\n */\nexport function randBitsSync (bitLength: number, forceLength: boolean = false): Uint8Array | Buffer {\n  if (bitLength < 1) throw new RangeError('bitLength MUST be > 0')\n\n  const byteLength = Math.ceil(bitLength / 8)\n  const rndBytes = randBytesSync(byteLength, false)\n  const bitLengthMod8 = bitLength % 8\n  if (bitLengthMod8 !== 0) {\n    // Fill with 0's the extra bits\n    rndBytes[0] = rndBytes[0] & (2 ** bitLengthMod8 - 1)\n  }\n  if (forceLength) {\n    const mask = (bitLengthMod8 !== 0) ? 2 ** (bitLengthMod8 - 1) : 128\n    rndBytes[0] = rndBytes[0] | mask\n  }\n  return rndBytes\n}\n","import { bitLength } from 'bigint-mod-arith'\nimport { fromBuffer } from './fromBuffer.js'\nimport { randBitsSync } from './randBits.js'\n\n/**\n * Returns a cryptographically secure random integer between [min,max].\n * @param max Returned value will be <= max\n * @param min Returned value will be >= min\n *\n * @throws {@link RangeError} if max <= min\n *\n * @returns A cryptographically secure random bigint between [min,max]\n */\nexport function randBetween (max: bigint, min: bigint = 1n): bigint {\n  if (max <= min) throw new RangeError('Arguments MUST be: max > min')\n  const interval = max - min\n  const bitLen = bitLength(interval)\n  let rnd\n  do {\n    const buf = randBitsSync(bitLen)\n    rnd = fromBuffer(buf)\n  } while (rnd > interval)\n  return rnd + min\n}\n","export function _workerUrl (workerCode: string): string {\n  workerCode = `(() => {${workerCode}})()` // encapsulate IIFE\n  const _blob = new Blob([workerCode], { type: 'text/javascript' })\n  return window.URL.createObjectURL(_blob)\n}\n\nlet _useWorkers = false // The following is just to check whether we can use workers\n/* eslint-disable no-lone-blocks */\nif (!IS_BROWSER) { // Node.js\n  try {\n    await import('worker_threads')\n    _useWorkers = true\n  } /* c8 ignore start */ catch (e) {\n    console.log(`[bigint-crypto-utils] WARNING:\nThis node version doesn't support worker_threads. You should enable them in order to greatly speedup the generation of big prime numbers.\n  · With Node >=11 it is enabled by default (consider upgrading).\n  · With Node 10, starting with 10.5.0, you can enable worker_threads at runtime executing node --experimental-worker `)\n  }\n  /* c8 ignore stop */\n} else { // Native JS\n  if (self.Worker !== undefined) _useWorkers = true\n}\n\nexport { _useWorkers }\n\nexport interface WorkerToMainMsg {\n  _bcu: {\n    isPrime: boolean\n    value: bigint\n    id: number\n  }\n}\n\nexport interface MainToWorkerMsg {\n  _bcu: {\n    rnd: bigint\n    iterations: number\n    id: number\n  }\n}\n","import { eGcd, modInv, modPow, toZn, bitLength } from 'bigint-mod-arith'\nimport { fromBuffer } from './fromBuffer.js'\nimport { randBetween } from './randBetween.js'\nimport { randBitsSync } from './randBits.js'\nimport { randBytesSync } from './randBytes.js'\nimport { _useWorkers, _workerUrl, WorkerToMainMsg, MainToWorkerMsg } from './workerUtils.js'\n\n/**\n * The test first tries if any of the first 250 small primes are a factor of the input number and then passes several\n * iterations of Miller-Rabin Probabilistic Primality Test (FIPS 186-4 C.3.1)\n *\n * @param w - A positive integer to be tested for primality\n * @param iterations - The number of iterations for the primality test. The value shall be consistent with Table C.1, C.2 or C.3 of FIPS 186-4\n * @param disableWorkers - Disable the use of workers for the primality test\n *\n * @throws {@link RangeError} if w<0\n *\n * @returns A promise that resolves to a boolean that is either true (a probably prime number) or false (definitely composite)\n */\nexport function isProbablyPrime (w: number|bigint, iterations: number = 16, disableWorkers: boolean = false): Promise<boolean> { // eslint-disable-line\n  if (typeof w === 'number') {\n    w = BigInt(w)\n  }\n  if (w < 0n) throw RangeError('w MUST be >= 0')\n\n  if (!IS_BROWSER) { // Node.js\n    if (!disableWorkers && _useWorkers) {\n      return new Promise((resolve, reject) => {\n        const worker = new workerThreads.Worker(__filename)\n\n        worker.on('message', (data?: WorkerToMainMsg) => {\n          if (data?._bcu?.isPrime !== undefined) {\n            worker.terminate().catch(reject)\n            resolve(data._bcu.isPrime)\n          }\n        })\n\n        worker.on('error', reject)\n\n        const msg: MainToWorkerMsg = {\n          _bcu: {\n            rnd: w as bigint,\n            iterations,\n            id: 0\n          }\n        }\n        worker.postMessage(msg)\n      })\n    } else {\n      return new Promise((resolve) => {\n        resolve(_isProbablyPrime(w as bigint, iterations))\n      })\n    }\n  } else { // browser\n    return new Promise((resolve, reject) => {\n      const worker = new Worker(_isProbablyPrimeWorkerUrl())\n\n      worker.onmessage = (event) => {\n        if (event?.data?._bcu?.isPrime !== undefined) {\n          worker.terminate()\n          resolve(event.data._bcu.isPrime)\n        }\n      }\n\n      worker.onmessageerror = (event) => {\n        reject(event)\n      }\n\n      const msg: MainToWorkerMsg = {\n        _bcu: {\n          rnd: w as bigint,\n          iterations,\n          id: 0\n        }\n      }\n      worker.postMessage(msg)\n    })\n  }\n}\n\nexport function _isProbablyPrime (w: bigint, iterations: number): boolean {\n  /*\n  PREFILTERING. Even values but 2 are not primes, so don't test.\n  1 is not a prime and the M-R algorithm needs w>1.\n  */\n  if (w === 2n) return true\n  else if ((w & 1n) === 0n || w === 1n) return false\n\n  /*\n    Test if any of the first 250 small primes are a factor of w. 2 is not tested because it was already tested above.\n    */\n  const firstPrimes = [\n    3n,\n    5n,\n    7n,\n    11n,\n    13n,\n    17n,\n    19n,\n    23n,\n    29n,\n    31n,\n    37n,\n    41n,\n    43n,\n    47n,\n    53n,\n    59n,\n    61n,\n    67n,\n    71n,\n    73n,\n    79n,\n    83n,\n    89n,\n    97n,\n    101n,\n    103n,\n    107n,\n    109n,\n    113n,\n    127n,\n    131n,\n    137n,\n    139n,\n    149n,\n    151n,\n    157n,\n    163n,\n    167n,\n    173n,\n    179n,\n    181n,\n    191n,\n    193n,\n    197n,\n    199n,\n    211n,\n    223n,\n    227n,\n    229n,\n    233n,\n    239n,\n    241n,\n    251n,\n    257n,\n    263n,\n    269n,\n    271n,\n    277n,\n    281n,\n    283n,\n    293n,\n    307n,\n    311n,\n    313n,\n    317n,\n    331n,\n    337n,\n    347n,\n    349n,\n    353n,\n    359n,\n    367n,\n    373n,\n    379n,\n    383n,\n    389n,\n    397n,\n    401n,\n    409n,\n    419n,\n    421n,\n    431n,\n    433n,\n    439n,\n    443n,\n    449n,\n    457n,\n    461n,\n    463n,\n    467n,\n    479n,\n    487n,\n    491n,\n    499n,\n    503n,\n    509n,\n    521n,\n    523n,\n    541n,\n    547n,\n    557n,\n    563n,\n    569n,\n    571n,\n    577n,\n    587n,\n    593n,\n    599n,\n    601n,\n    607n,\n    613n,\n    617n,\n    619n,\n    631n,\n    641n,\n    643n,\n    647n,\n    653n,\n    659n,\n    661n,\n    673n,\n    677n,\n    683n,\n    691n,\n    701n,\n    709n,\n    719n,\n    727n,\n    733n,\n    739n,\n    743n,\n    751n,\n    757n,\n    761n,\n    769n,\n    773n,\n    787n,\n    797n,\n    809n,\n    811n,\n    821n,\n    823n,\n    827n,\n    829n,\n    839n,\n    853n,\n    857n,\n    859n,\n    863n,\n    877n,\n    881n,\n    883n,\n    887n,\n    907n,\n    911n,\n    919n,\n    929n,\n    937n,\n    941n,\n    947n,\n    953n,\n    967n,\n    971n,\n    977n,\n    983n,\n    991n,\n    997n,\n    1009n,\n    1013n,\n    1019n,\n    1021n,\n    1031n,\n    1033n,\n    1039n,\n    1049n,\n    1051n,\n    1061n,\n    1063n,\n    1069n,\n    1087n,\n    1091n,\n    1093n,\n    1097n,\n    1103n,\n    1109n,\n    1117n,\n    1123n,\n    1129n,\n    1151n,\n    1153n,\n    1163n,\n    1171n,\n    1181n,\n    1187n,\n    1193n,\n    1201n,\n    1213n,\n    1217n,\n    1223n,\n    1229n,\n    1231n,\n    1237n,\n    1249n,\n    1259n,\n    1277n,\n    1279n,\n    1283n,\n    1289n,\n    1291n,\n    1297n,\n    1301n,\n    1303n,\n    1307n,\n    1319n,\n    1321n,\n    1327n,\n    1361n,\n    1367n,\n    1373n,\n    1381n,\n    1399n,\n    1409n,\n    1423n,\n    1427n,\n    1429n,\n    1433n,\n    1439n,\n    1447n,\n    1451n,\n    1453n,\n    1459n,\n    1471n,\n    1481n,\n    1483n,\n    1487n,\n    1489n,\n    1493n,\n    1499n,\n    1511n,\n    1523n,\n    1531n,\n    1543n,\n    1549n,\n    1553n,\n    1559n,\n    1567n,\n    1571n,\n    1579n,\n    1583n,\n    1597n\n  ]\n\n  for (let i = 0; i < firstPrimes.length && (firstPrimes[i] <= w); i++) {\n    const p = firstPrimes[i]\n    if (w === p) return true\n    else if (w % p === 0n) return false\n  }\n\n  /*\n    1. Let a be the largest integer such that 2**a divides w−1.\n    2. m = (w−1) / 2**a.\n    3. wlen = len (w).\n    4. For i = 1 to iterations do\n        4.1 Obtain a string b of wlen bits from an RBG.\n        Comment: Ensure that 1 < b < w−1.\n        4.2 If ((b ≤ 1) or (b ≥ w−1)), then go to step 4.1.\n        4.3 z = b**m mod w.\n        4.4 If ((z = 1) or (z = w − 1)), then go to step 4.7.\n        4.5 For j = 1 to a − 1 do.\n        4.5.1 z = z**2 mod w.\n        4.5.2 If (z = w−1), then go to step 4.7.\n        4.5.3 If (z = 1), then go to step 4.6.\n        4.6 Return COMPOSITE.\n        4.7 Continue.\n        Comment: Increment i for the do-loop in step 4.\n    5. Return PROBABLY PRIME.\n    */\n  let a = 0n\n  const d = w - 1n\n  let aux = d\n  while (aux % 2n === 0n) {\n    aux /= 2n\n    ++a\n  }\n\n  const m = d / (2n ** a)\n\n  do {\n    const b = randBetween(d, 2n)\n    let z = modPow(b, m, w)\n    if (z === 1n || z === d) continue\n    let j = 1\n    while (j < a) {\n      z = modPow(z, 2n, w)\n      if (z === d) break\n      if (z === 1n) return false\n      j++\n    }\n    if (z !== d) return false\n  } while (--iterations !== 0)\n\n  return true\n}\n\nexport function _isProbablyPrimeWorkerUrl (): string {\n  // Let's us first add all the required functions\n  let workerCode = `\n  'use strict';\n  const ${eGcd.name} = ${eGcd.toString()};\n  const ${modInv.name} = ${modInv.toString()};\n  const ${modPow.name} = ${modPow.toString()};\n  const ${toZn.name} = ${toZn.toString()};\n  const ${randBitsSync.name} = ${randBitsSync.toString()};\n  const ${randBytesSync.name} = ${randBytesSync.toString()};\n  const ${randBetween.name} = ${randBetween.toString()};\n  const ${isProbablyPrime.name} = ${_isProbablyPrime.toString()};\n  ${bitLength.toString()};\n  ${fromBuffer.toString()};`\n\n  workerCode += `\n  onmessage = async function(msg) {\n    if (msg !== undefined && msg.data !== undefined && msg.data._bcu !== undefined && msg.data._bcu.id !== undefined && msg.data._bcu.iterations !== undefined && msg.data._bcu.rnd !== undefined) {\n      const msgToParent = {\n        _bcu: {\n          isPrime: await ${isProbablyPrime.name}(msg.data._bcu.rnd, msg.data._bcu.iterations),\n          value: msg.data._bcu.rnd,\n          id: msg.data._bcu.id\n        }\n      };\n      postMessage(msgToParent);\n    }\n  }`\n\n  return _workerUrl(workerCode)\n}\n\nif (!IS_BROWSER && _useWorkers) { // node.js with support for workers\n  try {\n    var workerThreads = await import('worker_threads') // eslint-disable-line no-var\n    const isWorker = !(workerThreads.isMainThread)\n    if (isWorker && workerThreads.parentPort !== null) { // worker\n      const parentPort = workerThreads.parentPort\n      parentPort.on('message', function (data: MainToWorkerMsg | any) { // Let's start once we are called\n        if (data?._bcu?.iterations !== undefined && data?._bcu?.rnd !== undefined) {\n          const isPrime = _isProbablyPrime(data._bcu.rnd, data._bcu.iterations)\n          const msg: WorkerToMainMsg = {\n            _bcu: {\n              isPrime,\n              value: data._bcu.rnd,\n              id: data._bcu.id\n            }\n          }\n          parentPort.postMessage(msg)\n        }\n      })\n    }\n  } catch (error) {}\n}\n","import { fromBuffer } from './fromBuffer.js'\nimport { _isProbablyPrime, _isProbablyPrimeWorkerUrl } from './isProbablyPrime.js'\nimport { randBits, randBitsSync } from './randBits.js'\nimport { _useWorkers, WorkerToMainMsg, MainToWorkerMsg } from './workerUtils.js'\nimport type { Worker as NodeWorker } from 'worker_threads'\n\nif (!IS_BROWSER) var os = await import('os') // eslint-disable-line no-var\nif (!IS_BROWSER) {\n  try {\n    var workerThreads = await import('worker_threads') // eslint-disable-line no-var\n  } catch {}\n}\n\n/**\n * A probably-prime (Miller-Rabin), cryptographically-secure, random-number generator.\n * The browser version uses web workers to parallelise prime look up. Therefore, it does not lock the UI\n * main process, and it can be much faster (if several cores or cpu are available).\n * The node version can also use worker_threads if they are available (enabled by default with Node 11 and\n * and can be enabled at runtime executing node --experimental-worker with node >=10.5.0).\n *\n * @param bitLength - The required bit length for the generated prime\n * @param iterations - The number of iterations for the Miller-Rabin Probabilistic Primality Test\n *\n * @throws {@link RangeError} if bitLength < 1\n *\n * @returns A promise that resolves to a bigint probable prime of bitLength bits.\n */\nexport function prime (bitLength: number, iterations: number = 16): Promise<bigint> { // eslint-disable-line\n  if (bitLength < 1) throw new RangeError('bitLength MUST be > 0')\n\n  /* c8 ignore start */\n  if (!_useWorkers) { // If there is no support for workers\n    let rnd = 0n\n    do {\n      rnd = fromBuffer(randBitsSync(bitLength, true))\n    } while (!_isProbablyPrime(rnd, iterations))\n    return new Promise((resolve) => { resolve(rnd) })\n  }\n  /* c8 ignore stop */\n  return new Promise((resolve, reject) => {\n    const workerList: Array<NodeWorker | Worker> = []\n    const _onmessage = (msg: WorkerToMainMsg, newWorker: Worker | NodeWorker): void => {\n      if (msg._bcu.isPrime) {\n        // if a prime number has been found, stop all the workers, and return it\n        for (let j = 0; j < workerList.length; j++) {\n          workerList[j].terminate() // eslint-disable-line @typescript-eslint/no-floating-promises\n        }\n        while (workerList.length > 0) {\n          workerList.pop()\n        }\n        resolve(msg._bcu.value)\n      } else { // if a composite is found, make the worker test another random number\n        const buf = randBitsSync(bitLength, true)\n        const rnd = fromBuffer(buf)\n        try {\n          const msgToWorker: MainToWorkerMsg = {\n            _bcu: {\n              rnd,\n              iterations,\n              id: msg._bcu.id\n            }\n          }\n          newWorker.postMessage(msgToWorker)\n        } catch (error) {\n          // The worker has already terminated. There is nothing to handle here\n        }\n      }\n    }\n    if (IS_BROWSER) { // browser\n      const workerURL = _isProbablyPrimeWorkerUrl()\n      for (let i = 0; i < self.navigator.hardwareConcurrency - 1; i++) {\n        const newWorker = new Worker(workerURL)\n        newWorker.onmessage = (event) => _onmessage(event.data, newWorker)\n        workerList.push(newWorker)\n      }\n    } else { // Node.js\n      for (let i = 0; i < os.cpus().length - 1; i++) {\n        const newWorker = new workerThreads.Worker(__filename)\n        newWorker.on('message', (msg: WorkerToMainMsg) => _onmessage(msg, newWorker))\n        workerList.push(newWorker)\n      }\n    }\n    for (let i = 0; i < workerList.length; i++) {\n      randBits(bitLength, true).then(function (buf: Uint8Array | Buffer) {\n        const rnd = fromBuffer(buf)\n        workerList[i].postMessage({\n          _bcu: {\n            rnd,\n            iterations,\n            id: i\n          }\n        })\n      }).catch(reject)\n    }\n  })\n}\n\n/**\n * A probably-prime (Miller-Rabin), cryptographically-secure, random-number generator.\n * The sync version is NOT RECOMMENDED since it won't use workers and thus it'll be slower and may freeze thw window in browser's javascript. Please consider using prime() instead.\n *\n * @param bitLength - The required bit length for the generated prime\n * @param iterations - The number of iterations for the Miller-Rabin Probabilistic Primality Test\n *\n * @throws {@link RangeError} if bitLength < 1\n *\n * @returns A bigint probable prime of bitLength bits.\n */\nexport function primeSync (bitLength: number, iterations: number = 16): bigint {\n  if (bitLength < 1) throw new RangeError('bitLength MUST be > 0')\n  let rnd = 0n\n  do {\n    rnd = fromBuffer(randBitsSync(bitLength, true))\n  } while (!_isProbablyPrime(rnd, iterations))\n  return rnd\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { handlers } from './opcodes/index.js'\n\nexport const FORMAT = 0xef\nexport const MAGIC = 0x00\nexport const VERSION = 0x01\n\n/**\n *\n * @param container A `Uint8Array` containing bytecode to be checked for EOF1 compliance\n * @returns an object containing the size of the code section and data sections for a valid\n * EOF1 container or else undefined if `container` is not valid EOF1 bytecode\n *\n * Note: See https://eips.ethereum.org/EIPS/eip-3540 for further details\n */\nexport const codeAnalysis = (container: Uint8Array) => {\n  const secCode = 0x01\n  const secData = 0x02\n  const secTerminator = 0x00\n  let computedContainerSize = 0\n  const sectionSizes = {\n    code: 0,\n    data: 0,\n  }\n  if (container[0] !== FORMAT || container[1] !== MAGIC || container[2] !== VERSION)\n    // Bytecode does not contain EOF1 \"magic\" or version number in expected positions\n    return\n\n  if (\n    // EOF1 bytecode must be more than 7 bytes long for EOF1 header plus code section (but no data section)\n    container.length > 7 &&\n    // EOF1 code section indicator\n    container[3] === secCode &&\n    // EOF1 header terminator\n    container[6] === secTerminator\n  ) {\n    sectionSizes.code = (container[4] << 8) | container[5]\n    // Calculate expected length of EOF1 container based on code section\n    computedContainerSize = 7 + sectionSizes.code\n    // EOF1 code section must be at least 1 byte long\n    if (sectionSizes.code < 1) return\n  } else if (\n    // EOF1 container must be more than 10 bytes long if data section is included\n    container.length > 10 &&\n    // EOF1 code section indicator\n    container[3] === secCode &&\n    // EOF1 data section indicator\n    container[6] === secData &&\n    // EOF1 header terminator\n    container[9] === secTerminator\n  ) {\n    sectionSizes.code = (container[4] << 8) | container[5]\n    sectionSizes.data = (container[7] << 8) | container[8]\n    // Calculate expected length of EOF1 container based on code and data sections\n    computedContainerSize = 10 + sectionSizes.code + sectionSizes.data\n    // Code & Data sizes cannot be 0\n    if (sectionSizes.code < 1 || sectionSizes.data < 1) return\n  }\n  if (container.length !== computedContainerSize) {\n    // Computed container length based on section details does not match length of actual bytecode\n    return\n  }\n  return sectionSizes\n}\n\nexport const validOpcodes = (code: Uint8Array) => {\n  // EIP-3670 - validate all opcodes\n  const opcodes = new Set(handlers.keys())\n  opcodes.add(0xfe) // Add INVALID opcode to set\n\n  let x = 0\n  while (x < code.length) {\n    const opcode = code[x]\n    x++\n    if (!opcodes.has(opcode)) {\n      // No invalid/undefined opcodes\n      return false\n    }\n    if (opcode >= 0x60 && opcode <= 0x7f) {\n      // Skip data block following push\n      x += opcode - 0x5f\n      if (x > code.length - 1) {\n        // Push blocks must not exceed end of code section\n        return false\n      }\n    }\n  }\n  const terminatingOpcodes = new Set([0x00, 0xf3, 0xfd, 0xfe, 0xff])\n  // Per EIP-3670, the final opcode of a code section must be STOP, RETURN, REVERT, INVALID, or SELFDESTRUCT\n  if (!terminatingOpcodes.has(code[code.length - 1])) {\n    return false\n  }\n  return true\n}\n\nexport const getEOFCode = (code: Uint8Array) => {\n  const sectionSizes = codeAnalysis(code)\n  if (sectionSizes === undefined) {\n    return code\n  } else {\n    const codeStart = sectionSizes.data > 0 ? 10 : 7\n    return code.subarray(codeStart, codeStart + sectionSizes.code)\n  }\n}\n\nexport const EOF = { FORMAT, MAGIC, VERSION, codeAnalysis, validOpcodes }\n","import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport { DefaultStateManager } from '@ethereumjs/statemanager'\nimport {\n  Account,\n  Address,\n  AsyncEventEmitter,\n  BIGINT_0,\n  BIGINT_1,\n  KECCAK256_NULL,\n  MAX_INTEGER,\n  bigIntToBytes,\n  bytesToUnprefixedHex,\n  equalsBytes,\n  generateAddress,\n  generateAddress2,\n  short,\n  zeros,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { initRustBN } from 'rustbn-wasm'\n\nimport { EOF, getEOFCode } from './eof.js'\nimport { ERROR, EvmError } from './exceptions.js'\nimport { Interpreter } from './interpreter.js'\nimport { Journal } from './journal.js'\nimport { EVMPerformanceLogger } from './logger.js'\nimport { Message } from './message.js'\nimport { getOpcodesForHF } from './opcodes/index.js'\nimport { getActivePrecompiles, getPrecompileName } from './precompiles/index.js'\nimport { TransientStorage } from './transientStorage.js'\nimport { DefaultBlockchain } from './types.js'\n\nimport type { InterpreterOpts } from './interpreter.js'\nimport type { Timer } from './logger.js'\nimport type { MessageWithTo } from './message.js'\nimport type { AsyncDynamicGasHandler, SyncDynamicGasHandler } from './opcodes/gas.js'\nimport type { OpHandler, OpcodeList, OpcodeMap } from './opcodes/index.js'\nimport type { CustomPrecompile, PrecompileFunc } from './precompiles/index.js'\nimport type {\n  Block,\n  Blockchain,\n  CustomOpcode,\n  EVMEvents,\n  EVMInterface,\n  EVMOpts,\n  EVMResult,\n  EVMRunCallOpts,\n  EVMRunCodeOpts,\n  ExecResult,\n  bn128,\n} from './types.js'\nimport type { EVMStateManagerInterface } from '@ethereumjs/common'\nconst { debug: createDebugLogger } = debugDefault\n\nconst debug = createDebugLogger('evm:evm')\nconst debugGas = createDebugLogger('evm:gas')\nconst debugPrecompiles = createDebugLogger('evm:precompiles')\n\nlet initializedRustBN: bn128 | undefined = undefined\n\n/**\n * EVM is responsible for executing an EVM message fully\n * (including any nested calls and creates), processing the results\n * and storing them to state (or discarding changes in case of exceptions).\n * @ignore\n */\nexport class EVM implements EVMInterface {\n  protected static supportedHardforks = [\n    Hardfork.Chainstart,\n    Hardfork.Homestead,\n    Hardfork.Dao,\n    Hardfork.TangerineWhistle,\n    Hardfork.SpuriousDragon,\n    Hardfork.Byzantium,\n    Hardfork.Constantinople,\n    Hardfork.Petersburg,\n    Hardfork.Istanbul,\n    Hardfork.MuirGlacier,\n    Hardfork.Berlin,\n    Hardfork.London,\n    Hardfork.ArrowGlacier,\n    Hardfork.GrayGlacier,\n    Hardfork.MergeForkIdTransition,\n    Hardfork.Paris,\n    Hardfork.Shanghai,\n    Hardfork.Cancun,\n    Hardfork.Prague,\n  ]\n  protected _tx?: {\n    gasPrice: bigint\n    origin: Address\n  }\n  protected _block?: Block\n\n  public readonly common: Common\n  public readonly events: AsyncEventEmitter<EVMEvents>\n\n  public stateManager: EVMStateManagerInterface\n  public blockchain: Blockchain\n  public journal: Journal\n\n  public readonly transientStorage: TransientStorage\n\n  protected _opcodes!: OpcodeList\n\n  public readonly allowUnlimitedContractSize: boolean\n  public readonly allowUnlimitedInitCodeSize: boolean\n\n  protected readonly _customOpcodes?: CustomOpcode[]\n  protected readonly _customPrecompiles?: CustomPrecompile[]\n\n  protected _handlers!: Map<number, OpHandler>\n\n  protected _dynamicGasHandlers!: Map<number, AsyncDynamicGasHandler | SyncDynamicGasHandler>\n\n  protected _opcodeMap!: OpcodeMap\n\n  protected _precompiles!: Map<string, PrecompileFunc>\n\n  protected readonly _optsCached: EVMOpts\n\n  protected performanceLogger: EVMPerformanceLogger\n\n  public get precompiles() {\n    return this._precompiles\n  }\n\n  public get opcodes() {\n    return this._opcodes\n  }\n\n  /**\n   * EVM is run in DEBUG mode (default: false)\n   * Taken from DEBUG environment variable\n   *\n   * Safeguards on debug() calls are added for\n   * performance reasons to avoid string literal evaluation\n   * @hidden\n   */\n  readonly DEBUG: boolean = false\n\n  protected readonly _emit: (topic: string, data: any) => Promise<void>\n\n  private _bn128: bn128\n\n  /**\n   * Use this async static constructor for the initialization\n   * of an EVM object\n   *\n   * @param createOpts The EVM options\n   * @returns A new EVM\n   */\n  static async create(createOpts?: EVMOpts) {\n    const opts = createOpts ?? ({} as EVMOpts)\n    const bn128 = initializedRustBN ?? (await initRustBN())\n    initializedRustBN = bn128\n\n    if (opts.common === undefined) {\n      opts.common = new Common({ chain: Chain.Mainnet })\n    }\n\n    if (opts.blockchain === undefined) {\n      opts.blockchain = new DefaultBlockchain()\n    }\n\n    if (opts.stateManager === undefined) {\n      opts.stateManager = new DefaultStateManager()\n    }\n\n    return new EVM(opts, bn128)\n  }\n\n  /**\n   *\n   * Creates new EVM object\n   *\n   * @deprecated The direct usage of this constructor is replaced since\n   * non-finalized async initialization lead to side effects. Please\n   * use the async {@link EVM.create} constructor instead (same API).\n   *\n   * @param opts The EVM options\n   * @param bn128 Initialized bn128 WASM object for precompile usage (internal)\n   */\n  protected constructor(opts: EVMOpts, bn128: bn128) {\n    this.common = opts.common!\n    this.blockchain = opts.blockchain!\n    this.stateManager = opts.stateManager!\n\n    this._bn128 = bn128\n    this.events = new AsyncEventEmitter()\n    this._optsCached = opts\n\n    // Supported EIPs\n    const supportedEIPs = [\n      1153, 1559, 2315, 2565, 2718, 2929, 2930, 2935, 3074, 3198, 3529, 3540, 3541, 3607, 3651,\n      3670, 3855, 3860, 4399, 4895, 4788, 4844, 5133, 5656, 6780, 6800, 7516,\n    ]\n\n    for (const eip of this.common.eips()) {\n      if (!supportedEIPs.includes(eip)) {\n        throw new Error(`EIP-${eip} is not supported by the EVM`)\n      }\n    }\n\n    if (!EVM.supportedHardforks.includes(this.common.hardfork() as Hardfork)) {\n      throw new Error(\n        `Hardfork ${this.common.hardfork()} not set as supported in supportedHardforks`\n      )\n    }\n\n    this.allowUnlimitedContractSize = opts.allowUnlimitedContractSize ?? false\n    this.allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    this._customOpcodes = opts.customOpcodes\n    this._customPrecompiles = opts.customPrecompiles\n\n    this.journal = new Journal(this.stateManager, this.common)\n    this.transientStorage = new TransientStorage()\n\n    this.common.events.on('hardforkChanged', () => {\n      this.getActiveOpcodes()\n      this._precompiles = getActivePrecompiles(this.common, this._customPrecompiles)\n    })\n\n    // Initialize the opcode data\n    this.getActiveOpcodes()\n    this._precompiles = getActivePrecompiles(this.common, this._customPrecompiles)\n\n    this._emit = async (topic: string, data: any): Promise<void> => {\n      return new Promise((resolve) => this.events.emit(topic as keyof EVMEvents, data, resolve))\n    }\n\n    this.performanceLogger = new EVMPerformanceLogger()\n\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n  }\n\n  /**\n   * Returns a list with the currently activated opcodes\n   * available for EVM execution\n   */\n  getActiveOpcodes(): OpcodeList {\n    const data = getOpcodesForHF(this.common, this._customOpcodes)\n    this._opcodes = data.opcodes\n    this._dynamicGasHandlers = data.dynamicGasHandlers\n    this._handlers = data.handlers\n    this._opcodeMap = data.opcodeMap\n    return data.opcodes\n  }\n\n  protected async _executeCall(message: MessageWithTo): Promise<EVMResult> {\n    let gasLimit = message.gasLimit\n\n    if (this.common.isActivatedEIP(6800)) {\n      if (message.depth === 0) {\n        const originAccessGas = message.accessWitness!.touchTxOriginAndComputeGas(\n          message.authcallOrigin ?? message.caller\n        )\n        gasLimit -= originAccessGas\n        if (gasLimit < BIGINT_0) {\n          if (this.DEBUG) {\n            debugGas(`Origin access charged(${originAccessGas}) caused OOG (-> ${gasLimit})`)\n          }\n          return { execResult: OOGResult(message.gasLimit) }\n        } else {\n          if (this.DEBUG) {\n            debugGas(`Origin access used (${originAccessGas} gas (-> ${gasLimit}))`)\n          }\n        }\n      }\n    }\n\n    let account = await this.stateManager.getAccount(message.authcallOrigin ?? message.caller)\n    if (!account) {\n      account = new Account()\n    }\n    let errorMessage\n    // Reduce tx value from sender\n    if (!message.delegatecall) {\n      try {\n        await this._reduceSenderBalance(account, message)\n      } catch (e) {\n        errorMessage = e\n      }\n    }\n\n    if (this.common.isActivatedEIP(6800)) {\n      if (message.depth === 0) {\n        const sendsValue = message.value !== BIGINT_0\n        const destAccessGas = message.accessWitness!.touchTxExistingAndComputeGas(message.to, {\n          sendsValue,\n        })\n        gasLimit -= destAccessGas\n        if (gasLimit < BIGINT_0) {\n          if (this.DEBUG) {\n            debugGas(`Destination access charged(${destAccessGas}) caused OOG (-> ${gasLimit})`)\n          }\n          return { execResult: OOGResult(message.gasLimit) }\n        } else {\n          if (this.DEBUG) {\n            debugGas(`Destination access used (${destAccessGas} gas (-> ${gasLimit}))`)\n          }\n        }\n      }\n    }\n\n    // Load `to` account\n    let toAccount = await this.stateManager.getAccount(message.to)\n    if (!toAccount) {\n      if (this.common.isActivatedEIP(6800)) {\n        const absenceProofAccessGas = message.accessWitness!.touchAndChargeProofOfAbsence(\n          message.to\n        )\n        gasLimit -= absenceProofAccessGas\n        if (gasLimit < BIGINT_0) {\n          if (this.DEBUG) {\n            debugGas(\n              `Proof of absense access charged(${absenceProofAccessGas}) caused OOG (-> ${gasLimit})`\n            )\n          }\n          return { execResult: OOGResult(message.gasLimit) }\n        } else {\n          if (this.DEBUG) {\n            debugGas(`Proof of absense access used (${absenceProofAccessGas} gas (-> ${gasLimit}))`)\n          }\n        }\n      }\n      toAccount = new Account()\n    }\n    // Add tx value to the `to` account\n    if (!message.delegatecall) {\n      try {\n        await this._addToBalance(toAccount, message)\n      } catch (e: any) {\n        errorMessage = e\n      }\n    }\n\n    // Load code\n    await this._loadCode(message)\n    let exit = false\n    if (!message.code || (typeof message.code !== 'function' && message.code.length === 0)) {\n      exit = true\n      if (this.DEBUG) {\n        debug(`Exit early on no code (CALL)`)\n      }\n    }\n    if (errorMessage !== undefined) {\n      exit = true\n      if (this.DEBUG) {\n        debug(`Exit early on value transfer overflowed (CALL)`)\n      }\n    }\n    if (exit) {\n      return {\n        execResult: {\n          gasRefund: message.gasRefund,\n          executionGasUsed: message.gasLimit - gasLimit,\n          exceptionError: errorMessage, // Only defined if addToBalance failed\n          returnValue: new Uint8Array(0),\n        },\n      }\n    }\n\n    let result: ExecResult\n    if (message.isCompiled) {\n      let timer: Timer\n      let callTimer: Timer | undefined\n      let target: string\n      if (this._optsCached.profiler?.enabled === true) {\n        target = bytesToUnprefixedHex(message.codeAddress.bytes)\n        // TODO: map target precompile not to address, but to a name\n        target = getPrecompileName(target) ?? target.slice(20)\n        if (this.performanceLogger.hasTimer()) {\n          callTimer = this.performanceLogger.pauseTimer()\n        }\n        timer = this.performanceLogger.startTimer(target)\n      }\n      result = await this.runPrecompile(message.code as PrecompileFunc, message.data, gasLimit)\n\n      if (this._optsCached.profiler?.enabled === true) {\n        this.performanceLogger.stopTimer(timer!, Number(result.executionGasUsed), 'precompiles')\n        if (callTimer !== undefined) {\n          this.performanceLogger.unpauseTimer(callTimer)\n        }\n      }\n      result.gasRefund = message.gasRefund\n    } else {\n      if (this.DEBUG) {\n        debug(`Start bytecode processing...`)\n      }\n      result = await this.runInterpreter({ ...message, gasLimit } as Message)\n    }\n\n    if (message.depth === 0) {\n      this.postMessageCleanup()\n    }\n\n    result.executionGasUsed += message.gasLimit - gasLimit\n\n    return {\n      execResult: result,\n    }\n  }\n\n  protected async _executeCreate(message: Message): Promise<EVMResult> {\n    let gasLimit = message.gasLimit\n\n    if (this.common.isActivatedEIP(6800)) {\n      const originAccessGas = message.accessWitness!.touchTxOriginAndComputeGas(message.caller)\n      gasLimit -= originAccessGas\n      if (gasLimit < BIGINT_0) {\n        if (this.DEBUG) {\n          debugGas(`Origin access charged(${originAccessGas}) caused OOG (-> ${gasLimit})`)\n        }\n        return { execResult: OOGResult(message.gasLimit) }\n      } else {\n        if (this.DEBUG) {\n          debugGas(`Origin access used (${originAccessGas} gas (-> ${gasLimit}))`)\n        }\n      }\n    }\n\n    let account = await this.stateManager.getAccount(message.caller)\n    if (!account) {\n      account = new Account()\n    }\n    // Reduce tx value from sender\n    await this._reduceSenderBalance(account, message)\n\n    if (this.common.isActivatedEIP(3860)) {\n      if (\n        message.data.length > Number(this.common.param('vm', 'maxInitCodeSize')) &&\n        !this.allowUnlimitedInitCodeSize\n      ) {\n        return {\n          createdAddress: message.to,\n          execResult: {\n            returnValue: new Uint8Array(0),\n            exceptionError: new EvmError(ERROR.INITCODE_SIZE_VIOLATION),\n            executionGasUsed: message.gasLimit,\n          },\n        }\n      }\n    }\n\n    message.code = message.data\n    message.data = new Uint8Array(0)\n    message.to = await this._generateAddress(message)\n\n    if (this.common.isActivatedEIP(6780)) {\n      message.createdAddresses!.add(message.to.toString())\n    }\n\n    if (this.DEBUG) {\n      debug(`Generated CREATE contract address ${message.to}`)\n    }\n    let toAccount = await this.stateManager.getAccount(message.to)\n    if (!toAccount) {\n      toAccount = new Account()\n    }\n\n    if (this.common.isActivatedEIP(6800)) {\n      const sendsValue = message.value !== BIGINT_0\n      const contractCreateAccessGas = message.accessWitness!.touchAndChargeContractCreateInit(\n        message.to,\n        { sendsValue }\n      )\n      gasLimit -= contractCreateAccessGas\n      if (gasLimit < BIGINT_0) {\n        if (this.DEBUG) {\n          debugGas(\n            `Contract create (sendsValue=${sendsValue}) charge(${contractCreateAccessGas}) caused OOG (-> ${gasLimit})`\n          )\n        }\n        return { execResult: OOGResult(message.gasLimit) }\n      } else {\n        if (this.DEBUG) {\n          debugGas(\n            `Contract create (sendsValue=${sendsValue}) charged (${contractCreateAccessGas} gas (-> ${gasLimit}))`\n          )\n        }\n      }\n    }\n\n    // Check for collision\n    if (\n      (toAccount.nonce && toAccount.nonce > BIGINT_0) ||\n      !(equalsBytes(toAccount.codeHash, KECCAK256_NULL) === true)\n    ) {\n      if (this.DEBUG) {\n        debug(`Returning on address collision`)\n      }\n      return {\n        createdAddress: message.to,\n        execResult: {\n          returnValue: new Uint8Array(0),\n          exceptionError: new EvmError(ERROR.CREATE_COLLISION),\n          executionGasUsed: message.gasLimit,\n        },\n      }\n    }\n\n    await this.journal.putAccount(message.to, toAccount)\n    await this.stateManager.clearContractStorage(message.to)\n\n    const newContractEvent = {\n      address: message.to,\n      code: message.code,\n    }\n\n    await this._emit('newContract', newContractEvent)\n\n    toAccount = await this.stateManager.getAccount(message.to)\n    if (!toAccount) {\n      toAccount = new Account()\n    }\n    // EIP-161 on account creation and CREATE execution\n    if (this.common.gteHardfork(Hardfork.SpuriousDragon)) {\n      toAccount.nonce += BIGINT_1\n    }\n\n    // Add tx value to the `to` account\n    let errorMessage\n    try {\n      await this._addToBalance(toAccount, message as MessageWithTo)\n    } catch (e: any) {\n      errorMessage = e\n    }\n\n    let exit = false\n    if (\n      message.code === undefined ||\n      (typeof message.code !== 'function' && message.code.length === 0)\n    ) {\n      exit = true\n      if (this.DEBUG) {\n        debug(`Exit early on no code (CREATE)`)\n      }\n    }\n    if (errorMessage !== undefined) {\n      exit = true\n      if (this.DEBUG) {\n        debug(`Exit early on value transfer overflowed (CREATE)`)\n      }\n    }\n    if (exit) {\n      return {\n        createdAddress: message.to,\n        execResult: {\n          executionGasUsed: message.gasLimit - gasLimit,\n          gasRefund: message.gasRefund,\n          exceptionError: errorMessage, // only defined if addToBalance failed\n          returnValue: new Uint8Array(0),\n        },\n      }\n    }\n\n    if (this.DEBUG) {\n      debug(`Start bytecode processing...`)\n    }\n\n    // run the message with the updated gas limit and add accessed gas used to the result\n    let result = await this.runInterpreter({ ...message, gasLimit } as Message)\n    result.executionGasUsed += message.gasLimit - gasLimit\n\n    // fee for size of the return value\n    let totalGas = result.executionGasUsed\n    let returnFee = BIGINT_0\n    if (!result.exceptionError) {\n      returnFee =\n        BigInt(result.returnValue.length) * BigInt(this.common.param('gasPrices', 'createData'))\n      totalGas = totalGas + returnFee\n      if (this.DEBUG) {\n        debugGas(`Add return value size fee (${returnFee} to gas used (-> ${totalGas}))`)\n      }\n    }\n\n    // Check for SpuriousDragon EIP-170 code size limit\n    let allowedCodeSize = true\n    if (\n      !result.exceptionError &&\n      this.common.gteHardfork(Hardfork.SpuriousDragon) &&\n      result.returnValue.length > Number(this.common.param('vm', 'maxCodeSize'))\n    ) {\n      allowedCodeSize = false\n    }\n\n    // If enough gas and allowed code size\n    let CodestoreOOG = false\n    if (totalGas <= message.gasLimit && (this.allowUnlimitedContractSize || allowedCodeSize)) {\n      if (this.common.isActivatedEIP(3541) && result.returnValue[0] === EOF.FORMAT) {\n        if (!this.common.isActivatedEIP(3540)) {\n          result = { ...result, ...INVALID_BYTECODE_RESULT(message.gasLimit) }\n        }\n        // Begin EOF1 contract code checks\n        // EIP-3540 EOF1 header check\n        const eof1CodeAnalysisResults = EOF.codeAnalysis(result.returnValue)\n        if (typeof eof1CodeAnalysisResults?.code === 'undefined') {\n          result = {\n            ...result,\n            ...INVALID_EOF_RESULT(message.gasLimit),\n          }\n        } else if (this.common.isActivatedEIP(3670)) {\n          // EIP-3670 EOF1 opcode check\n          const codeStart = eof1CodeAnalysisResults.data > 0 ? 10 : 7\n          // The start of the code section of an EOF1 compliant contract will either be\n          // index 7 (if no data section is present) or index 10 (if a data section is present)\n          // in the bytecode of the contract\n          if (\n            !EOF.validOpcodes(\n              result.returnValue.subarray(codeStart, codeStart + eof1CodeAnalysisResults.code)\n            )\n          ) {\n            result = {\n              ...result,\n              ...INVALID_EOF_RESULT(message.gasLimit),\n            }\n          } else {\n            result.executionGasUsed = totalGas\n          }\n        }\n      } else {\n        result.executionGasUsed = totalGas\n      }\n    } else {\n      if (this.common.gteHardfork(Hardfork.Homestead)) {\n        if (!allowedCodeSize) {\n          if (this.DEBUG) {\n            debug(`Code size exceeds maximum code size (>= SpuriousDragon)`)\n          }\n          result = { ...result, ...CodesizeExceedsMaximumError(message.gasLimit) }\n        } else {\n          if (this.DEBUG) {\n            debug(`Contract creation: out of gas`)\n          }\n          result = { ...result, ...OOGResult(message.gasLimit) }\n        }\n      } else {\n        // we are in Frontier\n        if (totalGas - returnFee <= message.gasLimit) {\n          // we cannot pay the code deposit fee (but the deposit code actually did run)\n          if (this.DEBUG) {\n            debug(`Not enough gas to pay the code deposit fee (Frontier)`)\n          }\n          result = { ...result, ...COOGResult(totalGas - returnFee) }\n          CodestoreOOG = true\n        } else {\n          if (this.DEBUG) {\n            debug(`Contract creation: out of gas`)\n          }\n          result = { ...result, ...OOGResult(message.gasLimit) }\n        }\n      }\n    }\n\n    // get the fresh gas limit for the rest of the ops\n    gasLimit = message.gasLimit - result.executionGasUsed\n    if (!result.exceptionError && this.common.isActivatedEIP(6800)) {\n      const createCompleteAccessGas = message.accessWitness!.touchAndChargeContractCreateCompleted(\n        message.to\n      )\n      gasLimit -= createCompleteAccessGas\n      if (gasLimit < BIGINT_0) {\n        if (this.DEBUG) {\n          debug(\n            `ContractCreateComplete access gas (${createCompleteAccessGas}) caused OOG (-> ${gasLimit})`\n          )\n        }\n        result = { ...result, ...OOGResult(message.gasLimit) }\n      } else {\n        debug(\n          `ContractCreateComplete access used (${createCompleteAccessGas}) gas (-> ${gasLimit})`\n        )\n        result.executionGasUsed += createCompleteAccessGas\n      }\n    }\n\n    // Save code if a new contract was created\n    if (\n      !result.exceptionError &&\n      result.returnValue !== undefined &&\n      result.returnValue.length !== 0\n    ) {\n      // Add access charges for writing this code to the state\n      if (this.common.isActivatedEIP(6800)) {\n        const byteCodeWriteAccessfee =\n          message.accessWitness!.touchCodeChunksRangeOnWriteAndChargeGas(\n            message.to,\n            0,\n            message.code!.length - 1\n          )\n        gasLimit -= byteCodeWriteAccessfee\n        if (gasLimit < BIGINT_0) {\n          if (this.DEBUG) {\n            debug(\n              `byteCodeWrite access gas (${byteCodeWriteAccessfee}) caused OOG (-> ${gasLimit})`\n            )\n          }\n          result = { ...result, ...OOGResult(message.gasLimit) }\n        } else {\n          debug(\n            `ContractCreateComplete access used (${byteCodeWriteAccessfee}) gas (-> ${gasLimit})`\n          )\n          result.executionGasUsed += byteCodeWriteAccessfee\n        }\n      }\n\n      await this.stateManager.putContractCode(message.to, result.returnValue)\n      if (this.DEBUG) {\n        debug(`Code saved on new contract creation`)\n      }\n    } else if (CodestoreOOG) {\n      // This only happens at Frontier. But, let's do a sanity check;\n      if (!this.common.gteHardfork(Hardfork.Homestead)) {\n        // Pre-Homestead behavior; put an empty contract.\n        // This contract would be considered \"DEAD\" in later hard forks.\n        // It is thus an unnecessary default item, which we have to save to disk\n        // It does change the state root, but it only wastes storage.\n        const account = await this.stateManager.getAccount(message.to)\n        await this.journal.putAccount(message.to, account ?? new Account())\n      }\n    }\n\n    return {\n      createdAddress: message.to,\n      execResult: result,\n    }\n  }\n\n  /**\n   * Starts the actual bytecode processing for a CALL or CREATE\n   */\n  protected async runInterpreter(\n    message: Message,\n    opts: InterpreterOpts = {}\n  ): Promise<ExecResult> {\n    let contract = await this.stateManager.getAccount(message.to ?? Address.zero())\n    if (!contract) {\n      contract = new Account()\n    }\n\n    const env = {\n      address: message.to ?? Address.zero(),\n      caller: message.caller ?? Address.zero(),\n      callData: message.data ?? Uint8Array.from([0]),\n      callValue: message.value ?? BIGINT_0,\n      code: message.code as Uint8Array,\n      isStatic: message.isStatic ?? false,\n      depth: message.depth ?? 0,\n      gasPrice: this._tx!.gasPrice,\n      origin: this._tx!.origin ?? message.caller ?? Address.zero(),\n      block: this._block ?? defaultBlock(),\n      contract,\n      codeAddress: message.codeAddress,\n      gasRefund: message.gasRefund,\n      containerCode: message.containerCode,\n      chargeCodeAccesses: message.chargeCodeAccesses,\n      blobVersionedHashes: message.blobVersionedHashes ?? [],\n      accessWitness: message.accessWitness,\n      createdAddresses: message.createdAddresses,\n    }\n\n    const interpreter = new Interpreter(\n      this,\n      this.stateManager,\n      this.blockchain,\n      env,\n      message.gasLimit,\n      this.journal,\n      this.performanceLogger,\n      this._optsCached.profiler\n    )\n    if (message.selfdestruct) {\n      interpreter._result.selfdestruct = message.selfdestruct\n    }\n    if (message.createdAddresses) {\n      interpreter._result.createdAddresses = message.createdAddresses\n    }\n\n    const interpreterRes = await interpreter.run(message.code as Uint8Array, opts)\n\n    let result = interpreter._result\n    let gasUsed = message.gasLimit - interpreterRes.runState!.gasLeft\n    if (interpreterRes.exceptionError) {\n      if (\n        interpreterRes.exceptionError.error !== ERROR.REVERT &&\n        interpreterRes.exceptionError.error !== ERROR.INVALID_EOF_FORMAT\n      ) {\n        gasUsed = message.gasLimit\n      }\n\n      // Clear the result on error\n      result = {\n        ...result,\n        logs: [],\n        selfdestruct: new Set(),\n        createdAddresses: new Set(),\n      }\n    }\n\n    return {\n      ...result,\n      runState: {\n        ...interpreterRes.runState!,\n        ...result,\n        ...interpreter._env,\n      },\n      exceptionError: interpreterRes.exceptionError,\n      gas: interpreterRes.runState?.gasLeft,\n      executionGasUsed: gasUsed,\n      gasRefund: interpreterRes.runState!.gasRefund,\n      returnValue: result.returnValue ? result.returnValue : new Uint8Array(0),\n    }\n  }\n\n  /**\n   * Executes an EVM message, determining whether it's a call or create\n   * based on the `to` address. It checkpoints the state and reverts changes\n   * if an exception happens during the message execution.\n   */\n  async runCall(opts: EVMRunCallOpts): Promise<EVMResult> {\n    let timer: Timer | undefined\n    if (\n      (opts.depth === 0 || opts.message === undefined) &&\n      this._optsCached.profiler?.enabled === true\n    ) {\n      timer = this.performanceLogger.startTimer('Initialization')\n    }\n    let message = opts.message\n    let callerAccount\n    if (!message) {\n      this._block = opts.block ?? defaultBlock()\n      this._tx = {\n        gasPrice: opts.gasPrice ?? BIGINT_0,\n        origin: opts.origin ?? opts.caller ?? Address.zero(),\n      }\n      const caller = opts.caller ?? Address.zero()\n\n      const value = opts.value ?? BIGINT_0\n      if (opts.skipBalance === true) {\n        callerAccount = await this.stateManager.getAccount(caller)\n        if (!callerAccount) {\n          callerAccount = new Account()\n        }\n        if (callerAccount.balance < value) {\n          // if skipBalance and balance less than value, set caller balance to `value` to ensure sufficient funds\n          callerAccount.balance = value\n          await this.journal.putAccount(caller, callerAccount)\n        }\n      }\n\n      message = new Message({\n        caller,\n        gasLimit: opts.gasLimit ?? BigInt(0xffffff),\n        to: opts.to,\n        value,\n        data: opts.data,\n        code: opts.code,\n        depth: opts.depth,\n        isCompiled: opts.isCompiled,\n        isStatic: opts.isStatic,\n        salt: opts.salt,\n        selfdestruct: opts.selfdestruct ?? new Set(),\n        createdAddresses: opts.createdAddresses ?? new Set(),\n        delegatecall: opts.delegatecall,\n        blobVersionedHashes: opts.blobVersionedHashes,\n        accessWitness: opts.accessWitness,\n      })\n    }\n\n    if (message.depth === 0) {\n      if (!callerAccount) {\n        callerAccount = await this.stateManager.getAccount(message.caller)\n      }\n      if (!callerAccount) {\n        callerAccount = new Account()\n      }\n      callerAccount.nonce++\n      await this.journal.putAccount(message.caller, callerAccount)\n      if (this.DEBUG) {\n        debug(`Update fromAccount (caller) nonce (-> ${callerAccount.nonce}))`)\n      }\n    }\n\n    await this._emit('beforeMessage', message)\n\n    if (!message.to && this.common.isActivatedEIP(2929) === true) {\n      message.code = message.data\n      this.journal.addWarmedAddress((await this._generateAddress(message)).bytes)\n    }\n\n    await this.journal.checkpoint()\n    if (this.common.isActivatedEIP(1153)) this.transientStorage.checkpoint()\n    if (this.DEBUG) {\n      debug('-'.repeat(100))\n      debug(`message checkpoint`)\n    }\n\n    let result\n    if (this.DEBUG) {\n      const { caller, gasLimit, to, value, delegatecall } = message\n      debug(\n        `New message caller=${caller} gasLimit=${gasLimit} to=${\n          to?.toString() ?? 'none'\n        } value=${value} delegatecall=${delegatecall ? 'yes' : 'no'}`\n      )\n    }\n    if (message.to) {\n      if (this.DEBUG) {\n        debug(`Message CALL execution (to: ${message.to})`)\n      }\n      result = await this._executeCall(message as MessageWithTo)\n    } else {\n      if (this.DEBUG) {\n        debug(`Message CREATE execution (to undefined)`)\n      }\n      result = await this._executeCreate(message)\n    }\n    if (this.DEBUG) {\n      const { executionGasUsed, exceptionError, returnValue } = result.execResult\n      debug(\n        `Received message execResult: [ gasUsed=${executionGasUsed} exceptionError=${\n          exceptionError ? `'${exceptionError.error}'` : 'none'\n        } returnValue=${short(returnValue)} gasRefund=${result.execResult.gasRefund ?? 0} ]`\n      )\n    }\n    const err = result.execResult.exceptionError\n    // This clause captures any error which happened during execution\n    // If that is the case, then all refunds are forfeited\n    // There is one exception: if the CODESTORE_OUT_OF_GAS error is thrown\n    // (this only happens the Frontier/Chainstart fork)\n    // then the error is dismissed\n    if (err && err.error !== ERROR.CODESTORE_OUT_OF_GAS) {\n      result.execResult.selfdestruct = new Set()\n      result.execResult.createdAddresses = new Set()\n      result.execResult.gasRefund = BIGINT_0\n    }\n    if (\n      err &&\n      !(this.common.hardfork() === Hardfork.Chainstart && err.error === ERROR.CODESTORE_OUT_OF_GAS)\n    ) {\n      result.execResult.logs = []\n      await this.journal.revert()\n      if (this.common.isActivatedEIP(1153)) this.transientStorage.revert()\n      if (this.DEBUG) {\n        debug(`message checkpoint reverted`)\n      }\n    } else {\n      await this.journal.commit()\n      if (this.common.isActivatedEIP(1153)) this.transientStorage.commit()\n      if (this.DEBUG) {\n        debug(`message checkpoint committed`)\n      }\n    }\n    await this._emit('afterMessage', result)\n\n    if (message.depth === 0 && this._optsCached.profiler?.enabled === true) {\n      this.performanceLogger.stopTimer(timer!, 0)\n    }\n\n    return result\n  }\n\n  /**\n   * Bound to the global VM and therefore\n   * shouldn't be used directly from the evm class\n   */\n  async runCode(opts: EVMRunCodeOpts): Promise<ExecResult> {\n    this._block = opts.block ?? defaultBlock()\n\n    this._tx = {\n      gasPrice: opts.gasPrice ?? BIGINT_0,\n      origin: opts.origin ?? opts.caller ?? Address.zero(),\n    }\n\n    const message = new Message({\n      code: opts.code,\n      data: opts.data,\n      gasLimit: opts.gasLimit ?? BigInt(0xffffff),\n      to: opts.to ?? Address.zero(),\n      caller: opts.caller,\n      value: opts.value,\n      depth: opts.depth,\n      selfdestruct: opts.selfdestruct ?? new Set(),\n      isStatic: opts.isStatic,\n      blobVersionedHashes: opts.blobVersionedHashes,\n    })\n\n    return this.runInterpreter(message, { pc: opts.pc })\n  }\n\n  /**\n   * Returns code for precompile at the given address, or undefined\n   * if no such precompile exists.\n   */\n  getPrecompile(address: Address): PrecompileFunc | undefined {\n    return this.precompiles.get(bytesToUnprefixedHex(address.bytes))\n  }\n\n  /**\n   * Executes a precompiled contract with given data and gas limit.\n   */\n  protected runPrecompile(\n    code: PrecompileFunc,\n    data: Uint8Array,\n    gasLimit: bigint\n  ): Promise<ExecResult> | ExecResult {\n    if (typeof code !== 'function') {\n      throw new Error('Invalid precompile')\n    }\n\n    const opts = {\n      data,\n      gasLimit,\n      common: this.common,\n      _EVM: this,\n      _debug: this.DEBUG ? debugPrecompiles : undefined,\n      stateManager: this.stateManager,\n    }\n\n    return code(opts)\n  }\n\n  protected async _loadCode(message: Message): Promise<void> {\n    if (!message.code) {\n      const precompile = this.getPrecompile(message.codeAddress)\n      if (precompile) {\n        message.code = precompile\n        message.isCompiled = true\n      } else {\n        message.containerCode = await this.stateManager.getContractCode(message.codeAddress)\n        message.isCompiled = false\n        message.chargeCodeAccesses = true\n        if (this.common.isActivatedEIP(3540)) {\n          message.code = getEOFCode(message.containerCode)\n        } else {\n          message.code = message.containerCode\n        }\n      }\n    }\n  }\n\n  protected async _generateAddress(message: Message): Promise<Address> {\n    let addr\n    if (message.salt) {\n      addr = generateAddress2(message.caller.bytes, message.salt, message.code as Uint8Array)\n    } else {\n      let acc = await this.stateManager.getAccount(message.caller)\n      if (!acc) {\n        acc = new Account()\n      }\n      const newNonce = acc.nonce - BIGINT_1\n      addr = generateAddress(message.caller.bytes, bigIntToBytes(newNonce))\n    }\n    return new Address(addr)\n  }\n\n  protected async _reduceSenderBalance(account: Account, message: Message): Promise<void> {\n    account.balance -= message.value\n    if (account.balance < BIGINT_0) {\n      throw new EvmError(ERROR.INSUFFICIENT_BALANCE)\n    }\n    const result = this.journal.putAccount(message.authcallOrigin ?? message.caller, account)\n    if (this.DEBUG) {\n      debug(`Reduced sender (${message.caller}) balance (-> ${account.balance})`)\n    }\n    return result\n  }\n\n  protected async _addToBalance(toAccount: Account, message: MessageWithTo): Promise<void> {\n    const newBalance = toAccount.balance + message.value\n    if (newBalance > MAX_INTEGER) {\n      throw new EvmError(ERROR.VALUE_OVERFLOW)\n    }\n    toAccount.balance = newBalance\n    // putAccount as the nonce may have changed for contract creation\n    const result = this.journal.putAccount(message.to, toAccount)\n    if (this.DEBUG) {\n      debug(`Added toAccount (${message.to}) balance (-> ${toAccount.balance})`)\n    }\n    return result\n  }\n\n  /**\n   * Once the interpreter has finished depth 0, a post-message cleanup should be done\n   */\n  private postMessageCleanup() {\n    if (this.common.isActivatedEIP(1153)) this.transientStorage.clear()\n  }\n\n  /**\n   * This method copies the EVM, current HF and EIP settings\n   * and returns a new EVM instance.\n   *\n   * Note: this is only a shallow copy and both EVM instances\n   * will point to the same underlying state DB.\n   *\n   * @returns EVM\n   */\n  public shallowCopy(): EVM {\n    const common = this.common.copy()\n    common.setHardfork(this.common.hardfork())\n\n    const opts = {\n      ...this._optsCached,\n      common,\n      stateManager: this.stateManager.shallowCopy(),\n    }\n    ;(opts.stateManager as any).common = common\n    return new EVM(opts, this._bn128)\n  }\n\n  public getPerformanceLogs() {\n    return this.performanceLogger.getLogs()\n  }\n\n  public clearPerformanceLogs() {\n    this.performanceLogger.clear()\n  }\n}\n\nexport function OOGResult(gasLimit: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasLimit,\n    exceptionError: new EvmError(ERROR.OUT_OF_GAS),\n  }\n}\n// CodeDeposit OOG Result\nexport function COOGResult(gasUsedCreateCode: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasUsedCreateCode,\n    exceptionError: new EvmError(ERROR.CODESTORE_OUT_OF_GAS),\n  }\n}\n\nexport function INVALID_BYTECODE_RESULT(gasLimit: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasLimit,\n    exceptionError: new EvmError(ERROR.INVALID_BYTECODE_RESULT),\n  }\n}\n\nexport function INVALID_EOF_RESULT(gasLimit: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasLimit,\n    exceptionError: new EvmError(ERROR.INVALID_EOF_FORMAT),\n  }\n}\n\nexport function CodesizeExceedsMaximumError(gasUsed: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasUsed,\n    exceptionError: new EvmError(ERROR.CODESIZE_EXCEEDS_MAXIMUM),\n  }\n}\n\nexport function EvmErrorResult(error: EvmError, gasUsed: bigint): ExecResult {\n  return {\n    returnValue: new Uint8Array(0),\n    executionGasUsed: gasUsed,\n    exceptionError: error,\n  }\n}\n\nexport function defaultBlock(): Block {\n  return {\n    header: {\n      number: BIGINT_0,\n      cliqueSigner: () => Address.zero(),\n      coinbase: Address.zero(),\n      timestamp: BIGINT_0,\n      difficulty: BIGINT_0,\n      prevRandao: zeros(32),\n      gasLimit: BIGINT_0,\n      baseFeePerGas: undefined,\n      getBlobGasPrice: () => undefined,\n    },\n  }\n}\n","export enum ERROR {\n  OUT_OF_GAS = 'out of gas',\n  CODESTORE_OUT_OF_GAS = 'code store out of gas',\n  CODESIZE_EXCEEDS_MAXIMUM = 'code size to deposit exceeds maximum code size',\n  STACK_UNDERFLOW = 'stack underflow',\n  STACK_OVERFLOW = 'stack overflow',\n  INVALID_JUMP = 'invalid JUMP',\n  INVALID_OPCODE = 'invalid opcode',\n  OUT_OF_RANGE = 'value out of range',\n  REVERT = 'revert',\n  STATIC_STATE_CHANGE = 'static state change',\n  INTERNAL_ERROR = 'internal error',\n  CREATE_COLLISION = 'create collision',\n  STOP = 'stop',\n  REFUND_EXHAUSTED = 'refund exhausted',\n  VALUE_OVERFLOW = 'value overflow',\n  INSUFFICIENT_BALANCE = 'insufficient balance',\n  INVALID_BEGINSUB = 'invalid BEGINSUB',\n  INVALID_RETURNSUB = 'invalid RETURNSUB',\n  INVALID_JUMPSUB = 'invalid JUMPSUB',\n  INVALID_BYTECODE_RESULT = 'invalid bytecode deployed',\n  INVALID_EOF_FORMAT = 'invalid EOF format',\n  INITCODE_SIZE_VIOLATION = 'initcode exceeds max initcode size',\n  INVALID_INPUT_LENGTH = 'invalid input length',\n\n  AUTHCALL_UNSET = 'attempting to AUTHCALL without AUTH set',\n  AUTHCALL_NONZERO_VALUEEXT = 'attempting to execute AUTHCALL with nonzero external value',\n  AUTH_INVALID_S = 'invalid Signature: s-values greater than secp256k1n/2 are considered invalid',\n\n  // BLS errors\n  BLS_12_381_INVALID_INPUT_LENGTH = 'invalid input length',\n  BLS_12_381_POINT_NOT_ON_CURVE = 'point not on curve',\n  BLS_12_381_INPUT_EMPTY = 'input is empty',\n  BLS_12_381_FP_NOT_IN_FIELD = 'fp point not in field',\n\n  // Point Evaluation Errors\n  INVALID_COMMITMENT = 'kzg commitment does not match versioned hash',\n  INVALID_INPUTS = 'kzg inputs invalid',\n  INVALID_PROOF = 'kzg proof invalid',\n}\n\nexport class EvmError {\n  error: ERROR\n  errorType: string\n\n  constructor(error: ERROR) {\n    this.error = error\n    this.errorType = 'EvmError'\n  }\n}\n","import { EOF } from './eof.js'\nimport { EVM } from './evm.js'\nimport { ERROR as EVMErrorMessage, EvmError } from './exceptions.js'\nimport { InterpreterStep } from './interpreter.js'\nimport { Message } from './message.js'\nimport { getOpcodesForHF } from './opcodes/index.js'\nimport { PrecompileInput, getActivePrecompiles } from './precompiles/index.js'\nimport {\n  EVMInterface,\n  EVMResult,\n  EVMRunCallOpts,\n  EVMRunCodeOpts,\n  ExecResult,\n  Log,\n  bn128,\n} from './types.js'\nexport {\n  bn128,\n  EOF,\n  EVM,\n  EvmError,\n  EVMErrorMessage,\n  EVMInterface,\n  EVMResult,\n  EVMRunCallOpts,\n  EVMRunCodeOpts,\n  ExecResult,\n  getActivePrecompiles,\n  getOpcodesForHF,\n  InterpreterStep,\n  Log,\n  Message,\n  PrecompileInput,\n}\n","import { ConsensusAlgorithm } from '@ethereumjs/common'\nimport { StatelessVerkleStateManager } from '@ethereumjs/statemanager'\nimport {\n  Account,\n  BIGINT_0,\n  BIGINT_1,\n  MAX_UINT64,\n  bigIntToHex,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\n\nimport { EOF } from './eof.js'\nimport { ERROR, EvmError } from './exceptions.js'\nimport { type EVMPerformanceLogger, type Timer } from './logger.js'\nimport { Memory } from './memory.js'\nimport { Message } from './message.js'\nimport { trap } from './opcodes/index.js'\nimport { Stack } from './stack.js'\n\nimport type { EVM } from './evm.js'\nimport type { Journal } from './journal.js'\nimport type { AsyncOpHandler, Opcode, OpcodeMapEntry } from './opcodes/index.js'\nimport type { Block, Blockchain, EVMProfilerOpts, EVMResult, Log } from './types.js'\nimport type { Common, EVMStateManagerInterface } from '@ethereumjs/common'\nimport type { AccessWitness } from '@ethereumjs/statemanager'\nimport type { Address } from '@ethereumjs/util'\nconst { debug: createDebugLogger } = debugDefault\n\nconst debugGas = createDebugLogger('evm:gas')\n\nexport interface InterpreterOpts {\n  pc?: number\n}\n\n/**\n * Immediate (unprocessed) result of running an EVM bytecode.\n */\nexport interface RunResult {\n  logs: Log[]\n  returnValue?: Uint8Array\n  /**\n   * A set of accounts to selfdestruct\n   */\n  selfdestruct: Set<string>\n\n  /**\n   * A map which tracks which addresses were created (used in EIP 6780)\n   */\n  createdAddresses?: Set<string>\n}\n\nexport interface Env {\n  address: Address\n  caller: Address\n  callData: Uint8Array\n  callValue: bigint\n  code: Uint8Array\n  isStatic: boolean\n  depth: number\n  gasPrice: bigint\n  origin: Address\n  block: Block\n  contract: Account\n  codeAddress: Address /* Different than address for DELEGATECALL and CALLCODE */\n  gasRefund: bigint /* Current value (at begin of the frame) of the gas refund */\n  containerCode?: Uint8Array /** Full container code for EOF1 contracts */\n  blobVersionedHashes: Uint8Array[] /** Versioned hashes for blob transactions */\n  createdAddresses?: Set<string>\n  accessWitness?: AccessWitness\n  chargeCodeAccesses?: boolean\n}\n\nexport interface RunState {\n  programCounter: number\n  opCode: number\n  memory: Memory\n  memoryWordCount: bigint\n  highestMemCost: bigint\n  stack: Stack\n  returnStack: Stack\n  code: Uint8Array\n  shouldDoJumpAnalysis: boolean\n  validJumps: Uint8Array // array of values where validJumps[index] has value 0 (default), 1 (jumpdest), 2 (beginsub)\n  cachedPushes: { [pc: number]: bigint }\n  stateManager: EVMStateManagerInterface\n  blockchain: Blockchain\n  env: Env\n  messageGasLimit?: bigint // Cache value from `gas.ts` to save gas limit for a message call\n  interpreter: Interpreter\n  gasRefund: bigint // Tracks the current refund\n  gasLeft: bigint // Current gas left\n  auth?: Address /** EIP-3074 AUTH parameter */\n  returnBytes: Uint8Array /* Current bytes in the return Uint8Array. Cleared each time a CALL/CREATE is made in the current frame. */\n}\n\nexport interface InterpreterResult {\n  runState: RunState\n  exceptionError?: EvmError\n}\n\nexport interface InterpreterStep {\n  gasLeft: bigint\n  gasRefund: bigint\n  stateManager: EVMStateManagerInterface\n  stack: bigint[]\n  returnStack: bigint[]\n  pc: number\n  depth: number\n  opcode: {\n    name: string\n    fee: number\n    dynamicFee?: bigint\n    isAsync: boolean\n  }\n  account: Account\n  address: Address\n  memory: Uint8Array\n  memoryWordCount: bigint\n  codeAddress: Address\n}\n\n/**\n * Parses and executes EVM bytecode.\n */\nexport class Interpreter {\n  protected _vm: any\n  protected _runState: RunState\n  protected _stateManager: EVMStateManagerInterface\n  protected common: Common\n  public _evm: EVM\n  public journal: Journal\n  _env: Env\n\n  // Keep track of this Interpreter run result\n  // TODO move into Env?\n  _result: RunResult\n\n  // Opcode debuggers (e.g. { 'push': [debug Object], 'sstore': [debug Object], ...})\n  private opDebuggers: { [key: string]: (debug: string) => void } = {}\n\n  private profilerOpts?: EVMProfilerOpts\n  private performanceLogger: EVMPerformanceLogger\n\n  // TODO remove gasLeft as constructor argument\n  constructor(\n    evm: EVM,\n    stateManager: EVMStateManagerInterface,\n    blockchain: Blockchain,\n    env: Env,\n    gasLeft: bigint,\n    journal: Journal,\n    performanceLogs: EVMPerformanceLogger,\n    profilerOpts?: EVMProfilerOpts\n  ) {\n    this._evm = evm\n    this._stateManager = stateManager\n    this.common = this._evm.common\n    this._runState = {\n      programCounter: 0,\n      opCode: 0xfe, // INVALID opcode\n      memory: new Memory(),\n      memoryWordCount: BIGINT_0,\n      highestMemCost: BIGINT_0,\n      stack: new Stack(),\n      returnStack: new Stack(1023), // 1023 return stack height limit per EIP 2315 spec\n      code: new Uint8Array(0),\n      validJumps: Uint8Array.from([]),\n      cachedPushes: {},\n      stateManager: this._stateManager,\n      blockchain,\n      env,\n      shouldDoJumpAnalysis: true,\n      interpreter: this,\n      gasRefund: env.gasRefund,\n      gasLeft,\n      returnBytes: new Uint8Array(0),\n    }\n    this.journal = journal\n    this._env = env\n    this._result = {\n      logs: [],\n      returnValue: undefined,\n      selfdestruct: new Set(),\n    }\n    this.profilerOpts = profilerOpts\n    this.performanceLogger = performanceLogs\n  }\n\n  async run(code: Uint8Array, opts: InterpreterOpts = {}): Promise<InterpreterResult> {\n    if (!this.common.isActivatedEIP(3540) || code[0] !== EOF.FORMAT) {\n      // EIP-3540 isn't active and first byte is not 0xEF - treat as legacy bytecode\n      this._runState.code = code\n    } else if (this.common.isActivatedEIP(3540)) {\n      if (code[1] !== EOF.MAGIC) {\n        // Bytecode contains invalid EOF magic byte\n        return {\n          runState: this._runState,\n          exceptionError: new EvmError(ERROR.INVALID_BYTECODE_RESULT),\n        }\n      }\n      if (code[2] !== EOF.VERSION) {\n        // Bytecode contains invalid EOF version number\n        return {\n          runState: this._runState,\n          exceptionError: new EvmError(ERROR.INVALID_EOF_FORMAT),\n        }\n      }\n      // Code is EOF1 format\n      const codeSections = EOF.codeAnalysis(code)\n      if (!codeSections) {\n        // Code is invalid EOF1 format if `codeSections` is falsy\n        return {\n          runState: this._runState,\n          exceptionError: new EvmError(ERROR.INVALID_EOF_FORMAT),\n        }\n      }\n\n      if (codeSections.data) {\n        // Set code to EOF container code section which starts at byte position 10 if data section is present\n        this._runState.code = code.subarray(10, 10 + codeSections!.code)\n      } else {\n        // Set code to EOF container code section which starts at byte position 7 if no data section is present\n        this._runState.code = code.subarray(7, 7 + codeSections!.code)\n      }\n    }\n    this._runState.programCounter = opts.pc ?? this._runState.programCounter\n    // Check that the programCounter is in range\n    const pc = this._runState.programCounter\n    if (pc !== 0 && (pc < 0 || pc >= this._runState.code.length)) {\n      throw new Error('Internal error: program counter not in range')\n    }\n\n    let err\n    let cachedOpcodes: OpcodeMapEntry[]\n    let doJumpAnalysis = true\n\n    let timer: Timer | undefined\n    let overheadTimer: Timer | undefined\n    if (this.profilerOpts?.enabled === true && this.performanceLogger.hasTimer()) {\n      timer = this.performanceLogger.pauseTimer()\n      overheadTimer = this.performanceLogger.startTimer('Overhead')\n    }\n\n    // Iterate through the given ops until something breaks or we hit STOP\n    while (this._runState.programCounter < this._runState.code.length) {\n      const programCounter = this._runState.programCounter\n      let opCode: number\n      let opCodeObj: OpcodeMapEntry\n      if (doJumpAnalysis) {\n        opCode = this._runState.code[programCounter]\n        // Only run the jump destination analysis if `code` actually contains a JUMP/JUMPI/JUMPSUB opcode\n        if (opCode === 0x56 || opCode === 0x57 || opCode === 0x5e) {\n          const { jumps, pushes, opcodesCached } = this._getValidJumpDests(this._runState.code)\n          this._runState.validJumps = jumps\n          this._runState.cachedPushes = pushes\n          this._runState.shouldDoJumpAnalysis = false\n          cachedOpcodes = opcodesCached\n          doJumpAnalysis = false\n        }\n      } else {\n        opCodeObj = cachedOpcodes![programCounter]\n        opCode = opCodeObj.opcodeInfo.code\n      }\n\n      // if its an invalid opcode with verkle activated, then check if its because of a missing code\n      // chunk in the witness, and throw appropriate error to distinguish from an actual invalid opcod\n      if (\n        opCode === 0xfe &&\n        this.common.isActivatedEIP(6800) &&\n        this._runState.stateManager instanceof StatelessVerkleStateManager\n      ) {\n        const contract = this._runState.interpreter.getAddress()\n        if (\n          !(this._runState.stateManager as StatelessVerkleStateManager).checkChunkWitnessPresent(\n            contract,\n            programCounter\n          )\n        ) {\n          throw Error(`Invalid witness with missing codeChunk for pc=${programCounter}`)\n        }\n      }\n\n      this._runState.opCode = opCode!\n\n      try {\n        if (overheadTimer !== undefined) {\n          this.performanceLogger.pauseTimer()\n        }\n        await this.runStep(opCodeObj!)\n        if (overheadTimer !== undefined) {\n          this.performanceLogger.unpauseTimer(overheadTimer)\n        }\n      } catch (e: any) {\n        if (overheadTimer !== undefined) {\n          this.performanceLogger.unpauseTimer(overheadTimer)\n        }\n        // re-throw on non-VM errors\n        if (!('errorType' in e && e.errorType === 'EvmError')) {\n          throw e\n        }\n        // STOP is not an exception\n        if (e.error !== ERROR.STOP) {\n          err = e\n        }\n        break\n      }\n    }\n\n    if (timer !== undefined) {\n      this.performanceLogger.stopTimer(overheadTimer!, 0)\n      this.performanceLogger.unpauseTimer(timer)\n    }\n\n    return {\n      runState: this._runState,\n      exceptionError: err,\n    }\n  }\n\n  /**\n   * Executes the opcode to which the program counter is pointing,\n   * reducing its base gas cost, and increments the program counter.\n   */\n  async runStep(opcodeObj?: OpcodeMapEntry): Promise<void> {\n    const opEntry = opcodeObj ?? this.lookupOpInfo(this._runState.opCode)\n    const opInfo = opEntry.opcodeInfo\n\n    let timer: Timer\n\n    if (this.profilerOpts?.enabled === true) {\n      timer = this.performanceLogger.startTimer(opInfo.name)\n    }\n\n    let gas = opInfo.feeBigInt\n\n    try {\n      if (opInfo.dynamicGas) {\n        // This function updates the gas in-place.\n        // It needs the base fee, for correct gas limit calculation for the CALL opcodes\n        gas = await opEntry.gasHandler(this._runState, gas, this.common)\n      }\n      if (this.common.isActivatedEIP(6800) && this._env.chargeCodeAccesses === true) {\n        const contract = this._runState.interpreter.getAddress()\n        const statelessGas =\n          this._runState.env.accessWitness!.touchCodeChunksRangeOnReadAndChargeGas(\n            contract,\n            this._runState.programCounter,\n            this._runState.programCounter\n          )\n        gas += statelessGas\n        debugGas(`codechunk accessed statelessGas=${statelessGas} (-> ${gas})`)\n      }\n\n      if (this._evm.events.listenerCount('step') > 0 || this._evm.DEBUG) {\n        // Only run this stepHook function if there is an event listener (e.g. test runner)\n        // or if the vm is running in debug mode (to display opcode debug logs)\n        await this._runStepHook(gas, this.getGasLeft())\n      }\n\n      // Check for invalid opcode\n      if (opInfo.isInvalid) {\n        throw new EvmError(ERROR.INVALID_OPCODE)\n      }\n\n      // Reduce opcode's base fee\n      this.useGas(gas, opInfo)\n\n      // Advance program counter\n      this._runState.programCounter++\n\n      // Execute opcode handler\n      const opFn = opEntry.opHandler\n\n      if (opInfo.isAsync) {\n        await (opFn as AsyncOpHandler).apply(null, [this._runState, this.common])\n      } else {\n        opFn.apply(null, [this._runState, this.common])\n      }\n    } finally {\n      if (this.profilerOpts?.enabled === true) {\n        this.performanceLogger.stopTimer(\n          timer!,\n          Number(gas),\n          'opcodes',\n          opInfo.fee,\n          Number(gas) - opInfo.fee\n        )\n      }\n    }\n  }\n\n  /**\n   * Get info for an opcode from EVM's list of opcodes.\n   */\n  lookupOpInfo(op: number): OpcodeMapEntry {\n    return (<any>this._evm)._opcodeMap[op]\n  }\n\n  async _runStepHook(dynamicFee: bigint, gasLeft: bigint): Promise<void> {\n    const opcodeInfo = this.lookupOpInfo(this._runState.opCode)\n    const opcode = opcodeInfo.opcodeInfo\n    const eventObj: InterpreterStep = {\n      pc: this._runState.programCounter,\n      gasLeft,\n      gasRefund: this._runState.gasRefund,\n      opcode: {\n        name: opcode.fullName,\n        fee: opcode.fee,\n        dynamicFee,\n        isAsync: opcode.isAsync,\n      },\n      stack: this._runState.stack.getStack(),\n      returnStack: this._runState.returnStack.getStack(),\n      depth: this._env.depth,\n      address: this._env.address,\n      account: this._env.contract,\n      memory: this._runState.memory._store.subarray(0, Number(this._runState.memoryWordCount) * 32),\n      memoryWordCount: this._runState.memoryWordCount,\n      codeAddress: this._env.codeAddress,\n      stateManager: this._runState.stateManager,\n    }\n\n    if (this._evm.DEBUG) {\n      // Create opTrace for debug functionality\n      let hexStack = []\n      hexStack = eventObj.stack.map((item: any) => {\n        return bigIntToHex(BigInt(item))\n      })\n\n      const name = eventObj.opcode.name\n\n      const opTrace = {\n        pc: eventObj.pc,\n        op: name,\n        gas: bigIntToHex(eventObj.gasLeft),\n        gasCost: bigIntToHex(dynamicFee),\n        stack: hexStack,\n        depth: eventObj.depth,\n      }\n\n      if (!(name in this.opDebuggers)) {\n        this.opDebuggers[name] = createDebugLogger(`evm:ops:${name}`)\n      }\n      this.opDebuggers[name](JSON.stringify(opTrace))\n    }\n\n    /**\n     * The `step` event for trace output\n     *\n     * @event Event: step\n     * @type {Object}\n     * @property {Number} pc representing the program counter\n     * @property {Object} opcode the next opcode to be ran\n     * @property {string}     opcode.name\n     * @property {fee}        opcode.number Base fee of the opcode\n     * @property {dynamicFee} opcode.dynamicFee Dynamic opcode fee\n     * @property {boolean}    opcode.isAsync opcode is async\n     * @property {BigInt} gasLeft amount of gasLeft\n     * @property {BigInt} gasRefund gas refund\n     * @property {StateManager} stateManager a {@link StateManager} instance\n     * @property {Array} stack an `Array` of `Uint8Arrays` containing the stack\n     * @property {Array} returnStack the return stack\n     * @property {Account} account the Account which owns the code running\n     * @property {Address} address the address of the `account`\n     * @property {Number} depth the current number of calls deep the contract is\n     * @property {Uint8Array} memory the memory of the EVM as a `Uint8Array`\n     * @property {BigInt} memoryWordCount current size of memory in words\n     * @property {Address} codeAddress the address of the code which is currently being ran (this differs from `address` in a `DELEGATECALL` and `CALLCODE` call)\n     */\n    await (this._evm as any)._emit('step', eventObj)\n  }\n\n  // Returns all valid jump and jumpsub destinations.\n  _getValidJumpDests(code: Uint8Array) {\n    const jumps = new Uint8Array(code.length).fill(0)\n    const pushes: { [pc: number]: bigint } = {}\n\n    const opcodesCached = Array(code.length)\n\n    for (let i = 0; i < code.length; i++) {\n      const opcode = code[i]\n      opcodesCached[i] = this.lookupOpInfo(opcode)\n      // skip over PUSH0-32 since no jump destinations in the middle of a push block\n      if (opcode <= 0x7f) {\n        if (opcode >= 0x60) {\n          const extraSteps = opcode - 0x5f\n          const push = bytesToBigInt(code.slice(i + 1, i + opcode - 0x5e))\n          pushes[i + 1] = push\n          i += extraSteps\n        } else if (opcode === 0x5b) {\n          // Define a JUMPDEST as a 1 in the valid jumps array\n          jumps[i] = 1\n        } else if (opcode === 0x5c) {\n          // Define a BEGINSUB as a 2 in the valid jumps array\n          jumps[i] = 2\n        }\n      }\n    }\n    return { jumps, pushes, opcodesCached }\n  }\n\n  /**\n   * Subtracts an amount from the gas counter.\n   * @param amount - Amount of gas to consume\n   * @param context - Usage context for debugging\n   * @throws if out of gas\n   */\n  useGas(amount: bigint, context?: string | Opcode): void {\n    this._runState.gasLeft -= amount\n    if (this._evm.DEBUG) {\n      let tstr = ''\n      if (typeof context === 'string') {\n        tstr = context + ': '\n      } else if (context !== undefined) {\n        tstr = `${context.name} fee: `\n      }\n      debugGas(`${tstr}used ${amount} gas (-> ${this._runState.gasLeft})`)\n    }\n    if (this._runState.gasLeft < BIGINT_0) {\n      this._runState.gasLeft = BIGINT_0\n      trap(ERROR.OUT_OF_GAS)\n    }\n  }\n\n  /**\n   * Adds a positive amount to the gas counter.\n   * @param amount - Amount of gas refunded\n   * @param context - Usage context for debugging\n   */\n  refundGas(amount: bigint, context?: string): void {\n    if (this._evm.DEBUG) {\n      debugGas(\n        `${typeof context === 'string' ? context + ': ' : ''}refund ${amount} gas (-> ${\n          this._runState.gasRefund\n        })`\n      )\n    }\n    this._runState.gasRefund += amount\n  }\n\n  /**\n   * Reduces amount of gas to be refunded by a positive value.\n   * @param amount - Amount to subtract from gas refunds\n   * @param context - Usage context for debugging\n   */\n  subRefund(amount: bigint, context?: string): void {\n    if (this._evm.DEBUG) {\n      debugGas(\n        `${typeof context === 'string' ? context + ': ' : ''}sub gas refund ${amount} (-> ${\n          this._runState.gasRefund\n        })`\n      )\n    }\n    this._runState.gasRefund -= amount\n    if (this._runState.gasRefund < BIGINT_0) {\n      this._runState.gasRefund = BIGINT_0\n      trap(ERROR.REFUND_EXHAUSTED)\n    }\n  }\n\n  /**\n   * Increments the internal gasLeft counter. Used for adding callStipend.\n   * @param amount - Amount to add\n   */\n  addStipend(amount: bigint): void {\n    if (this._evm.DEBUG) {\n      debugGas(`add stipend ${amount} (-> ${this._runState.gasLeft})`)\n    }\n    this._runState.gasLeft += amount\n  }\n\n  /**\n   * Returns balance of the given account.\n   * @param address - Address of account\n   */\n  async getExternalBalance(address: Address): Promise<bigint> {\n    // shortcut if current account\n    if (address.equals(this._env.address)) {\n      return this._env.contract.balance\n    }\n\n    let account = await this._stateManager.getAccount(address)\n    if (!account) {\n      account = new Account()\n    }\n    return account.balance\n  }\n\n  /**\n   * Store 256-bit a value in memory to persistent storage.\n   */\n  async storageStore(key: Uint8Array, value: Uint8Array): Promise<void> {\n    await this._stateManager.putContractStorage(this._env.address, key, value)\n    const account = await this._stateManager.getAccount(this._env.address)\n    if (!account) {\n      throw new Error('could not read account while persisting memory')\n    }\n    this._env.contract = account\n  }\n\n  /**\n   * Loads a 256-bit value to memory from persistent storage.\n   * @param key - Storage key\n   * @param original - If true, return the original storage value (default: false)\n   */\n  async storageLoad(key: Uint8Array, original = false): Promise<Uint8Array> {\n    if (original) {\n      return this._stateManager.originalStorageCache.get(this._env.address, key)\n    } else {\n      return this._stateManager.getContractStorage(this._env.address, key)\n    }\n  }\n\n  /**\n   * Store 256-bit a value in memory to transient storage.\n   * @param address Address to use\n   * @param key Storage key\n   * @param value Storage value\n   */\n  transientStorageStore(key: Uint8Array, value: Uint8Array): void {\n    return this._evm.transientStorage.put(this._env.address, key, value)\n  }\n\n  /**\n   * Loads a 256-bit value to memory from transient storage.\n   * @param address Address to use\n   * @param key Storage key\n   */\n  transientStorageLoad(key: Uint8Array): Uint8Array {\n    return this._evm.transientStorage.get(this._env.address, key)\n  }\n\n  /**\n   * Set the returning output data for the execution.\n   * @param returnData - Output data to return\n   */\n  finish(returnData: Uint8Array): void {\n    this._result.returnValue = returnData\n    trap(ERROR.STOP)\n  }\n\n  /**\n   * Set the returning output data for the execution. This will halt the\n   * execution immediately and set the execution result to \"reverted\".\n   * @param returnData - Output data to return\n   */\n  revert(returnData: Uint8Array): void {\n    this._result.returnValue = returnData\n    trap(ERROR.REVERT)\n  }\n\n  /**\n   * Returns address of currently executing account.\n   */\n  getAddress(): Address {\n    return this._env.address\n  }\n\n  /**\n   * Returns balance of self.\n   */\n  getSelfBalance(): bigint {\n    return this._env.contract.balance\n  }\n\n  /**\n   * Returns the deposited value by the instruction/transaction\n   * responsible for this execution.\n   */\n  getCallValue(): bigint {\n    return this._env.callValue\n  }\n\n  /**\n   * Returns input data in current environment. This pertains to the input\n   * data passed with the message call instruction or transaction.\n   */\n  getCallData(): Uint8Array {\n    return this._env.callData\n  }\n\n  /**\n   * Returns size of input data in current environment. This pertains to the\n   * input data passed with the message call instruction or transaction.\n   */\n  getCallDataSize(): bigint {\n    return BigInt(this._env.callData.length)\n  }\n\n  /**\n   * Returns caller address. This is the address of the account\n   * that is directly responsible for this execution.\n   */\n  getCaller(): bigint {\n    return bytesToBigInt(this._env.caller.bytes)\n  }\n\n  /**\n   * Returns the size of code running in current environment.\n   */\n  getCodeSize(): bigint {\n    return BigInt(this._env.containerCode ? this._env.containerCode.length : this._env.code.length)\n  }\n\n  /**\n   * Returns the code running in current environment.\n   */\n  getCode(): Uint8Array {\n    return this._env.containerCode ?? this._env.code\n  }\n\n  /**\n   * Returns the current gasCounter.\n   */\n  getGasLeft(): bigint {\n    return this._runState.gasLeft\n  }\n\n  /**\n   * Returns size of current return data buffer. This contains the return data\n   * from the last executed call, callCode, callDelegate, callStatic or create.\n   * Note: create only fills the return data buffer in case of a failure.\n   */\n  getReturnDataSize(): bigint {\n    return BigInt(this._runState.returnBytes.length)\n  }\n\n  /**\n   * Returns the current return data buffer. This contains the return data\n   * from last executed call, callCode, callDelegate, callStatic or create.\n   * Note: create only fills the return data buffer in case of a failure.\n   */\n  getReturnData(): Uint8Array {\n    return this._runState.returnBytes\n  }\n\n  /**\n   * Returns true if the current call must be executed statically.\n   */\n  isStatic(): boolean {\n    return this._env.isStatic\n  }\n\n  /**\n   * Returns price of gas in current environment.\n   */\n  getTxGasPrice(): bigint {\n    return this._env.gasPrice\n  }\n\n  /**\n   * Returns the execution's origination address. This is the\n   * sender of original transaction; it is never an account with\n   * non-empty associated code.\n   */\n  getTxOrigin(): bigint {\n    return bytesToBigInt(this._env.origin.bytes)\n  }\n\n  /**\n   * Returns the block’s number.\n   */\n  getBlockNumber(): bigint {\n    return this._env.block.header.number\n  }\n\n  /**\n   * Returns the block's beneficiary address.\n   */\n  getBlockCoinbase(): bigint {\n    let coinbase: Address\n    if (this.common.consensusAlgorithm() === ConsensusAlgorithm.Clique) {\n      coinbase = this._env.block.header.cliqueSigner()\n    } else {\n      coinbase = this._env.block.header.coinbase\n    }\n    return bytesToBigInt(coinbase.toBytes())\n  }\n\n  /**\n   * Returns the block's timestamp.\n   */\n  getBlockTimestamp(): bigint {\n    return this._env.block.header.timestamp\n  }\n\n  /**\n   * Returns the block's difficulty.\n   */\n  getBlockDifficulty(): bigint {\n    return this._env.block.header.difficulty\n  }\n\n  /**\n   * Returns the block's prevRandao field.\n   */\n  getBlockPrevRandao(): bigint {\n    return bytesToBigInt(this._env.block.header.prevRandao)\n  }\n\n  /**\n   * Returns the block's gas limit.\n   */\n  getBlockGasLimit(): bigint {\n    return this._env.block.header.gasLimit\n  }\n\n  /**\n   * Returns the Base Fee of the block as proposed in [EIP-3198](https://eips.ethereum.org/EIPS/eip-3198)\n   */\n  getBlockBaseFee(): bigint {\n    const baseFee = this._env.block.header.baseFeePerGas\n    if (baseFee === undefined) {\n      // Sanity check\n      throw new Error('Block has no Base Fee')\n    }\n    return baseFee\n  }\n\n  /**\n   * Returns the Blob Base Fee of the block as proposed in [EIP-7516](https://eips.ethereum.org/EIPS/eip-7516)\n   */\n  getBlobBaseFee(): bigint {\n    const blobBaseFee = this._env.block.header.getBlobGasPrice()\n    if (blobBaseFee === undefined) {\n      // Sanity check\n      throw new Error('Block has no Blob Base Fee')\n    }\n    return blobBaseFee\n  }\n\n  /**\n   * Returns the chain ID for current chain. Introduced for the\n   * CHAINID opcode proposed in [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344).\n   */\n  getChainId(): bigint {\n    return this.common.chainId()\n  }\n\n  /**\n   * Sends a message with arbitrary data to a given address path.\n   */\n  async call(gasLimit: bigint, address: Address, value: bigint, data: Uint8Array): Promise<bigint> {\n    const msg = new Message({\n      caller: this._env.address,\n      gasLimit,\n      to: address,\n      value,\n      data,\n      isStatic: this._env.isStatic,\n      depth: this._env.depth + 1,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    return this._baseCall(msg)\n  }\n\n  /**\n   * Sends a message with arbitrary data to a given address path.\n   */\n  async authcall(\n    gasLimit: bigint,\n    address: Address,\n    value: bigint,\n    data: Uint8Array\n  ): Promise<bigint> {\n    const msg = new Message({\n      caller: this._runState.auth,\n      gasLimit,\n      to: address,\n      value,\n      data,\n      isStatic: this._env.isStatic,\n      depth: this._env.depth + 1,\n      authcallOrigin: this._env.address,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    return this._baseCall(msg)\n  }\n\n  /**\n   * Message-call into this account with an alternative account's code.\n   */\n  async callCode(\n    gasLimit: bigint,\n    address: Address,\n    value: bigint,\n    data: Uint8Array\n  ): Promise<bigint> {\n    const msg = new Message({\n      caller: this._env.address,\n      gasLimit,\n      to: this._env.address,\n      codeAddress: address,\n      value,\n      data,\n      isStatic: this._env.isStatic,\n      depth: this._env.depth + 1,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    return this._baseCall(msg)\n  }\n\n  /**\n   * Sends a message with arbitrary data to a given address path, but disallow\n   * state modifications. This includes log, create, selfdestruct and call with\n   * a non-zero value.\n   */\n  async callStatic(\n    gasLimit: bigint,\n    address: Address,\n    value: bigint,\n    data: Uint8Array\n  ): Promise<bigint> {\n    const msg = new Message({\n      caller: this._env.address,\n      gasLimit,\n      to: address,\n      value,\n      data,\n      isStatic: true,\n      depth: this._env.depth + 1,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    return this._baseCall(msg)\n  }\n\n  /**\n   * Message-call into this account with an alternative account’s code, but\n   * persisting the current values for sender and value.\n   */\n  async callDelegate(\n    gasLimit: bigint,\n    address: Address,\n    value: bigint,\n    data: Uint8Array\n  ): Promise<bigint> {\n    const msg = new Message({\n      caller: this._env.caller,\n      gasLimit,\n      to: this._env.address,\n      codeAddress: address,\n      value,\n      data,\n      isStatic: this._env.isStatic,\n      delegatecall: true,\n      depth: this._env.depth + 1,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    return this._baseCall(msg)\n  }\n\n  async _baseCall(msg: Message): Promise<bigint> {\n    const selfdestruct = new Set(this._result.selfdestruct)\n    msg.selfdestruct = selfdestruct\n    msg.gasRefund = this._runState.gasRefund\n\n    // empty the return data Uint8Array\n    this._runState.returnBytes = new Uint8Array(0)\n    let createdAddresses: Set<string>\n    if (this.common.isActivatedEIP(6780)) {\n      createdAddresses = new Set(this._result.createdAddresses)\n      msg.createdAddresses = createdAddresses\n    }\n\n    // empty the return data Uint8Array\n    this._runState.returnBytes = new Uint8Array(0)\n\n    // Check if account has enough ether and max depth not exceeded\n    if (\n      this._env.depth >= Number(this.common.param('vm', 'stackLimit')) ||\n      (msg.delegatecall !== true && this._env.contract.balance < msg.value)\n    ) {\n      return BIGINT_0\n    }\n\n    const results = await this._evm.runCall({ message: msg })\n\n    if (results.execResult.logs) {\n      this._result.logs = this._result.logs.concat(results.execResult.logs)\n    }\n\n    // this should always be safe\n    this.useGas(results.execResult.executionGasUsed, 'CALL, STATICCALL, DELEGATECALL, CALLCODE')\n\n    // Set return value\n    if (\n      results.execResult.returnValue !== undefined &&\n      (!results.execResult.exceptionError ||\n        results.execResult.exceptionError.error === ERROR.REVERT)\n    ) {\n      this._runState.returnBytes = results.execResult.returnValue\n    }\n\n    if (!results.execResult.exceptionError) {\n      for (const addressToSelfdestructHex of selfdestruct) {\n        this._result.selfdestruct.add(addressToSelfdestructHex)\n      }\n      if (this.common.isActivatedEIP(6780)) {\n        // copy over the items to result via iterator\n        for (const item of createdAddresses!) {\n          this._result.createdAddresses!.add(item)\n        }\n      }\n      // update stateRoot on current contract\n      const account = await this._stateManager.getAccount(this._env.address)\n      if (!account) {\n        throw new Error('could not read contract account')\n      }\n      this._env.contract = account\n      this._runState.gasRefund = results.execResult.gasRefund ?? BIGINT_0\n    }\n\n    return this._getReturnCode(results)\n  }\n\n  /**\n   * Creates a new contract with a given value.\n   */\n  async create(\n    gasLimit: bigint,\n    value: bigint,\n    data: Uint8Array,\n    salt?: Uint8Array\n  ): Promise<bigint> {\n    const selfdestruct = new Set(this._result.selfdestruct)\n    const caller = this._env.address\n    const depth = this._env.depth + 1\n\n    // empty the return data buffer\n    this._runState.returnBytes = new Uint8Array(0)\n\n    // Check if account has enough ether and max depth not exceeded\n    if (\n      this._env.depth >= Number(this.common.param('vm', 'stackLimit')) ||\n      this._env.contract.balance < value\n    ) {\n      return BIGINT_0\n    }\n\n    // EIP-2681 check\n    if (this._env.contract.nonce >= MAX_UINT64) {\n      return BIGINT_0\n    }\n\n    this._env.contract.nonce += BIGINT_1\n    await this.journal.putAccount(this._env.address, this._env.contract)\n\n    if (this.common.isActivatedEIP(3860)) {\n      if (\n        data.length > Number(this.common.param('vm', 'maxInitCodeSize')) &&\n        this._evm.allowUnlimitedInitCodeSize === false\n      ) {\n        return BIGINT_0\n      }\n    }\n\n    const message = new Message({\n      caller,\n      gasLimit,\n      value,\n      data,\n      salt,\n      depth,\n      selfdestruct,\n      gasRefund: this._runState.gasRefund,\n      blobVersionedHashes: this._env.blobVersionedHashes,\n    })\n\n    let createdAddresses: Set<string>\n    if (this.common.isActivatedEIP(6780)) {\n      createdAddresses = new Set(this._result.createdAddresses)\n      message.createdAddresses = createdAddresses\n    }\n\n    const results = await this._evm.runCall({ message })\n\n    if (results.execResult.logs) {\n      this._result.logs = this._result.logs.concat(results.execResult.logs)\n    }\n\n    // this should always be safe\n    this.useGas(results.execResult.executionGasUsed, 'CREATE')\n\n    // Set return buffer in case revert happened\n    if (\n      results.execResult.exceptionError &&\n      results.execResult.exceptionError.error === ERROR.REVERT\n    ) {\n      this._runState.returnBytes = results.execResult.returnValue\n    }\n\n    if (\n      !results.execResult.exceptionError ||\n      results.execResult.exceptionError.error === ERROR.CODESTORE_OUT_OF_GAS\n    ) {\n      for (const addressToSelfdestructHex of selfdestruct) {\n        this._result.selfdestruct.add(addressToSelfdestructHex)\n      }\n      if (this.common.isActivatedEIP(6780)) {\n        // copy over the items to result via iterator\n        for (const item of createdAddresses!) {\n          this._result.createdAddresses!.add(item)\n        }\n      }\n      // update stateRoot on current contract\n      const account = await this._stateManager.getAccount(this._env.address)\n      if (!account) {\n        throw new Error('could not read contract account')\n      }\n      this._env.contract = account\n      this._runState.gasRefund = results.execResult.gasRefund ?? BIGINT_0\n      if (results.createdAddress) {\n        // push the created address to the stack\n        return bytesToBigInt(results.createdAddress.bytes)\n      }\n    }\n\n    return this._getReturnCode(results)\n  }\n\n  /**\n   * Creates a new contract with a given value. Generates\n   * a deterministic address via CREATE2 rules.\n   */\n  async create2(\n    gasLimit: bigint,\n    value: bigint,\n    data: Uint8Array,\n    salt: Uint8Array\n  ): Promise<bigint> {\n    return this.create(gasLimit, value, data, salt)\n  }\n\n  /**\n   * Mark account for later deletion and give the remaining balance to the\n   * specified beneficiary address. This will cause a trap and the\n   * execution will be aborted immediately.\n   * @param toAddress - Beneficiary address\n   */\n  async selfDestruct(toAddress: Address): Promise<void> {\n    return this._selfDestruct(toAddress)\n  }\n\n  async _selfDestruct(toAddress: Address): Promise<void> {\n    // only add to refund if this is the first selfdestruct for the address\n    if (!this._result.selfdestruct.has(bytesToHex(this._env.address.bytes))) {\n      this.refundGas(this.common.param('gasPrices', 'selfdestructRefund'))\n    }\n\n    this._result.selfdestruct.add(bytesToHex(this._env.address.bytes))\n\n    const toSelf = equalsBytes(toAddress.bytes, this._env.address.bytes)\n\n    // Add to beneficiary balance\n    if (!toSelf) {\n      let toAccount = await this._stateManager.getAccount(toAddress)\n      if (!toAccount) {\n        toAccount = new Account()\n      }\n      toAccount.balance += this._env.contract.balance\n      await this.journal.putAccount(toAddress, toAccount)\n    }\n\n    // Modify the account (set balance to 0) flag\n    let doModify = !this.common.isActivatedEIP(6780) // Always do this if 6780 is not active\n\n    if (!doModify) {\n      // If 6780 is active, check if current address is being created. If so\n      // old behavior of SELFDESTRUCT exists and balance should be set to 0 of this account\n      // (i.e. burn the ETH in current account)\n      doModify = this._env.createdAddresses!.has(this._env.address.toString())\n      // If contract is not being created in this tx...\n      if (!doModify) {\n        // Check if ETH being sent to another account (thus set balance to 0)\n        doModify = !toSelf\n      }\n    }\n\n    // Set contract balance to 0\n    if (doModify) {\n      await this._stateManager.modifyAccountFields(this._env.address, {\n        balance: BIGINT_0,\n      })\n    }\n\n    trap(ERROR.STOP)\n  }\n\n  /**\n   * Creates a new log in the current environment.\n   */\n  log(data: Uint8Array, numberOfTopics: number, topics: Uint8Array[]): void {\n    if (numberOfTopics < 0 || numberOfTopics > 4) {\n      trap(ERROR.OUT_OF_RANGE)\n    }\n\n    if (topics.length !== numberOfTopics) {\n      trap(ERROR.INTERNAL_ERROR)\n    }\n\n    const log: Log = [this._env.address.bytes, topics, data]\n    this._result.logs.push(log)\n  }\n\n  private _getReturnCode(results: EVMResult) {\n    if (results.execResult.exceptionError) {\n      return BIGINT_0\n    } else {\n      return BIGINT_1\n    }\n  }\n}\n","import { Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  RIPEMD160_ADDRESS_STRING,\n  bigIntToHex,\n  bytesToHex,\n  bytesToUnprefixedHex,\n  stripHexPrefix,\n  toBytes,\n  unprefixedHexToBytes,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\n\nimport type { Common, EVMStateManagerInterface } from '@ethereumjs/common'\nimport type { Account } from '@ethereumjs/util'\nimport type { Debugger } from 'debug'\nconst { debug: createDebugLogger } = debugDefault\n\ntype AddressString = string\ntype HashString = string\ntype SlotString = string\ntype WarmSlots = Set<SlotString>\n\ntype JournalType = Map<AddressString, WarmSlots>\n\n/**\n * Journal Diff Item:\n * Index 0: remove warm address\n * Index 1: remove warm slots for this warm address\n * Index 2: remove touched\n */\n\ntype JournalDiffItem = [Set<AddressString>, Map<AddressString, Set<SlotString>>, Set<AddressString>]\n\ntype JournalHeight = number\n\nexport class Journal {\n  private stateManager: EVMStateManagerInterface\n  private common: Common\n  private DEBUG: boolean\n  private _debug: Debugger\n\n  private journal!: JournalType\n  private alwaysWarmJournal!: Map<AddressString, Set<SlotString>>\n  private touched!: Set<AddressString>\n  private journalDiff!: [JournalHeight, JournalDiffItem][]\n\n  private journalHeight: JournalHeight\n\n  public accessList?: Map<AddressString, Set<SlotString>>\n  public preimages?: Map<HashString, Uint8Array>\n\n  constructor(stateManager: EVMStateManagerInterface, common: Common) {\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n\n    this._debug = createDebugLogger('statemanager:statemanager')\n\n    // TODO maybe call into this.clearJournal\n    this.cleanJournal()\n    this.journalHeight = 0\n\n    this.stateManager = stateManager\n    this.common = common\n  }\n\n  /**\n   * Clears the internal `accessList` map, and mark this journal to start reporting\n   * which addresses and storages have been accessed\n   */\n  startReportingAccessList() {\n    this.accessList = new Map()\n  }\n\n  /**\n   * Clears the internal `preimages` map, and marks this journal to start reporting\n   * the images (hashed addresses) of the accounts that have been accessed\n   */\n  startReportingPreimages() {\n    this.preimages = new Map()\n  }\n\n  async putAccount(address: Address, account: Account | undefined) {\n    this.touchAddress(address)\n    return this.stateManager.putAccount(address, account)\n  }\n\n  async deleteAccount(address: Address) {\n    this.touchAddress(address)\n    await this.stateManager.deleteAccount(address)\n  }\n\n  private touchAddress(address: Address): void {\n    const str = address.toString().slice(2)\n    this.touchAccount(str)\n  }\n\n  private touchAccount(address: string) {\n    // If preimages are being reported, add the address to the preimages map\n    if (this.preimages !== undefined) {\n      const bytesAddress = unprefixedHexToBytes(address)\n      if (this.stateManager.getAppliedKey === undefined) {\n        throw new Error(\n          'touchAccount: stateManager.getAppliedKey can not be undefined if preimage storing is enabled'\n        )\n      }\n      const hashedKey = this.stateManager.getAppliedKey(bytesAddress)\n      this.preimages.set(bytesToHex(hashedKey), bytesAddress)\n    }\n\n    if (!this.touched.has(address)) {\n      this.touched.add(address)\n      const diffArr = this.journalDiff[this.journalDiff.length - 1][1]\n      diffArr[2].add(address)\n    }\n  }\n  async commit() {\n    this.journalHeight--\n    this.journalDiff.push([this.journalHeight, [new Set(), new Map(), new Set()]])\n    await this.stateManager.commit()\n  }\n\n  async checkpoint() {\n    this.journalHeight++\n    this.journalDiff.push([this.journalHeight, [new Set(), new Map(), new Set()]])\n    await this.stateManager.checkpoint()\n  }\n\n  async revert() {\n    // Loop backwards over the journal diff and stop if we are at a lower height than current journal height\n    // During this process, delete all items.\n    // TODO check this logic, if there is this array: height [4,3,4] and we revert height 4, then the final\n    // diff arr will be reverted, but it will stop at height 3, so [4,3] are both not reverted..?\n    let finalI: number\n    for (let i = this.journalDiff.length - 1; i >= 0; i--) {\n      finalI = i\n      const [height, diff] = this.journalDiff[i]\n      if (height < this.journalHeight) {\n        break\n      }\n\n      const addressSet = diff[0]\n      const slotsMap = diff[1]\n      const touchedSet = diff[2]\n\n      for (const address of addressSet) {\n        // Sanity check, journal should have the item\n        if (this.journal.has(address)) {\n          this.journal.delete(address)\n        }\n      }\n\n      for (const [address, delSlots] of slotsMap) {\n        // Sanity check, the address SHOULD be in the journal\n        if (this.journal.has(address)) {\n          const slots = this.journal.get(address)!\n          for (const delSlot of delSlots) {\n            slots.delete(delSlot)\n          }\n        }\n      }\n\n      for (const address of touchedSet) {\n        // Delete the address from the journal\n        if (address !== RIPEMD160_ADDRESS_STRING) {\n          // If RIPEMD160 is touched, keep it touched.\n          // Default behavior for others.\n          this.touched.delete(address)\n        }\n      }\n    }\n\n    // the final diffs are reverted and we can dispose those\n    this.journalDiff = this.journalDiff.slice(0, finalI! + 1)\n\n    this.journalHeight--\n\n    await this.stateManager.revert()\n  }\n\n  public cleanJournal() {\n    this.journalHeight = 0\n    this.journal = new Map()\n    this.alwaysWarmJournal = new Map()\n    this.touched = new Set()\n    this.journalDiff = [[0, [new Set(), new Map(), new Set()]]]\n  }\n\n  /**\n   * Removes accounts from the state trie that have been touched,\n   * as defined in EIP-161 (https://eips.ethereum.org/EIPS/eip-161).\n   * Also cleanups any other internal fields\n   */\n  async cleanup(): Promise<void> {\n    if (this.common.gteHardfork(Hardfork.SpuriousDragon) === true) {\n      for (const addressHex of this.touched) {\n        const address = new Address(toBytes('0x' + addressHex))\n        const account = await this.stateManager.getAccount(address)\n        if (account === undefined || account.isEmpty()) {\n          if (this.common.isActivatedEIP(2935)) {\n            // The history storage address is exempt of state clearing by EIP-158 if the EIP is activated\n            const addr = bigIntToHex(this.common.param('vm', 'historyStorageAddress')).slice(2)\n            if (addressHex === addr) {\n              continue\n            }\n          }\n          await this.deleteAccount(address)\n          if (this.DEBUG) {\n            this._debug(`Cleanup touched account address=${address} (>= SpuriousDragon)`)\n          }\n        }\n      }\n    }\n    this.cleanJournal()\n    delete this.accessList\n    delete this.preimages\n  }\n\n  addAlwaysWarmAddress(addressStr: string, addToAccessList: boolean = false) {\n    const address = stripHexPrefix(addressStr)\n    if (!this.alwaysWarmJournal.has(address)) {\n      this.alwaysWarmJournal.set(address, new Set())\n    }\n    if (addToAccessList && this.accessList !== undefined) {\n      if (!this.accessList.has(address)) {\n        this.accessList.set(address, new Set())\n      }\n    }\n  }\n\n  addAlwaysWarmSlot(addressStr: string, slotStr: string, addToAccessList: boolean = false) {\n    const address = stripHexPrefix(addressStr)\n    this.addAlwaysWarmAddress(address, addToAccessList)\n    const slotsSet = this.alwaysWarmJournal.get(address)!\n    const slot = stripHexPrefix(slotStr)\n    slotsSet.add(slot)\n    if (addToAccessList && this.accessList !== undefined) {\n      this.accessList.get(address)!.add(slot)\n    }\n  }\n\n  /**\n   * Returns true if the address is warm in the current context\n   * @param address - The address (as a Uint8Array) to check\n   */\n  isWarmedAddress(address: Uint8Array): boolean {\n    const addressHex = bytesToUnprefixedHex(address)\n    const warm = this.journal.has(addressHex) || this.alwaysWarmJournal.has(addressHex)\n    return warm\n  }\n\n  /**\n   * Add a warm address in the current context\n   * @param addressArr - The address (as a Uint8Array) to check\n   */\n  addWarmedAddress(addressArr: Uint8Array): void {\n    const address = bytesToUnprefixedHex(addressArr)\n    if (!this.journal.has(address)) {\n      this.journal.set(address, new Set())\n      const diffArr = this.journalDiff[this.journalDiff.length - 1][1]\n      diffArr[0].add(address)\n    }\n    if (this.accessList !== undefined) {\n      if (!this.accessList.has(address)) {\n        this.accessList.set(address, new Set())\n      }\n    }\n  }\n\n  /**\n   * Returns true if the slot of the address is warm\n   * @param address - The address (as a Uint8Array) to check\n   * @param slot - The slot (as a Uint8Array) to check\n   */\n  isWarmedStorage(address: Uint8Array, slot: Uint8Array): boolean {\n    const addressHex = bytesToUnprefixedHex(address)\n    const slots = this.journal.get(addressHex)\n    if (slots === undefined) {\n      if (this.alwaysWarmJournal.has(addressHex)) {\n        return this.alwaysWarmJournal.get(addressHex)!.has(bytesToUnprefixedHex(slot))\n      }\n      return false\n    }\n    if (slots.has(bytesToUnprefixedHex(slot))) {\n      return true\n    } else if (this.alwaysWarmJournal.has(addressHex)) {\n      return this.alwaysWarmJournal.get(addressHex)!.has(bytesToUnprefixedHex(slot))\n    }\n    return false\n  }\n\n  /**\n   * Mark the storage slot in the address as warm in the current context\n   * @param address - The address (as a Uint8Array) to check\n   * @param slot - The slot (as a Uint8Array) to check\n   */\n  addWarmedStorage(address: Uint8Array, slot: Uint8Array): void {\n    const addressHex = bytesToUnprefixedHex(address)\n    let slots = this.journal.get(addressHex)\n    if (slots === undefined) {\n      this.addWarmedAddress(address)\n      slots = this.journal.get(addressHex)\n    }\n    const slotStr = bytesToUnprefixedHex(slot)\n    if (!slots!.has(slotStr)) {\n      slots!.add(slotStr)\n      const diff = this.journalDiff[this.journalDiff.length - 1][1]\n      const addressSlotMap = diff[1]\n      if (!addressSlotMap.has(addressHex)) {\n        addressSlotMap.set(addressHex, new Set())\n      }\n      const slotsSet = addressSlotMap.get(addressHex)!\n      slotsSet.add(slotStr)\n    }\n    if (this.accessList !== undefined) {\n      // Note: in `addWarmedAddress` the address is added to warm addresses\n      const addrSet = this.accessList.get(addressHex)!\n      addrSet.add(slotStr)\n    }\n  }\n}\n","type EVMPerformanceLogEntry = {\n  calls: number\n  time: number\n  gasUsed: number\n  staticGas?: number\n  dynamicGasUsed?: number\n}\n\nexport type EVMPerformanceLogOutput = {\n  calls: number // Amount this opcode/precompile was called\n  totalTime: number // Amount of seconds taken for this opcode/precompile (rounded to 3 digits)\n  avgTimePerCall: number // Avg time per call of this opcode/precompile (rounded to 3 digits)\n  gasUsed: number // Total amount of gas used by this opcode/precompile\n  millionGasPerSecond: number // How much million gas is executed per second (rounded to 3 digits)\n  blocksPerSlot: number // How many blocks is executed per beacon chain slot (rounded to 3 digits)\n  tag: string // opcode/precompile tag\n  staticGasUsed?: number // total static gas units spent\n  dynamicGasUsed?: number // total dynamic gas units spent\n  staticGas?: number // static gas of the opcode\n}\n\ntype EVMPerformanceLogs = {\n  [tag: string]: EVMPerformanceLogEntry\n}\n\nconst blockGasLimit = 30_000_000 // Block gas limit\nconst slotTime = 12 // Time in seconds per slot\n\n// Normalize constant to check if execution time is above one block per slot (>=1) or not (<1)\nconst bpsNormalizer = blockGasLimit / slotTime\n\nexport class Timer {\n  private startTime: number\n  private runTime = 0\n  tag: string\n\n  constructor(tag: string) {\n    this.tag = tag\n    this.startTime = performance.now()\n  }\n\n  pause() {\n    this.runTime = this.runTime + performance.now() - this.startTime\n  }\n\n  unpause() {\n    this.startTime = performance.now()\n  }\n\n  time() {\n    return (performance.now() - this.startTime + this.runTime) / 1000\n  }\n}\n\nexport class EVMPerformanceLogger {\n  private opcodes!: EVMPerformanceLogs\n  private precompiles!: EVMPerformanceLogs\n\n  private currentTimer?: Timer\n\n  constructor() {\n    this.clear()\n  }\n\n  clear() {\n    this.opcodes = {}\n    this.precompiles = {}\n  }\n\n  getLogs() {\n    // Return nicely formatted logs\n    function getLogsFor(obj: EVMPerformanceLogs) {\n      const output: EVMPerformanceLogOutput[] = []\n      for (const key in obj) {\n        const field = obj[key]\n        const gasPerSecond = field.gasUsed / field.time\n        const entry: EVMPerformanceLogOutput = {\n          calls: field.calls,\n          totalTime: Math.round(field.time * 1e6) / 1e3,\n          avgTimePerCall: Math.round((field.time / field.calls) * 1e6) / 1e3,\n          gasUsed: field.gasUsed,\n          millionGasPerSecond: Math.round(gasPerSecond / 1e3) / 1e3,\n          blocksPerSlot: Math.round((gasPerSecond / bpsNormalizer) * 1e3) / 1e3,\n          tag: key,\n        }\n        if (field.dynamicGasUsed !== undefined) {\n          // This is an opcode entry\n          entry.staticGas = field.staticGas\n          entry.staticGasUsed = field.staticGas! * field.calls\n          entry.dynamicGasUsed = field.dynamicGasUsed\n        }\n        output.push(entry)\n      }\n\n      output.sort((a, b) => {\n        return b.millionGasPerSecond - a.millionGasPerSecond\n      })\n\n      return output\n    }\n\n    return {\n      opcodes: getLogsFor(this.opcodes),\n      precompiles: getLogsFor(this.precompiles),\n    }\n  }\n\n  hasTimer() {\n    return this.currentTimer !== undefined\n  }\n\n  // Start a new timer\n  // Only one timer can be timing at the same time\n  startTimer(tag: string) {\n    if (this.currentTimer !== undefined) {\n      throw new Error('Cannot have two timers running at the same time')\n    }\n\n    this.currentTimer = new Timer(tag)\n    return this.currentTimer\n  }\n\n  // Pauses current timer and returns that timer\n  pauseTimer() {\n    const timer = this.currentTimer\n    if (timer === undefined) {\n      throw new Error('No timer to pause')\n    }\n    timer.pause()\n    this.currentTimer = undefined\n    return timer\n  }\n\n  // Unpauses current timer and returns that timer\n  unpauseTimer(timer: Timer) {\n    if (this.currentTimer !== undefined) {\n      throw new Error('Cannot unpause timer: another timer is already running')\n    }\n    timer.unpause()\n    this.currentTimer = timer\n  }\n\n  // Stops a timer from running\n  stopTimer(\n    timer: Timer,\n    gasUsed: number,\n    targetTimer: 'precompiles' | 'opcodes' = 'opcodes',\n    staticGas?: number,\n    dynamicGas?: number\n  ) {\n    if (this.currentTimer === undefined || this.currentTimer !== timer) {\n      throw new Error('Cannot stop timer: another timer is already running')\n    }\n    const time = timer.time()\n    const tag = timer.tag\n    this.currentTimer = undefined\n\n    // Update the fields\n    const target = this[targetTimer]\n    if (target[tag] === undefined) {\n      target[tag] = {\n        calls: 0,\n        time: 0,\n        gasUsed: 0,\n      }\n    }\n    const obj = target[tag]\n\n    obj.calls++\n    obj.time += time\n    obj.gasUsed += gasUsed\n\n    if (targetTimer === 'opcodes') {\n      obj.staticGas = staticGas\n      obj.dynamicGasUsed = (obj.dynamicGasUsed ?? 0) + dynamicGas!\n    }\n  }\n}\n","import { concatBytes } from '@ethereumjs/util'\n\nconst ceil = (value: number, ceiling: number): number => {\n  const r = value % ceiling\n  if (r === 0) {\n    return value\n  } else {\n    return value + ceiling - r\n  }\n}\n\nconst CONTAINER_SIZE = 8192\n\n/**\n * Memory implements a simple memory model\n * for the ethereum virtual machine.\n */\nexport class Memory {\n  _store: Uint8Array\n\n  constructor() {\n    this._store = new Uint8Array(CONTAINER_SIZE)\n  }\n\n  /**\n   * Extends the memory given an offset and size. Rounds extended\n   * memory to word-size.\n   */\n  extend(offset: number, size: number) {\n    if (size === 0) {\n      return\n    }\n\n    const newSize = ceil(offset + size, 32)\n    const sizeDiff = newSize - this._store.length\n    if (sizeDiff > 0) {\n      const expandBy = Math.ceil(sizeDiff / CONTAINER_SIZE) * CONTAINER_SIZE\n      this._store = concatBytes(this._store, new Uint8Array(expandBy))\n    }\n  }\n\n  /**\n   * Writes a byte array with length `size` to memory, starting from `offset`.\n   * @param offset - Starting position\n   * @param size - How many bytes to write\n   * @param value - Value\n   */\n  write(offset: number, size: number, value: Uint8Array) {\n    if (size === 0) {\n      return\n    }\n\n    this.extend(offset, size)\n\n    if (value.length !== size) throw new Error('Invalid value size')\n    if (offset + size > this._store.length) throw new Error('Value exceeds memory capacity')\n\n    this._store.set(value, offset)\n  }\n\n  /**\n   * Reads a slice of memory from `offset` till `offset + size` as a `Uint8Array`.\n   * It fills up the difference between memory's length and `offset + size` with zeros.\n   * @param offset - Starting position\n   * @param size - How many bytes to read\n   * @param avoidCopy - Avoid memory copy if possible for performance reasons (optional)\n   */\n  read(offset: number, size: number, avoidCopy?: boolean): Uint8Array {\n    this.extend(offset, size)\n\n    const loaded = this._store.subarray(offset, offset + size)\n    if (avoidCopy === true) {\n      return loaded\n    }\n    const returnBytes = new Uint8Array(size)\n    // Copy the stored \"buffer\" from memory into the return Uint8Array\n    returnBytes.set(loaded)\n\n    return returnBytes\n  }\n}\n","import { Address, BIGINT_0 } from '@ethereumjs/util'\n\nimport type { PrecompileFunc } from './precompiles/index.js'\nimport type { AccessWitness } from '@ethereumjs/statemanager'\n\nconst defaults = {\n  value: BIGINT_0,\n  caller: Address.zero(),\n  data: new Uint8Array(0),\n  depth: 0,\n  isStatic: false,\n  isCompiled: false,\n  delegatecall: false,\n  gasRefund: BIGINT_0,\n}\n\ninterface MessageOpts {\n  to?: Address\n  value?: bigint\n  caller?: Address\n  gasLimit: bigint\n  data?: Uint8Array\n  depth?: number\n  code?: Uint8Array | PrecompileFunc\n  codeAddress?: Address\n  isStatic?: boolean\n  isCompiled?: boolean\n  salt?: Uint8Array\n  /**\n   * A set of addresses to selfdestruct, see {@link Message.selfdestruct}\n   */\n  selfdestruct?: Set<string>\n  /**\n   * Map of addresses which were created (used in EIP 6780)\n   */\n  createdAddresses?: Set<string>\n  delegatecall?: boolean\n  authcallOrigin?: Address\n  gasRefund?: bigint\n  blobVersionedHashes?: Uint8Array[]\n  accessWitness?: AccessWitness\n}\n\nexport class Message {\n  to?: Address\n  value: bigint\n  caller: Address\n  gasLimit: bigint\n  data: Uint8Array\n  depth: number\n  code?: Uint8Array | PrecompileFunc\n  _codeAddress?: Address\n  isStatic: boolean\n  isCompiled: boolean\n  salt?: Uint8Array\n  containerCode?: Uint8Array /** container code for EOF1 contracts - used by CODECOPY/CODESIZE */\n  chargeCodeAccesses?: boolean\n  /**\n   * Set of addresses to selfdestruct. Key is the unprefixed address.\n   */\n  selfdestruct?: Set<string>\n  /**\n   * Map of addresses which were created (used in EIP 6780)\n   */\n  createdAddresses?: Set<string>\n  delegatecall: boolean\n  /**\n   * This is used to store the origin of the AUTHCALL,\n   * the purpose is to figure out where `value` should be taken from (not from `caller`)\n   */\n  authcallOrigin?: Address\n  gasRefund: bigint // Keeps track of the gasRefund at the start of the frame (used for journaling purposes)\n  /**\n   * List of versioned hashes if message is a blob transaction in the outer VM\n   */\n  blobVersionedHashes?: Uint8Array[]\n  accessWitness?: AccessWitness\n\n  constructor(opts: MessageOpts) {\n    this.to = opts.to\n    this.value = opts.value ?? defaults.value\n    this.caller = opts.caller ?? defaults.caller\n    this.gasLimit = opts.gasLimit\n    this.data = opts.data ?? defaults.data\n    this.depth = opts.depth ?? defaults.depth\n    this.code = opts.code\n    this._codeAddress = opts.codeAddress\n    this.isStatic = opts.isStatic ?? defaults.isStatic\n    this.isCompiled = opts.isCompiled ?? defaults.isCompiled\n    this.salt = opts.salt\n    this.selfdestruct = opts.selfdestruct\n    this.createdAddresses = opts.createdAddresses\n    this.delegatecall = opts.delegatecall ?? defaults.delegatecall\n    this.authcallOrigin = opts.authcallOrigin\n    this.gasRefund = opts.gasRefund ?? defaults.gasRefund\n    this.blobVersionedHashes = opts.blobVersionedHashes\n    this.accessWitness = opts.accessWitness\n    if (this.value < 0) {\n      throw new Error(`value field cannot be negative, received ${this.value}`)\n    }\n  }\n\n  /**\n   * Note: should only be called in instances where `_codeAddress` or `to` is defined.\n   */\n  get codeAddress(): Address {\n    const codeAddress = this._codeAddress ?? this.to\n    if (!codeAddress) {\n      throw new Error('Missing codeAddress')\n    }\n    return codeAddress\n  }\n}\n\nexport type MessageWithTo = Message & Pick<Required<MessageOpts>, 'to'>\n","import { equalsBytes } from '@ethereumjs/util'\n\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\n/**\n * Adjusts gas usage and refunds of SStore ops per EIP-1283 (Constantinople)\n *\n * @param {RunState} runState\n * @param {Uint8Array}   currentStorage\n * @param {Uint8Array}   originalStorage\n * @param {Uint8Array}   value\n * @param {Common}   common\n */\nexport function updateSstoreGasEIP1283(\n  runState: RunState,\n  currentStorage: Uint8Array,\n  originalStorage: Uint8Array,\n  value: Uint8Array,\n  common: Common\n) {\n  if (equalsBytes(currentStorage, value)) {\n    // If current value equals new value (this is a no-op), 200 gas is deducted.\n    return common.param('gasPrices', 'netSstoreNoopGas')\n  }\n  // If current value does not equal new value\n  if (equalsBytes(originalStorage, currentStorage)) {\n    // If original value equals current value (this storage slot has not been changed by the current execution context)\n    if (originalStorage.length === 0) {\n      // If original value is 0, 20000 gas is deducted.\n      return common.param('gasPrices', 'netSstoreInitGas')\n    }\n    if (value.length === 0) {\n      // If new value is 0, add 15000 gas to refund counter.\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'netSstoreClearRefund'),\n        'EIP-1283 -> netSstoreClearRefund'\n      )\n    }\n    // Otherwise, 5000 gas is deducted.\n    return common.param('gasPrices', 'netSstoreCleanGas')\n  }\n  // If original value does not equal current value (this storage slot is dirty), 200 gas is deducted. Apply both of the following clauses.\n  if (originalStorage.length !== 0) {\n    // If original value is not 0\n    if (currentStorage.length === 0) {\n      // If current value is 0 (also means that new value is not 0), remove 15000 gas from refund counter. We can prove that refund counter will never go below 0.\n      runState.interpreter.subRefund(\n        common.param('gasPrices', 'netSstoreClearRefund'),\n        'EIP-1283 -> netSstoreClearRefund'\n      )\n    } else if (value.length === 0) {\n      // If new value is 0 (also means that current value is not 0), add 15000 gas to refund counter.\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'netSstoreClearRefund'),\n        'EIP-1283 -> netSstoreClearRefund'\n      )\n    }\n  }\n  if (equalsBytes(originalStorage, value)) {\n    // If original value equals new value (this storage slot is reset)\n    if (originalStorage.length === 0) {\n      // If original value is 0, add 19800 gas to refund counter.\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'netSstoreResetClearRefund'),\n        'EIP-1283 -> netSstoreResetClearRefund'\n      )\n    } else {\n      // Otherwise, add 4800 gas to refund counter.\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'netSstoreResetRefund'),\n        'EIP-1283 -> netSstoreResetRefund'\n      )\n    }\n  }\n  return common.param('gasPrices', 'netSstoreDirtyGas')\n}\n","import { equalsBytes } from '@ethereumjs/util'\n\nimport { ERROR } from '../exceptions.js'\n\nimport { adjustSstoreGasEIP2929 } from './EIP2929.js'\nimport { trap } from './util.js'\n\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\n/**\n * Adjusts gas usage and refunds of SStore ops per EIP-2200 (Istanbul)\n *\n * @param {RunState} runState\n * @param {Uint8Array}   currentStorage\n * @param {Uint8Array}   originalStorage\n * @param {Uint8Array}   value\n * @param {Common}   common\n */\nexport function updateSstoreGasEIP2200(\n  runState: RunState,\n  currentStorage: Uint8Array,\n  originalStorage: Uint8Array,\n  value: Uint8Array,\n  key: Uint8Array,\n  common: Common\n) {\n  // Fail if not enough gas is left\n  if (runState.interpreter.getGasLeft() <= common.param('gasPrices', 'sstoreSentryGasEIP2200')) {\n    trap(ERROR.OUT_OF_GAS)\n  }\n\n  // Noop\n  if (equalsBytes(currentStorage, value)) {\n    const sstoreNoopCost = common.param('gasPrices', 'sstoreNoopGasEIP2200')\n    return adjustSstoreGasEIP2929(runState, key, sstoreNoopCost, 'noop', common)\n  }\n  if (equalsBytes(originalStorage, currentStorage)) {\n    // Create slot\n    if (originalStorage.length === 0) {\n      return common.param('gasPrices', 'sstoreInitGasEIP2200')\n    }\n    // Delete slot\n    if (value.length === 0) {\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'sstoreClearRefundEIP2200'),\n        'EIP-2200 -> sstoreClearRefundEIP2200'\n      )\n    }\n    // Write existing slot\n    return common.param('gasPrices', 'sstoreCleanGasEIP2200')\n  }\n  if (originalStorage.length > 0) {\n    if (currentStorage.length === 0) {\n      // Recreate slot\n      runState.interpreter.subRefund(\n        common.param('gasPrices', 'sstoreClearRefundEIP2200'),\n        'EIP-2200 -> sstoreClearRefundEIP2200'\n      )\n    } else if (value.length === 0) {\n      // Delete slot\n      runState.interpreter.refundGas(\n        common.param('gasPrices', 'sstoreClearRefundEIP2200'),\n        'EIP-2200 -> sstoreClearRefundEIP2200'\n      )\n    }\n  }\n  if (equalsBytes(originalStorage, value)) {\n    if (originalStorage.length === 0) {\n      // Reset to original non-existent slot\n      const sstoreInitRefund = common.param('gasPrices', 'sstoreInitRefundEIP2200')\n      runState.interpreter.refundGas(\n        adjustSstoreGasEIP2929(runState, key, sstoreInitRefund, 'initRefund', common),\n        'EIP-2200 -> initRefund'\n      )\n    } else {\n      // Reset to original existing slot\n      const sstoreCleanRefund = common.param('gasPrices', 'sstoreCleanRefundEIP2200')\n      runState.interpreter.refundGas(\n        BigInt(adjustSstoreGasEIP2929(runState, key, sstoreCleanRefund, 'cleanRefund', common)),\n        'EIP-2200 -> cleanRefund'\n      )\n    }\n  }\n  // Dirty update\n  return common.param('gasPrices', 'sstoreDirtyGasEIP2200')\n}\n","import { BIGINT_0 } from '@ethereumjs/util'\n\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\n/**\n * Adds address to accessedAddresses set if not already included.\n * Adjusts cost incurred for executing opcode based on whether address read\n * is warm/cold. (EIP 2929)\n * @param {RunState} runState\n * @param {Address}  address\n * @param {Common}   common\n * @param {Boolean}  chargeGas (default: true)\n * @param {Boolean}  isSelfdestruct (default: false)\n */\nexport function accessAddressEIP2929(\n  runState: RunState,\n  address: Uint8Array,\n  common: Common,\n  chargeGas = true,\n  isSelfdestructOrAuthcall = false\n): bigint {\n  if (common.isActivatedEIP(2929) === false) return BIGINT_0\n\n  // Cold\n  if (!runState.interpreter.journal.isWarmedAddress(address)) {\n    runState.interpreter.journal.addWarmedAddress(address)\n\n    // CREATE, CREATE2 opcodes have the address warmed for free.\n    // selfdestruct beneficiary address reads are charged an *additional* cold access\n    if (chargeGas) {\n      return common.param('gasPrices', 'coldaccountaccess')\n    }\n    // Warm: (selfdestruct beneficiary address reads are not charged when warm)\n  } else if (chargeGas && !isSelfdestructOrAuthcall) {\n    return common.param('gasPrices', 'warmstorageread')\n  }\n  return BIGINT_0\n}\n\n/**\n * Adds (address, key) to accessedStorage tuple set if not already included.\n * Adjusts cost incurred for executing opcode based on whether storage read\n * is warm/cold. (EIP 2929)\n * @param {RunState} runState\n * @param {Uint8Array} key (to storage slot)\n * @param {Common} common\n */\nexport function accessStorageEIP2929(\n  runState: RunState,\n  key: Uint8Array,\n  isSstore: boolean,\n  common: Common\n): bigint {\n  if (common.isActivatedEIP(2929) === false) return BIGINT_0\n\n  const address = runState.interpreter.getAddress().bytes\n  const slotIsCold = !runState.interpreter.journal.isWarmedStorage(address, key)\n\n  // Cold (SLOAD and SSTORE)\n  if (slotIsCold) {\n    runState.interpreter.journal.addWarmedStorage(address, key)\n    return common.param('gasPrices', 'coldsload')\n  } else if (!isSstore) {\n    return common.param('gasPrices', 'warmstorageread')\n  }\n  return BIGINT_0\n}\n\n/**\n * Adjusts cost of SSTORE_RESET_GAS or SLOAD (aka sstorenoop) (EIP-2200) downward when storage\n * location is already warm\n * @param  {RunState} runState\n * @param  {Uint8Array}   key          storage slot\n * @param  {BigInt}   defaultCost  SSTORE_RESET_GAS / SLOAD\n * @param  {string}   costName     parameter name ('noop')\n * @param  {Common}   common\n * @return {BigInt}                adjusted cost\n */\nexport function adjustSstoreGasEIP2929(\n  runState: RunState,\n  key: Uint8Array,\n  defaultCost: bigint,\n  costName: string,\n  common: Common\n): bigint {\n  if (common.isActivatedEIP(2929) === false) return defaultCost\n\n  const address = runState.interpreter.getAddress().bytes\n  const warmRead = common.param('gasPrices', 'warmstorageread')\n  const coldSload = common.param('gasPrices', 'coldsload')\n\n  if (runState.interpreter.journal.isWarmedStorage(address, key)) {\n    switch (costName) {\n      case 'noop':\n        return warmRead\n      case 'initRefund':\n        return common.param('gasPrices', 'sstoreInitGasEIP2200') - warmRead\n      case 'cleanRefund':\n        return common.param('gasPrices', 'sstoreReset') - coldSload - warmRead\n    }\n  }\n\n  return defaultCost\n}\n","import { Hardfork } from '@ethereumjs/common'\n\nimport { handlers } from './functions.js'\nimport { dynamicGasHandlers } from './gas.js'\nimport { getFullname } from './util.js'\n\nimport type { CustomOpcode } from '../types.js'\nimport type { OpHandler } from './functions.js'\nimport type { AsyncDynamicGasHandler, SyncDynamicGasHandler } from './gas.js'\nimport type { Common } from '@ethereumjs/common'\n\nexport class Opcode {\n  readonly code: number\n  readonly name: string\n  readonly fullName: string\n  readonly fee: number\n  readonly feeBigInt: bigint\n  readonly isAsync: boolean\n  readonly dynamicGas: boolean\n  readonly isInvalid: boolean\n\n  constructor({\n    code,\n    name,\n    fullName,\n    fee,\n    isAsync,\n    dynamicGas,\n  }: {\n    code: number\n    name: string\n    fullName: string\n    fee: number\n    isAsync: boolean\n    dynamicGas: boolean\n  }) {\n    this.code = code\n    this.name = name\n    this.fullName = fullName\n    this.fee = fee\n    this.feeBigInt = BigInt(fee)\n    this.isAsync = isAsync\n    this.dynamicGas = dynamicGas\n    this.isInvalid = this.name === 'INVALID'\n\n    // Opcode isn't subject to change, thus all further modifications are prevented.\n    Object.freeze(this)\n  }\n}\n\nexport type OpcodeList = Map<number, Opcode>\ntype OpcodeEntry = { [key: number]: { name: string; isAsync: boolean; dynamicGas: boolean } }\ntype OpcodeEntryFee = OpcodeEntry & { [key: number]: { fee: number } }\n\n// Base opcode list. The opcode list is extended in future hardforks\nconst opcodes: OpcodeEntry = {\n  // 0x0 range - arithmetic ops\n  // name, async\n  0x00: { name: 'STOP', isAsync: false, dynamicGas: false },\n  0x01: { name: 'ADD', isAsync: false, dynamicGas: false },\n  0x02: { name: 'MUL', isAsync: false, dynamicGas: false },\n  0x03: { name: 'SUB', isAsync: false, dynamicGas: false },\n  0x04: { name: 'DIV', isAsync: false, dynamicGas: false },\n  0x05: { name: 'SDIV', isAsync: false, dynamicGas: false },\n  0x06: { name: 'MOD', isAsync: false, dynamicGas: false },\n  0x07: { name: 'SMOD', isAsync: false, dynamicGas: false },\n  0x08: { name: 'ADDMOD', isAsync: false, dynamicGas: false },\n  0x09: { name: 'MULMOD', isAsync: false, dynamicGas: false },\n  0x0a: { name: 'EXP', isAsync: false, dynamicGas: true },\n  0x0b: { name: 'SIGNEXTEND', isAsync: false, dynamicGas: false },\n\n  // 0x10 range - bit ops\n  0x10: { name: 'LT', isAsync: false, dynamicGas: false },\n  0x11: { name: 'GT', isAsync: false, dynamicGas: false },\n  0x12: { name: 'SLT', isAsync: false, dynamicGas: false },\n  0x13: { name: 'SGT', isAsync: false, dynamicGas: false },\n  0x14: { name: 'EQ', isAsync: false, dynamicGas: false },\n  0x15: { name: 'ISZERO', isAsync: false, dynamicGas: false },\n  0x16: { name: 'AND', isAsync: false, dynamicGas: false },\n  0x17: { name: 'OR', isAsync: false, dynamicGas: false },\n  0x18: { name: 'XOR', isAsync: false, dynamicGas: false },\n  0x19: { name: 'NOT', isAsync: false, dynamicGas: false },\n  0x1a: { name: 'BYTE', isAsync: false, dynamicGas: false },\n\n  // 0x20 range - crypto\n  0x20: { name: 'KECCAK256', isAsync: false, dynamicGas: true },\n\n  // 0x30 range - closure state\n  0x30: { name: 'ADDRESS', isAsync: true, dynamicGas: false },\n  0x31: { name: 'BALANCE', isAsync: true, dynamicGas: true },\n  0x32: { name: 'ORIGIN', isAsync: true, dynamicGas: false },\n  0x33: { name: 'CALLER', isAsync: true, dynamicGas: false },\n  0x34: { name: 'CALLVALUE', isAsync: true, dynamicGas: false },\n  0x35: { name: 'CALLDATALOAD', isAsync: true, dynamicGas: false },\n  0x36: { name: 'CALLDATASIZE', isAsync: true, dynamicGas: false },\n  0x37: { name: 'CALLDATACOPY', isAsync: true, dynamicGas: true },\n  0x38: { name: 'CODESIZE', isAsync: false, dynamicGas: false },\n  0x39: { name: 'CODECOPY', isAsync: false, dynamicGas: true },\n  0x3a: { name: 'GASPRICE', isAsync: false, dynamicGas: false },\n  0x3b: { name: 'EXTCODESIZE', isAsync: true, dynamicGas: true },\n  0x3c: { name: 'EXTCODECOPY', isAsync: true, dynamicGas: true },\n\n  // '0x40' range - block operations\n  0x40: { name: 'BLOCKHASH', isAsync: true, dynamicGas: false },\n  0x41: { name: 'COINBASE', isAsync: true, dynamicGas: false },\n  0x42: { name: 'TIMESTAMP', isAsync: true, dynamicGas: false },\n  0x43: { name: 'NUMBER', isAsync: true, dynamicGas: false },\n  0x44: { name: 'DIFFICULTY', isAsync: true, dynamicGas: false },\n  0x45: { name: 'GASLIMIT', isAsync: true, dynamicGas: false },\n\n  // 0x50 range - 'storage' and execution\n  0x50: { name: 'POP', isAsync: false, dynamicGas: false },\n  0x51: { name: 'MLOAD', isAsync: false, dynamicGas: true },\n  0x52: { name: 'MSTORE', isAsync: false, dynamicGas: true },\n  0x53: { name: 'MSTORE8', isAsync: false, dynamicGas: true },\n  0x54: { name: 'SLOAD', isAsync: true, dynamicGas: true },\n  0x55: { name: 'SSTORE', isAsync: true, dynamicGas: true },\n  0x56: { name: 'JUMP', isAsync: false, dynamicGas: false },\n  0x57: { name: 'JUMPI', isAsync: false, dynamicGas: false },\n  0x58: { name: 'PC', isAsync: false, dynamicGas: false },\n  0x59: { name: 'MSIZE', isAsync: false, dynamicGas: false },\n  0x5a: { name: 'GAS', isAsync: false, dynamicGas: false },\n  0x5b: { name: 'JUMPDEST', isAsync: false, dynamicGas: false },\n\n  // 0x60, range\n  0x60: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x61: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x62: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x63: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x64: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x65: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x66: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x67: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x68: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x69: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6a: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6b: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6c: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6d: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6e: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x6f: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x70: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x71: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x72: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x73: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x74: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x75: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x76: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x77: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x78: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x79: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7a: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7b: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7c: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7d: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7e: { name: 'PUSH', isAsync: false, dynamicGas: false },\n  0x7f: { name: 'PUSH', isAsync: false, dynamicGas: false },\n\n  0x80: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x81: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x82: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x83: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x84: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x85: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x86: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x87: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x88: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x89: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8a: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8b: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8c: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8d: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8e: { name: 'DUP', isAsync: false, dynamicGas: false },\n  0x8f: { name: 'DUP', isAsync: false, dynamicGas: false },\n\n  0x90: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x91: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x92: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x93: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x94: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x95: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x96: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x97: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x98: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x99: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9a: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9b: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9c: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9d: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9e: { name: 'SWAP', isAsync: false, dynamicGas: false },\n  0x9f: { name: 'SWAP', isAsync: false, dynamicGas: false },\n\n  0xa0: { name: 'LOG', isAsync: false, dynamicGas: true },\n  0xa1: { name: 'LOG', isAsync: false, dynamicGas: true },\n  0xa2: { name: 'LOG', isAsync: false, dynamicGas: true },\n  0xa3: { name: 'LOG', isAsync: false, dynamicGas: true },\n  0xa4: { name: 'LOG', isAsync: false, dynamicGas: true },\n\n  // '0xf0' range - closures\n  0xf0: { name: 'CREATE', isAsync: true, dynamicGas: true },\n  0xf1: { name: 'CALL', isAsync: true, dynamicGas: true },\n  0xf2: { name: 'CALLCODE', isAsync: true, dynamicGas: true },\n  0xf3: { name: 'RETURN', isAsync: false, dynamicGas: true },\n\n  // '0x70', range - other\n  0xfe: { name: 'INVALID', isAsync: false, dynamicGas: false },\n  0xff: { name: 'SELFDESTRUCT', isAsync: true, dynamicGas: true },\n}\n\n// Array of hard forks in order. These changes are repeatedly applied to `opcodes` until the hard fork is in the future based upon the common\n// TODO: All gas price changes should be moved to common\n// If the base gas cost of any of the operations change, then these should also be added to this list.\n// If there are context variables changed (such as \"warm slot reads\") which are not the base gas fees,\n// Then this does not have to be added.\nconst hardforkOpcodes: { hardfork: Hardfork; opcodes: OpcodeEntry }[] = [\n  {\n    hardfork: Hardfork.Homestead,\n    opcodes: {\n      0xf4: { name: 'DELEGATECALL', isAsync: true, dynamicGas: true }, // EIP-7\n    },\n  },\n  {\n    hardfork: Hardfork.TangerineWhistle,\n    opcodes: {\n      0x54: { name: 'SLOAD', isAsync: true, dynamicGas: true },\n      0xf1: { name: 'CALL', isAsync: true, dynamicGas: true },\n      0xf2: { name: 'CALLCODE', isAsync: true, dynamicGas: true },\n      0x3b: { name: 'EXTCODESIZE', isAsync: true, dynamicGas: true },\n      0x3c: { name: 'EXTCODECOPY', isAsync: true, dynamicGas: true },\n      0xf4: { name: 'DELEGATECALL', isAsync: true, dynamicGas: true }, // EIP-7\n      0xff: { name: 'SELFDESTRUCT', isAsync: true, dynamicGas: true },\n      0x31: { name: 'BALANCE', isAsync: true, dynamicGas: true },\n    },\n  },\n  {\n    hardfork: Hardfork.Byzantium,\n    opcodes: {\n      0xfd: { name: 'REVERT', isAsync: false, dynamicGas: true }, // EIP-140\n      0xfa: { name: 'STATICCALL', isAsync: true, dynamicGas: true }, // EIP-214\n      0x3d: { name: 'RETURNDATASIZE', isAsync: true, dynamicGas: false }, // EIP-211\n      0x3e: { name: 'RETURNDATACOPY', isAsync: true, dynamicGas: true }, // EIP-211\n    },\n  },\n  {\n    hardfork: Hardfork.Constantinople,\n    opcodes: {\n      0x1b: { name: 'SHL', isAsync: false, dynamicGas: false }, // EIP-145\n      0x1c: { name: 'SHR', isAsync: false, dynamicGas: false }, // EIP-145\n      0x1d: { name: 'SAR', isAsync: false, dynamicGas: false }, // EIP-145\n      0x3f: { name: 'EXTCODEHASH', isAsync: true, dynamicGas: true }, // EIP-1052\n      0xf5: { name: 'CREATE2', isAsync: true, dynamicGas: true }, // EIP-1014\n    },\n  },\n  {\n    hardfork: Hardfork.Istanbul,\n    opcodes: {\n      0x46: { name: 'CHAINID', isAsync: false, dynamicGas: false }, // EIP-1344\n      0x47: { name: 'SELFBALANCE', isAsync: false, dynamicGas: false }, // EIP-1884\n    },\n  },\n  {\n    hardfork: Hardfork.Paris,\n    opcodes: {\n      0x44: { name: 'PREVRANDAO', isAsync: true, dynamicGas: false }, // EIP-4399\n    },\n  },\n]\n\nconst eipOpcodes: { eip: number; opcodes: OpcodeEntry }[] = [\n  {\n    eip: 1153,\n    opcodes: {\n      0x5c: { name: 'TLOAD', isAsync: false, dynamicGas: false },\n      0x5d: { name: 'TSTORE', isAsync: false, dynamicGas: false },\n    },\n  },\n  {\n    eip: 2315,\n    opcodes: {\n      0x5c: { name: 'BEGINSUB', isAsync: false, dynamicGas: false },\n      0x5d: { name: 'RETURNSUB', isAsync: false, dynamicGas: false },\n      0x5e: { name: 'JUMPSUB', isAsync: false, dynamicGas: false },\n    },\n  },\n  {\n    eip: 3198,\n    opcodes: {\n      0x48: { name: 'BASEFEE', isAsync: false, dynamicGas: false },\n    },\n  },\n  {\n    eip: 3855,\n    opcodes: {\n      0x5f: { name: 'PUSH0', isAsync: false, dynamicGas: false },\n    },\n  },\n  {\n    eip: 3074,\n    opcodes: {\n      0xf6: { name: 'AUTH', isAsync: true, dynamicGas: true },\n      0xf7: { name: 'AUTHCALL', isAsync: true, dynamicGas: true },\n    },\n  },\n  {\n    eip: 4844,\n    opcodes: {\n      0x49: { name: 'BLOBHASH', isAsync: false, dynamicGas: false },\n    },\n  },\n  {\n    eip: 5656,\n    opcodes: {\n      0x5e: { name: 'MCOPY', isAsync: false, dynamicGas: true },\n    },\n  },\n  {\n    eip: 7516,\n    opcodes: {\n      0x4a: { name: 'BLOBBASEFEE', isAsync: false, dynamicGas: false },\n    },\n  },\n]\n\n/**\n * Convert basic opcode info dictionary into complete OpcodeList instance.\n *\n * @param opcodes {Object} Receive basic opcodes info dictionary.\n * @returns {OpcodeList} Complete Opcode list\n */\nfunction createOpcodes(opcodes: OpcodeEntryFee): OpcodeList {\n  const result: OpcodeList = new Map()\n  for (const [key, value] of Object.entries(opcodes)) {\n    const code = parseInt(key, 10)\n    if (isNaN(value.fee)) value.fee = 0\n    result.set(\n      code,\n      new Opcode({\n        code,\n        fullName: getFullname(code, value.name),\n        ...value,\n      })\n    )\n  }\n  return result\n}\n\ntype OpcodeContext = {\n  dynamicGasHandlers: Map<number, AsyncDynamicGasHandler | SyncDynamicGasHandler>\n  handlers: Map<number, OpHandler>\n  opcodes: OpcodeList\n  opcodeMap: OpcodeMap\n}\n\nexport type OpcodeMapEntry = {\n  opcodeInfo: Opcode\n  opHandler: OpHandler\n  gasHandler: AsyncDynamicGasHandler | SyncDynamicGasHandler\n}\nexport type OpcodeMap = OpcodeMapEntry[]\n\n/**\n * Get suitable opcodes for the required hardfork.\n *\n * @param common {Common} Ethereumjs Common metadata object.\n * @param customOpcodes List with custom opcodes (see EVM `customOpcodes` option description).\n * @returns {OpcodeList} Opcodes dictionary object.\n */\nexport function getOpcodesForHF(common: Common, customOpcodes?: CustomOpcode[]): OpcodeContext {\n  let opcodeBuilder: any = { ...opcodes }\n\n  const handlersCopy = new Map(handlers)\n  const dynamicGasHandlersCopy = new Map(dynamicGasHandlers)\n\n  for (let fork = 0; fork < hardforkOpcodes.length; fork++) {\n    if (common.gteHardfork(hardforkOpcodes[fork].hardfork)) {\n      opcodeBuilder = { ...opcodeBuilder, ...hardforkOpcodes[fork].opcodes }\n    }\n  }\n  for (const eipOps of eipOpcodes) {\n    if (common.isActivatedEIP(eipOps.eip)) {\n      opcodeBuilder = { ...opcodeBuilder, ...eipOps.opcodes }\n    }\n  }\n\n  for (const key in opcodeBuilder) {\n    const baseFee = Number(common.param('gasPrices', opcodeBuilder[key].name.toLowerCase()))\n    // explicitly verify that we have defined a base fee\n    if (baseFee === undefined) {\n      throw new Error(`base fee not defined for: ${opcodeBuilder[key].name}`)\n    }\n    opcodeBuilder[key].fee = baseFee\n  }\n\n  if (customOpcodes) {\n    for (const _code of customOpcodes) {\n      const code = <any>_code\n      if (code.logicFunction === undefined) {\n        delete opcodeBuilder[code.opcode]\n        continue\n      }\n\n      // Sanity checks\n      if (code.opcodeName === undefined || code.baseFee === undefined) {\n        throw new Error(\n          `Custom opcode ${code.opcode} does not have the required values: opcodeName and baseFee are required`\n        )\n      }\n      const entry = {\n        [code.opcode]: {\n          name: code.opcodeName,\n          isAsync: true,\n          dynamicGas: code.gasFunction !== undefined,\n          fee: code.baseFee,\n          feeBigInt: BigInt(code.baseFee),\n        },\n      }\n      opcodeBuilder = { ...opcodeBuilder, ...entry }\n      if (code.gasFunction !== undefined) {\n        dynamicGasHandlersCopy.set(code.opcode, code.gasFunction)\n      }\n      // logicFunction is never undefined\n      handlersCopy.set(code.opcode, code.logicFunction)\n    }\n  }\n\n  //const dynamicGasHandlers = dynamicGasHandlersCopy\n  //const handlers = handlersCopy\n  const ops = createOpcodes(opcodeBuilder)\n\n  const opcodeMap: OpcodeMap = []\n\n  for (const [opNumber, op] of ops) {\n    const dynamicGas = dynamicGasHandlersCopy.get(opNumber)!\n    const handler = handlersCopy.get(opNumber)!\n    opcodeMap[opNumber] = {\n      opcodeInfo: op,\n      opHandler: handler,\n      gasHandler: dynamicGas,\n    }\n  }\n\n  const INVALID = opcodeMap[0xfe]\n\n  for (let i = 0x0; i <= 0xff; i++) {\n    if (opcodeMap[i] === undefined) {\n      opcodeMap[i] = INVALID\n    }\n  }\n\n  return {\n    dynamicGasHandlers: dynamicGasHandlersCopy,\n    handlers: handlersCopy,\n    opcodes: ops,\n    opcodeMap,\n  }\n}\n","import {\n  Address,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_128,\n  BIGINT_160,\n  BIGINT_2,\n  BIGINT_224,\n  BIGINT_255,\n  BIGINT_256,\n  BIGINT_27,\n  BIGINT_2EXP160,\n  BIGINT_2EXP224,\n  BIGINT_2EXP96,\n  BIGINT_31,\n  BIGINT_32,\n  BIGINT_7,\n  BIGINT_8,\n  BIGINT_96,\n  MAX_INTEGER_BIGINT,\n  SECP256K1_ORDER_DIV_2,\n  TWO_POW256,\n  bigIntToBytes,\n  bigIntToHex,\n  bytesToBigInt,\n  bytesToHex,\n  concatBytes,\n  ecrecover,\n  hexToBytes,\n  publicToAddress,\n  setLengthLeft,\n  setLengthRight,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { ERROR } from '../exceptions.js'\n\nimport {\n  addresstoBytes,\n  describeLocation,\n  exponentiation,\n  fromTwos,\n  getDataSlice,\n  jumpIsValid,\n  jumpSubIsValid,\n  mod,\n  toTwos,\n  trap,\n  writeCallOutput,\n} from './util.js'\n\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\nconst EIP3074MAGIC = hexToBytes('0x03')\n\nexport interface SyncOpHandler {\n  (runState: RunState, common: Common): void\n}\n\nexport interface AsyncOpHandler {\n  (runState: RunState, common: Common): Promise<void>\n}\n\nexport type OpHandler = SyncOpHandler | AsyncOpHandler\n\n// the opcode functions\nexport const handlers: Map<number, OpHandler> = new Map([\n  // 0x00: STOP\n  [\n    0x00,\n    function () {\n      trap(ERROR.STOP)\n    },\n  ],\n  // 0x01: ADD\n  [\n    0x01,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = mod(a + b, TWO_POW256)\n      runState.stack.push(r)\n    },\n  ],\n  // 0x02: MUL\n  [\n    0x02,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = mod(a * b, TWO_POW256)\n      runState.stack.push(r)\n    },\n  ],\n  // 0x03: SUB\n  [\n    0x03,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = mod(a - b, TWO_POW256)\n      runState.stack.push(r)\n    },\n  ],\n  // 0x04: DIV\n  [\n    0x04,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      let r\n      if (b === BIGINT_0) {\n        r = BIGINT_0\n      } else {\n        r = mod(a / b, TWO_POW256)\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x05: SDIV\n  [\n    0x05,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      let r\n      if (b === BIGINT_0) {\n        r = BIGINT_0\n      } else {\n        r = toTwos(fromTwos(a) / fromTwos(b))\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x06: MOD\n  [\n    0x06,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      let r\n      if (b === BIGINT_0) {\n        r = b\n      } else {\n        r = mod(a, b)\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x07: SMOD\n  [\n    0x07,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      let r\n      if (b === BIGINT_0) {\n        r = b\n      } else {\n        r = fromTwos(a) % fromTwos(b)\n      }\n      runState.stack.push(toTwos(r))\n    },\n  ],\n  // 0x08: ADDMOD\n  [\n    0x08,\n    function (runState) {\n      const [a, b, c] = runState.stack.popN(3)\n      let r\n      if (c === BIGINT_0) {\n        r = BIGINT_0\n      } else {\n        r = mod(a + b, c)\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x09: MULMOD\n  [\n    0x09,\n    function (runState) {\n      const [a, b, c] = runState.stack.popN(3)\n      let r\n      if (c === BIGINT_0) {\n        r = BIGINT_0\n      } else {\n        r = mod(a * b, c)\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x0a: EXP\n  [\n    0x0a,\n    function (runState) {\n      const [base, exponent] = runState.stack.popN(2)\n      if (base === BIGINT_2) {\n        switch (exponent) {\n          case BIGINT_96:\n            runState.stack.push(BIGINT_2EXP96)\n            return\n          case BIGINT_160:\n            runState.stack.push(BIGINT_2EXP160)\n            return\n          case BIGINT_224:\n            runState.stack.push(BIGINT_2EXP224)\n            return\n        }\n      }\n      if (exponent === BIGINT_0) {\n        runState.stack.push(BIGINT_1)\n        return\n      }\n\n      if (base === BIGINT_0) {\n        runState.stack.push(base)\n        return\n      }\n      const r = exponentiation(base, exponent)\n      runState.stack.push(r)\n    },\n  ],\n  // 0x0b: SIGNEXTEND\n  [\n    0x0b,\n    function (runState) {\n      /* eslint-disable-next-line prefer-const */\n      let [k, val] = runState.stack.popN(2)\n      if (k < BIGINT_31) {\n        const signBit = k * BIGINT_8 + BIGINT_7\n        const mask = (BIGINT_1 << signBit) - BIGINT_1\n        if ((val >> signBit) & BIGINT_1) {\n          val = val | BigInt.asUintN(256, ~mask)\n        } else {\n          val = val & mask\n        }\n      }\n      runState.stack.push(val)\n    },\n  ],\n  // 0x10 range - bit ops\n  // 0x10: LT\n  [\n    0x10,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a < b ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x11: GT\n  [\n    0x11,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a > b ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x12: SLT\n  [\n    0x12,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = fromTwos(a) < fromTwos(b) ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x13: SGT\n  [\n    0x13,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = fromTwos(a) > fromTwos(b) ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x14: EQ\n  [\n    0x14,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a === b ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x15: ISZERO\n  [\n    0x15,\n    function (runState) {\n      const a = runState.stack.pop()\n      const r = a === BIGINT_0 ? BIGINT_1 : BIGINT_0\n      runState.stack.push(r)\n    },\n  ],\n  // 0x16: AND\n  [\n    0x16,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a & b\n      runState.stack.push(r)\n    },\n  ],\n  // 0x17: OR\n  [\n    0x17,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a | b\n      runState.stack.push(r)\n    },\n  ],\n  // 0x18: XOR\n  [\n    0x18,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      const r = a ^ b\n      runState.stack.push(r)\n    },\n  ],\n  // 0x19: NOT\n  [\n    0x19,\n    function (runState) {\n      const a = runState.stack.pop()\n      const r = BigInt.asUintN(256, ~a)\n      runState.stack.push(r)\n    },\n  ],\n  // 0x1a: BYTE\n  [\n    0x1a,\n    function (runState) {\n      const [pos, word] = runState.stack.popN(2)\n      if (pos > BIGINT_32) {\n        runState.stack.push(BIGINT_0)\n        return\n      }\n\n      const r = (word >> ((BIGINT_31 - pos) * BIGINT_8)) & BIGINT_255\n      runState.stack.push(r)\n    },\n  ],\n  // 0x1b: SHL\n  [\n    0x1b,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      if (a > BIGINT_256) {\n        runState.stack.push(BIGINT_0)\n        return\n      }\n\n      const r = (b << a) & MAX_INTEGER_BIGINT\n      runState.stack.push(r)\n    },\n  ],\n  // 0x1c: SHR\n  [\n    0x1c,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n      if (a > 256) {\n        runState.stack.push(BIGINT_0)\n        return\n      }\n\n      const r = b >> a\n      runState.stack.push(r)\n    },\n  ],\n  // 0x1d: SAR\n  [\n    0x1d,\n    function (runState) {\n      const [a, b] = runState.stack.popN(2)\n\n      let r\n      const bComp = BigInt.asIntN(256, b)\n      const isSigned = bComp < 0\n      if (a > 256) {\n        if (isSigned) {\n          r = MAX_INTEGER_BIGINT\n        } else {\n          r = BIGINT_0\n        }\n        runState.stack.push(r)\n        return\n      }\n\n      const c = b >> a\n      if (isSigned) {\n        const shiftedOutWidth = BIGINT_255 - a\n        const mask = (MAX_INTEGER_BIGINT >> shiftedOutWidth) << shiftedOutWidth\n        r = c | mask\n      } else {\n        r = c\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x20 range - crypto\n  // 0x20: KECCAK256\n  [\n    0x20,\n    function (runState, common) {\n      const [offset, length] = runState.stack.popN(2)\n      let data = new Uint8Array(0)\n      if (length !== BIGINT_0) {\n        data = runState.memory.read(Number(offset), Number(length))\n      }\n      const r = BigInt(bytesToHex((common.customCrypto.keccak256 ?? keccak256)(data)))\n      runState.stack.push(r)\n    },\n  ],\n  // 0x30 range - closure state\n  // 0x30: ADDRESS\n  [\n    0x30,\n    function (runState) {\n      const address = bytesToBigInt(runState.interpreter.getAddress().bytes)\n      runState.stack.push(address)\n    },\n  ],\n  // 0x31: BALANCE\n  [\n    0x31,\n    async function (runState) {\n      const addressBigInt = runState.stack.pop()\n      const address = new Address(addresstoBytes(addressBigInt))\n      const balance = await runState.interpreter.getExternalBalance(address)\n      runState.stack.push(balance)\n    },\n  ],\n  // 0x32: ORIGIN\n  [\n    0x32,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getTxOrigin())\n    },\n  ],\n  // 0x33: CALLER\n  [\n    0x33,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getCaller())\n    },\n  ],\n  // 0x34: CALLVALUE\n  [\n    0x34,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getCallValue())\n    },\n  ],\n  // 0x35: CALLDATALOAD\n  [\n    0x35,\n    function (runState) {\n      const pos = runState.stack.pop()\n      if (pos > runState.interpreter.getCallDataSize()) {\n        runState.stack.push(BIGINT_0)\n        return\n      }\n\n      const i = Number(pos)\n      let loaded = runState.interpreter.getCallData().subarray(i, i + 32)\n      loaded = loaded.length ? loaded : Uint8Array.from([0])\n      let r = bytesToBigInt(loaded)\n      if (loaded.length < 32) {\n        r = r << (BIGINT_8 * BigInt(32 - loaded.length))\n      }\n      runState.stack.push(r)\n    },\n  ],\n  // 0x36: CALLDATASIZE\n  [\n    0x36,\n    function (runState) {\n      const r = runState.interpreter.getCallDataSize()\n      runState.stack.push(r)\n    },\n  ],\n  // 0x37: CALLDATACOPY\n  [\n    0x37,\n    function (runState) {\n      const [memOffset, dataOffset, dataLength] = runState.stack.popN(3)\n\n      if (dataLength !== BIGINT_0) {\n        const data = getDataSlice(runState.interpreter.getCallData(), dataOffset, dataLength)\n        const memOffsetNum = Number(memOffset)\n        const dataLengthNum = Number(dataLength)\n        runState.memory.write(memOffsetNum, dataLengthNum, data)\n      }\n    },\n  ],\n  // 0x38: CODESIZE\n  [\n    0x38,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getCodeSize())\n    },\n  ],\n  // 0x39: CODECOPY\n  [\n    0x39,\n    function (runState) {\n      const [memOffset, codeOffset, dataLength] = runState.stack.popN(3)\n\n      if (dataLength !== BIGINT_0) {\n        const data = getDataSlice(runState.interpreter.getCode(), codeOffset, dataLength)\n        const memOffsetNum = Number(memOffset)\n        const lengthNum = Number(dataLength)\n        runState.memory.write(memOffsetNum, lengthNum, data)\n      }\n    },\n  ],\n  // 0x3b: EXTCODESIZE\n  [\n    0x3b,\n    async function (runState) {\n      const addressBigInt = runState.stack.pop()\n      const size = BigInt(\n        (await runState.stateManager.getContractCode(new Address(addresstoBytes(addressBigInt))))\n          .length\n      )\n      runState.stack.push(size)\n    },\n  ],\n  // 0x3c: EXTCODECOPY\n  [\n    0x3c,\n    async function (runState) {\n      const [addressBigInt, memOffset, codeOffset, dataLength] = runState.stack.popN(4)\n\n      if (dataLength !== BIGINT_0) {\n        const code = await runState.stateManager.getContractCode(\n          new Address(addresstoBytes(addressBigInt))\n        )\n\n        const data = getDataSlice(code, codeOffset, dataLength)\n        const memOffsetNum = Number(memOffset)\n        const lengthNum = Number(dataLength)\n        runState.memory.write(memOffsetNum, lengthNum, data)\n      }\n    },\n  ],\n  // 0x3f: EXTCODEHASH\n  [\n    0x3f,\n    async function (runState) {\n      const addressBigInt = runState.stack.pop()\n      const address = new Address(addresstoBytes(addressBigInt))\n      const account = await runState.stateManager.getAccount(address)\n      if (!account || account.isEmpty()) {\n        runState.stack.push(BIGINT_0)\n        return\n      }\n\n      runState.stack.push(BigInt(bytesToHex(account.codeHash)))\n    },\n  ],\n  // 0x3d: RETURNDATASIZE\n  [\n    0x3d,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getReturnDataSize())\n    },\n  ],\n  // 0x3e: RETURNDATACOPY\n  [\n    0x3e,\n    function (runState) {\n      const [memOffset, returnDataOffset, dataLength] = runState.stack.popN(3)\n\n      if (dataLength !== BIGINT_0) {\n        const data = getDataSlice(\n          runState.interpreter.getReturnData(),\n          returnDataOffset,\n          dataLength\n        )\n        const memOffsetNum = Number(memOffset)\n        const lengthNum = Number(dataLength)\n        runState.memory.write(memOffsetNum, lengthNum, data)\n      }\n    },\n  ],\n  // 0x3a: GASPRICE\n  [\n    0x3a,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getTxGasPrice())\n    },\n  ],\n  // '0x40' range - block operations\n  // 0x40: BLOCKHASH\n  [\n    0x40,\n    async function (runState, common) {\n      const number = runState.stack.pop()\n\n      if (common.isActivatedEIP(2935)) {\n        if (number >= runState.interpreter.getBlockNumber()) {\n          runState.stack.push(BIGINT_0)\n          return\n        }\n\n        const diff = runState.interpreter.getBlockNumber() - number\n        const historyServeWindow = common.param('vm', 'historyServeWindow')\n        // block lookups must be within the `historyServeWindow`\n        if (diff > historyServeWindow || diff <= BIGINT_0) {\n          runState.stack.push(BIGINT_0)\n          return\n        }\n\n        const historyAddress = Address.fromString(\n          bigIntToHex(common.param('vm', 'historyStorageAddress'))\n        )\n        const key = setLengthLeft(bigIntToBytes(number % historyServeWindow), 32)\n\n        const storage = await runState.stateManager.getContractStorage(historyAddress, key)\n\n        runState.stack.push(bytesToBigInt(storage))\n      } else {\n        const diff = runState.interpreter.getBlockNumber() - number\n        // block lookups must be within the past 256 blocks\n        if (diff > BIGINT_256 || diff <= BIGINT_0) {\n          runState.stack.push(BIGINT_0)\n          return\n        }\n\n        const block = await runState.blockchain.getBlock(Number(number))\n\n        runState.stack.push(bytesToBigInt(block.hash()))\n      }\n    },\n  ],\n  // 0x41: COINBASE\n  [\n    0x41,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlockCoinbase())\n    },\n  ],\n  // 0x42: TIMESTAMP\n  [\n    0x42,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlockTimestamp())\n    },\n  ],\n  // 0x43: NUMBER\n  [\n    0x43,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlockNumber())\n    },\n  ],\n  // 0x44: DIFFICULTY (EIP-4399: supplanted as PREVRANDAO)\n  [\n    0x44,\n    function (runState, common) {\n      if (common.isActivatedEIP(4399)) {\n        runState.stack.push(runState.interpreter.getBlockPrevRandao())\n      } else {\n        runState.stack.push(runState.interpreter.getBlockDifficulty())\n      }\n    },\n  ],\n  // 0x45: GASLIMIT\n  [\n    0x45,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlockGasLimit())\n    },\n  ],\n  // 0x46: CHAINID\n  [\n    0x46,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getChainId())\n    },\n  ],\n  // 0x47: SELFBALANCE\n  [\n    0x47,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getSelfBalance())\n    },\n  ],\n  // 0x48: BASEFEE\n  [\n    0x48,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlockBaseFee())\n    },\n  ],\n  // 0x49: BLOBHASH\n  [\n    0x49,\n    function (runState) {\n      const index = runState.stack.pop()\n      if (runState.env.blobVersionedHashes.length > Number(index)) {\n        runState.stack.push(bytesToBigInt(runState.env.blobVersionedHashes[Number(index)]))\n      } else {\n        runState.stack.push(BIGINT_0)\n      }\n    },\n  ],\n  // 0x4a: BLOBBASEFEE\n  [\n    0x4a,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getBlobBaseFee())\n    },\n  ],\n  // 0x50 range - 'storage' and execution\n  // 0x50: POP\n  [\n    0x50,\n    function (runState) {\n      runState.stack.pop()\n    },\n  ],\n  // 0x51: MLOAD\n  [\n    0x51,\n    function (runState) {\n      const pos = runState.stack.pop()\n      const word = runState.memory.read(Number(pos), 32, true)\n      runState.stack.push(bytesToBigInt(word))\n    },\n  ],\n  // 0x52: MSTORE\n  [\n    0x52,\n    function (runState) {\n      const [offset, word] = runState.stack.popN(2)\n      const buf = setLengthLeft(bigIntToBytes(word), 32)\n      const offsetNum = Number(offset)\n      runState.memory.write(offsetNum, 32, buf)\n    },\n  ],\n  // 0x53: MSTORE8\n  [\n    0x53,\n    function (runState) {\n      const [offset, byte] = runState.stack.popN(2)\n\n      const buf = bigIntToBytes(byte & BIGINT_255)\n      const offsetNum = Number(offset)\n      runState.memory.write(offsetNum, 1, buf)\n    },\n  ],\n  // 0x54: SLOAD\n  [\n    0x54,\n    async function (runState) {\n      const key = runState.stack.pop()\n      const keyBuf = setLengthLeft(bigIntToBytes(key), 32)\n      const value = await runState.interpreter.storageLoad(keyBuf)\n      const valueBigInt = value.length ? bytesToBigInt(value) : BIGINT_0\n      runState.stack.push(valueBigInt)\n    },\n  ],\n  // 0x55: SSTORE\n  [\n    0x55,\n    async function (runState) {\n      const [key, val] = runState.stack.popN(2)\n\n      const keyBuf = setLengthLeft(bigIntToBytes(key), 32)\n      // NOTE: this should be the shortest representation\n      let value\n      if (val === BIGINT_0) {\n        value = Uint8Array.from([])\n      } else {\n        value = bigIntToBytes(val)\n      }\n\n      await runState.interpreter.storageStore(keyBuf, value)\n    },\n  ],\n  // 0x56: JUMP\n  [\n    0x56,\n    function (runState) {\n      const dest = runState.stack.pop()\n      if (dest > runState.interpreter.getCodeSize()) {\n        trap(ERROR.INVALID_JUMP + ' at ' + describeLocation(runState))\n      }\n\n      const destNum = Number(dest)\n\n      if (!jumpIsValid(runState, destNum)) {\n        trap(ERROR.INVALID_JUMP + ' at ' + describeLocation(runState))\n      }\n\n      runState.programCounter = destNum\n    },\n  ],\n  // 0x57: JUMPI\n  [\n    0x57,\n    function (runState) {\n      const [dest, cond] = runState.stack.popN(2)\n      if (cond !== BIGINT_0) {\n        if (dest > runState.interpreter.getCodeSize()) {\n          trap(ERROR.INVALID_JUMP + ' at ' + describeLocation(runState))\n        }\n\n        const destNum = Number(dest)\n\n        if (!jumpIsValid(runState, destNum)) {\n          trap(ERROR.INVALID_JUMP + ' at ' + describeLocation(runState))\n        }\n\n        runState.programCounter = destNum\n      }\n    },\n  ],\n  // 0x58: PC\n  [\n    0x58,\n    function (runState) {\n      runState.stack.push(BigInt(runState.programCounter - 1))\n    },\n  ],\n  // 0x59: MSIZE\n  [\n    0x59,\n    function (runState) {\n      runState.stack.push(runState.memoryWordCount * BIGINT_32)\n    },\n  ],\n  // 0x5a: GAS\n  [\n    0x5a,\n    function (runState) {\n      runState.stack.push(runState.interpreter.getGasLeft())\n    },\n  ],\n  // 0x5b: JUMPDEST\n  [0x5b, function () {}],\n  // 0x5c: BEGINSUB (EIP 2315) / TLOAD (EIP 1153)\n  [\n    0x5c,\n    function (runState, common) {\n      if (common.isActivatedEIP(2315)) {\n        // BEGINSUB\n        trap(ERROR.INVALID_BEGINSUB + ' at ' + describeLocation(runState))\n      } else if (common.isActivatedEIP(1153)) {\n        // TLOAD\n        const key = runState.stack.pop()\n        const keyBuf = setLengthLeft(bigIntToBytes(key), 32)\n        const value = runState.interpreter.transientStorageLoad(keyBuf)\n        const valueBN = value.length ? bytesToBigInt(value) : BIGINT_0\n        runState.stack.push(valueBN)\n      }\n    },\n  ],\n  // 0x5d: RETURNSUB (EIP 2315) / TSTORE (EIP 1153)\n  [\n    0x5d,\n    function (runState, common) {\n      if (common.isActivatedEIP(2315)) {\n        // RETURNSUB\n        if (runState.returnStack.length < 1) {\n          trap(ERROR.INVALID_RETURNSUB)\n        }\n\n        const dest = runState.returnStack.pop()\n        runState.programCounter = Number(dest)\n      } else if (common.isActivatedEIP(1153)) {\n        // TSTORE\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n        const [key, val] = runState.stack.popN(2)\n\n        const keyBuf = setLengthLeft(bigIntToBytes(key), 32)\n        // NOTE: this should be the shortest representation\n        let value\n        if (val === BIGINT_0) {\n          value = Uint8Array.from([])\n        } else {\n          value = bigIntToBytes(val)\n        }\n\n        runState.interpreter.transientStorageStore(keyBuf, value)\n      }\n    },\n  ],\n  // 0x5e: JUMPSUB (2315) / MCOPY (5656)\n  [\n    0x5e,\n    function (runState, common) {\n      if (common.isActivatedEIP(2315)) {\n        // JUMPSUB\n        const dest = runState.stack.pop()\n\n        if (dest > runState.interpreter.getCodeSize()) {\n          trap(ERROR.INVALID_JUMPSUB + ' at ' + describeLocation(runState))\n        }\n\n        const destNum = Number(dest)\n\n        if (!jumpSubIsValid(runState, destNum)) {\n          trap(ERROR.INVALID_JUMPSUB + ' at ' + describeLocation(runState))\n        }\n\n        runState.returnStack.push(BigInt(runState.programCounter))\n        runState.programCounter = destNum + 1\n      } else if (common.isActivatedEIP(5656)) {\n        // MCOPY\n        const [dst, src, length] = runState.stack.popN(3)\n        const data = runState.memory.read(Number(src), Number(length), true)\n        runState.memory.write(Number(dst), Number(length), data)\n      }\n    },\n  ],\n  // 0x5f: PUSH0\n  [\n    0x5f,\n    function (runState) {\n      runState.stack.push(BIGINT_0)\n    },\n  ],\n  // 0x60: PUSH\n  [\n    0x60,\n    function (runState, common) {\n      const numToPush = runState.opCode - 0x5f\n      if (\n        runState.programCounter + numToPush > runState.code.length &&\n        common.isActivatedEIP(3540)\n      ) {\n        trap(ERROR.OUT_OF_RANGE)\n      }\n\n      if (common.isActivatedEIP(6800) && runState.env.chargeCodeAccesses === true) {\n        const contract = runState.interpreter.getAddress()\n        const startOffset = Math.min(runState.code.length, runState.programCounter + 1)\n        const endOffset = Math.min(runState.code.length, startOffset + numToPush - 1)\n        const statelessGas = runState.env.accessWitness!.touchCodeChunksRangeOnReadAndChargeGas(\n          contract,\n          startOffset,\n          endOffset\n        )\n        runState.interpreter.useGas(statelessGas, `PUSH`)\n      }\n\n      if (!runState.shouldDoJumpAnalysis) {\n        runState.stack.push(runState.cachedPushes[runState.programCounter])\n        runState.programCounter += numToPush\n      } else {\n        const loaded = bytesToBigInt(\n          runState.code.subarray(runState.programCounter, runState.programCounter + numToPush)\n        )\n        runState.programCounter += numToPush\n        runState.stack.push(loaded)\n      }\n    },\n  ],\n  // 0x80: DUP\n  [\n    0x80,\n    function (runState) {\n      const stackPos = runState.opCode - 0x7f\n      runState.stack.dup(stackPos)\n    },\n  ],\n  // 0x90: SWAP\n  [\n    0x90,\n    function (runState) {\n      const stackPos = runState.opCode - 0x8f\n      runState.stack.swap(stackPos)\n    },\n  ],\n  // 0xa0: LOG\n  [\n    0xa0,\n    function (runState) {\n      const [memOffset, memLength] = runState.stack.popN(2)\n\n      const topicsCount = runState.opCode - 0xa0\n\n      const topics = runState.stack.popN(topicsCount)\n      const topicsBuf = topics.map(function (a: bigint) {\n        return setLengthLeft(bigIntToBytes(a), 32)\n      })\n\n      let mem = new Uint8Array(0)\n      if (memLength !== BIGINT_0) {\n        mem = runState.memory.read(Number(memOffset), Number(memLength))\n      }\n\n      runState.interpreter.log(mem, topicsCount, topicsBuf)\n    },\n  ],\n  // '0xf0' range - closures\n  // 0xf0: CREATE\n  [\n    0xf0,\n    async function (runState, common) {\n      const [value, offset, length] = runState.stack.popN(3)\n\n      if (\n        common.isActivatedEIP(3860) &&\n        length > Number(common.param('vm', 'maxInitCodeSize')) &&\n        !runState.interpreter._evm.allowUnlimitedInitCodeSize\n      ) {\n        trap(ERROR.INITCODE_SIZE_VIOLATION)\n      }\n\n      const gasLimit = runState.messageGasLimit!\n      runState.messageGasLimit = undefined\n\n      let data = new Uint8Array(0)\n      if (length !== BIGINT_0) {\n        data = runState.memory.read(Number(offset), Number(length), true)\n      }\n\n      const ret = await runState.interpreter.create(gasLimit, value, data)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf5: CREATE2\n  [\n    0xf5,\n    async function (runState, common) {\n      if (runState.interpreter.isStatic()) {\n        trap(ERROR.STATIC_STATE_CHANGE)\n      }\n\n      const [value, offset, length, salt] = runState.stack.popN(4)\n\n      if (\n        common.isActivatedEIP(3860) &&\n        length > Number(common.param('vm', 'maxInitCodeSize')) &&\n        !runState.interpreter._evm.allowUnlimitedInitCodeSize\n      ) {\n        trap(ERROR.INITCODE_SIZE_VIOLATION)\n      }\n\n      const gasLimit = runState.messageGasLimit!\n      runState.messageGasLimit = undefined\n\n      let data = new Uint8Array(0)\n      if (length !== BIGINT_0) {\n        data = runState.memory.read(Number(offset), Number(length), true)\n      }\n\n      const ret = await runState.interpreter.create2(\n        gasLimit,\n        value,\n        data,\n        setLengthLeft(bigIntToBytes(salt), 32)\n      )\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf1: CALL\n  [\n    0xf1,\n    async function (runState: RunState, common: Common) {\n      const [_currentGasLimit, toAddr, value, inOffset, inLength, outOffset, outLength] =\n        runState.stack.popN(7)\n      const toAddress = new Address(addresstoBytes(toAddr))\n\n      let data = new Uint8Array(0)\n      if (inLength !== BIGINT_0) {\n        data = runState.memory.read(Number(inOffset), Number(inLength), true)\n      }\n\n      let gasLimit = runState.messageGasLimit!\n      if (value !== BIGINT_0) {\n        const callStipend = common.param('gasPrices', 'callStipend')\n        runState.interpreter.addStipend(callStipend)\n        gasLimit += callStipend\n      }\n\n      runState.messageGasLimit = undefined\n\n      const ret = await runState.interpreter.call(gasLimit, toAddress, value, data)\n      // Write return data to memory\n      writeCallOutput(runState, outOffset, outLength)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf2: CALLCODE\n  [\n    0xf2,\n    async function (runState: RunState, common: Common) {\n      const [_currentGasLimit, toAddr, value, inOffset, inLength, outOffset, outLength] =\n        runState.stack.popN(7)\n      const toAddress = new Address(addresstoBytes(toAddr))\n\n      let gasLimit = runState.messageGasLimit!\n      if (value !== BIGINT_0) {\n        const callStipend = common.param('gasPrices', 'callStipend')\n        runState.interpreter.addStipend(callStipend)\n        gasLimit += callStipend\n      }\n\n      runState.messageGasLimit = undefined\n\n      let data = new Uint8Array(0)\n      if (inLength !== BIGINT_0) {\n        data = runState.memory.read(Number(inOffset), Number(inLength), true)\n      }\n\n      const ret = await runState.interpreter.callCode(gasLimit, toAddress, value, data)\n      // Write return data to memory\n      writeCallOutput(runState, outOffset, outLength)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf4: DELEGATECALL\n  [\n    0xf4,\n    async function (runState) {\n      const value = runState.interpreter.getCallValue()\n      const [_currentGasLimit, toAddr, inOffset, inLength, outOffset, outLength] =\n        runState.stack.popN(6)\n      const toAddress = new Address(addresstoBytes(toAddr))\n\n      let data = new Uint8Array(0)\n      if (inLength !== BIGINT_0) {\n        data = runState.memory.read(Number(inOffset), Number(inLength), true)\n      }\n\n      const gasLimit = runState.messageGasLimit!\n      runState.messageGasLimit = undefined\n\n      const ret = await runState.interpreter.callDelegate(gasLimit, toAddress, value, data)\n      // Write return data to memory\n      writeCallOutput(runState, outOffset, outLength)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf6: AUTH\n  [\n    0xf6,\n    async function (runState) {\n      // eslint-disable-next-line prefer-const\n      let [authority, memOffset, memLength] = runState.stack.popN(3)\n\n      if (memLength > BIGINT_128) {\n        memLength = BIGINT_128\n      }\n\n      let mem = runState.memory.read(Number(memOffset), Number(memLength))\n      if (mem.length < 128) {\n        mem = setLengthRight(mem, 128)\n      }\n\n      const yParity = BigInt(mem[31])\n      const r = mem.subarray(32, 64)\n      const s = mem.subarray(64, 96)\n      const commit = mem.subarray(96, 128)\n\n      if (bytesToBigInt(s) > SECP256K1_ORDER_DIV_2) {\n        trap(ERROR.AUTH_INVALID_S)\n      }\n\n      const paddedInvokerAddress = setLengthLeft(runState.interpreter._env.address.bytes, 32)\n      const chainId = setLengthLeft(bigIntToBytes(runState.interpreter.getChainId()), 32)\n      const message = concatBytes(EIP3074MAGIC, chainId, paddedInvokerAddress, commit)\n\n      const keccakFunction = runState.interpreter._evm.common.customCrypto.keccak256 ?? keccak256\n      const msgHash = keccakFunction(message)\n\n      let recover\n      const ecrecoverFunction = runState.interpreter._evm.common.customCrypto.ecrecover ?? ecrecover\n      try {\n        recover = ecrecoverFunction(msgHash, yParity + BIGINT_27, r, s)\n      } catch (e) {\n        // Malformed signature, push 0 on stack, clear auth variable\n        runState.stack.push(BIGINT_0)\n        runState.auth = undefined\n        return\n      }\n\n      const addressBuffer = publicToAddress(recover)\n      const address = new Address(addressBuffer)\n      runState.auth = address\n\n      const expectedAddress = new Address(setLengthLeft(bigIntToBytes(authority), 20))\n\n      if (!expectedAddress.equals(address)) {\n        // expected address does not equal the recovered address, clear auth variable\n        runState.stack.push(BIGINT_0)\n        runState.auth = undefined\n        return\n      }\n\n      runState.auth = address\n      runState.stack.push(BIGINT_1)\n    },\n  ],\n  // 0xf7: AUTHCALL\n  [\n    0xf7,\n    async function (runState) {\n      const [\n        _currentGasLimit,\n        addr,\n        value,\n        _valueExt,\n        argsOffset,\n        argsLength,\n        retOffset,\n        retLength,\n      ] = runState.stack.popN(8)\n\n      const toAddress = new Address(addresstoBytes(addr))\n\n      const gasLimit = runState.messageGasLimit!\n      runState.messageGasLimit = undefined\n\n      let data = new Uint8Array(0)\n      if (argsLength !== BIGINT_0) {\n        data = runState.memory.read(Number(argsOffset), Number(argsLength))\n      }\n\n      const ret = await runState.interpreter.authcall(gasLimit, toAddress, value, data)\n      // Write return data to memory\n      writeCallOutput(runState, retOffset, retLength)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xfa: STATICCALL\n  [\n    0xfa,\n    async function (runState) {\n      const value = BIGINT_0\n      const [_currentGasLimit, toAddr, inOffset, inLength, outOffset, outLength] =\n        runState.stack.popN(6)\n      const toAddress = new Address(addresstoBytes(toAddr))\n\n      const gasLimit = runState.messageGasLimit!\n      runState.messageGasLimit = undefined\n\n      let data = new Uint8Array(0)\n      if (inLength !== BIGINT_0) {\n        data = runState.memory.read(Number(inOffset), Number(inLength), true)\n      }\n\n      const ret = await runState.interpreter.callStatic(gasLimit, toAddress, value, data)\n      // Write return data to memory\n      writeCallOutput(runState, outOffset, outLength)\n      runState.stack.push(ret)\n    },\n  ],\n  // 0xf3: RETURN\n  [\n    0xf3,\n    function (runState) {\n      const [offset, length] = runState.stack.popN(2)\n      let returnData = new Uint8Array(0)\n      if (length !== BIGINT_0) {\n        returnData = runState.memory.read(Number(offset), Number(length))\n      }\n      runState.interpreter.finish(returnData)\n    },\n  ],\n  // 0xfd: REVERT\n  [\n    0xfd,\n    function (runState) {\n      const [offset, length] = runState.stack.popN(2)\n      let returnData = new Uint8Array(0)\n      if (length !== BIGINT_0) {\n        returnData = runState.memory.read(Number(offset), Number(length))\n      }\n      runState.interpreter.revert(returnData)\n    },\n  ],\n  // '0x70', range - other\n  // 0xff: SELFDESTRUCT\n  [\n    0xff,\n    async function (runState) {\n      const selfdestructToAddressBigInt = runState.stack.pop()\n      const selfdestructToAddress = new Address(addresstoBytes(selfdestructToAddressBigInt))\n      return runState.interpreter.selfDestruct(selfdestructToAddress)\n    },\n  ],\n])\n\n// Fill in rest of PUSHn, DUPn, SWAPn, LOGn for handlers\nconst pushFn = handlers.get(0x60)!\nfor (let i = 0x61; i <= 0x7f; i++) {\n  handlers.set(i, pushFn)\n}\nconst dupFn = handlers.get(0x80)!\nfor (let i = 0x81; i <= 0x8f; i++) {\n  handlers.set(i, dupFn)\n}\nconst swapFn = handlers.get(0x90)!\nfor (let i = 0x91; i <= 0x9f; i++) {\n  handlers.set(i, swapFn)\n}\nconst logFn = handlers.get(0xa0)!\nfor (let i = 0xa1; i <= 0xa4; i++) {\n  handlers.set(i, logFn)\n}\n","import { Hardfork } from '@ethereumjs/common'\nimport { CODE_SIZE_LEAF_KEY, getTreeIndexesForStorageSlot } from '@ethereumjs/statemanager'\nimport {\n  Address,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_3,\n  BIGINT_31,\n  BIGINT_32,\n  bigIntToBytes,\n  setLengthLeft,\n} from '@ethereumjs/util'\n\nimport { ERROR } from '../exceptions.js'\n\nimport { updateSstoreGasEIP1283 } from './EIP1283.js'\nimport { updateSstoreGasEIP2200 } from './EIP2200.js'\nimport { accessAddressEIP2929, accessStorageEIP2929 } from './EIP2929.js'\nimport {\n  addresstoBytes,\n  divCeil,\n  maxCallGas,\n  setLengthLeftStorage,\n  subMemUsage,\n  trap,\n  updateSstoreGas,\n} from './util.js'\n\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\n/**\n * This file returns the dynamic parts of opcodes which have dynamic gas\n * These are not pure functions: some edit the size of the memory\n * These functions are therefore not read-only\n */\n\n// The dynamic gas handler methods take a runState and a gas BN\n// The gas BN is necessary, since the base fee needs to be included,\n// to calculate the max call gas for the call opcodes correctly.\nexport interface AsyncDynamicGasHandler {\n  (runState: RunState, gas: bigint, common: Common): Promise<bigint>\n}\n\nexport interface SyncDynamicGasHandler {\n  (runState: RunState, gas: bigint, common: Common): bigint\n}\n\nexport const dynamicGasHandlers: Map<number, AsyncDynamicGasHandler | SyncDynamicGasHandler> =\n  new Map<number, AsyncDynamicGasHandler>([\n    [\n      /* EXP */\n      0x0a,\n      async function (runState, gas, common): Promise<bigint> {\n        const [_base, exponent] = runState.stack.peek(2)\n        if (exponent === BIGINT_0) {\n          return gas\n        }\n        let byteLength = exponent.toString(2).length / 8\n        if (byteLength > Math.trunc(byteLength)) {\n          byteLength = Math.trunc(byteLength) + 1\n        }\n        if (byteLength < 1 || byteLength > 32) {\n          trap(ERROR.OUT_OF_RANGE)\n        }\n        const expPricePerByte = common.param('gasPrices', 'expByte')\n        gas += BigInt(byteLength) * expPricePerByte\n        return gas\n      },\n    ],\n    [\n      /* KECCAK256 */\n      0x20,\n      async function (runState, gas, common): Promise<bigint> {\n        const [offset, length] = runState.stack.peek(2)\n        gas += subMemUsage(runState, offset, length, common)\n        gas += common.param('gasPrices', 'keccak256Word') * divCeil(length, BIGINT_32)\n        return gas\n      },\n    ],\n    [\n      /* BALANCE */\n      0x31,\n      async function (runState, gas, common): Promise<bigint> {\n        if (common.isActivatedEIP(2929) === true) {\n          const address = runState.stack.peek()[0]\n          gas += accessAddressEIP2929(runState, addresstoBytes(address), common)\n        }\n        return gas\n      },\n    ],\n    [\n      /* CALLDATACOPY */\n      0x37,\n      async function (runState, gas, common): Promise<bigint> {\n        const [memOffset, _dataOffset, dataLength] = runState.stack.peek(3)\n\n        gas += subMemUsage(runState, memOffset, dataLength, common)\n        if (dataLength !== BIGINT_0) {\n          gas += common.param('gasPrices', 'copy') * divCeil(dataLength, BIGINT_32)\n        }\n        return gas\n      },\n    ],\n    [\n      /* CODECOPY */\n      0x39,\n      async function (runState, gas, common): Promise<bigint> {\n        const [memOffset, _codeOffset, dataLength] = runState.stack.peek(3)\n\n        gas += subMemUsage(runState, memOffset, dataLength, common)\n        if (dataLength !== BIGINT_0) {\n          gas += common.param('gasPrices', 'copy') * divCeil(dataLength, BIGINT_32)\n\n          if (common.isActivatedEIP(6800)) {\n            const contract = runState.interpreter.getAddress()\n            let codeEnd = _codeOffset + dataLength\n            const codeSize = runState.interpreter.getCodeSize()\n            if (codeEnd > codeSize) {\n              codeEnd = codeSize\n            }\n\n            gas += runState.env.accessWitness!.touchCodeChunksRangeOnReadAndChargeGas(\n              contract,\n              Number(_codeOffset),\n              Number(codeEnd)\n            )\n          }\n        }\n        return gas\n      },\n    ],\n    [\n      /* EXTCODESIZE */\n      0x3b,\n      async function (runState, gas, common): Promise<bigint> {\n        if (common.isActivatedEIP(2929) === true) {\n          const address = runState.stack.peek()[0]\n          gas += accessAddressEIP2929(runState, addresstoBytes(address), common)\n        }\n\n        if (common.isActivatedEIP(6800) === true) {\n          const address = new Address(addresstoBytes(runState.stack.peek()[0]))\n          gas += runState.env.accessWitness!.touchAddressOnReadAndComputeGas(\n            address,\n            0,\n            CODE_SIZE_LEAF_KEY\n          )\n        }\n\n        return gas\n      },\n    ],\n    [\n      /* EXTCODECOPY */\n      0x3c,\n      async function (runState, gas, common): Promise<bigint> {\n        const [address, memOffset, _codeOffset, dataLength] = runState.stack.peek(4)\n\n        gas += subMemUsage(runState, memOffset, dataLength, common)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, addresstoBytes(address), common)\n        }\n\n        if (dataLength !== BIGINT_0) {\n          gas += common.param('gasPrices', 'copy') * divCeil(dataLength, BIGINT_32)\n\n          if (common.isActivatedEIP(6800)) {\n            const contract = new Address(addresstoBytes(address))\n            let codeEnd = _codeOffset + dataLength\n            const codeSize = BigInt((await runState.stateManager.getContractCode(contract)).length)\n            if (codeEnd > codeSize) {\n              codeEnd = codeSize\n            }\n\n            gas += runState.env.accessWitness!.touchCodeChunksRangeOnReadAndChargeGas(\n              contract,\n              Number(_codeOffset),\n              Number(codeEnd)\n            )\n          }\n        }\n        return gas\n      },\n    ],\n    [\n      /* RETURNDATACOPY */\n      0x3e,\n      async function (runState, gas, common): Promise<bigint> {\n        const [memOffset, returnDataOffset, dataLength] = runState.stack.peek(3)\n\n        if (returnDataOffset + dataLength > runState.interpreter.getReturnDataSize()) {\n          trap(ERROR.OUT_OF_GAS)\n        }\n\n        gas += subMemUsage(runState, memOffset, dataLength, common)\n\n        if (dataLength !== BIGINT_0) {\n          gas += common.param('gasPrices', 'copy') * divCeil(dataLength, BIGINT_32)\n        }\n        return gas\n      },\n    ],\n    [\n      /* EXTCODEHASH */\n      0x3f,\n      async function (runState, gas, common): Promise<bigint> {\n        if (common.isActivatedEIP(2929) === true) {\n          const address = runState.stack.peek()[0]\n          gas += accessAddressEIP2929(runState, addresstoBytes(address), common)\n        }\n        return gas\n      },\n    ],\n    [\n      /* MLOAD */\n      0x51,\n      async function (runState, gas, common): Promise<bigint> {\n        const pos = runState.stack.peek()[0]\n        gas += subMemUsage(runState, pos, BIGINT_32, common)\n        return gas\n      },\n    ],\n    [\n      /* MSTORE */\n      0x52,\n      async function (runState, gas, common): Promise<bigint> {\n        const offset = runState.stack.peek()[0]\n        gas += subMemUsage(runState, offset, BIGINT_32, common)\n        return gas\n      },\n    ],\n    [\n      /* MSTORE8 */\n      0x53,\n      async function (runState, gas, common): Promise<bigint> {\n        const offset = runState.stack.peek()[0]\n        gas += subMemUsage(runState, offset, BIGINT_1, common)\n        return gas\n      },\n    ],\n    [\n      /* SLOAD */\n      0x54,\n      async function (runState, gas, common): Promise<bigint> {\n        const key = runState.stack.peek()[0]\n        const keyBuf = setLengthLeft(bigIntToBytes(key), 32)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessStorageEIP2929(runState, keyBuf, false, common)\n        }\n\n        if (common.isActivatedEIP(6800) === true) {\n          const address = runState.interpreter.getAddress()\n          const { treeIndex, subIndex } = getTreeIndexesForStorageSlot(key)\n          gas += runState.env.accessWitness!.touchAddressOnReadAndComputeGas(\n            address,\n            treeIndex,\n            subIndex\n          )\n        }\n        return gas\n      },\n    ],\n    [\n      /* SSTORE */\n      0x55,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n        const [key, val] = runState.stack.peek(2)\n\n        const keyBytes = setLengthLeft(bigIntToBytes(key), 32)\n        // NOTE: this should be the shortest representation\n        let value\n        if (val === BIGINT_0) {\n          value = Uint8Array.from([])\n        } else {\n          value = bigIntToBytes(val)\n        }\n\n        const currentStorage = setLengthLeftStorage(\n          await runState.interpreter.storageLoad(keyBytes)\n        )\n        const originalStorage = setLengthLeftStorage(\n          await runState.interpreter.storageLoad(keyBytes, true)\n        )\n        if (common.hardfork() === Hardfork.Constantinople) {\n          gas += updateSstoreGasEIP1283(\n            runState,\n            currentStorage,\n            originalStorage,\n            setLengthLeftStorage(value),\n            common\n          )\n        } else if (common.gteHardfork(Hardfork.Istanbul)) {\n          gas += updateSstoreGasEIP2200(\n            runState,\n            currentStorage,\n            originalStorage,\n            setLengthLeftStorage(value),\n            keyBytes,\n            common\n          )\n        } else {\n          gas += updateSstoreGas(runState, currentStorage, setLengthLeftStorage(value), common)\n        }\n\n        if (common.isActivatedEIP(2929) === true) {\n          // We have to do this after the Istanbul (EIP2200) checks.\n          // Otherwise, we might run out of gas, due to \"sentry check\" of 2300 gas,\n          // if we deduct extra gas first.\n          gas += accessStorageEIP2929(runState, keyBytes, true, common)\n        }\n\n        if (common.isActivatedEIP(6800) === true) {\n          const contract = runState.interpreter.getAddress()\n          const { treeIndex, subIndex } = getTreeIndexesForStorageSlot(key)\n          gas += runState.env.accessWitness!.touchAddressOnWriteAndComputeGas(\n            contract,\n            treeIndex,\n            subIndex\n          )\n        }\n        return gas\n      },\n    ],\n    [\n      /* MCOPY */\n      0x5e,\n      async function (runState, gas, common): Promise<bigint> {\n        const [dst, src, length] = runState.stack.peek(3)\n        const wordsCopied = (length + BIGINT_31) / BIGINT_32\n        gas += BIGINT_3 * wordsCopied\n        gas += subMemUsage(runState, src, length, common)\n        gas += subMemUsage(runState, dst, length, common)\n        return gas\n      },\n    ],\n    [\n      /* LOG */\n      0xa0,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n\n        const [memOffset, memLength] = runState.stack.peek(2)\n\n        const topicsCount = runState.opCode - 0xa0\n\n        if (topicsCount < 0 || topicsCount > 4) {\n          trap(ERROR.OUT_OF_RANGE)\n        }\n\n        gas += subMemUsage(runState, memOffset, memLength, common)\n        gas +=\n          common.param('gasPrices', 'logTopic') * BigInt(topicsCount) +\n          memLength * common.param('gasPrices', 'logData')\n        return gas\n      },\n    ],\n    [\n      /* CREATE */\n      0xf0,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n        const [_value, offset, length] = runState.stack.peek(3)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(\n            runState,\n            runState.interpreter.getAddress().bytes,\n            common,\n            false\n          )\n        }\n\n        if (common.isActivatedEIP(3860) === true) {\n          gas += ((length + BIGINT_31) / BIGINT_32) * common.param('gasPrices', 'initCodeWordCost')\n        }\n\n        gas += subMemUsage(runState, offset, length, common)\n\n        let gasLimit = BigInt(runState.interpreter.getGasLeft()) - gas\n        gasLimit = maxCallGas(gasLimit, gasLimit, runState, common)\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* CALL */\n      0xf1,\n      async function (runState, gas, common): Promise<bigint> {\n        const [currentGasLimit, toAddr, value, inOffset, inLength, outOffset, outLength] =\n          runState.stack.peek(7)\n        const toAddress = new Address(addresstoBytes(toAddr))\n\n        if (runState.interpreter.isStatic() && value !== BIGINT_0) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n        gas += subMemUsage(runState, inOffset, inLength, common)\n        gas += subMemUsage(runState, outOffset, outLength, common)\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, toAddress.bytes, common)\n        }\n\n        if (value !== BIGINT_0) {\n          gas += common.param('gasPrices', 'callValueTransfer')\n        }\n\n        if (common.gteHardfork(Hardfork.SpuriousDragon)) {\n          // We are at or after Spurious Dragon\n          // Call new account gas: account is DEAD and we transfer nonzero value\n\n          const account = await runState.stateManager.getAccount(toAddress)\n          let deadAccount = false\n          if (account === undefined || account.isEmpty()) {\n            deadAccount = true\n          }\n\n          if (deadAccount && !(value === BIGINT_0)) {\n            gas += common.param('gasPrices', 'callNewAccount')\n          }\n        } else if ((await runState.stateManager.getAccount(toAddress)) === undefined) {\n          // We are before Spurious Dragon and the account does not exist.\n          // Call new account gas: account does not exist (it is not in the state trie, not even as an \"empty\" account)\n          gas += common.param('gasPrices', 'callNewAccount')\n        }\n\n        if (common.isActivatedEIP(6800)) {\n          // TODO: add check if toAddress is not a precompile\n          gas += runState.env.accessWitness!.touchAndChargeMessageCall(toAddress)\n          if (value !== BIGINT_0) {\n            const contractAddress = runState.interpreter.getAddress()\n            gas += runState.env.accessWitness!.touchAndChargeValueTransfer(\n              contractAddress,\n              toAddress\n            )\n          }\n        }\n\n        const gasLimit = maxCallGas(\n          currentGasLimit,\n          runState.interpreter.getGasLeft() - gas,\n          runState,\n          common\n        )\n        // note that TangerineWhistle or later this cannot happen\n        // (it could have ran out of gas prior to getting here though)\n        if (gasLimit > runState.interpreter.getGasLeft() - gas) {\n          trap(ERROR.OUT_OF_GAS)\n        }\n\n        if (gas > runState.interpreter.getGasLeft()) {\n          trap(ERROR.OUT_OF_GAS)\n        }\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* CALLCODE */\n      0xf2,\n      async function (runState, gas, common): Promise<bigint> {\n        const [currentGasLimit, toAddr, value, inOffset, inLength, outOffset, outLength] =\n          runState.stack.peek(7)\n\n        gas += subMemUsage(runState, inOffset, inLength, common)\n        gas += subMemUsage(runState, outOffset, outLength, common)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, addresstoBytes(toAddr), common)\n        }\n\n        if (value !== BIGINT_0) {\n          gas += common.param('gasPrices', 'callValueTransfer')\n        }\n\n        if (common.isActivatedEIP(6800)) {\n          const toAddress = new Address(addresstoBytes(toAddr))\n          // TODO: add check if toAddress is not a precompile\n          gas += runState.env.accessWitness!.touchAndChargeMessageCall(toAddress)\n        }\n\n        const gasLimit = maxCallGas(\n          currentGasLimit,\n          runState.interpreter.getGasLeft() - gas,\n          runState,\n          common\n        )\n        // note that TangerineWhistle or later this cannot happen\n        // (it could have ran out of gas prior to getting here though)\n        if (gasLimit > runState.interpreter.getGasLeft() - gas) {\n          trap(ERROR.OUT_OF_GAS)\n        }\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* RETURN */\n      0xf3,\n      async function (runState, gas, common): Promise<bigint> {\n        const [offset, length] = runState.stack.peek(2)\n        gas += subMemUsage(runState, offset, length, common)\n        return gas\n      },\n    ],\n    [\n      /* DELEGATECALL */\n      0xf4,\n      async function (runState, gas, common): Promise<bigint> {\n        const [currentGasLimit, toAddr, inOffset, inLength, outOffset, outLength] =\n          runState.stack.peek(6)\n\n        gas += subMemUsage(runState, inOffset, inLength, common)\n        gas += subMemUsage(runState, outOffset, outLength, common)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, addresstoBytes(toAddr), common)\n        }\n\n        if (common.isActivatedEIP(6800)) {\n          const toAddress = new Address(addresstoBytes(toAddr))\n          // TODO: add check if toAddress is not a precompile\n          gas += runState.env.accessWitness!.touchAndChargeMessageCall(toAddress)\n        }\n\n        const gasLimit = maxCallGas(\n          currentGasLimit,\n          runState.interpreter.getGasLeft() - gas,\n          runState,\n          common\n        )\n        // note that TangerineWhistle or later this cannot happen\n        // (it could have ran out of gas prior to getting here though)\n        if (gasLimit > runState.interpreter.getGasLeft() - gas) {\n          trap(ERROR.OUT_OF_GAS)\n        }\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* CREATE2 */\n      0xf5,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n\n        const [_value, offset, length, _salt] = runState.stack.peek(4)\n\n        gas += subMemUsage(runState, offset, length, common)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(\n            runState,\n            runState.interpreter.getAddress().bytes,\n            common,\n            false\n          )\n        }\n\n        if (common.isActivatedEIP(3860) === true) {\n          gas += ((length + BIGINT_31) / BIGINT_32) * common.param('gasPrices', 'initCodeWordCost')\n        }\n\n        gas += common.param('gasPrices', 'keccak256Word') * divCeil(length, BIGINT_32)\n        let gasLimit = runState.interpreter.getGasLeft() - gas\n        gasLimit = maxCallGas(gasLimit, gasLimit, runState, common) // CREATE2 is only available after TangerineWhistle (Constantinople introduced this opcode)\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* AUTH */\n      0xf6,\n      async function (runState, gas, common): Promise<bigint> {\n        const [_address, memOffset, memLength] = runState.stack.peek(3)\n        gas += subMemUsage(runState, memOffset, memLength, common)\n        return gas\n      },\n    ],\n    [\n      /* AUTHCALL */\n      0xf7,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.auth === undefined) {\n          trap(ERROR.AUTHCALL_UNSET)\n        }\n\n        const [\n          currentGasLimit,\n          addr,\n          value,\n          valueExt,\n          argsOffset,\n          argsLength,\n          retOffset,\n          retLength,\n        ] = runState.stack.peek(8)\n\n        if (valueExt !== BIGINT_0) {\n          trap(ERROR.AUTHCALL_NONZERO_VALUEEXT)\n        }\n\n        const toAddress = new Address(addresstoBytes(addr))\n\n        gas += common.param('gasPrices', 'warmstorageread')\n\n        gas += accessAddressEIP2929(runState, toAddress.bytes, common, true, true)\n\n        gas += subMemUsage(runState, argsOffset, argsLength, common)\n        gas += subMemUsage(runState, retOffset, retLength, common)\n\n        if (value > BIGINT_0) {\n          gas += common.param('gasPrices', 'authcallValueTransfer')\n          const account = await runState.stateManager.getAccount(toAddress)\n          if (!account) {\n            gas += common.param('gasPrices', 'callNewAccount')\n          }\n        }\n\n        let gasLimit = maxCallGas(\n          runState.interpreter.getGasLeft() - gas,\n          runState.interpreter.getGasLeft() - gas,\n          runState,\n          common\n        )\n        if (currentGasLimit !== BIGINT_0) {\n          if (currentGasLimit > gasLimit) {\n            trap(ERROR.OUT_OF_GAS)\n          }\n          gasLimit = currentGasLimit\n        }\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* STATICCALL */\n      0xfa,\n      async function (runState, gas, common): Promise<bigint> {\n        const [currentGasLimit, toAddr, inOffset, inLength, outOffset, outLength] =\n          runState.stack.peek(6)\n\n        gas += subMemUsage(runState, inOffset, inLength, common)\n        gas += subMemUsage(runState, outOffset, outLength, common)\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, addresstoBytes(toAddr), common)\n        }\n\n        if (common.isActivatedEIP(6800)) {\n          const toAddress = new Address(addresstoBytes(toAddr))\n          // TODO: add check if toAddress is not a precompile\n          gas += runState.env.accessWitness!.touchAndChargeMessageCall(toAddress)\n        }\n\n        const gasLimit = maxCallGas(\n          currentGasLimit,\n          runState.interpreter.getGasLeft() - gas,\n          runState,\n          common\n        ) // we set TangerineWhistle or later to true here, as STATICCALL was available from Byzantium (which is after TangerineWhistle)\n\n        runState.messageGasLimit = gasLimit\n        return gas\n      },\n    ],\n    [\n      /* REVERT */\n      0xfd,\n      async function (runState, gas, common): Promise<bigint> {\n        const [offset, length] = runState.stack.peek(2)\n        gas += subMemUsage(runState, offset, length, common)\n        return gas\n      },\n    ],\n    [\n      /* SELFDESTRUCT */\n      0xff,\n      async function (runState, gas, common): Promise<bigint> {\n        if (runState.interpreter.isStatic()) {\n          trap(ERROR.STATIC_STATE_CHANGE)\n        }\n        const selfdestructToaddressBigInt = runState.stack.peek()[0]\n\n        const selfdestructToAddress = new Address(addresstoBytes(selfdestructToaddressBigInt))\n        let deductGas = false\n        if (common.gteHardfork(Hardfork.SpuriousDragon)) {\n          // EIP-161: State Trie Clearing\n          const balance = await runState.interpreter.getExternalBalance(\n            runState.interpreter.getAddress()\n          )\n          if (balance > BIGINT_0) {\n            // This technically checks if account is empty or non-existent\n            const account = await runState.stateManager.getAccount(selfdestructToAddress)\n            if (account === undefined || account.isEmpty()) {\n              deductGas = true\n            }\n          }\n        } else if (common.gteHardfork(Hardfork.TangerineWhistle)) {\n          // EIP-150 (Tangerine Whistle) gas semantics\n          const exists =\n            (await runState.stateManager.getAccount(selfdestructToAddress)) !== undefined\n          if (!exists) {\n            deductGas = true\n          }\n        }\n        if (deductGas) {\n          gas += common.param('gasPrices', 'callNewAccount')\n        }\n\n        if (common.isActivatedEIP(2929) === true) {\n          gas += accessAddressEIP2929(runState, selfdestructToAddress.bytes, common, true, true)\n        }\n        return gas\n      },\n    ],\n  ])\n\n// Set the range [0xa0, 0xa4] to the LOG handler\nconst logDynamicFunc = dynamicGasHandlers.get(0xa0)!\nfor (let i = 0xa1; i <= 0xa4; i++) {\n  dynamicGasHandlers.set(i, logDynamicFunc)\n}\n","export * from './codes.js'\nexport * from './functions.js'\nexport * from './util.js'\n","import { Hardfork } from '@ethereumjs/common'\nimport {\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_160,\n  BIGINT_2,\n  BIGINT_32,\n  BIGINT_64,\n  BIGINT_NEG1,\n  bigIntToBytes,\n  bytesToHex,\n  equalsBytes,\n  setLengthLeft,\n  setLengthRight,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { EvmError } from '../exceptions.js'\n\nimport type { ERROR } from '../exceptions.js'\nimport type { RunState } from '../interpreter.js'\nimport type { Common } from '@ethereumjs/common'\n\nconst MASK_160 = (BIGINT_1 << BIGINT_160) - BIGINT_1\n\n/**\n * Proxy function for @ethereumjs/util's setLengthLeft, except it returns a zero\n * length Uint8Array in case the Uint8Array is full of zeros.\n * @param value Uint8Array which we want to pad\n */\nexport function setLengthLeftStorage(value: Uint8Array) {\n  if (equalsBytes(value, new Uint8Array(value.length))) {\n    // return the empty Uint8Array (the value is zero)\n    return new Uint8Array(0)\n  } else {\n    return setLengthLeft(value, 32)\n  }\n}\n\n/**\n * Wraps error message as EvmError\n */\nexport function trap(err: string) {\n  // TODO: facilitate extra data along with errors\n  throw new EvmError(err as ERROR)\n}\n\n/**\n * Converts bigint address (they're stored like this on the stack) to Uint8Array address\n */\nexport function addresstoBytes(address: bigint | Uint8Array) {\n  if (address instanceof Uint8Array) return address\n  return setLengthLeft(bigIntToBytes(address & MASK_160), 20)\n}\n\n/**\n * Error message helper - generates location string\n */\nexport function describeLocation(runState: RunState): string {\n  const keccakFunction = runState.interpreter._evm.common.customCrypto.keccak256 ?? keccak256\n  const hash = bytesToHex(keccakFunction(runState.interpreter.getCode()))\n  const address = runState.interpreter.getAddress().toString()\n  const pc = runState.programCounter - 1\n  return `${hash}/${address}:${pc}`\n}\n\n/**\n * Find Ceil(a / b)\n *\n * @param {bigint} a\n * @param {bigint} b\n * @return {bigint}\n */\nexport function divCeil(a: bigint, b: bigint): bigint {\n  const div = a / b\n  const modulus = mod(a, b)\n\n  // Fast case - exact division\n  if (modulus === BIGINT_0) return div\n\n  // Round up\n  return div < BIGINT_0 ? div - BIGINT_1 : div + BIGINT_1\n}\n\n/**\n * Returns an overflow-safe slice of an array. It right-pads\n * the data with zeros to `length`.\n */\nexport function getDataSlice(data: Uint8Array, offset: bigint, length: bigint): Uint8Array {\n  const len = BigInt(data.length)\n  if (offset > len) {\n    offset = len\n  }\n\n  let end = offset + length\n  if (end > len) {\n    end = len\n  }\n\n  data = data.subarray(Number(offset), Number(end))\n  // Right-pad with zeros to fill dataLength bytes\n  data = setLengthRight(data, Number(length))\n\n  return data\n}\n\n/**\n * Get full opcode name from its name and code.\n *\n * @param code Integer code of opcode.\n * @param name Short name of the opcode.\n * @returns Full opcode name\n */\nexport function getFullname(code: number, name: string): string {\n  switch (name) {\n    case 'LOG':\n      name += code - 0xa0\n      break\n    case 'PUSH':\n      name += code - 0x5f\n      break\n    case 'DUP':\n      name += code - 0x7f\n      break\n    case 'SWAP':\n      name += code - 0x8f\n      break\n  }\n  return name\n}\n\n/**\n * Checks if a jump is valid given a destination (defined as a 1 in the validJumps array)\n */\nexport function jumpIsValid(runState: RunState, dest: number): boolean {\n  return runState.validJumps[dest] === 1\n}\n\n/**\n * Checks if a jumpsub is valid given a destination (defined as a 2 in the validJumps array)\n */\nexport function jumpSubIsValid(runState: RunState, dest: number): boolean {\n  return runState.validJumps[dest] === 2\n}\n\n/**\n * Returns an overflow-safe slice of an array. It right-pads\n * the data with zeros to `length`.\n * @param gasLimit requested gas Limit\n * @param gasLeft current gas left\n * @param runState the current runState\n * @param common the common\n */\nexport function maxCallGas(\n  gasLimit: bigint,\n  gasLeft: bigint,\n  runState: RunState,\n  common: Common\n): bigint {\n  if (common.gteHardfork(Hardfork.TangerineWhistle)) {\n    const gasAllowed = gasLeft - gasLeft / BIGINT_64\n    return gasLimit > gasAllowed ? gasAllowed : gasLimit\n  } else {\n    return gasLimit\n  }\n}\n\n/**\n * Subtracts the amount needed for memory usage from `runState.gasLeft`\n */\nexport function subMemUsage(runState: RunState, offset: bigint, length: bigint, common: Common) {\n  // YP (225): access with zero length will not extend the memory\n  if (length === BIGINT_0) return BIGINT_0\n\n  const newMemoryWordCount = divCeil(offset + length, BIGINT_32)\n  if (newMemoryWordCount <= runState.memoryWordCount) return BIGINT_0\n\n  const words = newMemoryWordCount\n  const fee = common.param('gasPrices', 'memory')\n  const quadCoeff = common.param('gasPrices', 'quadCoeffDiv')\n  // words * 3 + words ^2 / 512\n  let cost = words * fee + (words * words) / quadCoeff\n\n  if (cost > runState.highestMemCost) {\n    const currentHighestMemCost = runState.highestMemCost\n    runState.highestMemCost = cost\n    cost -= currentHighestMemCost\n  }\n\n  runState.memoryWordCount = newMemoryWordCount\n\n  return cost\n}\n\n/**\n * Writes data returned by evm.call* methods to memory\n */\nexport function writeCallOutput(runState: RunState, outOffset: bigint, outLength: bigint) {\n  const returnData = runState.interpreter.getReturnData()\n  if (returnData.length > 0) {\n    const memOffset = Number(outOffset)\n    let dataLength = Number(outLength)\n    if (BigInt(returnData.length) < dataLength) {\n      dataLength = returnData.length\n    }\n    const data = getDataSlice(returnData, BIGINT_0, BigInt(dataLength))\n    runState.memory.extend(memOffset, dataLength)\n    runState.memory.write(memOffset, dataLength, data)\n  }\n}\n\n/**\n * The first rule set of SSTORE rules, which are the rules pre-Constantinople and in Petersburg\n */\nexport function updateSstoreGas(\n  runState: RunState,\n  currentStorage: Uint8Array,\n  value: Uint8Array,\n  common: Common\n): bigint {\n  if (\n    (value.length === 0 && currentStorage.length === 0) ||\n    (value.length > 0 && currentStorage.length > 0)\n  ) {\n    const gas = common.param('gasPrices', 'sstoreReset')\n    return gas\n  } else if (value.length === 0 && currentStorage.length > 0) {\n    const gas = common.param('gasPrices', 'sstoreReset')\n    runState.interpreter.refundGas(common.param('gasPrices', 'sstoreRefund'), 'updateSstoreGas')\n    return gas\n  } else {\n    /*\n      The situations checked above are:\n      -> Value/Slot are both 0\n      -> Value/Slot are both nonzero\n      -> Value is zero, but slot is nonzero\n      Thus, the remaining case is where value is nonzero, but slot is zero, which is this clause\n    */\n    return common.param('gasPrices', 'sstoreSet')\n  }\n}\n\nexport function mod(a: bigint, b: bigint) {\n  let r = a % b\n  if (r < BIGINT_0) {\n    r = b + r\n  }\n  return r\n}\n\nexport function fromTwos(a: bigint) {\n  return BigInt.asIntN(256, a)\n}\n\nexport function toTwos(a: bigint) {\n  return BigInt.asUintN(256, a)\n}\n\nexport function abs(a: bigint) {\n  if (a > 0) {\n    return a\n  }\n  return a * BIGINT_NEG1\n}\n\nconst N = BigInt(115792089237316195423570985008687907853269984665640564039457584007913129639936)\nexport function exponentiation(bas: bigint, exp: bigint) {\n  let t = BIGINT_1\n  while (exp > BIGINT_0) {\n    if (exp % BIGINT_2 !== BIGINT_0) {\n      t = (t * bas) % N\n    }\n    bas = (bas * bas) % N\n    exp = exp / BIGINT_2\n  }\n  return t\n}\n","import {\n  BIGINT_27,\n  BIGINT_28,\n  bytesToBigInt,\n  bytesToHex,\n  ecrecover,\n  publicToAddress,\n  setLengthLeft,\n  setLengthRight,\n  short,\n} from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile01(opts: PrecompileInput): ExecResult {\n  const ecrecoverFunction = opts.common.customCrypto.ecrecover ?? ecrecover\n  const gasUsed = opts.common.param('gasPrices', 'ecRecover')\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run ECRECOVER (0x01) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECRECOVER (0x01) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const data = setLengthRight(opts.data, 128)\n\n  const msgHash = data.subarray(0, 32)\n  const v = data.subarray(32, 64)\n  const vBigInt = bytesToBigInt(v)\n\n  // Guard against util's `ecrecover`: without providing chainId this will return\n  // a signature in most of the cases in the cases that `v=0` or `v=1`\n  // However, this should throw, only 27 and 28 is allowed as input\n  if (vBigInt !== BIGINT_27 && vBigInt !== BIGINT_28) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECRECOVER (0x01) failed: v neither 27 nor 28`)\n    }\n    return {\n      executionGasUsed: gasUsed,\n      returnValue: new Uint8Array(),\n    }\n  }\n\n  const r = data.subarray(64, 96)\n  const s = data.subarray(96, 128)\n\n  let publicKey\n  try {\n    if (opts._debug !== undefined) {\n      opts._debug(\n        `ECRECOVER (0x01): PK recovery with msgHash=${bytesToHex(msgHash)} v=${bytesToHex(\n          v\n        )} r=${bytesToHex(r)}s=${bytesToHex(s)}}`\n      )\n    }\n    publicKey = ecrecoverFunction(msgHash, bytesToBigInt(v), r, s)\n  } catch (e: any) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECRECOVER (0x01) failed: PK recovery failed`)\n    }\n    return {\n      executionGasUsed: gasUsed,\n      returnValue: new Uint8Array(0),\n    }\n  }\n  const address = setLengthLeft(publicToAddress(publicKey), 32)\n  if (opts._debug !== undefined) {\n    opts._debug(`ECRECOVER (0x01) return address=${bytesToHex(address)}`)\n  }\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: address,\n  }\n}\n","import { bytesToHex, short } from '@ethereumjs/util'\nimport { sha256 } from 'ethereum-cryptography/sha256.js'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile02(opts: PrecompileInput): ExecResult {\n  const data = opts.data\n  const sha256Function = opts.common.customCrypto.sha256 ?? sha256\n  let gasUsed = opts.common.param('gasPrices', 'sha256')\n  gasUsed += opts.common.param('gasPrices', 'sha256Word') * BigInt(Math.ceil(data.length / 32))\n\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run KECCAK256 (0x02) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`KECCAK256 (0x02) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const hash = sha256Function(data)\n  if (opts._debug !== undefined) {\n    opts._debug(`KECCAK256 (0x02) return hash=${bytesToHex(hash)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: hash,\n  }\n}\n","import { bytesToHex, setLengthLeft, short } from '@ethereumjs/util'\nimport { ripemd160 } from 'ethereum-cryptography/ripemd160.js'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile03(opts: PrecompileInput): ExecResult {\n  const data = opts.data\n\n  let gasUsed = opts.common.param('gasPrices', 'ripemd160')\n  gasUsed += opts.common.param('gasPrices', 'ripemd160Word') * BigInt(Math.ceil(data.length / 32))\n\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run RIPEMD160 (0x03) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`RIPEMD160 (0x03) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const hash = setLengthLeft(ripemd160(data), 32)\n  if (opts._debug !== undefined) {\n    opts._debug(`RIPEMD160 (0x03) return hash=${bytesToHex(hash)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: setLengthLeft(ripemd160(data), 32),\n  }\n}\n","import { short } from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile04(opts: PrecompileInput): ExecResult {\n  const data = opts.data\n\n  let gasUsed = opts.common.param('gasPrices', 'identity')\n  gasUsed += opts.common.param('gasPrices', 'identityWord') * BigInt(Math.ceil(data.length / 32))\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run IDENTITY (0x04) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`IDENTITY (0x04) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(`IDENTITY (0x04) return data=${short(opts.data)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: Uint8Array.from(data), // Copy the memory (`Uint8Array.from()`)\n  }\n}\n","import {\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_2,\n  BIGINT_32,\n  BIGINT_64,\n  BIGINT_7,\n  BIGINT_8,\n  BIGINT_96,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToHex,\n  setLengthLeft,\n  setLengthRight,\n  short,\n} from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nconst BIGINT_4 = BigInt(4)\nconst BIGINT_16 = BigInt(16)\nconst BIGINT_200 = BigInt(200)\nconst BIGINT_480 = BigInt(480)\nconst BIGINT_1024 = BigInt(1024)\nconst BIGINT_3072 = BigInt(3072)\nconst BIGINT_199680 = BigInt(199680)\n\nconst maxInt = BigInt(Number.MAX_SAFE_INTEGER)\nconst maxSize = BigInt(2147483647) // @ethereumjs/util setLengthRight limitation\n\nfunction multComplexity(x: bigint): bigint {\n  let fac1\n  let fac2\n  if (x <= BIGINT_64) {\n    return x ** BIGINT_2\n  } else if (x <= BIGINT_1024) {\n    // return Math.floor(Math.pow(x, 2) / 4) + 96 * x - 3072\n    fac1 = x ** BIGINT_2 / BIGINT_4\n    fac2 = x * BIGINT_96\n    return fac1 + fac2 - BIGINT_3072\n  } else {\n    // return Math.floor(Math.pow(x, 2) / 16) + 480 * x - 199680\n    fac1 = x ** BIGINT_2 / BIGINT_16\n    fac2 = x * BIGINT_480\n    return fac1 + fac2 - BIGINT_199680\n  }\n}\n\nfunction multComplexityEIP2565(x: bigint): bigint {\n  const words = (x + BIGINT_7) / BIGINT_8\n  return words * words\n}\n\nfunction getAdjustedExponentLength(data: Uint8Array): bigint {\n  let expBytesStart\n  try {\n    const baseLen = bytesToBigInt(data.subarray(0, 32))\n    expBytesStart = 96 + Number(baseLen) // 96 for base length, then exponent length, and modulus length, then baseLen for the base data, then exponent bytes start\n  } catch (e: any) {\n    expBytesStart = Number.MAX_SAFE_INTEGER - 32\n  }\n  const expLen = bytesToBigInt(data.subarray(32, 64))\n  let firstExpBytes = data.subarray(expBytesStart, expBytesStart + 32) // first word of the exponent data\n  firstExpBytes = setLengthRight(firstExpBytes, 32) // reading past the data reads virtual zeros\n  let firstExpBigInt = bytesToBigInt(firstExpBytes)\n  let max32expLen = 0\n  if (expLen < BIGINT_32) {\n    max32expLen = 32 - Number(expLen)\n  }\n  firstExpBigInt = firstExpBigInt >> (BIGINT_8 * BigInt(Math.max(max32expLen, 0)))\n\n  let bitLen = -1\n  while (firstExpBigInt > BIGINT_0) {\n    bitLen = bitLen + 1\n    firstExpBigInt = firstExpBigInt >> BIGINT_1\n  }\n  let expLenMinus32OrZero = expLen - BIGINT_32\n  if (expLenMinus32OrZero < BIGINT_0) {\n    expLenMinus32OrZero = BIGINT_0\n  }\n  const eightTimesExpLenMinus32OrZero = expLenMinus32OrZero * BIGINT_8\n  let adjustedExpLen = eightTimesExpLenMinus32OrZero\n  if (bitLen > 0) {\n    adjustedExpLen += BigInt(bitLen)\n  }\n  return adjustedExpLen\n}\n\nexport function expmod(a: bigint, power: bigint, modulo: bigint) {\n  if (power === BIGINT_0) {\n    return BIGINT_1 % modulo\n  }\n  let res = BIGINT_1\n  while (power > BIGINT_0) {\n    if (power & BIGINT_1) res = (res * a) % modulo\n    a = (a * a) % modulo\n    power >>= BIGINT_1\n  }\n  return res\n}\n\nexport function precompile05(opts: PrecompileInput): ExecResult {\n  const data = opts.data.length < 96 ? setLengthRight(opts.data, 96) : opts.data\n\n  let adjustedELen = getAdjustedExponentLength(data)\n  if (adjustedELen < BIGINT_1) {\n    adjustedELen = BIGINT_1\n  }\n\n  const bLen = bytesToBigInt(data.subarray(0, 32))\n  const eLen = bytesToBigInt(data.subarray(32, 64))\n  const mLen = bytesToBigInt(data.subarray(64, 96))\n\n  let maxLen = bLen\n  if (maxLen < mLen) {\n    maxLen = mLen\n  }\n  const Gquaddivisor = opts.common.param('gasPrices', 'modexpGquaddivisor')\n  let gasUsed\n\n  const bStart = BIGINT_96\n  const bEnd = bStart + bLen\n  const eStart = bEnd\n  const eEnd = eStart + eLen\n  const mStart = eEnd\n  const mEnd = mStart + mLen\n\n  if (!opts.common.isActivatedEIP(2565)) {\n    gasUsed = (adjustedELen * multComplexity(maxLen)) / Gquaddivisor\n  } else {\n    gasUsed = (adjustedELen * multComplexityEIP2565(maxLen)) / Gquaddivisor\n    if (gasUsed < BIGINT_200) {\n      gasUsed = BIGINT_200\n    }\n  }\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run MODEXP (0x05) precompile data=${short(opts.data)} length=${opts.data.length} gasLimit=${\n        opts.gasLimit\n      } gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`MODEXP (0x05) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (bLen === BIGINT_0 && mLen === BIGINT_0) {\n    return {\n      executionGasUsed: gasUsed,\n      returnValue: new Uint8Array(),\n    }\n  }\n\n  if (bLen > maxSize || eLen > maxSize || mLen > maxSize) {\n    if (opts._debug !== undefined) {\n      opts._debug(`MODEXP (0x05) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (mEnd > maxInt) {\n    if (opts._debug !== undefined) {\n      opts._debug(`MODEXP (0x05) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const B = bytesToBigInt(setLengthRight(data.subarray(Number(bStart), Number(bEnd)), Number(bLen)))\n  const E = bytesToBigInt(setLengthRight(data.subarray(Number(eStart), Number(eEnd)), Number(eLen)))\n  const M = bytesToBigInt(setLengthRight(data.subarray(Number(mStart), Number(mEnd)), Number(mLen)))\n\n  let R\n  if (M === BIGINT_0) {\n    R = new Uint8Array()\n  } else {\n    R = expmod(B, E, M)\n    if (R === BIGINT_0) {\n      R = new Uint8Array()\n    } else {\n      R = bigIntToBytes(R)\n    }\n  }\n\n  const res = setLengthLeft(R, Number(mLen))\n  if (opts._debug !== undefined) {\n    opts._debug(`MODEXP (0x05) return value=${bytesToHex(res)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: res,\n  }\n}\n","import { bytesToHex, bytesToUnprefixedHex, hexToBytes, short } from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { EVM } from '../evm.js'\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile06(opts: PrecompileInput): ExecResult {\n  const inputData = bytesToUnprefixedHex(opts.data.subarray(0, 128))\n\n  const gasUsed = opts.common.param('gasPrices', 'ecAdd')\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run ECADD (0x06) precompile data=${short(opts.data)} length=${opts.data.length} gasLimit=${\n        opts.gasLimit\n      } gasUsed=${gasUsed}`\n    )\n  }\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECADD (0x06) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const returnData = hexToBytes((opts._EVM as EVM)['_bn128'].ec_add(inputData))\n\n  // check ecadd success or failure by comparing the output length\n  if (returnData.length !== 64) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECADD (0x06) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(`ECADD (0x06) return value=${bytesToHex(returnData)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: returnData,\n  }\n}\n","import { bytesToHex, bytesToUnprefixedHex, hexToBytes, short } from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { EVM } from '../evm.js'\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile07(opts: PrecompileInput): ExecResult {\n  const inputData = bytesToUnprefixedHex(opts.data.subarray(0, 128))\n  const gasUsed = opts.common.param('gasPrices', 'ecMul')\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run ECMUL (0x07) precompile data=${short(opts.data)} length=${opts.data.length} gasLimit=${\n        opts.gasLimit\n      } gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECMUL (0x07) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const returnData = hexToBytes((opts._EVM as EVM)['_bn128'].ec_mul(inputData))\n\n  // check ecmul success or failure by comparing the output length\n  if (returnData.length !== 64) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECMUL (0x07) failed: OOG`)\n    }\n    // TODO: should this really return OOG?\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(`ECMUL (0x07) return value=${bytesToHex(returnData)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: returnData,\n  }\n}\n","import { bytesToHex, bytesToUnprefixedHex, hexToBytes, short } from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\n\nimport type { EVM } from '../evm.js'\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport function precompile08(opts: PrecompileInput): ExecResult {\n  const inputData = opts.data\n  // no need to care about non-divisible-by-192, because bn128.pairing will properly fail in that case\n  const inputDataSize = BigInt(Math.floor(inputData.length / 192))\n  const gasUsed =\n    opts.common.param('gasPrices', 'ecPairing') +\n    inputDataSize * opts.common.param('gasPrices', 'ecPairingWord')\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run ECPAIRING (0x08) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECPAIRING (0x08) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const returnData = hexToBytes(\n    (opts._EVM as EVM)['_bn128'].ec_pairing(bytesToUnprefixedHex(inputData))\n  )\n\n  // check ecpairing success or failure by comparing the output length\n  if (returnData.length !== 32) {\n    if (opts._debug !== undefined) {\n      opts._debug(`ECPAIRING (0x08) failed: OOG`)\n    }\n    // TODO: should this really return OOG?\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(`ECPAIRING (0x08) return value=${bytesToHex(returnData)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: returnData,\n  }\n}\n","import { bytesToHex, short } from '@ethereumjs/util'\n\nimport { OOGResult } from '../evm.js'\nimport { ERROR, EvmError } from '../exceptions.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\n// The following blake2 code has been taken from (license: Creative Commons CC0):\n// https://github.com/dcposch/blakejs/blob/410c640d0f08d3b26904c6d1ab3d81df3619d282/blake2b.js\n// The modifications include:\n//  - Avoiding the use of context in F\n//  - F accepts number of rounds as parameter\n//  - Expect 2 64-byte t values, xor them both\n//  - Take modulo 10 for indices of SIGMA\n//  - Added type annotations\n//  - Moved previously global `v` and `m` variables inside the F function\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA(v: Uint32Array, a: number, b: number) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC(v: Uint32Array, a: number, b0: number, b1: number) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G(\n  v: Uint32Array,\n  mw: Uint32Array,\n  a: number,\n  b: number,\n  c: number,\n  d: number,\n  ix: number,\n  iy: number\n) {\n  const x0 = mw[ix]\n  const x1 = mw[ix + 1]\n  const y0 = mw[iy]\n  const y1 = mw[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\n// prettier-ignore\nconst BLAKE2B_IV32 = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19,])\n\n// prettier-ignore\nconst SIGMA8 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\nexport function F(h: Uint32Array, m: Uint32Array, t: Uint32Array, f: boolean, rounds: number) {\n  const v = new Uint32Array(32)\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // 128 bits of offset\n  v[24] = v[24] ^ t[0]\n  v[25] = v[25] ^ t[1]\n  v[26] = v[26] ^ t[2]\n  v[27] = v[27] ^ t[3]\n\n  // last block flag set ?\n  if (f) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < rounds; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    const ri = (i % 10) * 16\n    B2B_G(v, m, 0, 8, 16, 24, SIGMA82[ri + 0], SIGMA82[ri + 1])\n    B2B_G(v, m, 2, 10, 18, 26, SIGMA82[ri + 2], SIGMA82[ri + 3])\n    B2B_G(v, m, 4, 12, 20, 28, SIGMA82[ri + 4], SIGMA82[ri + 5])\n    B2B_G(v, m, 6, 14, 22, 30, SIGMA82[ri + 6], SIGMA82[ri + 7])\n    B2B_G(v, m, 0, 10, 20, 30, SIGMA82[ri + 8], SIGMA82[ri + 9])\n    B2B_G(v, m, 2, 12, 22, 24, SIGMA82[ri + 10], SIGMA82[ri + 11])\n    B2B_G(v, m, 4, 14, 16, 26, SIGMA82[ri + 12], SIGMA82[ri + 13])\n    B2B_G(v, m, 6, 8, 18, 28, SIGMA82[ri + 14], SIGMA82[ri + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    h[i] = h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\nexport function precompile09(opts: PrecompileInput): ExecResult {\n  const data = opts.data\n  if (data.length !== 213) {\n    if (opts._debug !== undefined) {\n      opts._debug(`BLAKE2F (0x09) failed: OUT_OF_RANGE dataLength=${data.length}`)\n    }\n    return {\n      returnValue: new Uint8Array(0),\n      executionGasUsed: opts.gasLimit,\n      exceptionError: new EvmError(ERROR.OUT_OF_RANGE),\n    }\n  }\n  const lastByte = data.subarray(212, 213)[0]\n  if (lastByte !== 1 && lastByte !== 0) {\n    if (opts._debug !== undefined) {\n      opts._debug(`BLAKE2F (0x09) failed: OUT_OF_RANGE lastByte=${lastByte}`)\n    }\n    return {\n      returnValue: new Uint8Array(0),\n      executionGasUsed: opts.gasLimit,\n      exceptionError: new EvmError(ERROR.OUT_OF_RANGE),\n    }\n  }\n\n  const rounds = new DataView(data.buffer, data.byteOffset).getUint32(0)\n  const hRaw = new DataView(data.buffer, data.byteOffset + 4, 64)\n  const mRaw = new DataView(data.buffer, data.byteOffset + 68, 128)\n  const tRaw = new DataView(data.buffer, data.byteOffset + 196, 16)\n  // final\n  const f = lastByte === 1\n\n  let gasUsed = opts.common.param('gasPrices', 'blake2Round')\n  gasUsed *= BigInt(rounds)\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run BLAKE2F (0x09) precompile data=${short(opts.data)} length=${opts.data.length} gasLimit=${\n        opts.gasLimit\n      } gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`BLAKE2F (0x09) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  const h = new Uint32Array(16)\n  for (let i = 0; i < 16; i++) {\n    h[i] = hRaw.getUint32(i * 4, true)\n  }\n\n  const m = new Uint32Array(32)\n  for (let i = 0; i < 32; i++) {\n    m[i] = mRaw.getUint32(i * 4, true)\n  }\n\n  const t = new Uint32Array(4)\n  for (let i = 0; i < 4; i++) {\n    t[i] = tRaw.getUint32(i * 4, true)\n  }\n\n  F(h, m, t, f, rounds)\n\n  const output = new Uint8Array(64)\n  const outputView = new DataView(output.buffer)\n  for (let i = 0; i < 16; i++) {\n    outputView.setUint32(i * 4, h[i], true)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(`BLAKE2F (0x09) return hash=${bytesToHex(output)}`)\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: output,\n  }\n}\n","import {\n  bigIntToBytes,\n  bytesToHex,\n  computeVersionedHash,\n  concatBytes,\n  setLengthLeft,\n  short,\n} from '@ethereumjs/util'\n\nimport { EvmErrorResult, OOGResult } from '../evm.js'\nimport { ERROR, EvmError } from '../exceptions.js'\n\nimport type { ExecResult } from '../types.js'\nimport type { PrecompileInput } from './types.js'\n\nexport const BLS_MODULUS = BigInt(\n  '52435875175126190479447740508185965837690552500527637822603658699938581184513'\n)\n\nconst modulusBuffer = setLengthLeft(bigIntToBytes(BLS_MODULUS), 32)\n\nexport async function precompile0a(opts: PrecompileInput): Promise<ExecResult> {\n  if (opts.common.customCrypto?.kzg === undefined) {\n    throw new Error('kzg not initialized')\n  }\n  const gasUsed = opts.common.param('gasPrices', 'kzgPointEvaluationGasPrecompilePrice')\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `Run KZG_POINT_EVALUATION (0x14) precompile data=${short(opts.data)} length=${\n        opts.data.length\n      } gasLimit=${opts.gasLimit} gasUsed=${gasUsed}`\n    )\n  }\n\n  if (opts.gasLimit < gasUsed) {\n    if (opts._debug !== undefined) {\n      opts._debug(`KZG_POINT_EVALUATION (0x14) failed: OOG`)\n    }\n    return OOGResult(opts.gasLimit)\n  }\n\n  if (opts.data.length !== 192) {\n    return EvmErrorResult(new EvmError(ERROR.INVALID_INPUT_LENGTH), opts.gasLimit)\n  }\n\n  const version = Number(opts.common.param('sharding', 'blobCommitmentVersionKzg'))\n  const fieldElementsPerBlob = opts.common.param('sharding', 'fieldElementsPerBlob')\n  const versionedHash = opts.data.subarray(0, 32)\n  const z = opts.data.subarray(32, 64)\n  const y = opts.data.subarray(64, 96)\n  const commitment = opts.data.subarray(96, 144)\n  const kzgProof = opts.data.subarray(144, 192)\n\n  if (bytesToHex(computeVersionedHash(commitment, version)) !== bytesToHex(versionedHash)) {\n    if (opts._debug !== undefined) {\n      opts._debug(`KZG_POINT_EVALUATION (0x14) failed: INVALID_COMMITMENT`)\n    }\n    return EvmErrorResult(new EvmError(ERROR.INVALID_COMMITMENT), opts.gasLimit)\n  }\n\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `KZG_POINT_EVALUATION (0x14): proof verification with commitment=${bytesToHex(\n        commitment\n      )} z=${bytesToHex(z)} y=${bytesToHex(y)} kzgProof=${bytesToHex(kzgProof)}`\n    )\n  }\n  try {\n    const res = opts.common.customCrypto?.kzg?.verifyKzgProof(commitment, z, y, kzgProof)\n    if (res === false) {\n      return EvmErrorResult(new EvmError(ERROR.INVALID_PROOF), opts.gasLimit)\n    }\n  } catch (err: any) {\n    if (err.message.includes('C_KZG_BADARGS') === true) {\n      if (opts._debug !== undefined) {\n        opts._debug(`KZG_POINT_EVALUATION (0x14) failed: INVALID_INPUTS`)\n      }\n      return EvmErrorResult(new EvmError(ERROR.INVALID_INPUTS), opts.gasLimit)\n    }\n    if (opts._debug !== undefined) {\n      opts._debug(`KZG_POINT_EVALUATION (0x14) failed: Unknown error - ${err.message}`)\n    }\n    return EvmErrorResult(new EvmError(ERROR.REVERT), opts.gasLimit)\n  }\n\n  // Return value - FIELD_ELEMENTS_PER_BLOB and BLS_MODULUS as padded 32 byte big endian values\n  const fieldElementsBuffer = setLengthLeft(bigIntToBytes(fieldElementsPerBlob), 32)\n\n  if (opts._debug !== undefined) {\n    opts._debug(\n      `KZG_POINT_EVALUATION (0x14) return fieldElements=${bytesToHex(\n        fieldElementsBuffer\n      )} modulus=${bytesToHex(modulusBuffer)}`\n    )\n  }\n\n  return {\n    executionGasUsed: gasUsed,\n    returnValue: concatBytes(fieldElementsBuffer, modulusBuffer),\n  }\n}\n","import { Hardfork } from '@ethereumjs/common'\nimport { type Address, bytesToUnprefixedHex } from '@ethereumjs/util'\n\nimport { precompile01 } from './01-ecrecover.js'\nimport { precompile02 } from './02-sha256.js'\nimport { precompile03 } from './03-ripemd160.js'\nimport { precompile04 } from './04-identity.js'\nimport { precompile05 } from './05-modexp.js'\nimport { precompile06 } from './06-ecadd.js'\nimport { precompile07 } from './07-ecmul.js'\nimport { precompile08 } from './08-ecpairing.js'\nimport { precompile09 } from './09-blake2f.js'\nimport { precompile0a } from './0a-kzg-point-evaluation.js'\n\nimport type { PrecompileFunc, PrecompileInput } from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ninterface PrecompileEntry {\n  address: string\n  check: PrecompileAvailabilityCheckType\n  precompile: PrecompileFunc\n  name: string\n}\n\ninterface Precompiles {\n  [key: string]: PrecompileFunc\n}\n\ntype PrecompileAvailabilityCheckType =\n  | PrecompileAvailabilityCheckTypeHardfork\n  | PrecompileAvailabilityCheckTypeEIP\n\nenum PrecompileAvailabilityCheck {\n  EIP,\n  Hardfork,\n}\n\ninterface PrecompileAvailabilityCheckTypeHardfork {\n  type: PrecompileAvailabilityCheck.Hardfork\n  param: string\n}\n\ninterface PrecompileAvailabilityCheckTypeEIP {\n  type: PrecompileAvailabilityCheck.EIP\n  param: number\n}\n\nconst ripemdPrecompileAddress = '0000000000000000000000000000000000000003'\n\nconst precompileEntries: PrecompileEntry[] = [\n  {\n    address: '0000000000000000000000000000000000000001',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Chainstart,\n    },\n    precompile: precompile01,\n    name: 'ECRECOVER (0x01)',\n  },\n  {\n    address: '0000000000000000000000000000000000000002',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Chainstart,\n    },\n    precompile: precompile02,\n    name: 'SHA256 (0x02)',\n  },\n  {\n    address: '0000000000000000000000000000000000000003',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Chainstart,\n    },\n    precompile: precompile03,\n    name: 'RIPEMD160 (0x03)',\n  },\n  {\n    address: '0000000000000000000000000000000000000004',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Chainstart,\n    },\n    precompile: precompile04,\n    name: 'Identity (0x04)',\n  },\n  {\n    address: '0000000000000000000000000000000000000005',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Byzantium,\n    },\n    precompile: precompile05,\n    name: 'MODEXP (0x05)',\n  },\n  {\n    address: '0000000000000000000000000000000000000006',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Byzantium,\n    },\n    precompile: precompile06,\n    name: 'ECADD (0x06)',\n  },\n  {\n    address: '0000000000000000000000000000000000000007',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Byzantium,\n    },\n    precompile: precompile07,\n    name: 'ECMUL (0x07)',\n  },\n  {\n    address: '0000000000000000000000000000000000000008',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Byzantium,\n    },\n    precompile: precompile08,\n    name: 'ECPAIR (0x08)',\n  },\n  {\n    address: '0000000000000000000000000000000000000009',\n    check: {\n      type: PrecompileAvailabilityCheck.Hardfork,\n      param: Hardfork.Istanbul,\n    },\n    precompile: precompile09,\n    name: 'BLAKE2f (0x09)',\n  },\n  {\n    address: '000000000000000000000000000000000000000a',\n    check: {\n      type: PrecompileAvailabilityCheck.EIP,\n      param: 4844,\n    },\n    precompile: precompile0a,\n    name: 'KZG (0x0a)',\n  },\n]\n\nconst precompiles: Precompiles = {\n  '0000000000000000000000000000000000000001': precompile01,\n  '0000000000000000000000000000000000000002': precompile02,\n  [ripemdPrecompileAddress]: precompile03,\n  '0000000000000000000000000000000000000004': precompile04,\n  '0000000000000000000000000000000000000005': precompile05,\n  '0000000000000000000000000000000000000006': precompile06,\n  '0000000000000000000000000000000000000007': precompile07,\n  '0000000000000000000000000000000000000008': precompile08,\n  '0000000000000000000000000000000000000009': precompile09,\n  '000000000000000000000000000000000000000a': precompile0a,\n}\n\ntype DeletePrecompile = {\n  address: Address\n}\n\ntype AddPrecompile = {\n  address: Address\n  function: PrecompileFunc\n}\n\ntype CustomPrecompile = AddPrecompile | DeletePrecompile\n\nfunction getActivePrecompiles(\n  common: Common,\n  customPrecompiles?: CustomPrecompile[]\n): Map<string, PrecompileFunc> {\n  const precompileMap = new Map()\n  if (customPrecompiles) {\n    for (const precompile of customPrecompiles) {\n      precompileMap.set(\n        bytesToUnprefixedHex(precompile.address.bytes),\n        'function' in precompile ? precompile.function : undefined\n      )\n    }\n  }\n  for (const entry of precompileEntries) {\n    if (precompileMap.has(entry.address)) {\n      continue\n    }\n    const type = entry.check.type\n\n    if (\n      (type === PrecompileAvailabilityCheck.Hardfork && common.gteHardfork(entry.check.param)) ||\n      (entry.check.type === PrecompileAvailabilityCheck.EIP &&\n        common.isActivatedEIP(entry.check.param))\n    ) {\n      precompileMap.set(entry.address, entry.precompile)\n    }\n  }\n  return precompileMap\n}\n\nfunction getPrecompileName(addressUnprefixedStr: string) {\n  for (const entry of precompileEntries) {\n    if (entry.address === addressUnprefixedStr) {\n      return entry.name\n    }\n  }\n}\n\nexport {\n  getActivePrecompiles,\n  getPrecompileName,\n  precompileEntries,\n  precompiles,\n  ripemdPrecompileAddress,\n}\n\nexport type { AddPrecompile, CustomPrecompile, DeletePrecompile, PrecompileFunc, PrecompileInput }\n","import { ERROR, EvmError } from './exceptions.js'\n\n/**\n * Implementation of the stack used in evm.\n */\nexport class Stack {\n  // This array is initialized as an empty array. Once values are pushed, the array size will never decrease.\n  private _store: bigint[]\n  private _maxHeight: number\n\n  private _len: number = 0\n\n  constructor(maxHeight?: number) {\n    // It is possible to initialize the array with `maxHeight` items. However,\n    // this makes the constructor 10x slower and there do not seem to be any observable performance gains\n    this._store = []\n    this._maxHeight = maxHeight ?? 1024\n  }\n\n  get length() {\n    return this._len\n  }\n\n  push(value: bigint) {\n    if (this._len >= this._maxHeight) {\n      throw new EvmError(ERROR.STACK_OVERFLOW)\n    }\n\n    // Read current length, set `_store` to value, and then increase the length\n    this._store[this._len++] = value\n  }\n\n  pop(): bigint {\n    if (this._len < 1) {\n      throw new EvmError(ERROR.STACK_UNDERFLOW)\n    }\n\n    // Length is checked above, so pop shouldn't return undefined\n    // First decrease current length, then read the item and return it\n    // Note: this does thus not delete the item from the internal array\n    // However, the length is decreased, so it is not accessible to external observors\n    return this._store[--this._len]\n  }\n\n  /**\n   * Pop multiple items from stack. Top of stack is first item\n   * in returned array.\n   * @param num - Number of items to pop\n   */\n  popN(num: number = 1): bigint[] {\n    if (this._len < num) {\n      throw new EvmError(ERROR.STACK_UNDERFLOW)\n    }\n\n    if (num === 0) {\n      return []\n    }\n\n    const arr = Array(num)\n    const cache = this._store\n\n    for (let pop = 0; pop < num; pop++) {\n      // Note: this thus also (correctly) reduces the length of the internal array (without deleting items)\n      arr[pop] = cache[--this._len]\n    }\n\n    return arr\n  }\n\n  /**\n   * Return items from the stack\n   * @param num Number of items to return\n   * @throws {@link ERROR.STACK_UNDERFLOW}\n   */\n  peek(num: number = 1): bigint[] {\n    const peekArray: bigint[] = Array(num)\n    let start = this._len\n\n    for (let peek = 0; peek < num; peek++) {\n      const index = --start\n      if (index < 0) {\n        throw new EvmError(ERROR.STACK_UNDERFLOW)\n      }\n      peekArray[peek] = this._store[index]\n    }\n    return peekArray\n  }\n\n  /**\n   * Swap top of stack with an item in the stack.\n   * @param position - Index of item from top of the stack (0-indexed)\n   */\n  swap(position: number) {\n    if (this._len <= position) {\n      throw new EvmError(ERROR.STACK_UNDERFLOW)\n    }\n\n    const head = this._len - 1\n    const i = head - position\n    const storageCached = this._store\n\n    const tmp = storageCached[head]\n    storageCached[head] = storageCached[i]\n    storageCached[i] = tmp\n  }\n\n  /**\n   * Pushes a copy of an item in the stack.\n   * @param position - Index of item to be copied (1-indexed)\n   */\n  // I would say that we do not need this method any more\n  // since you can't copy a primitive data type\n  // Nevertheless not sure if we \"loose\" something here?\n  // Will keep commented out for now\n  dup(position: number) {\n    const len = this._len\n    if (len < position) {\n      throw new EvmError(ERROR.STACK_UNDERFLOW)\n    }\n\n    // Note: this code is borrowed from `push()` (avoids a call)\n    if (len >= this._maxHeight) {\n      throw new EvmError(ERROR.STACK_OVERFLOW)\n    }\n\n    const i = len - position\n    this._store[this._len++] = this._store[i]\n  }\n\n  /**\n   * Returns a copy of the current stack. This represents the actual state of the stack\n   * (not the internal state of the stack, which might have unreachable elements in it)\n   */\n  getStack() {\n    return this._store.slice(0, this._len)\n  }\n}\n","import { bytesToHex } from '@ethereumjs/util'\n\nimport type { TransientStorageInterface } from './types.js'\nimport type { Address } from '@ethereumjs/util'\n\ntype TransientStorageCurrent = Map<string, Map<string, Uint8Array>>\n\ninterface TransientStorageModification {\n  addr: string\n  key: string\n  prevValue: Uint8Array\n}\n\ntype TransientStorageJournal = TransientStorageModification[]\n\nexport class TransientStorage implements TransientStorageInterface {\n  /**\n   * The current values of the transient storage, keyed by contract address and then slot\n   */\n  private _storage: TransientStorageCurrent = new Map()\n  /**\n   * Each change to storage is recorded in the journal. This is never cleared.\n   */\n  private _changeJournal: TransientStorageJournal = []\n  /**\n   * The length of the journal at the beginning of each call in the call stack.\n   */\n  private _indices: number[] = [0]\n\n  /**\n   * Get the value for the given address and key\n   * @param addr the address for which transient storage is accessed\n   * @param key the key of the address to get\n   */\n  public get(addr: Address, key: Uint8Array): Uint8Array {\n    const map = this._storage.get(addr.toString())\n    if (!map) {\n      return new Uint8Array(32)\n    }\n    const value = map.get(bytesToHex(key))\n    if (!value) {\n      return new Uint8Array(32)\n    }\n    return value\n  }\n\n  /**\n   * Put the given value for the address and key\n   * @param addr the address of the contract for which the key is being set\n   * @param key the slot to set for the address\n   * @param value the new value of the transient storage slot to set\n   */\n  public put(addr: Address, key: Uint8Array, value: Uint8Array) {\n    if (key.length !== 32) {\n      throw new Error('Transient storage key must be 32 bytes long')\n    }\n\n    if (value.length > 32) {\n      throw new Error('Transient storage value cannot be longer than 32 bytes')\n    }\n\n    const addrString = addr.toString()\n    if (!this._storage.has(addrString)) {\n      this._storage.set(addrString, new Map())\n    }\n    const map = this._storage.get(addrString)!\n\n    const keyStr = bytesToHex(key)\n    const prevValue = map.get(keyStr) ?? new Uint8Array(32)\n\n    this._changeJournal.push({\n      addr: addrString,\n      key: keyStr,\n      prevValue,\n    })\n\n    map.set(keyStr, value)\n  }\n\n  /**\n   * Commit all the changes since the last checkpoint\n   */\n  public commit(): void {\n    if (this._indices.length === 0) throw new Error('Nothing to commit')\n    // by discarding the length of the array from the last time checkpoint was called, all changes are included in the last stack\n    this._indices.pop()\n  }\n\n  /**\n   * To be called whenever entering a new context. If revert is called after checkpoint, all changes after the latest checkpoint are reverted.\n   */\n  public checkpoint(): void {\n    this._indices.push(this._changeJournal.length)\n  }\n\n  /**\n   * Revert transient storage to the last checkpoint\n   */\n  public revert() {\n    const lastCheckpoint = this._indices.pop()\n    if (typeof lastCheckpoint === 'undefined') throw new Error('Nothing to revert')\n\n    for (let i = this._changeJournal.length - 1; i >= lastCheckpoint; i--) {\n      const { key, prevValue, addr } = this._changeJournal[i]\n      this._storage.get(addr)!.set(key, prevValue)\n    }\n    this._changeJournal.splice(lastCheckpoint, this._changeJournal.length - lastCheckpoint)\n  }\n\n  /**\n   * Create a JSON representation of the current transient storage state\n   */\n  public toJSON(): { [address: string]: { [key: string]: string } } {\n    const result: { [address: string]: { [key: string]: string } } = {}\n    for (const [address, map] of this._storage.entries()) {\n      result[address] = {}\n      for (const [key, value] of map.entries()) {\n        result[address][key] = bytesToHex(value)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Clear transient storage state.\n   */\n  public clear(): void {\n    this._storage = new Map()\n    this._changeJournal = []\n  }\n}\n","import { zeros } from '@ethereumjs/util'\n\nimport type { EvmError } from './exceptions.js'\nimport type { InterpreterStep, RunState } from './interpreter.js'\nimport type { Message } from './message.js'\nimport type { AsyncDynamicGasHandler, SyncDynamicGasHandler } from './opcodes/gas.js'\nimport type { OpHandler } from './opcodes/index.js'\nimport type { CustomPrecompile } from './precompiles/index.js'\nimport type { PrecompileFunc } from './precompiles/types.js'\nimport type { Common, EVMStateManagerInterface } from '@ethereumjs/common'\nimport type { AccessWitness } from '@ethereumjs/statemanager'\nimport type { Account, Address, AsyncEventEmitter } from '@ethereumjs/util'\n\nexport type DeleteOpcode = {\n  opcode: number\n}\n\nexport type AddOpcode = {\n  opcode: number\n  opcodeName: string\n  baseFee: number\n  gasFunction?: AsyncDynamicGasHandler | SyncDynamicGasHandler\n  logicFunction: OpHandler\n}\n\nexport type CustomOpcode = AddOpcode | DeleteOpcode\n\n/**\n * Base options for the `EVM.runCode()` / `EVM.runCall()` method.\n */\ninterface EVMRunOpts {\n  /**\n   * The `block` the `tx` belongs to. If omitted a default blank block will be used.\n   */\n  block?: Block\n  /**\n   * The gas price for the call. Defaults to `0`\n   */\n  gasPrice?: bigint\n  /**\n   * The address where the call originated from. Defaults to the zero address.\n   */\n  origin?: Address\n  /**\n   * The address that ran this code (`msg.sender`). Defaults to the zero address.\n   */\n  caller?: Address\n  /**\n   * The EVM code to run.\n   */\n  code?: Uint8Array\n  /**\n   * The input data.\n   */\n  data?: Uint8Array\n  /**\n   * The gas limit for the call. Defaults to `16777215` (`0xffffff`)\n   */\n  gasLimit?: bigint\n  /**\n   * The value in ether that is being sent to `opts.address`. Defaults to `0`\n   */\n  value?: bigint\n  /**\n   * The call depth. Defaults to `0`\n   */\n  depth?: number\n  /**\n   * If the call should be executed statically. Defaults to false.\n   */\n  isStatic?: boolean\n  /**\n   * Addresses to selfdestruct. Defaults to the empty set.\n   */\n  selfdestruct?: Set<string>\n  /**\n   * The address of the account that is executing this code (`address(this)`). Defaults to the zero address.\n   */\n  to?: Address\n  /**\n   * Versioned hashes for each blob in a blob transaction\n   */\n  blobVersionedHashes?: Uint8Array[]\n}\n\nexport interface EVMRunCodeOpts extends EVMRunOpts {\n  /*\n   * The initial program counter. Defaults to `0`\n   */\n  pc?: number\n}\n\n/**\n * Options for running a call (or create) operation with `EVM.runCall()`\n */\nexport interface EVMRunCallOpts extends EVMRunOpts {\n  /**\n   * If the code location is a precompile.\n   */\n  isCompiled?: boolean\n  /**\n   * An optional salt to pass to CREATE2.\n   */\n  salt?: Uint8Array\n  /**\n   * Created addresses in current context. Used in EIP 6780\n   */\n  createdAddresses?: Set<string>\n  /**\n   * Skip balance checks if true. If caller balance is less than message value,\n   * sets balance to message value to ensure execution doesn't fail.\n   */\n  skipBalance?: boolean\n  /**\n   * If the call is a DELEGATECALL. Defaults to false.\n   */\n  delegatecall?: boolean\n  /**\n   * Refund counter. Defaults to `0`\n   */\n  gasRefund?: bigint\n  /**\n   * Optionally pass in an already-built message.\n   */\n  message?: Message\n\n  accessWitness?: AccessWitness\n}\n\ninterface NewContractEvent {\n  address: Address\n  // The deployment code\n  code: Uint8Array\n}\n\nexport type EVMEvents = {\n  newContract: (data: NewContractEvent, resolve?: (result?: any) => void) => void\n  beforeMessage: (data: Message, resolve?: (result?: any) => void) => void\n  afterMessage: (data: EVMResult, resolve?: (result?: any) => void) => void\n  step: (data: InterpreterStep, resolve?: (result?: any) => void) => void\n}\n\nexport interface EVMInterface {\n  journal: {\n    commit(): Promise<void>\n    revert(): Promise<void>\n    checkpoint(): Promise<void>\n    cleanJournal(): void\n    cleanup(): Promise<void>\n    putAccount(address: Address, account: Account): Promise<void>\n    deleteAccount(address: Address): Promise<void>\n    accessList?: Map<string, Set<string>>\n    preimages?: Map<string, Uint8Array>\n    addAlwaysWarmAddress(address: string, addToAccessList?: boolean): void\n    addAlwaysWarmSlot(address: string, slot: string, addToAccessList?: boolean): void\n    startReportingAccessList(): void\n    startReportingPreimages?(): void\n  }\n  stateManager: EVMStateManagerInterface\n  precompiles: Map<string, PrecompileFunc>\n  runCall(opts: EVMRunCallOpts): Promise<EVMResult>\n  runCode(opts: EVMRunCodeOpts): Promise<ExecResult>\n  events?: AsyncEventEmitter<EVMEvents>\n}\n\nexport type EVMProfilerOpts = {\n  enabled: boolean\n  // extra options here (such as use X hardfork for gas)\n}\n\n/**\n * Options for instantiating a {@link EVM}.\n */\nexport interface EVMOpts {\n  /**\n   * Use a {@link Common} instance for EVM instantiation.\n   *\n   * ### Supported EIPs\n   *\n   * - [EIP-1153](https://eips.ethereum.org/EIPS/eip-1153) - Transient storage opcodes (Cancun)\n   * - [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559) - Fee market change for ETH 1.0 chain\n   * - [EIP-2315](https://eips.ethereum.org/EIPS/eip-2315) - Simple subroutines for the EVM (`outdated`)\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS precompiles (removed in v4.0.0, see latest v3 release)\n   * - [EIP-2565](https://eips.ethereum.org/EIPS/eip-2565) - ModExp gas cost\n   * - [EIP-2718](https://eips.ethereum.org/EIPS/eip-2565) - Transaction Types\n   * - [EIP-2935](https://eips.ethereum.org/EIPS/eip-2935) - Save historical block hashes in state (`experimental`)\n   * - [EIP-2929](https://eips.ethereum.org/EIPS/eip-2929) - gas cost increases for state access opcodes\n   * - [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930) - Optional access list tx type\n   * - [EIP-3074](https://eips.ethereum.org/EIPS/eip-3074) - AUTH and AUTHCALL opcodes\n   * - [EIP-3198](https://eips.ethereum.org/EIPS/eip-3198) - Base fee Opcode\n   * - [EIP-3529](https://eips.ethereum.org/EIPS/eip-3529) - Reduction in refunds\n   * - [EIP-3540](https://eips.ethereum.org/EIPS/eip-3541) - EVM Object Format (EOF) v1 (`outdated`)\n   * - [EIP-3541](https://eips.ethereum.org/EIPS/eip-3541) - Reject new contracts starting with the 0xEF byte\n   * - [EIP-3554](https://eips.ethereum.org/EIPS/eip-3554) - Difficulty Bomb Delay to December 2021 (only PoW networks)\n   * - [EIP-3607](https://eips.ethereum.org/EIPS/eip-3607) - Reject transactions from senders with deployed code\n   * - [EIP-3651](https://eips.ethereum.org/EIPS/eip-3651) - Warm COINBASE (Shanghai)\n   * - [EIP-3670](https://eips.ethereum.org/EIPS/eip-3670) - EOF - Code Validation (`outdated`)\n   * - [EIP-3675](https://eips.ethereum.org/EIPS/eip-3675) - Upgrade consensus to Proof-of-Stake\n   * - [EIP-3855](https://eips.ethereum.org/EIPS/eip-3855) - Push0 opcode (Shanghai)\n   * - [EIP-3860](https://eips.ethereum.org/EIPS/eip-3860) - Limit and meter initcode (Shanghai)\n   * - [EIP-4345](https://eips.ethereum.org/EIPS/eip-4345) - Difficulty Bomb Delay to June 2022\n   * - [EIP-4399](https://eips.ethereum.org/EIPS/eip-4399) - Supplant DIFFICULTY opcode with PREVRANDAO (Merge)\n   * - [EIP-4788](https://eips.ethereum.org/EIPS/eip-4788) - Beacon block root in the EVM (Cancun)\n   * - [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) - Shard Blob Transactions (Cancun)\n   * - [EIP-4895](https://eips.ethereum.org/EIPS/eip-4895) - Beacon chain push withdrawals as operations (Shanghai)\n   * - [EIP-5133](https://eips.ethereum.org/EIPS/eip-5133) - Delaying Difficulty Bomb to mid-September 2022 (Gray Glacier)\n   * - [EIP-5656](https://eips.ethereum.org/EIPS/eip-5656) - MCOPY - Memory copying instruction (Cancun)\n   * - [EIP-6780](https://eips.ethereum.org/EIPS/eip-6780) - SELFDESTRUCT only in same transaction (Cancun)\n   * - [EIP-7516](https://eips.ethereum.org/EIPS/eip-7516) - BLOBBASEFEE opcode (Cancun)\n   *\n   * *Annotations:*\n   *\n   * - `experimental`: behaviour can change on patch versions\n   */\n  common?: Common\n\n  /**\n   * Allows unlimited contract sizes while debugging. By setting this to `true`, the check for\n   * contract size limit of 24KB (see [EIP-170](https://git.io/vxZkK)) is bypassed.\n   *\n   * Default: `false` [ONLY set to `true` during debugging]\n   */\n  allowUnlimitedContractSize?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n\n  /**\n   * Override or add custom opcodes to the EVM instruction set\n   * These custom opcodes are EIP-agnostic and are always statically added\n   * To delete an opcode, add an entry of format `{opcode: number}`. This will delete that opcode from the EVM.\n   * If this opcode is then used in the EVM, the `INVALID` opcode would instead be used.\n   * To add an opcode, add an entry of the following format:\n   * {\n   *    // The opcode number which will invoke the custom opcode logic\n   *    opcode: number\n   *    // The name of the opcode (as seen in the `step` event)\n   *    opcodeName: string\n   *    // The base fee of the opcode\n   *    baseFee: number\n   *    // If the opcode charges dynamic gas, add this here. To charge the gas, use the `i` methods of the BN, to update the charged gas\n   *    gasFunction?: function(runState: RunState, gas: BN, common: Common)\n   *    // The logic of the opcode which holds the logic of changing the current state\n   *    logicFunction: function(runState: RunState)\n   * }\n   * Note: gasFunction and logicFunction can both be async or synchronous functions\n   */\n  customOpcodes?: CustomOpcode[]\n\n  /*\n   * Adds custom precompiles. This is hardfork-agnostic: these precompiles are always activated\n   * If only an address is given, the precompile is deleted\n   * If an address and a `PrecompileFunc` is given, this precompile is inserted or overridden\n   * Please ensure `PrecompileFunc` has exactly one parameter `input: PrecompileInput`\n   */\n  customPrecompiles?: CustomPrecompile[]\n\n  /*\n   * The StateManager which is used to update the trie\n   */\n  stateManager?: EVMStateManagerInterface\n\n  /**\n   *\n   */\n  blockchain?: Blockchain\n\n  /**\n   *\n   */\n  profiler?: EVMProfilerOpts\n}\n\n/**\n * Result of executing a message via the {@link EVM}.\n */\nexport interface EVMResult {\n  /**\n   * Address of created account during transaction, if any\n   */\n  createdAddress?: Address\n  /**\n   * Contains the results from running the code, if any, as described in {@link runCode}\n   */\n  execResult: ExecResult\n}\n\n/**\n * Result of executing a call via the {@link EVM}.\n */\nexport interface ExecResult {\n  runState?: RunState\n  /**\n   * Description of the exception, if any occurred\n   */\n  exceptionError?: EvmError\n  /**\n   * Amount of gas left\n   */\n  gas?: bigint\n  /**\n   * Amount of gas the code used to run\n   */\n  executionGasUsed: bigint\n  /**\n   * Return value from the contract\n   */\n  returnValue: Uint8Array\n  /**\n   * Array of logs that the contract emitted\n   */\n  logs?: Log[]\n  /**\n   * A set of accounts to selfdestruct\n   */\n  selfdestruct?: Set<string>\n  /**\n   * Map of addresses which were created (used in EIP 6780)\n   */\n  createdAddresses?: Set<string>\n  /**\n   * The gas refund counter\n   */\n  gasRefund?: bigint\n  /**\n   * Amount of blob gas consumed by the transaction\n   */\n  blobGasUsed?: bigint\n}\n\n/**\n * Log that the contract emits.\n */\nexport type Log = [address: Uint8Array, topics: Uint8Array[], data: Uint8Array]\n\nexport type Block = {\n  header: {\n    number: bigint\n    cliqueSigner(): Address\n    coinbase: Address\n    timestamp: bigint\n    difficulty: bigint\n    prevRandao: Uint8Array\n    gasLimit: bigint\n    baseFeePerGas?: bigint\n    getBlobGasPrice(): bigint | undefined\n  }\n}\n\nexport interface TransientStorageInterface {\n  get(addr: Address, key: Uint8Array): Uint8Array\n  put(addr: Address, key: Uint8Array, value: Uint8Array): void\n  commit(): void\n  checkpoint(): void\n  revert(): void\n  toJSON(): { [address: string]: { [key: string]: string } }\n  clear(): void\n}\n\ntype MockBlock = {\n  hash(): Uint8Array\n}\n\nexport interface Blockchain {\n  getBlock(blockId: number): Promise<MockBlock>\n  shallowCopy(): Blockchain\n}\n\nexport class DefaultBlockchain implements Blockchain {\n  async getBlock() {\n    return {\n      hash() {\n        return zeros(32)\n      },\n    }\n  }\n  shallowCopy() {\n    return this\n  }\n}\n\n/**\n * The BN128 curve package (`rustbn-wasm`)\n */\nexport interface bn128 {\n  ec_pairing: (input_str: string) => string\n  ec_add: (input_str: string) => string\n  ec_mul: (input_hex: string) => string\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = void 0;\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.ripemd160 = (0, utils_js_1.wrapHash)(ripemd160_1.ripemd160);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.sha256 = (0, utils_js_1.wrapHash)(sha256_1.sha256);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { BIGINT_0, bytesToBigInt, bytesToHex, hexToBytes, toBytes } from '@ethereumjs/util'\nimport { getKey, getStem } from '@ethereumjs/verkle'\nimport debugDefault from 'debug'\n\nimport type { Address, PrefixedHexString } from '@ethereumjs/util'\n\nconst { debug: createDebugLogger } = debugDefault\nconst debug = createDebugLogger('statemanager:verkle:aw')\n\n/**\n * Tree key constants.\n */\nexport const VERSION_LEAF_KEY = toBytes(0)\nexport const BALANCE_LEAF_KEY = toBytes(1)\nexport const NONCE_LEAF_KEY = toBytes(2)\nexport const CODE_KECCAK_LEAF_KEY = toBytes(3)\nexport const CODE_SIZE_LEAF_KEY = toBytes(4)\n\nexport const HEADER_STORAGE_OFFSET = 64\nexport const CODE_OFFSET = 128\nexport const VERKLE_NODE_WIDTH = 256\n// export const MAIN_STORAGE_OFFSET = BigInt(256) ** BigInt(31)\n// incorrect value to match with kaustinen2 offset\nexport const MAIN_STORAGE_OFFSET = BigInt(256) * BigInt(2) ** BigInt(31)\n\nconst WitnessBranchReadCost = BigInt(1900)\nconst WitnessChunkReadCost = BigInt(200)\nconst WitnessBranchWriteCost = BigInt(3000)\nconst WitnessChunkWriteCost = BigInt(500)\nconst WitnessChunkFillCost = BigInt(6200)\n\n// read is a default access event if stem or chunk is present\ntype StemAccessEvent = { write?: boolean }\n// chunk fill access event is not being charged right now in kaustinen2 but will be rectified\n// in upcoming iterations\ntype ChunkAccessEvent = StemAccessEvent & { fill?: boolean }\n\ntype AccessEventFlags = {\n  stemRead: boolean\n  stemWrite: boolean\n  chunkRead: boolean\n  chunkWrite: boolean\n  chunkFill: boolean\n}\n\n// Since stem is pedersen hashed, it is useful to maintain the reverse relationship\ntype StemMeta = { address: Address; treeIndex: number | bigint }\ntype RawAccessedState = {\n  address: Address\n  treeIndex: number | bigint\n  chunkIndex: number\n  chunkKey: PrefixedHexString\n}\n\nexport enum AccessedStateType {\n  Version = 'version',\n  Balance = 'balance',\n  Nonce = 'nonce',\n  CodeHash = 'codeHash',\n  CodeSize = 'codeSize',\n  Code = 'code',\n  Storage = 'storage',\n}\n\ntype AccessedState =\n  | { type: Exclude<AccessedStateType, AccessedStateType.Code | AccessedStateType.Storage> }\n  | { type: AccessedStateType.Code; codeOffset: number }\n  | { type: AccessedStateType.Storage; slot: bigint }\nexport type AccessedStateWithAddress = AccessedState & {\n  address: Address\n  chunkKey: PrefixedHexString\n}\n\nexport class AccessWitness {\n  stems: Map<PrefixedHexString, StemAccessEvent & StemMeta>\n  chunks: Map<PrefixedHexString, ChunkAccessEvent>\n\n  constructor(\n    opts: {\n      stems?: Map<PrefixedHexString, StemAccessEvent & StemMeta>\n      chunks?: Map<PrefixedHexString, ChunkAccessEvent>\n    } = {}\n  ) {\n    this.stems = opts.stems ?? new Map<PrefixedHexString, StemAccessEvent & StemMeta>()\n    this.chunks = opts.chunks ?? new Map<PrefixedHexString, ChunkAccessEvent>()\n  }\n\n  touchAndChargeProofOfAbsence(address: Address): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, BALANCE_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, CODE_SIZE_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, CODE_KECCAK_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, NONCE_LEAF_KEY)\n\n    return gas\n  }\n\n  touchAndChargeMessageCall(address: Address): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(address, 0, CODE_SIZE_LEAF_KEY)\n\n    return gas\n  }\n\n  touchAndChargeValueTransfer(caller: Address, target: Address): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnWriteAndComputeGas(caller, 0, BALANCE_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(target, 0, BALANCE_LEAF_KEY)\n\n    return gas\n  }\n\n  touchAndChargeContractCreateInit(\n    address: Address,\n    { sendsValue }: { sendsValue?: boolean } = {}\n  ): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, NONCE_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, CODE_KECCAK_LEAF_KEY)\n    if (sendsValue === true) {\n      gas += this.touchAddressOnWriteAndComputeGas(address, 0, BALANCE_LEAF_KEY)\n    }\n\n    return gas\n  }\n\n  touchAndChargeContractCreateCompleted(address: Address): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, BALANCE_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, CODE_SIZE_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, CODE_KECCAK_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(address, 0, NONCE_LEAF_KEY)\n\n    return gas\n  }\n\n  touchTxOriginAndComputeGas(origin: Address): bigint {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnReadAndComputeGas(origin, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(origin, 0, CODE_SIZE_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(origin, 0, CODE_KECCAK_LEAF_KEY)\n\n    gas += this.touchAddressOnWriteAndComputeGas(origin, 0, NONCE_LEAF_KEY)\n    gas += this.touchAddressOnWriteAndComputeGas(origin, 0, BALANCE_LEAF_KEY)\n\n    return gas\n  }\n\n  touchTxExistingAndComputeGas(target: Address, { sendsValue }: { sendsValue?: boolean } = {}) {\n    let gas = BIGINT_0\n\n    gas += this.touchAddressOnReadAndComputeGas(target, 0, VERSION_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(target, 0, CODE_SIZE_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(target, 0, CODE_KECCAK_LEAF_KEY)\n    gas += this.touchAddressOnReadAndComputeGas(target, 0, NONCE_LEAF_KEY)\n\n    if (sendsValue === true) {\n      gas += this.touchAddressOnWriteAndComputeGas(target, 0, BALANCE_LEAF_KEY)\n    } else {\n      gas += this.touchAddressOnReadAndComputeGas(target, 0, BALANCE_LEAF_KEY)\n    }\n\n    return gas\n  }\n\n  touchCodeChunksRangeOnReadAndChargeGas(contact: Address, startPc: number, endPc: number) {\n    let gas = BIGINT_0\n    for (let chunkNum = Math.floor(startPc / 31); chunkNum <= Math.floor(endPc / 31); chunkNum++) {\n      const { treeIndex, subIndex } = getTreeIndicesForCodeChunk(chunkNum)\n      gas += this.touchAddressOnReadAndComputeGas(contact, treeIndex, subIndex)\n    }\n    return gas\n  }\n\n  touchCodeChunksRangeOnWriteAndChargeGas(contact: Address, startPc: number, endPc: number) {\n    let gas = BIGINT_0\n    for (let chunkNum = Math.floor(startPc / 31); chunkNum <= Math.floor(endPc / 31); chunkNum++) {\n      const { treeIndex, subIndex } = getTreeIndicesForCodeChunk(chunkNum)\n      gas += this.touchAddressOnWriteAndComputeGas(contact, treeIndex, subIndex)\n    }\n    return gas\n  }\n\n  touchAddressOnWriteAndComputeGas(\n    address: Address,\n    treeIndex: number | bigint,\n    subIndex: number | Uint8Array\n  ): bigint {\n    return this.touchAddressAndChargeGas(address, treeIndex, subIndex, { isWrite: true })\n  }\n\n  touchAddressOnReadAndComputeGas(\n    address: Address,\n    treeIndex: number | bigint,\n    subIndex: number | Uint8Array\n  ): bigint {\n    return this.touchAddressAndChargeGas(address, treeIndex, subIndex, { isWrite: false })\n  }\n\n  touchAddressAndChargeGas(\n    address: Address,\n    treeIndex: number | bigint,\n    subIndex: number | Uint8Array,\n    { isWrite }: { isWrite?: boolean }\n  ): bigint {\n    let gas = BIGINT_0\n\n    const { stemRead, stemWrite, chunkRead, chunkWrite, chunkFill } = this.touchAddress(\n      address,\n      treeIndex,\n      subIndex,\n      { isWrite }\n    )\n\n    if (stemRead) {\n      gas += WitnessBranchReadCost\n    }\n    if (stemWrite) {\n      gas += WitnessBranchWriteCost\n    }\n\n    if (chunkRead) {\n      gas += WitnessChunkReadCost\n    }\n    if (chunkWrite) {\n      gas += WitnessChunkWriteCost\n    }\n    if (chunkFill) {\n      gas += WitnessChunkFillCost\n    }\n\n    debug(\n      `touchAddressAndChargeGas=${gas} address=${address} treeIndex=${treeIndex} subIndex=${subIndex}`\n    )\n\n    return gas\n  }\n\n  touchAddress(\n    address: Address,\n    treeIndex: number | bigint,\n    subIndex: number | Uint8Array,\n    { isWrite }: { isWrite?: boolean } = {}\n  ): AccessEventFlags {\n    let stemRead = false,\n      stemWrite = false,\n      chunkRead = false,\n      chunkWrite = false\n    // currently there are no gas charges for setting the chunk for the first time\n    // i.e. no fill cost is charged right now\n    const chunkFill = false\n\n    const accessedStemKey = getStem(address, treeIndex)\n    const accessedStemHex = bytesToHex(accessedStemKey)\n    let accessedStem = this.stems.get(accessedStemHex)\n    if (accessedStem === undefined) {\n      stemRead = true\n      accessedStem = { address, treeIndex }\n      this.stems.set(accessedStemHex, accessedStem)\n    }\n\n    const accessedChunkKey = getKey(accessedStemKey, toBytes(subIndex))\n    const accessedChunkKeyHex = bytesToHex(accessedChunkKey)\n    let accessedChunk = this.chunks.get(accessedChunkKeyHex)\n    if (accessedChunk === undefined) {\n      chunkRead = true\n      accessedChunk = {}\n      this.chunks.set(accessedChunkKeyHex, accessedChunk)\n    }\n\n    if (isWrite === true) {\n      if (accessedStem.write !== true) {\n        stemWrite = true\n        // this would also directly modify in the map\n        accessedStem.write = true\n      }\n\n      if (accessedChunk.write !== true) {\n        chunkWrite = true\n        // this would also directly modify in the map\n        accessedChunk.write = true\n      }\n    }\n\n    debug(\n      `${accessedChunkKeyHex}: isWrite=${isWrite} for steamRead=${stemRead} stemWrite=${stemWrite} chunkRead=${chunkRead} chunkWrite=${chunkWrite} chunkFill=${chunkFill}`\n    )\n    return { stemRead, stemWrite, chunkRead, chunkWrite, chunkFill }\n  }\n\n  /**Create a shallow copy, could clone some caches in future for optimizations */\n  shallowCopy(): AccessWitness {\n    return new AccessWitness()\n  }\n\n  merge(accessWitness: AccessWitness): void {\n    for (const [chunkKey, chunkValue] of accessWitness.chunks.entries()) {\n      const stemKey = chunkKey.slice(0, chunkKey.length - 2)\n      const stem = accessWitness.stems.get(stemKey)\n      if (stem === undefined) {\n        throw Error(`Internal error: missing stem for the chunkKey=${chunkKey}`)\n      }\n\n      const thisStem = this.stems.get(stemKey)\n      if (thisStem === undefined) {\n        this.stems.set(stemKey, stem)\n      } else {\n        thisStem.write = thisStem.write !== true ? stem.write : true\n      }\n\n      const thisChunk = this.chunks.get(chunkKey)\n      if (thisChunk === undefined) {\n        this.chunks.set(chunkKey, chunkValue)\n      } else {\n        thisChunk.write = thisChunk.write !== true ? chunkValue.write : true\n        thisChunk.fill = thisChunk.fill !== true ? thisChunk.fill : true\n      }\n    }\n  }\n\n  *rawAccesses(): Generator<RawAccessedState> {\n    for (const chunkKey of this.chunks.keys()) {\n      // drop the last byte\n      const stemKey = chunkKey.slice(0, chunkKey.length - 2)\n      const stem = this.stems.get(stemKey)\n      if (stem === undefined) {\n        throw Error(`Internal error: missing stem for the chunkKey=${chunkKey}`)\n      }\n      const { address, treeIndex } = stem\n      const chunkIndex = Number(`0x${chunkKey.slice(chunkKey.length - 2)}`)\n      const accessedState = { address, treeIndex, chunkIndex, chunkKey }\n      yield accessedState\n    }\n  }\n\n  *accesses(): Generator<AccessedStateWithAddress> {\n    for (const rawAccess of this.rawAccesses()) {\n      const { address, treeIndex, chunkIndex, chunkKey } = rawAccess\n      const accessedState = decodeAccessedState(treeIndex, chunkIndex)\n      yield { ...accessedState, address, chunkKey }\n    }\n  }\n}\n\nexport function getTreeIndexesForStorageSlot(storageKey: bigint): {\n  treeIndex: bigint\n  subIndex: number\n} {\n  let position: bigint\n  if (storageKey < CODE_OFFSET - HEADER_STORAGE_OFFSET) {\n    position = BigInt(HEADER_STORAGE_OFFSET) + storageKey\n  } else {\n    position = MAIN_STORAGE_OFFSET + storageKey\n  }\n\n  const treeIndex = position / BigInt(VERKLE_NODE_WIDTH)\n  const subIndex = Number(position % BigInt(VERKLE_NODE_WIDTH))\n\n  return { treeIndex, subIndex }\n}\n\nexport function getTreeIndicesForCodeChunk(chunkId: number) {\n  const treeIndex = Math.floor((CODE_OFFSET + chunkId) / VERKLE_NODE_WIDTH)\n  const subIndex = (CODE_OFFSET + chunkId) % VERKLE_NODE_WIDTH\n  return { treeIndex, subIndex }\n}\n\nexport function decodeAccessedState(treeIndex: number | bigint, chunkIndex: number): AccessedState {\n  const position = BigInt(treeIndex) * BigInt(VERKLE_NODE_WIDTH) + BigInt(chunkIndex)\n  switch (position) {\n    case BigInt(0):\n      return { type: AccessedStateType.Version }\n    case BigInt(1):\n      return { type: AccessedStateType.Balance }\n    case BigInt(2):\n      return { type: AccessedStateType.Nonce }\n    case BigInt(3):\n      return { type: AccessedStateType.CodeHash }\n    case BigInt(4):\n      return { type: AccessedStateType.CodeSize }\n    default:\n      if (position < HEADER_STORAGE_OFFSET) {\n        throw Error(`No attribute yet stored >=5 and <${HEADER_STORAGE_OFFSET}`)\n      }\n\n      if (position >= HEADER_STORAGE_OFFSET && position < CODE_OFFSET) {\n        const slot = position - BigInt(HEADER_STORAGE_OFFSET)\n        return { type: AccessedStateType.Storage, slot }\n      } else if (position >= CODE_OFFSET && position < MAIN_STORAGE_OFFSET) {\n        const codeChunkIdx = Number(position) - CODE_OFFSET\n        return { type: AccessedStateType.Code, codeOffset: codeChunkIdx * 31 }\n      } else if (position >= MAIN_STORAGE_OFFSET) {\n        const slot = BigInt(position - MAIN_STORAGE_OFFSET)\n        return { type: AccessedStateType.Storage, slot }\n      } else {\n        throw Error(\n          `Invalid treeIndex=${treeIndex} chunkIndex=${chunkIndex} for verkle tree access`\n        )\n      }\n  }\n}\n\nexport function decodeValue(type: AccessedStateType, value: string | null): string {\n  if (value === null) {\n    return ''\n  }\n\n  switch (type) {\n    case AccessedStateType.Version:\n    case AccessedStateType.Balance:\n    case AccessedStateType.Nonce:\n    case AccessedStateType.CodeSize: {\n      const decodedValue = bytesToBigInt(hexToBytes(value), true)\n      return `${decodedValue}`\n    }\n\n    case AccessedStateType.CodeHash:\n    case AccessedStateType.Code:\n    case AccessedStateType.Storage: {\n      return value\n    }\n  }\n}\n","import { bytesToUnprefixedHex } from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { OrderedMap } from 'js-sdsl'\nimport { LRUCache } from 'lru-cache'\n\nimport { Cache } from './cache.js'\nimport { CacheType } from './types.js'\n\nimport type { CacheOpts } from './types.js'\nimport type { Account, Address } from '@ethereumjs/util'\nconst { debug: createDebugLogger } = debugDefault\n\n/**\n * account: undefined\n *\n * Account is known to not exist in the trie\n */\ntype AccountCacheElement = {\n  accountRLP: Uint8Array | undefined\n}\n\nexport class AccountCache extends Cache {\n  _lruCache: LRUCache<string, AccountCacheElement> | undefined\n  _orderedMapCache: OrderedMap<string, AccountCacheElement> | undefined\n\n  /**\n   * Diff cache collecting the state of the cache\n   * at the beginning of checkpoint height\n   * (respectively: before a first modification)\n   *\n   * If the whole cache element is undefined (in contrast\n   * to the account), the element didn't exist in the cache\n   * before.\n   */\n  _diffCache: Map<string, AccountCacheElement | undefined>[] = []\n  constructor(opts: CacheOpts) {\n    super()\n    if (opts.type === CacheType.LRU) {\n      this._lruCache = new LRUCache({\n        max: opts.size,\n        updateAgeOnGet: true,\n      })\n    } else {\n      this._orderedMapCache = new OrderedMap()\n    }\n\n    this._diffCache.push(new Map<string, AccountCacheElement | undefined>())\n    this._debug = createDebugLogger('statemanager:cache:account')\n  }\n\n  _saveCachePreState(cacheKeyHex: string) {\n    const diffMap = this._diffCache[this._checkpoints]\n    if (!diffMap.has(cacheKeyHex)) {\n      let oldElem: AccountCacheElement | undefined\n      if (this._lruCache) {\n        oldElem = this._lruCache!.get(cacheKeyHex)\n      } else {\n        oldElem = this._orderedMapCache!.getElementByKey(cacheKeyHex)\n      }\n      diffMap.set(cacheKeyHex, oldElem)\n    }\n  }\n\n  /**\n   * Puts account to cache under its address.\n   * @param address - Address of account\n   * @param account - Account or undefined if account doesn't exist in the trie\n   */\n  put(address: Address, account: Account | undefined): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    this._saveCachePreState(addressHex)\n    const elem = {\n      accountRLP: account !== undefined ? account.serialize() : undefined,\n    }\n\n    if (this.DEBUG) {\n      this._debug(`Put account ${addressHex}`)\n    }\n    if (this._lruCache) {\n      this._lruCache!.set(addressHex, elem)\n    } else {\n      this._orderedMapCache!.setElement(addressHex, elem)\n    }\n    this._stats.writes += 1\n  }\n\n  /**\n   * Returns the queried account or undefined if account doesn't exist\n   * @param address - Address of account\n   */\n  get(address: Address): AccountCacheElement | undefined {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    if (this.DEBUG) {\n      this._debug(`Get account ${addressHex}`)\n    }\n\n    let elem: AccountCacheElement | undefined\n    if (this._lruCache) {\n      elem = this._lruCache!.get(addressHex)\n    } else {\n      elem = this._orderedMapCache!.getElementByKey(addressHex)\n    }\n    this._stats.reads += 1\n    if (elem) {\n      this._stats.hits += 1\n    }\n    return elem\n  }\n\n  /**\n   * Marks address as deleted in cache.\n   * @param address - Address\n   */\n  del(address: Address): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    this._saveCachePreState(addressHex)\n    if (this.DEBUG) {\n      this._debug(`Delete account ${addressHex}`)\n    }\n    if (this._lruCache) {\n      this._lruCache!.set(addressHex, {\n        accountRLP: undefined,\n      })\n    } else {\n      this._orderedMapCache!.setElement(addressHex, {\n        accountRLP: undefined,\n      })\n    }\n\n    this._stats.dels += 1\n  }\n\n  /**\n   * Flushes cache by returning accounts that have been modified\n   * or deleted and resetting the diff cache (at checkpoint height).\n   */\n  flush(): [string, AccountCacheElement][] {\n    if (this.DEBUG) {\n      this._debug(`Flushing cache on checkpoint ${this._checkpoints}`)\n    }\n\n    const diffMap = this._diffCache[this._checkpoints]!\n\n    const items: [string, AccountCacheElement][] = []\n\n    for (const entry of diffMap.entries()) {\n      const cacheKeyHex = entry[0]\n      let elem: AccountCacheElement | undefined\n      if (this._lruCache) {\n        elem = this._lruCache!.get(cacheKeyHex)\n      } else {\n        elem = this._orderedMapCache!.getElementByKey(cacheKeyHex)\n      }\n\n      if (elem !== undefined) {\n        items.push([cacheKeyHex, elem])\n      }\n    }\n    this._diffCache[this._checkpoints] = new Map<string, AccountCacheElement | undefined>()\n    return items\n  }\n\n  /**\n   * Revert changes to cache last checkpoint (no effect on trie).\n   */\n  revert(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Revert to checkpoint ${this._checkpoints}`)\n    }\n    const diffMap = this._diffCache.pop()!\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const elem = entry[1]\n      if (elem === undefined) {\n        if (this._lruCache) {\n          this._lruCache!.delete(addressHex)\n        } else {\n          this._orderedMapCache!.eraseElementByKey(addressHex)\n        }\n      } else {\n        if (this._lruCache) {\n          this._lruCache!.set(addressHex, elem)\n        } else {\n          this._orderedMapCache!.setElement(addressHex, elem)\n        }\n      }\n    }\n  }\n\n  /**\n   * Commits to current state of cache (no effect on trie).\n   */\n  commit(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Commit to checkpoint ${this._checkpoints}`)\n    }\n    const diffMap = this._diffCache.pop()!\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const oldEntry = this._diffCache[this._checkpoints].has(addressHex)\n      if (!oldEntry) {\n        const elem = entry[1]\n        this._diffCache[this._checkpoints].set(addressHex, elem)\n      }\n    }\n  }\n\n  /**\n   * Marks current state of cache as checkpoint, which can\n   * later on be reverted or committed.\n   */\n  checkpoint(): void {\n    this._checkpoints += 1\n    if (this.DEBUG) {\n      this._debug(`New checkpoint ${this._checkpoints}`)\n    }\n    this._diffCache.push(new Map<string, AccountCacheElement | undefined>())\n  }\n\n  /**\n   * Returns the size of the cache\n   * @returns\n   */\n  size() {\n    if (this._lruCache) {\n      return this._lruCache!.size\n    } else {\n      return this._orderedMapCache!.size()\n    }\n  }\n\n  /**\n   * Returns a dict with cache stats\n   * @param reset\n   */\n  stats(reset = true) {\n    const stats = { ...this._stats }\n    stats.size = this.size()\n    if (reset) {\n      this._stats = {\n        size: 0,\n        reads: 0,\n        hits: 0,\n        writes: 0,\n        dels: 0,\n      }\n    }\n    return stats\n  }\n\n  /**\n   * Clears cache.\n   */\n  clear(): void {\n    if (this.DEBUG) {\n      this._debug(`Clear cache`)\n    }\n    if (this._lruCache) {\n      this._lruCache!.clear()\n    } else {\n      this._orderedMapCache!.clear()\n    }\n  }\n}\n","import debugDefault from 'debug'\n\nimport type { Debugger } from 'debug'\nconst { debug: createDebugLogger } = debugDefault\n\nexport class Cache {\n  _debug: Debugger\n\n  _checkpoints = 0\n\n  _stats = {\n    size: 0,\n    reads: 0,\n    hits: 0,\n    writes: 0,\n    dels: 0,\n  }\n\n  /**\n   * StateManager cache is run in DEBUG mode (default: false)\n   * Taken from DEBUG environment variable\n   *\n   * Safeguards on debug() calls are added for\n   * performance reasons to avoid string literal evaluation\n   * @hidden\n   */\n  protected readonly DEBUG: boolean = false\n\n  constructor() {\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n\n    this._debug = createDebugLogger('statemanager:cache')\n  }\n}\n","import { bytesToUnprefixedHex } from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { OrderedMap } from 'js-sdsl'\nimport { LRUCache } from 'lru-cache'\n\nimport { Cache } from './cache.js'\nimport { CacheType } from './types.js'\n\nimport type { CacheOpts } from './types.js'\nimport type { Address } from '@ethereumjs/util'\n\nconst { debug: createDebugLogger } = debugDefault\n\n/**\n * Represents a cached code element.\n */\ntype CodeCacheElement = {\n  code: Uint8Array | undefined\n}\n\nexport class CodeCache extends Cache {\n  _lruCache: LRUCache<string, CodeCacheElement> | undefined\n  _orderedMapCache: OrderedMap<string, CodeCacheElement> | undefined\n\n  /**\n   * Diff cache collecting the state of the cache\n   * at the beginning of checkpoint height\n   * (respectively: before a first modification)\n   *\n   * If the whole cache element is undefined (in contrast\n   * to the code), the element didn't exist in the cache\n   * before.\n   */\n  _diffCache: Map<string, CodeCacheElement | undefined>[] = []\n\n  constructor(opts: CacheOpts) {\n    super()\n    if (opts.type === CacheType.LRU) {\n      this._lruCache = new LRUCache({\n        max: opts.size,\n        updateAgeOnGet: true,\n      })\n    } else {\n      this._orderedMapCache = new OrderedMap()\n    }\n\n    this._diffCache.push(new Map<string, CodeCacheElement | undefined>())\n    this._debug = createDebugLogger('statemanager:cache:code')\n  }\n\n  /**\n   * Saves the state of the code cache before making changes to it.\n   *\n   * @param cacheKeyHex Account key for which code is being modified.\n   */\n  _saveCachePreState(cacheKeyHex: string) {\n    const diffMap = this._diffCache[this._checkpoints]\n    if (!diffMap.has(cacheKeyHex)) {\n      let oldElem: CodeCacheElement | undefined\n      if (this._lruCache) {\n        oldElem = this._lruCache.get(cacheKeyHex)\n      } else {\n        oldElem = this._orderedMapCache!.getElementByKey(cacheKeyHex)\n      }\n      diffMap.set(cacheKeyHex, oldElem)\n    }\n  }\n\n  /**\n   * Puts code into the cache under its hash.\n   *\n   * @param address - Address of account code is being modified for.\n   * @param code - Bytecode or undefined if code doesn't exist.\n   */\n  put(address: Address, code: Uint8Array | undefined): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    this._saveCachePreState(addressHex)\n    const elem = {\n      code,\n    }\n\n    if (this.DEBUG) {\n      this._debug(`Put code ${addressHex}`)\n    }\n    if (this._lruCache) {\n      this._lruCache.set(addressHex, elem)\n    } else {\n      this._orderedMapCache!.setElement(addressHex, elem)\n    }\n    this._stats.writes += 1\n  }\n\n  /**\n   * Returns the queried code or undefined if it doesn't exist.\n   *\n   * @param address - Account address for which code is being fetched.\n   */\n  get(address: Address): CodeCacheElement | undefined {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    if (this.DEBUG) {\n      this._debug(`Get code ${addressHex}`)\n    }\n\n    let elem: CodeCacheElement | undefined\n    if (this._lruCache) {\n      elem = this._lruCache.get(addressHex)\n    } else {\n      elem = this._orderedMapCache!.getElementByKey(addressHex)\n    }\n    this._stats.reads += 1\n    if (elem) {\n      this._stats.hits += 1\n    }\n    return elem\n  }\n\n  /**\n   * Marks code as deleted in the cache.\n   *\n   * @param address - Account address for which code is being fetched.\n   */\n  del(address: Address): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    this._saveCachePreState(addressHex)\n    if (this.DEBUG) {\n      this._debug(`Delete code ${addressHex}`)\n    }\n    if (this._lruCache) {\n      this._lruCache.set(addressHex, {\n        code: undefined,\n      })\n    } else {\n      this._orderedMapCache!.setElement(addressHex, {\n        code: undefined,\n      })\n    }\n\n    this._stats.dels += 1\n  }\n\n  /**\n   * Flushes the cache by returning codes that have been modified\n   * or deleted and resetting the diff cache (at checkpoint height).\n   */\n  flush(): [string, CodeCacheElement][] {\n    if (this.DEBUG) {\n      this._debug(`Flushing cache on checkpoint ${this._checkpoints}`)\n    }\n\n    const diffMap = this._diffCache[this._checkpoints]\n\n    const items: [string, CodeCacheElement][] = []\n\n    for (const entry of diffMap.entries()) {\n      const cacheKeyHex = entry[0]\n      let elem: CodeCacheElement | undefined\n      if (this._lruCache) {\n        elem = this._lruCache.get(cacheKeyHex)\n      } else {\n        elem = this._orderedMapCache!.getElementByKey(cacheKeyHex)\n      }\n\n      if (elem !== undefined) {\n        items.push([cacheKeyHex, elem])\n      }\n    }\n    this._diffCache[this._checkpoints] = new Map<string, CodeCacheElement | undefined>()\n    return items\n  }\n\n  /**\n   * Revert changes to the cache to the last checkpoint (no effect on trie).\n   */\n  revert(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Revert to checkpoint ${this._checkpoints}`)\n    }\n    const diffMap = this._diffCache.pop()!\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const elem = entry[1]\n      if (elem === undefined) {\n        if (this._lruCache) {\n          this._lruCache.delete(addressHex)\n        } else {\n          this._orderedMapCache!.eraseElementByKey(addressHex)\n        }\n      } else {\n        if (this._lruCache) {\n          this._lruCache.set(addressHex, elem)\n        } else {\n          this._orderedMapCache!.setElement(addressHex, elem)\n        }\n      }\n    }\n  }\n\n  /**\n   * Commits the current state of the cache (no effect on trie).\n   */\n  commit(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Commit to checkpoint ${this._checkpoints}`)\n    }\n    const diffMap = this._diffCache.pop()!\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const oldEntry = this._diffCache[this._checkpoints].has(addressHex)\n      if (!oldEntry) {\n        const elem = entry[1]\n        this._diffCache[this._checkpoints].set(addressHex, elem)\n      }\n    }\n  }\n\n  /**\n   * Marks the current state of the cache as a checkpoint, which can\n   * later be reverted or committed.\n   */\n  checkpoint(): void {\n    this._checkpoints += 1\n    if (this.DEBUG) {\n      this._debug(`New checkpoint ${this._checkpoints}`)\n    }\n    this._diffCache.push(new Map<string, CodeCacheElement | undefined>())\n  }\n\n  /**\n   * Returns the size of the cache\n   * @returns\n   */\n  size() {\n    if (this._lruCache) {\n      return this._lruCache!.size\n    } else {\n      return this._orderedMapCache!.size()\n    }\n  }\n\n  /**\n   * Returns a dictionary with cache statistics.\n   *\n   * @param reset - Whether to reset statistics after retrieval.\n   * @returns A dictionary with cache statistics.\n   */\n  stats(reset = true): any {\n    const stats = { ...this._stats }\n    stats.size = this.size()\n    if (reset) {\n      this._stats = {\n        size: 0,\n        reads: 0,\n        hits: 0,\n        writes: 0,\n        dels: 0,\n      }\n    }\n    return stats\n  }\n\n  /**\n   * Clears the cache.\n   */\n  clear(): void {\n    if (this.DEBUG) {\n      this._debug(`Clear cache`)\n    }\n    if (this._lruCache) {\n      this._lruCache.clear()\n    } else {\n      this._orderedMapCache!.clear()\n    }\n  }\n}\n","export * from './account.js'\nexport * from './code.js'\nexport * from './originalStorageCache.js'\nexport * from './storage.js'\nexport * from './types.js'\n","import { bytesToUnprefixedHex } from '@ethereumjs/util'\n\nimport type { Address } from '@ethereumjs/util'\n\ntype getContractStorage = (address: Address, key: Uint8Array) => Promise<Uint8Array>\n\nexport class OriginalStorageCache {\n  private map: Map<string, Map<string, Uint8Array>>\n  private getContractStorage: getContractStorage\n  constructor(getContractStorage: getContractStorage) {\n    this.map = new Map()\n    this.getContractStorage = getContractStorage\n  }\n\n  async get(address: Address, key: Uint8Array): Promise<Uint8Array> {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    const map = this.map.get(addressHex)\n    if (map !== undefined) {\n      const keyHex = bytesToUnprefixedHex(key)\n      const value = map.get(keyHex)\n      if (value !== undefined) {\n        return value\n      }\n    }\n    const value = await this.getContractStorage(address, key)\n    this.put(address, key, value)\n    return value\n  }\n\n  put(address: Address, key: Uint8Array, value: Uint8Array) {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    let map = this.map.get(addressHex)\n    if (map === undefined) {\n      map = new Map()\n      this.map.set(addressHex, map)\n    }\n    const keyHex = bytesToUnprefixedHex(key)\n    if (map!.has(keyHex) === false) {\n      map!.set(keyHex, value)\n    }\n  }\n\n  clear(): void {\n    this.map = new Map()\n  }\n}\n","import { bytesToUnprefixedHex, hexToBytes } from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { OrderedMap } from 'js-sdsl'\nimport { LRUCache } from 'lru-cache'\n\nimport { Cache } from './cache.js'\nimport { CacheType } from './types.js'\n\nimport type { CacheOpts } from './types.js'\nimport type { Address } from '@ethereumjs/util'\nconst { debug: createDebugLogger } = debugDefault\n\n/**\n * key -> storage mapping\n *\n * undefined: storage value is known not to exist in the cache\n */\ntype DiffStorageCacheMap = Map<string, Uint8Array | undefined>\ntype StorageCacheMap = Map<string, Uint8Array>\n\nexport class StorageCache extends Cache {\n  _lruCache: LRUCache<string, StorageCacheMap> | undefined\n  _orderedMapCache: OrderedMap<string, StorageCacheMap> | undefined\n\n  /**\n   * Diff cache collecting the state of the cache\n   * at the beginning of checkpoint height\n   * (respectively: before a first modification)\n   *\n   * If the whole cache element is undefined (in contrast\n   * to the account), the element didn't exist in the cache\n   * before.\n   */\n  _diffCache: Map<string, DiffStorageCacheMap>[] = []\n\n  constructor(opts: CacheOpts) {\n    super()\n    if (opts.type === CacheType.LRU) {\n      this._lruCache = new LRUCache({\n        max: opts.size,\n        updateAgeOnGet: true,\n      })\n    } else {\n      this._orderedMapCache = new OrderedMap()\n    }\n\n    this._diffCache.push(new Map())\n\n    if (this.DEBUG) {\n      this._debug = createDebugLogger('statemanager:cache:storage')\n    }\n  }\n\n  _saveCachePreState(addressHex: string, keyHex: string) {\n    const addressStoragePreState = this._diffCache[this._checkpoints].get(addressHex)\n    const diffStorageMap: DiffStorageCacheMap = addressStoragePreState ?? new Map()\n\n    if (!diffStorageMap.has(keyHex)) {\n      let oldStorageMap: StorageCacheMap | undefined\n      let oldStorage: Uint8Array | undefined = undefined\n      if (this._lruCache) {\n        oldStorageMap = this._lruCache!.get(addressHex)\n        if (oldStorageMap) {\n          oldStorage = oldStorageMap.get(keyHex)\n        }\n      } else {\n        oldStorageMap = this._orderedMapCache!.getElementByKey(addressHex)\n        if (oldStorageMap) {\n          oldStorage = oldStorageMap.get(keyHex)\n        }\n      }\n      diffStorageMap.set(keyHex, oldStorage)\n      this._diffCache[this._checkpoints].set(addressHex, diffStorageMap)\n    }\n  }\n\n  /**\n   * Puts storage value to cache under address_key cache key.\n   * @param address - Account address\n   * @param key - Storage key\n   * @param val - RLP-encoded storage value\n   */\n  put(address: Address, key: Uint8Array, value: Uint8Array): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    const keyHex = bytesToUnprefixedHex(key)\n    this._saveCachePreState(addressHex, keyHex)\n\n    if (this.DEBUG) {\n      this._debug(\n        `Put storage for ${addressHex}: ${keyHex} -> ${\n          value !== undefined ? bytesToUnprefixedHex(value) : ''\n        }`\n      )\n    }\n    if (this._lruCache) {\n      let storageMap = this._lruCache!.get(addressHex)\n      if (!storageMap) {\n        storageMap = new Map()\n      }\n      storageMap.set(keyHex, value)\n      this._lruCache!.set(addressHex, storageMap)\n    } else {\n      let storageMap = this._orderedMapCache!.getElementByKey(addressHex)\n      if (!storageMap) {\n        storageMap = new Map()\n      }\n      storageMap.set(keyHex, value)\n      this._orderedMapCache!.setElement(addressHex, storageMap)\n    }\n    this._stats.writes += 1\n  }\n\n  /**\n   * Returns the queried slot as the RLP encoded storage value\n   * hexToBytes('0x80'): slot is known to be empty\n   * undefined: slot is not in cache\n   * @param address - Address of account\n   * @param key - Storage key\n   * @returns Storage value or undefined\n   */\n  get(address: Address, key: Uint8Array): Uint8Array | undefined {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    const keyHex = bytesToUnprefixedHex(key)\n    if (this.DEBUG) {\n      this._debug(`Get storage for ${addressHex}`)\n    }\n\n    let storageMap: StorageCacheMap | undefined\n    if (this._lruCache) {\n      storageMap = this._lruCache!.get(addressHex)\n    } else {\n      storageMap = this._orderedMapCache!.getElementByKey(addressHex)\n    }\n    this._stats.reads += 1\n    if (storageMap) {\n      this._stats.hits += 1\n      return storageMap.get(keyHex)\n    }\n  }\n\n  /**\n   * Marks storage key for address as deleted in cache.\n   * @param address - Address\n   * @param key - Storage key\n   */\n  del(address: Address, key: Uint8Array): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    const keyHex = bytesToUnprefixedHex(key)\n    this._saveCachePreState(addressHex, keyHex)\n    if (this.DEBUG) {\n      this._debug(`Delete storage for ${addressHex}: ${keyHex}`)\n    }\n    if (this._lruCache) {\n      let storageMap = this._lruCache!.get(addressHex)\n      if (!storageMap) {\n        storageMap = new Map()\n      }\n      storageMap.set(keyHex, hexToBytes('0x80'))\n      this._lruCache!.set(addressHex, storageMap)\n    } else {\n      let storageMap = this._orderedMapCache!.getElementByKey(addressHex)\n      if (!storageMap) {\n        storageMap = new Map()\n      }\n      storageMap.set(keyHex, hexToBytes('0x80'))\n      this._orderedMapCache!.setElement(addressHex, storageMap)\n    }\n\n    this._stats.dels += 1\n  }\n\n  /**\n   * Deletes all storage slots for address from the cache\n   * @param address\n   */\n  clearContractStorage(address: Address): void {\n    const addressHex = bytesToUnprefixedHex(address.bytes)\n    if (this._lruCache) {\n      this._lruCache!.set(addressHex, new Map())\n    } else {\n      this._orderedMapCache!.setElement(addressHex, new Map())\n    }\n  }\n\n  /**\n   * Flushes cache by returning storage slots that have been modified\n   * or deleted and resetting the diff cache (at checkpoint height).\n   */\n  flush(): [string, string, Uint8Array | undefined][] {\n    if (this.DEBUG) {\n      this._debug(`Flushing cache on checkpoint ${this._checkpoints}`)\n    }\n\n    const diffMap = this._diffCache[this._checkpoints]!\n\n    const items: [string, string, Uint8Array | undefined][] = []\n\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const diffStorageMap = entry[1]\n      let storageMap: StorageCacheMap | undefined\n      if (this._lruCache) {\n        storageMap = this._lruCache!.get(addressHex)\n      } else {\n        storageMap = this._orderedMapCache!.getElementByKey(addressHex)\n      }\n\n      if (storageMap !== undefined) {\n        for (const entry of diffStorageMap.entries()) {\n          const keyHex = entry[0]\n          const value = storageMap.get(keyHex)\n          items.push([addressHex, keyHex, value])\n        }\n      } else {\n        throw new Error('internal error: storage cache map for account should be defined')\n      }\n    }\n    this._diffCache[this._checkpoints] = new Map()\n    return items\n  }\n\n  /**\n   * Revert changes to cache last checkpoint (no effect on trie).\n   */\n  revert(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Revert to checkpoint ${this._checkpoints}`)\n    }\n    const diffMap = this._diffCache.pop()!\n\n    for (const entry of diffMap.entries()) {\n      const addressHex = entry[0]\n      const diffStorageMap = entry[1]\n\n      for (const entry of diffStorageMap.entries()) {\n        const keyHex = entry[0]\n        const value = entry[1]\n        if (this._lruCache) {\n          const storageMap = this._lruCache.get(addressHex) ?? new Map()\n          if (value === undefined) {\n            // Value is known not to be in the cache before\n            // -> delete from cache\n            storageMap.delete(keyHex)\n          } else {\n            // Value is known to be in the cache before\n            // (being either some storage value or the RLP-encoded empty Uint8Array)\n            storageMap.set(keyHex, value)\n          }\n          this._lruCache.set(addressHex, storageMap)\n        } else {\n          const storageMap = this._orderedMapCache!.getElementByKey(addressHex) ?? new Map()\n          if (!value) {\n            storageMap.delete(keyHex)\n          } else {\n            storageMap.set(keyHex, value)\n          }\n          this._orderedMapCache!.setElement(addressHex, storageMap)\n        }\n      }\n    }\n  }\n\n  /**\n   * Commits to current state of cache (no effect on trie).\n   */\n  commit(): void {\n    this._checkpoints -= 1\n    if (this.DEBUG) {\n      this._debug(`Commit to checkpoint ${this._checkpoints}`)\n    }\n    const higherHeightDiffMap = this._diffCache.pop()!\n    const lowerHeightDiffMap = this._diffCache[this._checkpoints]\n\n    // Go through diffMap from the pre-commit checkpoint height.\n    // 1. Iterate through all state pre states\n    // 2. If state pre-state is not in the new (lower) height diff map, take pre commit pre state value\n    // 3. If state is in new map, take this one, since this superseeds subsequent changes\n    for (const entry of higherHeightDiffMap.entries()) {\n      const addressHex = entry[0]\n      const higherHeightStorageDiff = entry[1]\n\n      const lowerHeightStorageDiff = lowerHeightDiffMap.get(addressHex) ?? new Map()\n\n      for (const entry of higherHeightStorageDiff.entries()) {\n        const keyHex = entry[0]\n        if (!lowerHeightStorageDiff.has(keyHex)) {\n          const elem = entry[1]\n          lowerHeightStorageDiff.set(keyHex, elem)\n        }\n      }\n      lowerHeightDiffMap.set(addressHex, lowerHeightStorageDiff)\n    }\n  }\n\n  /**\n   * Marks current state of cache as checkpoint, which can\n   * later on be reverted or committed.\n   */\n  checkpoint(): void {\n    this._checkpoints += 1\n    if (this.DEBUG) {\n      this._debug(`New checkpoint ${this._checkpoints}`)\n    }\n    this._diffCache.push(new Map())\n  }\n\n  /**\n   * Returns the size of the cache\n   * @returns\n   */\n  size() {\n    if (this._lruCache) {\n      return this._lruCache!.size\n    } else {\n      return this._orderedMapCache!.size()\n    }\n  }\n\n  /**\n   * Returns a dict with cache stats\n   * @param reset\n   */\n  stats(reset = true) {\n    const stats = { ...this._stats }\n    stats.size = this.size()\n    if (reset) {\n      this._stats = {\n        size: 0,\n        reads: 0,\n        hits: 0,\n        writes: 0,\n        dels: 0,\n      }\n    }\n    return stats\n  }\n\n  /**\n   * Clears cache.\n   */\n  clear(): void {\n    if (this.DEBUG) {\n      this._debug(`Clear cache`)\n    }\n    if (this._lruCache) {\n      this._lruCache!.clear()\n    } else {\n      this._orderedMapCache!.clear()\n    }\n  }\n\n  /**\n   * Dumps the RLP-encoded storage values for an `account` specified by `address`.\n   * @param address - The address of the `account` to return storage for\n   * @returns {StorageCacheMap | undefined} - The storage values for the `account` or undefined if the `account` is not in the cache\n   */\n  dump(address: Address): StorageCacheMap | undefined {\n    let storageMap\n    if (this._lruCache) {\n      storageMap = this._lruCache!.get(bytesToUnprefixedHex(address.bytes))\n    } else {\n      storageMap = this._orderedMapCache?.getElementByKey(bytesToUnprefixedHex(address.bytes))\n    }\n    return storageMap\n  }\n}\n","export enum CacheType {\n  LRU = 'lru',\n  ORDERED_MAP = 'ordered_map',\n}\n\nexport interface CacheOpts {\n  size: number\n  type: CacheType\n}\n","export * from './accessWitness.js'\nexport * from './cache/index.js'\nexport * from './rpcStateManager.js'\nexport * from './statelessVerkleStateManager.js'\nexport * from './stateManager.js'\n","import { Chain, Common } from '@ethereumjs/common'\nimport { RLP } from '@ethereumjs/rlp'\nimport { Trie } from '@ethereumjs/trie'\nimport {\n  Account,\n  bigIntToHex,\n  bytesToHex,\n  equalsBytes,\n  fetchFromProvider,\n  hexToBytes,\n  intToHex,\n  toBytes,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { AccountCache, CacheType, OriginalStorageCache, StorageCache } from './cache/index.js'\n\nimport type { Proof } from './index.js'\nimport type {\n  AccountFields,\n  EVMStateManagerInterface,\n  StorageDump,\n  StorageRange,\n} from '@ethereumjs/common'\nimport type { Address } from '@ethereumjs/util'\nimport type { Debugger } from 'debug'\nconst { debug: createDebugLogger } = debugDefault\n\nexport interface RPCStateManagerOpts {\n  provider: string\n  blockTag: bigint | 'earliest'\n\n  /**\n   * The common to use\n   */\n  common?: Common\n}\n\nconst KECCAK256_RLP_EMPTY_ACCOUNT = RLP.encode(new Account().serialize()).slice(2)\n\nexport class RPCStateManager implements EVMStateManagerInterface {\n  protected _provider: string\n  protected _contractCache: Map<string, Uint8Array>\n  protected _storageCache: StorageCache\n  protected _blockTag: string\n  protected _accountCache: AccountCache\n  originalStorageCache: OriginalStorageCache\n  protected _debug: Debugger\n  protected DEBUG: boolean\n  private keccakFunction: Function\n  public readonly common: Common\n\n  constructor(opts: RPCStateManagerOpts) {\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n\n    this._debug = createDebugLogger('statemanager:rpcStateManager')\n    if (typeof opts.provider === 'string' && opts.provider.startsWith('http')) {\n      this._provider = opts.provider\n    } else {\n      throw new Error(`valid RPC provider url required; got ${opts.provider}`)\n    }\n\n    this._blockTag = opts.blockTag === 'earliest' ? opts.blockTag : bigIntToHex(opts.blockTag)\n\n    this._contractCache = new Map()\n    this._storageCache = new StorageCache({ size: 100000, type: CacheType.ORDERED_MAP })\n    this._accountCache = new AccountCache({ size: 100000, type: CacheType.ORDERED_MAP })\n\n    this.originalStorageCache = new OriginalStorageCache(this.getContractStorage.bind(this))\n    this.common = opts.common ?? new Common({ chain: Chain.Mainnet })\n    this.keccakFunction = opts.common?.customCrypto.keccak256 ?? keccak256\n  }\n\n  /**\n   * Note that the returned statemanager will share the same JsonRpcProvider as the original\n   *\n   * @returns RPCStateManager\n   */\n  shallowCopy(): RPCStateManager {\n    const newState = new RPCStateManager({\n      provider: this._provider,\n      blockTag: BigInt(this._blockTag),\n    })\n    newState._contractCache = new Map(this._contractCache)\n    newState._storageCache = new StorageCache({\n      size: 100000,\n      type: CacheType.ORDERED_MAP,\n    })\n    newState._accountCache = new AccountCache({\n      size: 100000,\n      type: CacheType.ORDERED_MAP,\n    })\n    return newState\n  }\n\n  /**\n   * Sets the new block tag used when querying the provider and clears the\n   * internal cache.\n   * @param blockTag - the new block tag to use when querying the provider\n   */\n  setBlockTag(blockTag: bigint | 'earliest'): void {\n    this._blockTag = blockTag === 'earliest' ? blockTag : bigIntToHex(blockTag)\n    this.clearCaches()\n    if (this.DEBUG) this._debug(`setting block tag to ${this._blockTag}`)\n  }\n\n  /**\n   * Clears the internal cache so all accounts, contract code, and storage slots will\n   * initially be retrieved from the provider\n   */\n  clearCaches(): void {\n    this._contractCache.clear()\n    this._storageCache.clear()\n    this._accountCache.clear()\n  }\n\n  /**\n   * Gets the code corresponding to the provided `address`.\n   * @param address - Address to get the `code` for\n   * @returns {Promise<Uint8Array>} - Resolves with the code corresponding to the provided address.\n   * Returns an empty `Uint8Array` if the account has no associated code.\n   */\n  async getContractCode(address: Address): Promise<Uint8Array> {\n    let codeBytes = this._contractCache.get(address.toString())\n    if (codeBytes !== undefined) return codeBytes\n    const code = await fetchFromProvider(this._provider, {\n      method: 'eth_getCode',\n      params: [address.toString(), this._blockTag],\n    })\n    codeBytes = toBytes(code)\n    this._contractCache.set(address.toString(), codeBytes)\n    return codeBytes\n  }\n\n  /**\n   * Adds `value` to the state trie as code, and sets `codeHash` on the account\n   * corresponding to `address` to reference this.\n   * @param address - Address of the `account` to add the `code` for\n   * @param value - The value of the `code`\n   */\n  async putContractCode(address: Address, value: Uint8Array): Promise<void> {\n    // Store contract code in the cache\n    this._contractCache.set(address.toString(), value)\n  }\n\n  /**\n   * Gets the storage value associated with the provided `address` and `key`. This method returns\n   * the shortest representation of the stored value.\n   * @param address - Address of the account to get the storage for\n   * @param key - Key in the account's storage to get the value for. Must be 32 bytes long.\n   * @returns {Uint8Array} - The storage value for the account\n   * corresponding to the provided address at the provided key.\n   * If this does not exist an empty `Uint8Array` is returned.\n   */\n  async getContractStorage(address: Address, key: Uint8Array): Promise<Uint8Array> {\n    // Check storage slot in cache\n    if (key.length !== 32) {\n      throw new Error('Storage key must be 32 bytes long')\n    }\n\n    let value = this._storageCache!.get(address, key)\n    if (value !== undefined) {\n      return value\n    }\n\n    // Retrieve storage slot from provider if not found in cache\n    const storage = await fetchFromProvider(this._provider, {\n      method: 'eth_getStorageAt',\n      params: [address.toString(), bytesToHex(key), this._blockTag],\n    })\n    value = toBytes(storage)\n\n    await this.putContractStorage(address, key, value)\n    return value\n  }\n\n  /**\n   * Adds value to the cache for the `account`\n   * corresponding to `address` at the provided `key`.\n   * @param address - Address to set a storage value for\n   * @param key - Key to set the value at. Must be 32 bytes long.\n   * @param value - Value to set at `key` for account corresponding to `address`.\n   * Cannot be more than 32 bytes. Leading zeros are stripped.\n   * If it is empty or filled with zeros, deletes the value.\n   */\n  async putContractStorage(address: Address, key: Uint8Array, value: Uint8Array): Promise<void> {\n    this._storageCache.put(address, key, value)\n  }\n\n  /**\n   * Clears all storage entries for the account corresponding to `address`.\n   * @param address - Address to clear the storage of\n   */\n  async clearContractStorage(address: Address): Promise<void> {\n    this._storageCache.clearContractStorage(address)\n  }\n\n  /**\n   * Dumps the RLP-encoded storage values for an `account` specified by `address`.\n   * @param address - The address of the `account` to return storage for\n   * @returns {Promise<StorageDump>} - The state of the account as an `Object` map.\n   * Keys are the storage keys, values are the storage values as strings.\n   * Both are represented as `0x` prefixed hex strings.\n   */\n  dumpStorage(address: Address): Promise<StorageDump> {\n    const storageMap = this._storageCache.dump(address)\n    const dump: StorageDump = {}\n    if (storageMap !== undefined) {\n      for (const slot of storageMap) {\n        dump[slot[0]] = bytesToHex(slot[1])\n      }\n    }\n    return Promise.resolve(dump)\n  }\n\n  dumpStorageRange(_address: Address, _startKey: bigint, _limit: number): Promise<StorageRange> {\n    // TODO: Implement.\n    return Promise.reject()\n  }\n\n  /**\n   * Checks if an `account` exists at `address`\n   * @param address - Address of the `account` to check\n   */\n  async accountExists(address: Address): Promise<boolean> {\n    if (this.DEBUG) this._debug?.(`verify if ${address.toString()} exists`)\n\n    const localAccount = this._accountCache.get(address)\n    if (localAccount !== undefined) return true\n    // Get merkle proof for `address` from provider\n    const proof = await fetchFromProvider(this._provider, {\n      method: 'eth_getProof',\n      params: [address.toString(), [] as any, this._blockTag],\n    })\n\n    const proofBuf = proof.accountProof.map((proofNode: string) => toBytes(proofNode))\n\n    const verified = await Trie.verifyProof(address.bytes, proofBuf, {\n      useKeyHashing: true,\n    })\n    // if not verified (i.e. verifyProof returns null), account does not exist\n    return verified === null ? false : true\n  }\n\n  /**\n   * Gets the code corresponding to the provided `address`.\n   * @param address - Address to get the `account` for\n   * @returns {Promise<Uint8Array>} - Resolves with the code corresponding to the provided address.\n   * Returns an empty `Uint8Array` if the account has no associated code.\n   */\n  async getAccount(address: Address): Promise<Account | undefined> {\n    const elem = this._accountCache?.get(address)\n    if (elem !== undefined) {\n      return elem.accountRLP !== undefined\n        ? Account.fromRlpSerializedAccount(elem.accountRLP)\n        : undefined\n    }\n\n    const rlp = (await this.getAccountFromProvider(address)).serialize()\n    const account =\n      equalsBytes(rlp, KECCAK256_RLP_EMPTY_ACCOUNT) === false\n        ? Account.fromRlpSerializedAccount(rlp)\n        : undefined\n    this._accountCache?.put(address, account)\n\n    return account\n  }\n\n  /**\n   * Retrieves an account from the provider and stores in the local trie\n   * @param address Address of account to be retrieved from provider\n   * @private\n   */\n  async getAccountFromProvider(address: Address): Promise<Account> {\n    if (this.DEBUG) this._debug(`retrieving account data from ${address.toString()} from provider`)\n    const accountData = await fetchFromProvider(this._provider, {\n      method: 'eth_getProof',\n      params: [address.toString(), [] as any, this._blockTag],\n    })\n    const account = Account.fromAccountData({\n      balance: BigInt(accountData.balance),\n      nonce: BigInt(accountData.nonce),\n      codeHash: toBytes(accountData.codeHash),\n      storageRoot: toBytes(accountData.storageHash),\n    })\n    return account\n  }\n\n  /**\n   * Saves an account into state under the provided `address`.\n   * @param address - Address under which to store `account`\n   * @param account - The account to store\n   */\n  async putAccount(address: Address, account: Account | undefined): Promise<void> {\n    if (this.DEBUG) {\n      this._debug(\n        `Save account address=${address} nonce=${account?.nonce} balance=${\n          account?.balance\n        } contract=${account && account.isContract() ? 'yes' : 'no'} empty=${\n          account && account.isEmpty() ? 'yes' : 'no'\n        }`\n      )\n    }\n    if (account !== undefined) {\n      this._accountCache!.put(address, account)\n    } else {\n      this._accountCache!.del(address)\n    }\n  }\n\n  /**\n   * Gets the account associated with `address`, modifies the given account\n   * fields, then saves the account into state. Account fields can include\n   * `nonce`, `balance`, `storageRoot`, and `codeHash`.\n   * @param address - Address of the account to modify\n   * @param accountFields - Object containing account fields and values to modify\n   */\n  async modifyAccountFields(address: Address, accountFields: AccountFields): Promise<void> {\n    if (this.DEBUG) {\n      this._debug(`modifying account fields for ${address.toString()}`)\n      this._debug(\n        JSON.stringify(\n          accountFields,\n          (k, v) => {\n            if (k === 'nonce') return v.toString()\n            return v\n          },\n          2\n        )\n      )\n    }\n    let account = await this.getAccount(address)\n    if (!account) {\n      account = new Account()\n    }\n    account.nonce = accountFields.nonce ?? account.nonce\n    account.balance = accountFields.balance ?? account.balance\n    account.storageRoot = accountFields.storageRoot ?? account.storageRoot\n    account.codeHash = accountFields.codeHash ?? account.codeHash\n    await this.putAccount(address, account)\n  }\n\n  /**\n   * Deletes an account from state under the provided `address`.\n   * @param address - Address of the account which should be deleted\n   */\n  async deleteAccount(address: Address) {\n    if (this.DEBUG) {\n      this._debug(`deleting account corresponding to ${address.toString()}`)\n    }\n    this._accountCache.del(address)\n  }\n\n  /**\n   * Get an EIP-1186 proof from the provider\n   * @param address address to get proof of\n   * @param storageSlots storage slots to get proof of\n   * @returns an EIP-1186 formatted proof\n   */\n  async getProof(address: Address, storageSlots: Uint8Array[] = []): Promise<Proof> {\n    if (this.DEBUG) this._debug(`retrieving proof from provider for ${address.toString()}`)\n    const proof = await fetchFromProvider(this._provider, {\n      method: 'eth_getProof',\n      params: [\n        address.toString(),\n        [storageSlots.map((slot) => bytesToHex(slot))],\n        this._blockTag,\n      ] as any,\n    })\n\n    return proof\n  }\n\n  /**\n   * Returns the applied key for a given address\n   * Used for saving preimages\n   * @param address - The address to return the applied key\n   * @returns {Uint8Array} - The applied key (e.g. hashed address)\n   */\n  getAppliedKey(address: Uint8Array): Uint8Array {\n    return this.keccakFunction(address)\n  }\n\n  /**\n   * Checkpoints the current state of the StateManager instance.\n   * State changes that follow can then be committed by calling\n   * `commit` or `reverted` by calling rollback.\n   *\n   * Partial implementation, called from the subclass.\n   */\n  async checkpoint(): Promise<void> {\n    this._accountCache.checkpoint()\n    this._storageCache.checkpoint()\n  }\n\n  /**\n   * Commits the current change-set to the instance since the\n   * last call to checkpoint.\n   *\n   * Partial implementation, called from the subclass.\n   */\n  async commit(): Promise<void> {\n    // setup cache checkpointing\n    this._accountCache.commit()\n  }\n\n  /**\n   * Reverts the current change-set to the instance since the\n   * last call to checkpoint.\n   *\n   * Partial implementation , called from the subclass.\n   */\n  async revert(): Promise<void> {\n    this._accountCache.revert()\n    this._storageCache.revert()\n    this._contractCache.clear()\n  }\n\n  async flush(): Promise<void> {\n    this._accountCache.flush()\n  }\n\n  /**\n   * @deprecated This method is not used by the RPC State Manager and is a stub required by the State Manager interface\n   */\n  getStateRoot = async () => {\n    return new Uint8Array(32)\n  }\n\n  /**\n   * @deprecated This method is not used by the RPC State Manager and is a stub required by the State Manager interface\n   */\n  setStateRoot = async (_root: Uint8Array) => {}\n\n  /**\n   * @deprecated This method is not used by the RPC State Manager and is a stub required by the State Manager interface\n   */\n  hasStateRoot = () => {\n    throw new Error('function not implemented')\n  }\n\n  generateCanonicalGenesis(_initState: any): Promise<void> {\n    return Promise.resolve()\n  }\n}\n\nexport class RPCBlockChain {\n  readonly provider: string\n  constructor(provider: string) {\n    if (provider === undefined || provider === '') throw new Error('provider URL is required')\n    this.provider = provider\n  }\n  async getBlock(blockId: number) {\n    const block = await fetchFromProvider(this.provider, {\n      method: 'eth_getBlockByNumber',\n      params: [intToHex(blockId), false],\n    })\n    return {\n      hash: () => hexToBytes(block.hash),\n    }\n  }\n\n  shallowCopy() {\n    return this\n  }\n}\n","import { Chain, Common } from '@ethereumjs/common'\nimport { RLP } from '@ethereumjs/rlp'\nimport { Trie } from '@ethereumjs/trie'\nimport {\n  Account,\n  Address,\n  KECCAK256_NULL,\n  KECCAK256_NULL_S,\n  KECCAK256_RLP,\n  KECCAK256_RLP_S,\n  bigIntToHex,\n  bytesToBigInt,\n  bytesToHex,\n  bytesToUnprefixedHex,\n  concatBytes,\n  equalsBytes,\n  hexToBytes,\n  setLengthLeft,\n  short,\n  toBytes,\n  unpadBytes,\n  unprefixedHexToBytes,\n  utf8ToBytes,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { AccountCache, CacheType, CodeCache, StorageCache } from './cache/index.js'\nimport { OriginalStorageCache } from './cache/originalStorageCache.js'\n\nimport type { AccountFields, EVMStateManagerInterface, StorageDump } from '@ethereumjs/common'\nimport type { StorageRange } from '@ethereumjs/common/src'\nimport type { DB, PrefixedHexString } from '@ethereumjs/util'\nimport type { Debugger } from 'debug'\nconst { debug: createDebugLogger } = debugDefault\n\nexport type StorageProof = {\n  key: PrefixedHexString\n  proof: PrefixedHexString[]\n  value: PrefixedHexString\n}\n\nexport type Proof = {\n  address: PrefixedHexString\n  balance: PrefixedHexString\n  codeHash: PrefixedHexString\n  nonce: PrefixedHexString\n  storageHash: PrefixedHexString\n  accountProof: PrefixedHexString[]\n  storageProof: StorageProof[]\n}\n\ntype CacheOptions = {\n  /**\n   * Allows for cache deactivation\n   *\n   * Depending on the use case and underlying datastore (and eventual concurrent cache\n   * mechanisms there), usage with or without cache can be faster\n   *\n   * Default: false\n   */\n  deactivate?: boolean\n\n  /**\n   * Cache type to use.\n   *\n   * Available options:\n   *\n   * ORDERED_MAP: Cache with no fixed upper bound and dynamic allocation,\n   * use for dynamic setups like testing or similar.\n   *\n   * LRU: LRU cache with pre-allocation of memory and a fixed size.\n   * Use for larger and more persistent caches.\n   */\n  type?: CacheType\n\n  /**\n   * Size of the cache (only for LRU cache)\n   *\n   * Default: 100000 (account cache) / 20000 (storage cache) / 20000 (code cache)\n   *\n   * Note: the cache/trie interplay mechanism is designed in a way that\n   * the theoretical number of max modified accounts between two flush operations\n   * should be smaller than the cache size, otherwise the cache will \"forget\" the\n   * old modifications resulting in an incomplete set of trie-flushed accounts.\n   */\n  size?: number\n}\n\ntype CacheSettings = {\n  deactivate: boolean\n  type: CacheType\n  size: number\n}\n\n/**\n * Prefix to distinguish between a contract deployed with code `0x80`\n * and `RLP([])` (also having the value `0x80`).\n *\n * Otherwise the creation of the code hash for the `0x80` contract\n * will be the same as the hash of the empty trie which leads to\n * misbehaviour in the underlying trie library.\n */\nexport const CODEHASH_PREFIX = utf8ToBytes('c')\n\n/**\n * Options for constructing a {@link StateManager}.\n */\nexport interface DefaultStateManagerOpts {\n  /**\n   * A {@link Trie} instance\n   */\n  trie?: Trie\n  /**\n   * Option to prefix codehashes in the database. This defaults to `true`.\n   * If this is disabled, note that it is possible to corrupt the trie, by deploying code\n   * which code is equal to the preimage of a trie-node.\n   * E.g. by putting the code `0x80` into the empty trie, will lead to a corrupted trie.\n   */\n  prefixCodeHashes?: boolean\n\n  /**\n   * Option to prefix the keys for the storage tries with the first 7 bytes from the\n   * associated account address. Activating this option gives a noticeable performance\n   * boost for storage DB reads when operating on larger tries.\n   *\n   * Note: Activating/deactivating this option causes continued state reads to be\n   * incompatible with existing databases.\n   *\n   * Default: false (for backwards compatibility reasons)\n   */\n  prefixStorageTrieKeys?: boolean\n\n  accountCacheOpts?: CacheOptions\n\n  storageCacheOpts?: CacheOptions\n\n  codeCacheOpts?: CacheOptions\n\n  /**\n   * The common to use\n   */\n  common?: Common\n}\n\n/**\n * Default StateManager implementation for the VM.\n *\n * The state manager abstracts from the underlying data store\n * by providing higher level access to accounts, contract code\n * and storage slots.\n *\n * The default state manager implementation uses a\n * `@ethereumjs/trie` trie as a data backend.\n */\nexport class DefaultStateManager implements EVMStateManagerInterface {\n  protected _debug: Debugger\n  protected _accountCache?: AccountCache\n  protected _storageCache?: StorageCache\n  protected _codeCache?: CodeCache\n\n  originalStorageCache: OriginalStorageCache\n\n  protected _trie: Trie\n  protected _storageTries: { [key: string]: Trie }\n\n  protected readonly _prefixCodeHashes: boolean\n  protected readonly _prefixStorageTrieKeys: boolean\n  protected readonly _accountCacheSettings: CacheSettings\n  protected readonly _storageCacheSettings: CacheSettings\n  protected readonly _codeCacheSettings: CacheSettings\n\n  public readonly common: Common\n\n  protected _checkpointCount: number\n\n  private keccakFunction: Function\n\n  /**\n   * StateManager is run in DEBUG mode (default: false)\n   * Taken from DEBUG environment variable\n   *\n   * Safeguards on debug() calls are added for\n   * performance reasons to avoid string literal evaluation\n   * @hidden\n   */\n  protected readonly DEBUG: boolean = false\n\n  /**\n   * Instantiate the StateManager interface.\n   */\n  constructor(opts: DefaultStateManagerOpts = {}) {\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n\n    this._debug = createDebugLogger('statemanager:statemanager')\n\n    this.common = opts.common ?? new Common({ chain: Chain.Mainnet })\n\n    this._checkpointCount = 0\n\n    this._trie = opts.trie ?? new Trie({ useKeyHashing: true, common: this.common })\n    this._storageTries = {}\n\n    this.keccakFunction = opts.common?.customCrypto.keccak256 ?? keccak256\n\n    this.originalStorageCache = new OriginalStorageCache(this.getContractStorage.bind(this))\n\n    this._prefixCodeHashes = opts.prefixCodeHashes ?? true\n    this._prefixStorageTrieKeys = opts.prefixStorageTrieKeys ?? false\n    this._accountCacheSettings = {\n      deactivate:\n        (opts.accountCacheOpts?.deactivate === true || opts.accountCacheOpts?.size === 0) ?? false,\n      type: opts.accountCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.accountCacheOpts?.size ?? 100000,\n    }\n\n    if (!this._accountCacheSettings.deactivate) {\n      this._accountCache = new AccountCache({\n        size: this._accountCacheSettings.size,\n        type: this._accountCacheSettings.type,\n      })\n    }\n\n    this._storageCacheSettings = {\n      deactivate:\n        (opts.storageCacheOpts?.deactivate === true || opts.storageCacheOpts?.size === 0) ?? false,\n      type: opts.storageCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.storageCacheOpts?.size ?? 20000,\n    }\n\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache = new StorageCache({\n        size: this._storageCacheSettings.size,\n        type: this._storageCacheSettings.type,\n      })\n    }\n\n    this._codeCacheSettings = {\n      deactivate:\n        (opts.codeCacheOpts?.deactivate === true || opts.codeCacheOpts?.size === 0) ?? false,\n      type: opts.codeCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.codeCacheOpts?.size ?? 20000,\n    }\n\n    if (!this._codeCacheSettings.deactivate) {\n      this._codeCache = new CodeCache({\n        size: this._codeCacheSettings.size,\n        type: this._codeCacheSettings.type,\n      })\n    }\n  }\n\n  /**\n   * Gets the account associated with `address` or `undefined` if account does not exist\n   * @param address - Address of the `account` to get\n   */\n  async getAccount(address: Address): Promise<Account | undefined> {\n    if (!this._accountCacheSettings.deactivate) {\n      const elem = this._accountCache!.get(address)\n      if (elem !== undefined) {\n        return elem.accountRLP !== undefined\n          ? Account.fromRlpSerializedAccount(elem.accountRLP)\n          : undefined\n      }\n    }\n\n    const rlp = await this._trie.get(address.bytes)\n    const account = rlp !== null ? Account.fromRlpSerializedAccount(rlp) : undefined\n    if (this.DEBUG) {\n      this._debug(`Get account ${address} from DB (${account ? 'exists' : 'non-existent'})`)\n    }\n    this._accountCache?.put(address, account)\n    return account\n  }\n\n  /**\n   * Saves an account into state under the provided `address`.\n   * @param address - Address under which to store `account`\n   * @param account - The account to store or undefined if to be deleted\n   */\n  async putAccount(address: Address, account: Account | undefined): Promise<void> {\n    if (this.DEBUG) {\n      this._debug(\n        `Save account address=${address} nonce=${account?.nonce} balance=${\n          account?.balance\n        } contract=${account && account.isContract() ? 'yes' : 'no'} empty=${\n          account && account.isEmpty() ? 'yes' : 'no'\n        }`\n      )\n    }\n    if (this._accountCacheSettings.deactivate) {\n      const trie = this._trie\n      if (account !== undefined) {\n        await trie.put(address.bytes, account.serialize())\n      } else {\n        await trie.del(address.bytes)\n      }\n    } else {\n      if (account !== undefined) {\n        this._accountCache!.put(address, account)\n      } else {\n        this._accountCache!.del(address)\n      }\n    }\n  }\n\n  /**\n   * Gets the account associated with `address`, modifies the given account\n   * fields, then saves the account into state. Account fields can include\n   * `nonce`, `balance`, `storageRoot`, and `codeHash`.\n   * @param address - Address of the account to modify\n   * @param accountFields - Object containing account fields and values to modify\n   */\n  async modifyAccountFields(address: Address, accountFields: AccountFields): Promise<void> {\n    let account = await this.getAccount(address)\n    if (!account) {\n      account = new Account()\n    }\n    account.nonce = accountFields.nonce ?? account.nonce\n    account.balance = accountFields.balance ?? account.balance\n    account.storageRoot = accountFields.storageRoot ?? account.storageRoot\n    account.codeHash = accountFields.codeHash ?? account.codeHash\n    await this.putAccount(address, account)\n  }\n\n  /**\n   * Deletes an account from state under the provided `address`.\n   * @param address - Address of the account which should be deleted\n   */\n  async deleteAccount(address: Address) {\n    if (this.DEBUG) {\n      this._debug(`Delete account ${address}`)\n    }\n\n    this._codeCache?.del(address)\n\n    if (this._accountCacheSettings.deactivate) {\n      await this._trie.del(address.bytes)\n    } else {\n      this._accountCache!.del(address)\n    }\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache?.clearContractStorage(address)\n    }\n  }\n\n  /**\n   * Adds `value` to the state trie as code, and sets `codeHash` on the account\n   * corresponding to `address` to reference this.\n   * @param address - Address of the `account` to add the `code` for\n   * @param value - The value of the `code`\n   */\n  async putContractCode(address: Address, value: Uint8Array): Promise<void> {\n    this._codeCache?.put(address, value)\n    const codeHash = this.keccakFunction(value)\n    if (equalsBytes(codeHash, KECCAK256_NULL)) {\n      return\n    }\n\n    if (this.DEBUG) {\n      this._debug(`Update codeHash (-> ${short(codeHash)}) for account ${address}`)\n    }\n\n    if ((await this.getAccount(address)) === undefined) {\n      await this.putAccount(address, new Account())\n    }\n    await this.modifyAccountFields(address, { codeHash })\n  }\n\n  /**\n   * Gets the code corresponding to the provided `address`.\n   * @param address - Address to get the `code` for\n   * @returns {Promise<Uint8Array>} -  Resolves with the code corresponding to the provided address.\n   * Returns an empty `Uint8Array` if the account has no associated code.\n   */\n  async getContractCode(address: Address): Promise<Uint8Array> {\n    if (!this._codeCacheSettings.deactivate) {\n      const elem = this._codeCache?.get(address)\n      if (elem !== undefined) {\n        return elem.code ?? new Uint8Array(0)\n      }\n    }\n    const account = await this.getAccount(address)\n    if (!account) {\n      return new Uint8Array(0)\n    }\n    if (!account.isContract()) {\n      return new Uint8Array(0)\n    }\n    const key = this._prefixCodeHashes\n      ? concatBytes(CODEHASH_PREFIX, account.codeHash)\n      : account.codeHash\n    const code = (await this._trie.database().get(key)) ?? new Uint8Array(0)\n\n    if (!this._codeCacheSettings.deactivate) {\n      this._codeCache!.put(address, code)\n    }\n    return code\n  }\n\n  /**\n   * Gets the storage trie for an account from the storage\n   * cache or does a lookup.\n   * @private\n   */\n  // TODO PR: have a better interface for hashed address pull?\n  protected _getStorageTrie(addressOrHash: Address | Uint8Array, account?: Account): Trie {\n    // use hashed key for lookup from storage cache\n    const addressHex = bytesToUnprefixedHex(\n      addressOrHash instanceof Address ? this.keccakFunction(addressOrHash.bytes) : addressOrHash\n    )\n    let storageTrie = this._storageTries[addressHex]\n    if (storageTrie === undefined) {\n      const keyPrefix = this._prefixStorageTrieKeys\n        ? (addressOrHash instanceof Address\n            ? this.keccakFunction(addressOrHash.bytes)\n            : addressOrHash\n          ).slice(0, 7)\n        : undefined\n      storageTrie = this._trie.shallowCopy(false, { keyPrefix })\n      if (account !== undefined) {\n        storageTrie.root(account.storageRoot)\n      } else {\n        storageTrie.root(storageTrie.EMPTY_TRIE_ROOT)\n      }\n      storageTrie.flushCheckpoints()\n      this._storageTries[addressHex] = storageTrie\n    }\n    return storageTrie\n  }\n\n  /**\n   * Gets the storage trie for an account from the storage\n   * cache or does a lookup.\n   * @private\n   */\n  protected _getAccountTrie(): Trie {\n    return this._trie\n  }\n\n  /**\n   * Gets the storage trie for an account from the storage\n   * cache or does a lookup.\n   * @private\n   */\n  protected _getCodeDB(): DB {\n    return this._trie.database()\n  }\n\n  /**\n   * Gets the storage value associated with the provided `address` and `key`. This method returns\n   * the shortest representation of the stored value.\n   * @param address -  Address of the account to get the storage for\n   * @param key - Key in the account's storage to get the value for. Must be 32 bytes long.\n   * @returns - The storage value for the account\n   * corresponding to the provided address at the provided key.\n   * If this does not exist an empty `Uint8Array` is returned.\n   */\n  async getContractStorage(address: Address, key: Uint8Array): Promise<Uint8Array> {\n    if (key.length !== 32) {\n      throw new Error('Storage key must be 32 bytes long')\n    }\n    if (!this._storageCacheSettings.deactivate) {\n      const value = this._storageCache!.get(address, key)\n      if (value !== undefined) {\n        const decoded = RLP.decode(value ?? new Uint8Array(0)) as Uint8Array\n        return decoded\n      }\n    }\n\n    const account = await this.getAccount(address)\n    if (!account) {\n      throw new Error('getContractStorage() called on non-existing account')\n    }\n    const trie = this._getStorageTrie(address, account)\n    const value = await trie.get(key)\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache?.put(address, key, value ?? hexToBytes('0x80'))\n    }\n    const decoded = RLP.decode(value ?? new Uint8Array(0)) as Uint8Array\n    return decoded\n  }\n\n  /**\n   * Modifies the storage trie of an account.\n   * @private\n   * @param address -  Address of the account whose storage is to be modified\n   * @param modifyTrie - Function to modify the storage trie of the account\n   */\n  protected async _modifyContractStorage(\n    address: Address,\n    account: Account,\n    modifyTrie: (storageTrie: Trie, done: Function) => void\n  ): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve) => {\n      const storageTrie = this._getStorageTrie(address, account)\n\n      modifyTrie(storageTrie, async () => {\n        // update storage cache\n        const addressHex = bytesToUnprefixedHex(address.bytes)\n        this._storageTries[addressHex] = storageTrie\n\n        // update contract storageRoot\n        account.storageRoot = storageTrie.root()\n        await this.putAccount(address, account)\n        resolve()\n      })\n    })\n  }\n\n  protected async _writeContractStorage(\n    address: Address,\n    account: Account,\n    key: Uint8Array,\n    value: Uint8Array\n  ) {\n    await this._modifyContractStorage(address, account, async (storageTrie, done) => {\n      if (value instanceof Uint8Array && value.length) {\n        // format input\n        const encodedValue = RLP.encode(value)\n        if (this.DEBUG) {\n          this._debug(`Update contract storage for account ${address} to ${short(value)}`)\n        }\n        await storageTrie.put(key, encodedValue)\n      } else {\n        // deleting a value\n        if (this.DEBUG) {\n          this._debug(`Delete contract storage for account`)\n        }\n        await storageTrie.del(key)\n      }\n      done()\n    })\n  }\n\n  /**\n   * Adds value to the state trie for the `account`\n   * corresponding to `address` at the provided `key`.\n   * @param address -  Address to set a storage value for\n   * @param key - Key to set the value at. Must be 32 bytes long.\n   * @param value - Value to set at `key` for account corresponding to `address`.\n   * Cannot be more than 32 bytes. Leading zeros are stripped.\n   * If it is a empty or filled with zeros, deletes the value.\n   */\n  async putContractStorage(address: Address, key: Uint8Array, value: Uint8Array): Promise<void> {\n    if (key.length !== 32) {\n      throw new Error('Storage key must be 32 bytes long')\n    }\n\n    if (value.length > 32) {\n      throw new Error('Storage value cannot be longer than 32 bytes')\n    }\n\n    const account = await this.getAccount(address)\n    if (!account) {\n      throw new Error('putContractStorage() called on non-existing account')\n    }\n\n    value = unpadBytes(value)\n    if (!this._storageCacheSettings.deactivate) {\n      const encodedValue = RLP.encode(value)\n      this._storageCache!.put(address, key, encodedValue)\n    } else {\n      await this._writeContractStorage(address, account, key, value)\n    }\n  }\n\n  /**\n   * Clears all storage entries for the account corresponding to `address`.\n   * @param address - Address to clear the storage of\n   */\n  async clearContractStorage(address: Address): Promise<void> {\n    let account = await this.getAccount(address)\n    if (!account) {\n      account = new Account()\n    }\n    this._storageCache?.clearContractStorage(address)\n    await this._modifyContractStorage(address, account, (storageTrie, done) => {\n      storageTrie.root(storageTrie.EMPTY_TRIE_ROOT)\n      done()\n    })\n  }\n\n  /**\n   * Checkpoints the current state of the StateManager instance.\n   * State changes that follow can then be committed by calling\n   * `commit` or `reverted` by calling rollback.\n   */\n  async checkpoint(): Promise<void> {\n    this._trie.checkpoint()\n    this._storageCache?.checkpoint()\n    this._accountCache?.checkpoint()\n    this._codeCache?.checkpoint()\n    this._checkpointCount++\n  }\n\n  /**\n   * Commits the current change-set to the instance since the\n   * last call to checkpoint.\n   */\n  async commit(): Promise<void> {\n    // setup trie checkpointing\n    await this._trie.commit()\n    this._storageCache?.commit()\n    this._accountCache?.commit()\n    this._codeCache?.commit()\n    this._checkpointCount--\n\n    if (this._checkpointCount === 0) {\n      await this.flush()\n      this.originalStorageCache.clear()\n    }\n\n    if (this.DEBUG) {\n      this._debug(`state checkpoint committed`)\n    }\n  }\n\n  /**\n   * Reverts the current change-set to the instance since the\n   * last call to checkpoint.\n   */\n  async revert(): Promise<void> {\n    // setup trie checkpointing\n    await this._trie.revert()\n    this._storageCache?.revert()\n    this._accountCache?.revert()\n    this._codeCache?.revert()\n\n    this._storageTries = {}\n\n    this._checkpointCount--\n\n    if (this._checkpointCount === 0) {\n      await this.flush()\n      this.originalStorageCache.clear()\n    }\n  }\n\n  /**\n   * Writes all cache items to the trie\n   */\n  async flush(): Promise<void> {\n    if (!this._codeCacheSettings.deactivate) {\n      const items = this._codeCache!.flush()\n      for (const item of items) {\n        const addr = Address.fromString(`0x${item[0]}`)\n\n        const code = item[1].code\n        if (code === undefined) {\n          continue\n        }\n\n        // update code in database\n        const codeHash = this.keccakFunction(code)\n        const key = this._prefixCodeHashes ? concatBytes(CODEHASH_PREFIX, codeHash) : codeHash\n        await this._getCodeDB().put(key, code)\n\n        // update code root of associated account\n        if ((await this.getAccount(addr)) === undefined) {\n          await this.putAccount(addr, new Account())\n        }\n        await this.modifyAccountFields(addr, { codeHash })\n      }\n    }\n    if (!this._storageCacheSettings.deactivate) {\n      const items = this._storageCache!.flush()\n      for (const item of items) {\n        const address = Address.fromString(`0x${item[0]}`)\n        const keyHex = item[1]\n        const keyBytes = unprefixedHexToBytes(keyHex)\n        const value = item[2]\n\n        const decoded = RLP.decode(value ?? new Uint8Array(0)) as Uint8Array\n        const account = await this.getAccount(address)\n        if (account) {\n          await this._writeContractStorage(address, account, keyBytes, decoded)\n        }\n      }\n    }\n    if (!this._accountCacheSettings.deactivate) {\n      const items = this._accountCache!.flush()\n      for (const item of items) {\n        const addressHex = item[0]\n        const addressBytes = unprefixedHexToBytes(addressHex)\n        const elem = item[1]\n        if (elem.accountRLP === undefined) {\n          const trie = this._trie\n          await trie.del(addressBytes)\n        } else {\n          const trie = this._trie\n          await trie.put(addressBytes, elem.accountRLP)\n        }\n      }\n    }\n  }\n\n  /**\n   * Get an EIP-1186 proof\n   * @param address address to get proof of\n   * @param storageSlots storage slots to get proof of\n   */\n  async getProof(address: Address, storageSlots: Uint8Array[] = []): Promise<Proof> {\n    await this.flush()\n    const account = await this.getAccount(address)\n    if (!account) {\n      // throw new Error(`getProof() can only be called for an existing account`)\n      const returnValue: Proof = {\n        address: address.toString(),\n        balance: '0x0',\n        codeHash: KECCAK256_NULL_S,\n        nonce: '0x0',\n        storageHash: KECCAK256_RLP_S,\n        accountProof: (await this._trie.createProof(address.bytes)).map((p) => bytesToHex(p)),\n        storageProof: [],\n      }\n      return returnValue\n    }\n    const accountProof: PrefixedHexString[] = (await this._trie.createProof(address.bytes)).map(\n      (p) => bytesToHex(p)\n    )\n    const storageProof: StorageProof[] = []\n    const storageTrie = this._getStorageTrie(address, account)\n\n    for (const storageKey of storageSlots) {\n      const proof = (await storageTrie.createProof(storageKey)).map((p) => bytesToHex(p))\n      const value = bytesToHex(await this.getContractStorage(address, storageKey))\n      const proofItem: StorageProof = {\n        key: bytesToHex(storageKey),\n        value: value === '0x' ? '0x0' : value, // Return '0x' values as '0x0' since this is a JSON RPC response\n        proof,\n      }\n      storageProof.push(proofItem)\n    }\n\n    const returnValue: Proof = {\n      address: address.toString(),\n      balance: bigIntToHex(account.balance),\n      codeHash: bytesToHex(account.codeHash),\n      nonce: bigIntToHex(account.nonce),\n      storageHash: bytesToHex(account.storageRoot),\n      accountProof,\n      storageProof,\n    }\n    return returnValue\n  }\n\n  /**\n   * Create a StateManager and initialize this with proof(s) gotten previously from getProof\n   * This generates a (partial) StateManager where one can retrieve all items from the proof\n   * @param proof Either a proof retrieved from `getProof`, or an array of those proofs\n   * @param safe Whether or not to verify that the roots of the proof items match the reported roots\n   * @param opts a dictionary of StateManager opts\n   * @returns A new DefaultStateManager with elements from the given proof included in its backing state trie\n   */\n  static async fromProof(\n    proof: Proof | Proof[],\n    safe: boolean = false,\n    opts: DefaultStateManagerOpts = {}\n  ): Promise<DefaultStateManager> {\n    if (Array.isArray(proof)) {\n      if (proof.length === 0) {\n        return new DefaultStateManager(opts)\n      } else {\n        const trie =\n          opts.trie ??\n          (await Trie.createFromProof(\n            proof[0].accountProof.map((e) => hexToBytes(e)),\n            { useKeyHashing: true }\n          ))\n        const sm = new DefaultStateManager({ ...opts, trie })\n        const address = Address.fromString(proof[0].address)\n        await sm.addStorageProof(proof[0].storageProof, proof[0].storageHash, address, safe)\n        for (let i = 1; i < proof.length; i++) {\n          const proofItem = proof[i]\n          await sm.addProofData(proofItem, true)\n        }\n        await sm.flush() // TODO verify if this is necessary\n        return sm\n      }\n    } else {\n      return DefaultStateManager.fromProof([proof], safe, opts)\n    }\n  }\n\n  /**\n   * Adds a storage proof to the state manager\n   * @param storageProof The storage proof\n   * @param storageHash The root hash of the storage trie\n   * @param address The address\n   * @param safe Whether or not to verify if the reported roots match the current storage root\n   */\n  private async addStorageProof(\n    storageProof: StorageProof[],\n    storageHash: string,\n    address: Address,\n    safe: boolean = false\n  ) {\n    const trie = this._getStorageTrie(address)\n    trie.root(hexToBytes(storageHash))\n    for (let i = 0; i < storageProof.length; i++) {\n      await trie.updateFromProof(\n        storageProof[i].proof.map((e) => hexToBytes(e)),\n        safe\n      )\n    }\n  }\n\n  /**\n   * Add proof(s) into an already existing trie\n   * @param proof The proof(s) retrieved from `getProof`\n   * @param verifyRoot verify that all proof root nodes match statemanager's stateroot - should be\n   * set to `false` when constructing a state manager where the underlying trie has proof nodes from different state roots\n   */\n  async addProofData(proof: Proof | Proof[], safe: boolean = false) {\n    if (Array.isArray(proof)) {\n      for (let i = 0; i < proof.length; i++) {\n        await this._trie.updateFromProof(\n          proof[i].accountProof.map((e) => hexToBytes(e)),\n          safe\n        )\n        await this.addStorageProof(\n          proof[i].storageProof,\n          proof[i].storageHash,\n          Address.fromString(proof[i].address),\n          safe\n        )\n      }\n    } else {\n      await this.addProofData([proof], safe)\n    }\n  }\n\n  /**\n   * Verify an EIP-1186 proof. Throws if proof is invalid, otherwise returns true.\n   * @param proof the proof to prove\n   */\n  async verifyProof(proof: Proof): Promise<boolean> {\n    const key = hexToBytes(proof.address)\n    const accountProof = proof.accountProof.map((rlpString: PrefixedHexString) =>\n      hexToBytes(rlpString)\n    )\n\n    // This returns the account if the proof is valid.\n    // Verify that it matches the reported account.\n    const value = await Trie.verifyProof(key, accountProof, {\n      useKeyHashing: true,\n    })\n\n    if (value === null) {\n      // Verify that the account is empty in the proof.\n      const emptyBytes = new Uint8Array(0)\n      const notEmptyErrorMsg = 'Invalid proof provided: account is not empty'\n      const nonce = unpadBytes(hexToBytes(proof.nonce))\n      if (!equalsBytes(nonce, emptyBytes)) {\n        throw new Error(`${notEmptyErrorMsg} (nonce is not zero)`)\n      }\n      const balance = unpadBytes(hexToBytes(proof.balance))\n      if (!equalsBytes(balance, emptyBytes)) {\n        throw new Error(`${notEmptyErrorMsg} (balance is not zero)`)\n      }\n      const storageHash = hexToBytes(proof.storageHash)\n      if (!equalsBytes(storageHash, KECCAK256_RLP)) {\n        throw new Error(`${notEmptyErrorMsg} (storageHash does not equal KECCAK256_RLP)`)\n      }\n      const codeHash = hexToBytes(proof.codeHash)\n      if (!equalsBytes(codeHash, KECCAK256_NULL)) {\n        throw new Error(`${notEmptyErrorMsg} (codeHash does not equal KECCAK256_NULL)`)\n      }\n    } else {\n      const account = Account.fromRlpSerializedAccount(value)\n      const { nonce, balance, storageRoot, codeHash } = account\n      const invalidErrorMsg = 'Invalid proof provided:'\n      if (nonce !== BigInt(proof.nonce)) {\n        throw new Error(`${invalidErrorMsg} nonce does not match`)\n      }\n      if (balance !== BigInt(proof.balance)) {\n        throw new Error(`${invalidErrorMsg} balance does not match`)\n      }\n      if (!equalsBytes(storageRoot, hexToBytes(proof.storageHash))) {\n        throw new Error(`${invalidErrorMsg} storageHash does not match`)\n      }\n      if (!equalsBytes(codeHash, hexToBytes(proof.codeHash))) {\n        throw new Error(`${invalidErrorMsg} codeHash does not match`)\n      }\n    }\n\n    for (const stProof of proof.storageProof) {\n      const storageProof = stProof.proof.map((value: PrefixedHexString) => hexToBytes(value))\n      const storageValue = setLengthLeft(hexToBytes(stProof.value), 32)\n      const storageKey = hexToBytes(stProof.key)\n      const proofValue = await Trie.verifyProof(storageKey, storageProof, {\n        useKeyHashing: true,\n      })\n      const reportedValue = setLengthLeft(\n        RLP.decode(proofValue ?? new Uint8Array(0)) as Uint8Array,\n        32\n      )\n      if (!equalsBytes(reportedValue, storageValue)) {\n        throw new Error(\n          `Reported trie value does not match storage, key: ${stProof.key}, reported: ${bytesToHex(\n            reportedValue\n          )}, actual: ${bytesToHex(storageValue)}`\n        )\n      }\n    }\n    return true\n  }\n\n  /**\n   * Gets the state-root of the Merkle-Patricia trie representation\n   * of the state of this StateManager. Will error if there are uncommitted\n   * checkpoints on the instance.\n   * @returns {Promise<Uint8Array>} - Returns the state-root of the `StateManager`\n   */\n  async getStateRoot(): Promise<Uint8Array> {\n    await this.flush()\n    return this._trie.root()\n  }\n\n  /**\n   * Sets the state of the instance to that represented\n   * by the provided `stateRoot`. Will error if there are uncommitted\n   * checkpoints on the instance or if the state root does not exist in\n   * the state trie.\n   * @param stateRoot - The state-root to reset the instance to\n   */\n  async setStateRoot(stateRoot: Uint8Array, clearCache: boolean = true): Promise<void> {\n    await this.flush()\n\n    if (!equalsBytes(stateRoot, this._trie.EMPTY_TRIE_ROOT)) {\n      const hasRoot = await this._trie.checkRoot(stateRoot)\n      if (!hasRoot) {\n        throw new Error('State trie does not contain state root')\n      }\n    }\n\n    this._trie.root(stateRoot)\n    if (this._accountCache !== undefined && clearCache) {\n      this._accountCache.clear()\n    }\n    if (this._storageCache !== undefined && clearCache) {\n      this._storageCache.clear()\n    }\n    if (this._codeCache !== undefined && clearCache) {\n      this._codeCache!.clear()\n    }\n    this._storageTries = {}\n  }\n\n  /**\n   * Dumps the RLP-encoded storage values for an `account` specified by `address`.\n   * @param address - The address of the `account` to return storage for\n   * @returns {Promise<StorageDump>} - The state of the account as an `Object` map.\n   * Keys are are the storage keys, values are the storage values as strings.\n   * Both are represented as hex strings without the `0x` prefix.\n   */\n  async dumpStorage(address: Address): Promise<StorageDump> {\n    await this.flush()\n    const account = await this.getAccount(address)\n    if (!account) {\n      throw new Error(`dumpStorage f() can only be called for an existing account`)\n    }\n    const trie = this._getStorageTrie(address, account)\n\n    return new Promise((resolve, reject) => {\n      const storage: StorageDump = {}\n      const stream = trie.createReadStream()\n\n      stream.on('data', (val: any) => {\n        storage[bytesToHex(val.key)] = bytesToHex(val.value)\n      })\n      stream.on('end', () => {\n        resolve(storage)\n      })\n      stream.on('error', (e) => {\n        reject(e)\n      })\n    })\n  }\n\n  /**\n   Dumps a limited number of RLP-encoded storage values for an account specified by `address`,\n   starting from `startKey` or greater.\n   @param address - The address of the `account` to return storage for.\n   @param startKey - The bigint representation of the smallest storage key that will be returned.\n   @param limit - The maximum number of storage values that will be returned.\n   @returns {Promise<StorageRange>} - A {@link StorageRange} object that will contain at most `limit` entries in its `storage` field.\n   The object will also contain `nextKey`, the next (hashed) storage key after the range included in `storage`.\n   */\n  async dumpStorageRange(address: Address, startKey: bigint, limit: number): Promise<StorageRange> {\n    if (!Number.isSafeInteger(limit) || limit < 0) {\n      throw new Error(`Limit is not a proper uint.`)\n    }\n\n    await this.flush()\n    const account = await this.getAccount(address)\n    if (!account) {\n      throw new Error(`Account does not exist.`)\n    }\n    const trie = this._getStorageTrie(address, account)\n\n    return new Promise((resolve, reject) => {\n      let inRange = false\n      let i = 0\n\n      /** Object conforming to {@link StorageRange.storage}. */\n      const storageMap: StorageRange['storage'] = {}\n      const stream = trie.createReadStream()\n\n      stream.on('data', (val: any) => {\n        if (!inRange) {\n          // Check if the key is already in the correct range.\n          if (bytesToBigInt(val.key) >= startKey) {\n            inRange = true\n          } else {\n            return\n          }\n        }\n\n        if (i < limit) {\n          storageMap[bytesToHex(val.key)] = { key: null, value: bytesToHex(val.value) }\n          i++\n        } else if (i === limit) {\n          resolve({\n            storage: storageMap,\n            nextKey: bytesToHex(val.key),\n          })\n        }\n      })\n\n      stream.on('end', () => {\n        resolve({\n          storage: storageMap,\n          nextKey: null,\n        })\n      })\n      stream.on('error', (e) => reject(e))\n    })\n  }\n\n  /**\n   * Initializes the provided genesis state into the state trie.\n   * Will error if there are uncommitted checkpoints on the instance.\n   * @param initState address -> balance | [balance, code, storage]\n   */\n  async generateCanonicalGenesis(initState: any): Promise<void> {\n    if (this._checkpointCount !== 0) {\n      throw new Error('Cannot create genesis state with uncommitted checkpoints')\n    }\n    if (this.DEBUG) {\n      this._debug(`Save genesis state into the state trie`)\n    }\n    const addresses = Object.keys(initState)\n    for (const address of addresses) {\n      const addr = Address.fromString(address)\n      const state = initState[address]\n      if (!Array.isArray(state)) {\n        // Prior format: address -> balance\n        const account = Account.fromAccountData({ balance: state })\n        await this.putAccount(addr, account)\n      } else {\n        // New format: address -> [balance, code, storage]\n        const [balance, code, storage, nonce] = state\n        const account = Account.fromAccountData({ balance, nonce })\n        await this.putAccount(addr, account)\n        if (code !== undefined) {\n          await this.putContractCode(addr, toBytes(code))\n        }\n        if (storage !== undefined) {\n          for (const [key, value] of storage) {\n            await this.putContractStorage(addr, toBytes(key), toBytes(value))\n          }\n        }\n      }\n    }\n    await this.flush()\n  }\n\n  /**\n   * Checks whether there is a state corresponding to a stateRoot\n   */\n  async hasStateRoot(root: Uint8Array): Promise<boolean> {\n    return this._trie.checkRoot(root)\n  }\n\n  /**\n   * Copies the current instance of the `StateManager`\n   * at the last fully committed point, i.e. as if all current\n   * checkpoints were reverted.\n   *\n   * Caches are downleveled (so: adopted for short-term usage)\n   * by default.\n   *\n   * This means in particular:\n   * 1. For caches instantiated as an LRU cache type\n   * the copy() method will instantiate with an ORDERED_MAP cache\n   * instead, since copied instantances are mostly used in\n   * short-term usage contexts and LRU cache instantation would create\n   * a large overhead here.\n   * 2. The underlying trie object is initialized with 0 cache size\n   *\n   * Both adoptions can be deactivated by setting `downlevelCaches` to\n   * `false`.\n   *\n   * Cache values are generally not copied along regardless of the\n   * `downlevelCaches` setting.\n   */\n  shallowCopy(downlevelCaches = true): DefaultStateManager {\n    const common = this.common.copy()\n    common.setHardfork(this.common.hardfork())\n\n    const cacheSize = !downlevelCaches ? this._trie['_opts']['cacheSize'] : 0\n    const trie = this._trie.shallowCopy(false, { cacheSize })\n    const prefixCodeHashes = this._prefixCodeHashes\n    const prefixStorageTrieKeys = this._prefixStorageTrieKeys\n    let accountCacheOpts = { ...this._accountCacheSettings }\n    if (downlevelCaches && !this._accountCacheSettings.deactivate) {\n      accountCacheOpts = { ...accountCacheOpts, type: CacheType.ORDERED_MAP }\n    }\n    let storageCacheOpts = { ...this._storageCacheSettings }\n    if (downlevelCaches && !this._storageCacheSettings.deactivate) {\n      storageCacheOpts = { ...storageCacheOpts, type: CacheType.ORDERED_MAP }\n    }\n    let codeCacheOpts = { ...this._codeCacheSettings }\n    if (!this._codeCacheSettings.deactivate) {\n      codeCacheOpts = { ...codeCacheOpts, type: CacheType.ORDERED_MAP }\n    }\n\n    return new DefaultStateManager({\n      common,\n      trie,\n      prefixStorageTrieKeys,\n      prefixCodeHashes,\n      accountCacheOpts,\n      storageCacheOpts,\n      codeCacheOpts,\n    })\n  }\n\n  /**\n   * Clears all underlying caches\n   */\n  clearCaches() {\n    this._accountCache?.clear()\n    this._storageCache?.clear()\n    this._codeCache?.clear()\n  }\n\n  /**\n   * Returns the applied key for a given address\n   * Used for saving preimages\n   * @param address - The address to return the applied key\n   * @returns {Uint8Array} - The applied key (e.g. hashed address)\n   */\n  getAppliedKey(address: Uint8Array): Uint8Array {\n    return this._trie['appliedKey'](address)\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  Account,\n  KECCAK256_NULL,\n  KECCAK256_NULL_S,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToHex,\n  bytesToInt32,\n  hexToBytes,\n  padToEven,\n  setLengthRight,\n  short,\n  toBytes,\n} from '@ethereumjs/util'\nimport { getKey, getStem, verifyUpdate } from '@ethereumjs/verkle'\nimport debugDefault from 'debug'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\nimport { equalsBytes } from 'ethereum-cryptography/utils'\n\nimport {\n  AccessWitness,\n  AccessedStateType,\n  BALANCE_LEAF_KEY,\n  CODE_KECCAK_LEAF_KEY,\n  CODE_SIZE_LEAF_KEY,\n  NONCE_LEAF_KEY,\n  VERSION_LEAF_KEY,\n  decodeValue,\n  getTreeIndexesForStorageSlot,\n  getTreeIndicesForCodeChunk,\n} from './accessWitness.js'\nimport { AccountCache, CacheType, CodeCache, StorageCache } from './cache/index.js'\nimport { OriginalStorageCache } from './cache/originalStorageCache.js'\n\nimport type { AccessedStateWithAddress } from './accessWitness.js'\nimport type { DefaultStateManager } from './stateManager.js'\nimport type { VerkleExecutionWitness } from '@ethereumjs/block'\nimport type {\n  AccountFields,\n  Common,\n  EVMStateManagerInterface,\n  Proof,\n  StorageDump,\n  StorageRange,\n} from '@ethereumjs/common'\nimport type { Address, PrefixedHexString } from '@ethereumjs/util'\n\nconst { debug: createDebugLogger } = debugDefault\n\nconst debug = createDebugLogger('statemanager:verkle')\n\nexport interface VerkleState {\n  [key: PrefixedHexString]: PrefixedHexString | null\n}\n\nexport interface EncodedVerkleProof {\n  [key: PrefixedHexString]: PrefixedHexString\n}\n\ntype CacheOptions = {\n  /**\n   * Allows for cache deactivation\n   *\n   * Depending on the use case and underlying datastore (and eventual concurrent cache\n   * mechanisms there), usage with or without cache can be faster\n   *\n   * Default: false\n   */\n  deactivate?: boolean\n\n  /**\n   * Cache type to use.\n   *\n   * Available options:\n   *\n   * ORDERED_MAP: Cache with no fixed upper bound and dynamic allocation,\n   * use for dynamic setups like testing or similar.\n   *\n   * LRU: LRU cache with pre-allocation of memory and a fixed size.\n   * Use for larger and more persistent caches.\n   */\n  type?: CacheType\n\n  /**\n   * Size of the cache (only for LRU cache)\n   *\n   * Default: 100000 (account cache) / 20000 (storage cache)\n   *\n   * Note: the cache/trie interplay mechanism is designed in a way that\n   * the theoretical number of max modified accounts between two flush operations\n   * should be smaller than the cache size, otherwise the cache will \"forget\" the\n   * old modifications resulting in an incomplete set of trie-flushed accounts.\n   */\n  size?: number\n}\n\ntype CacheSettings = {\n  deactivate: boolean\n  type: CacheType\n  size: number\n}\n\n/**\n * Options dictionary.\n */\nexport interface StatelessVerkleStateManagerOpts {\n  /**\n   * The common to use\n   */\n  common?: Common\n  accountCacheOpts?: CacheOptions\n  storageCacheOpts?: CacheOptions\n  codeCacheOpts?: CacheOptions\n  accesses?: AccessWitness\n}\n\nconst PUSH_OFFSET = 95\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst PUSH1 = PUSH_OFFSET + 1\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst PUSH32 = PUSH_OFFSET + 32\n\nconst ZEROVALUE = '0x0000000000000000000000000000000000000000000000000000000000000000'\n\n/**\n * Stateless Verkle StateManager implementation for the VM.\n *\n * Experimental.\n *\n * This State Manager enables stateless block execution by building a\n * temporary (1-block) state from the verkle block witness.\n * The Stateless Verkle State Manager then uses that populated state\n * to fetch data requested by the the VM.\n *\n */\nexport class StatelessVerkleStateManager implements EVMStateManagerInterface {\n  _accountCache?: AccountCache\n  _storageCache?: StorageCache\n  _codeCache?: CodeCache\n\n  originalStorageCache: OriginalStorageCache\n\n  protected readonly _accountCacheSettings: CacheSettings\n  protected readonly _storageCacheSettings: CacheSettings\n  protected readonly _codeCacheSettings: CacheSettings\n\n  /**\n   * StateManager is run in DEBUG mode (default: false)\n   * Taken from DEBUG environment variable\n   *\n   * Safeguards on debug() calls are added for\n   * performance reasons to avoid string literal evaluation\n   * @hidden\n   */\n  protected readonly DEBUG: boolean = false\n\n  private _executionWitness?: VerkleExecutionWitness\n\n  private _proof: Uint8Array | undefined\n\n  // State along execution (should update)\n  private _state: VerkleState = {}\n\n  // Post-state provided from the executionWitness.\n  // Should not update. Used for comparing our computed post-state with the canonical one.\n  private _postState: VerkleState = {}\n\n  // Checkpointing\n  private _checkpoints: VerkleState[] = []\n  accessWitness?: AccessWitness\n\n  private keccakFunction: Function\n\n  /**\n   * Instantiate the StateManager interface.\n   */\n  constructor(opts: StatelessVerkleStateManagerOpts = {}) {\n    this.originalStorageCache = new OriginalStorageCache(this.getContractStorage.bind(this))\n\n    this._accountCacheSettings = {\n      deactivate: opts.accountCacheOpts?.deactivate ?? false,\n      type: opts.accountCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.accountCacheOpts?.size ?? 100000,\n    }\n\n    if (!this._accountCacheSettings.deactivate) {\n      this._accountCache = new AccountCache({\n        size: this._accountCacheSettings.size,\n        type: this._accountCacheSettings.type,\n      })\n    }\n\n    this._storageCacheSettings = {\n      deactivate: opts.storageCacheOpts?.deactivate ?? false,\n      type: opts.storageCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.storageCacheOpts?.size ?? 20000,\n    }\n\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache = new StorageCache({\n        size: this._storageCacheSettings.size,\n        type: this._storageCacheSettings.type,\n      })\n    }\n\n    this._codeCacheSettings = {\n      deactivate:\n        (opts.codeCacheOpts?.deactivate === true || opts.codeCacheOpts?.size === 0) ?? false,\n      type: opts.codeCacheOpts?.type ?? CacheType.ORDERED_MAP,\n      size: opts.codeCacheOpts?.size ?? 20000,\n    }\n\n    if (!this._codeCacheSettings.deactivate) {\n      this._codeCache = new CodeCache({\n        size: this._codeCacheSettings.size,\n        type: this._codeCacheSettings.type,\n      })\n    }\n\n    this.keccakFunction = opts.common?.customCrypto.keccak256 ?? keccak256\n\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n\n    /*\n     * For a custom StateManager implementation adopt these\n     * callbacks passed to the `Cache` instantiated to perform\n     * the `get`, `put` and `delete` operations with the\n     * desired backend.\n     */\n    // const getCb: get = async (address) => {\n    //   return undefined\n    // }\n    // const putCb: put = async (keyBuf, accountRlp) => {}\n    // const deleteCb = async (keyBuf: Uint8Array) => {}\n    // this._cache = new Cache({ get, putCb, deleteCb })\n  }\n\n  async getTransitionStateRoot(_: DefaultStateManager, __: Uint8Array): Promise<Uint8Array> {\n    throw Error('not implemented')\n  }\n\n  public initVerkleExecutionWitness(\n    executionWitness?: VerkleExecutionWitness | null,\n    accessWitness?: AccessWitness\n  ) {\n    if (executionWitness === null || executionWitness === undefined) {\n      throw Error(`Invalid executionWitness=${executionWitness} for initVerkleExecutionWitness`)\n    }\n\n    this._executionWitness = executionWitness\n    this.accessWitness = accessWitness ?? new AccessWitness()\n\n    this._proof = executionWitness.verkleProof as unknown as Uint8Array\n\n    // Populate the pre-state and post-state from the executionWitness\n    const preStateRaw = executionWitness.stateDiff.flatMap(({ stem, suffixDiffs }) => {\n      const suffixDiffPairs = suffixDiffs.map(({ currentValue, suffix }) => {\n        const key = `${stem}${padToEven(Number(suffix).toString(16))}`\n        return {\n          [key]: currentValue,\n        }\n      })\n\n      return suffixDiffPairs\n    })\n\n    const preState = preStateRaw.reduce((prevValue, currentValue) => {\n      const acc = { ...prevValue, ...currentValue }\n      return acc\n    }, {})\n\n    this._state = preState\n\n    const postStateRaw = executionWitness.stateDiff.flatMap(({ stem, suffixDiffs }) => {\n      const suffixDiffPairs = suffixDiffs.map(({ newValue, suffix }) => {\n        const key = `${stem}${padToEven(Number(suffix).toString(16))}`\n        // A postState value of null means there was no change from the preState.\n        // In this implementation, we therefore replace null with the preState.\n        const value = newValue ?? this._state[key]\n\n        return {\n          [key]: value,\n        }\n      })\n\n      return suffixDiffPairs\n    })\n\n    const postState = postStateRaw.reduce((prevValue, currentValue) => {\n      const acc = { ...prevValue, ...currentValue }\n      return acc\n    }, {})\n\n    this._postState = postState\n    debug('initVerkleExecutionWitness preState', this._state)\n    debug('initVerkleExecutionWitness postState', this._postState)\n  }\n\n  getTreeKeyForVersion(stem: Uint8Array) {\n    return getKey(stem, VERSION_LEAF_KEY)\n  }\n\n  getTreeKeyForBalance(stem: Uint8Array) {\n    return getKey(stem, BALANCE_LEAF_KEY)\n  }\n\n  getTreeKeyForNonce(stem: Uint8Array) {\n    return getKey(stem, NONCE_LEAF_KEY)\n  }\n\n  getTreeKeyForCodeHash(stem: Uint8Array) {\n    return getKey(stem, CODE_KECCAK_LEAF_KEY)\n  }\n\n  getTreeKeyForCodeSize(stem: Uint8Array) {\n    return getKey(stem, CODE_SIZE_LEAF_KEY)\n  }\n\n  getTreeKeyForCodeChunk(address: Address, chunkId: number) {\n    const { treeIndex, subIndex } = getTreeIndicesForCodeChunk(chunkId)\n    return getKey(getStem(address, treeIndex), toBytes(subIndex))\n  }\n\n  chunkifyCode(code: Uint8Array) {\n    // Pad code to multiple of 31 bytes\n    if (code.length % 31 !== 0) {\n      const paddingLength = 31 - (code.length % 31)\n      code = setLengthRight(code, code.length + paddingLength)\n    }\n\n    throw new Error('Not implemented')\n  }\n\n  getTreeKeyForStorageSlot(address: Address, storageKey: bigint) {\n    const { treeIndex, subIndex } = getTreeIndexesForStorageSlot(storageKey)\n\n    return getKey(getStem(address, treeIndex), toBytes(subIndex))\n  }\n\n  checkChunkWitnessPresent(address: Address, codeOffset: number) {\n    const chunkId = codeOffset / 31\n    const chunkKey = bytesToHex(this.getTreeKeyForCodeChunk(address, chunkId))\n    return this._state[chunkKey] !== undefined\n  }\n\n  /**\n   * Copies the current instance of the `StateManager`\n   * at the last fully committed point, i.e. as if all current\n   * checkpoints were reverted.\n   */\n  shallowCopy(): EVMStateManagerInterface {\n    const stateManager = new StatelessVerkleStateManager()\n    stateManager.initVerkleExecutionWitness(this._executionWitness!)\n    return stateManager\n  }\n\n  /**\n   * Adds `value` to the state trie as code, and sets `codeHash` on the account\n   * corresponding to `address` to reference this.\n   * @param address - Address of the `account` to add the `code` for\n   * @param value - The value of the `code`\n   */\n  async putContractCode(address: Address, value: Uint8Array): Promise<void> {\n    if (this.DEBUG) {\n      debug(`putContractCode address=${address.toString()} value=${short(value)}`)\n    }\n\n    this._codeCache?.put(address, value)\n    const codeHash = keccak256(value)\n    if (KECCAK256_NULL === codeHash) {\n      // If the code hash is the null hash, no code has to be stored\n      return\n    }\n\n    if ((await this.getAccount(address)) === undefined) {\n      await this.putAccount(address, new Account())\n    }\n    await this.modifyAccountFields(address, { codeHash })\n  }\n\n  /**\n   * Gets the code corresponding to the provided `address`.\n   * @param address - Address to get the `code` for\n   * @returns {Promise<Uint8Array>} -  Resolves with the code corresponding to the provided address.\n   * Returns an empty `Uint8Array` if the account has no associated code.\n   */\n  async getContractCode(address: Address): Promise<Uint8Array> {\n    if (this.DEBUG) {\n      debug(`getContractCode address=${address.toString()}`)\n    }\n\n    if (!this._codeCacheSettings.deactivate) {\n      const elem = this._codeCache?.get(address)\n      if (elem !== undefined) {\n        return elem.code ?? new Uint8Array(0)\n      }\n    }\n\n    const account = await this.getAccount(address)\n    if (!account) {\n      return new Uint8Array(0)\n    }\n    if (!account.isContract()) {\n      return new Uint8Array(0)\n    }\n\n    // Get the contract code size\n    const codeSizeKey = this.getTreeKeyForCodeSize(getStem(address, 0))\n    const codeSizeLE = hexToBytes(this._state[bytesToHex(codeSizeKey)] ?? '0x')\n    const codeSize = bytesToInt32(codeSizeLE, true)\n    // allocate the code and copy onto it from the available witness chunks\n    const accessedCode = new Uint8Array(codeSize)\n\n    const chunks = Math.floor(bytesToInt32(codeSizeLE, true) / 31)\n    for (let chunkId = 0; chunkId <= chunks; chunkId++) {\n      const chunkKey = bytesToHex(this.getTreeKeyForCodeChunk(address, chunkId))\n      const codeChunk = this._state[chunkKey]\n      if (codeChunk === undefined) {\n        throw Error(`Invalid access to a missing code chunk with chunkKey=${chunkKey}`)\n      }\n      if (codeChunk === null) {\n        throw Error(`Invalid access to a non existent code chunk with chunkKey=${chunkKey}`)\n      }\n\n      const codeOffset = chunkId * 31\n      // if code chunk was accessed as per the provided witnesses copy it over\n      if (codeChunk !== undefined) {\n        // actual code starts from index 1 in chunk, 0th index is if there are any push data bytes\n        const actualChunk = hexToBytes(codeChunk).slice(1)\n        accessedCode.set(actualChunk, codeOffset)\n      } else {\n        // else fill this unaccessed segment with invalid opcode since the evm execution shouldn't\n        // end up here\n        accessedCode.fill(0xfe, codeOffset, 31)\n      }\n    }\n\n    // Return accessedCode where only accessed code has been copied\n    return accessedCode\n  }\n\n  /**\n   * Gets the storage value associated with the provided `address` and `key`. This method returns\n   * the shortest representation of the stored value.\n   * @param address -  Address of the account to get the storage for\n   * @param key - Key in the account's storage to get the value for. Must be 32 bytes long.\n   * @returns {Promise<Uint8Array>} - The storage value for the account\n   * corresponding to the provided address at the provided key.\n   * If this does not exist an empty `Uint8Array` is returned.\n   */\n  async getContractStorage(address: Address, key: Uint8Array): Promise<Uint8Array> {\n    if (!this._storageCacheSettings.deactivate) {\n      const value = this._storageCache!.get(address, key)\n      if (value !== undefined) {\n        return value\n      }\n    }\n\n    const storageKey = this.getTreeKeyForStorageSlot(address, BigInt(bytesToHex(key)))\n    const storageValue = toBytes(this._state[bytesToHex(storageKey)])\n\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache?.put(address, key, storageValue ?? hexToBytes('0x80'))\n    }\n\n    return storageValue\n  }\n\n  /**\n   * Adds value to the state for the `account`\n   * corresponding to `address` at the provided `key`.\n   * @param address -  Address to set a storage value for\n   * @param key - Key to set the value at. Must be 32 bytes long.\n   * @param value - Value to set at `key` for account corresponding to `address`. Cannot be more than 32 bytes. Leading zeros are stripped. If it is a empty or filled with zeros, deletes the value.\n   */\n  async putContractStorage(address: Address, key: Uint8Array, value: Uint8Array): Promise<void> {\n    if (!this._storageCacheSettings.deactivate) {\n      const encodedValue = RLP.encode(value)\n      this._storageCache!.put(address, key, encodedValue)\n    } else {\n      // TODO: Consider refactoring this in a writeContractStorage function? Like in stateManager.ts\n      const storageKey = this.getTreeKeyForStorageSlot(address, BigInt(bytesToHex(key)))\n      this._state[bytesToHex(storageKey)] = bytesToHex(setLengthRight(value, 32))\n    }\n  }\n\n  /**\n   * Clears all storage entries for the account corresponding to `address`.\n   * @param address -  Address to clear the storage of\n   */\n  async clearContractStorage(address: Address): Promise<void> {\n    const stem = getStem(address, 0)\n    const codeHashKey = this.getTreeKeyForCodeHash(stem)\n    this._storageCache?.clearContractStorage(address)\n    // Update codeHash to `c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n    this._state[bytesToHex(codeHashKey)] = KECCAK256_NULL_S\n\n    // TODO: Clear all storage slots (how?)\n  }\n\n  async getAccount(address: Address): Promise<Account | undefined> {\n    if (!this._accountCacheSettings.deactivate) {\n      const elem = this._accountCache!.get(address)\n      if (elem !== undefined) {\n        return elem.accountRLP !== undefined\n          ? Account.fromRlpSerializedAccount(elem.accountRLP)\n          : undefined\n      }\n    }\n\n    const stem = getStem(address, 0)\n    const versionKey = this.getTreeKeyForVersion(stem)\n    const versionChunk = this._state[bytesToHex(versionKey)]\n    if (versionChunk === undefined) {\n      throw Error(\n        `Missing execution witness for address=${address} versionKey=${bytesToHex(versionKey)}`\n      )\n    }\n\n    // if the versionChunk is null it means the account doesn't exist in pre state\n    if (versionChunk === null) {\n      return undefined\n    }\n\n    const balanceKey = this.getTreeKeyForBalance(stem)\n    const nonceKey = this.getTreeKeyForNonce(stem)\n    const codeHashKey = this.getTreeKeyForCodeHash(stem)\n\n    const balanceRaw = this._state[bytesToHex(balanceKey)]\n    const nonceRaw = this._state[bytesToHex(nonceKey)]\n    const codeHashRaw = this._state[bytesToHex(codeHashKey)]\n\n    const account = Account.fromAccountData({\n      balance:\n        typeof balanceRaw === 'string' ? bytesToBigInt(hexToBytes(balanceRaw), true) : undefined,\n      nonce: typeof nonceRaw === 'string' ? bytesToBigInt(hexToBytes(nonceRaw), true) : undefined,\n      codeHash: codeHashRaw?.length === 32 ? codeHashRaw : KECCAK256_NULL_S,\n    })\n\n    if (this.DEBUG) {\n      debug(\n        `getAccount address=${address.toString()} stem=${short(stem)} balance=${\n          account.balance\n        } nonce=${account.nonce} codeHash=${short(account.codeHash)} storageHash=${short(\n          account.storageRoot\n        )}`\n      )\n    }\n\n    if (!this._accountCacheSettings.deactivate) {\n      this._accountCache?.put(address, account)\n    }\n\n    return account\n  }\n\n  async putAccount(address: Address, account: Account): Promise<void> {\n    if (this.DEBUG) {\n      debug(\n        `putAccount address=${address.toString()} balance=${account.balance} nonce=${\n          account.nonce\n        } codeHash=${short(account.codeHash)} storageHash=${short(account.storageRoot)}`\n      )\n    }\n\n    if (this._accountCacheSettings.deactivate) {\n      const stem = getStem(address, 0)\n      const balanceKey = this.getTreeKeyForBalance(stem)\n      const nonceKey = this.getTreeKeyForNonce(stem)\n      const codeHashKey = this.getTreeKeyForCodeHash(stem)\n\n      const balanceBuf = setLengthRight(bigIntToBytes(account.balance, true), 32)\n      const nonceBuf = setLengthRight(bigIntToBytes(account.nonce, true), 32)\n\n      this._state[bytesToHex(balanceKey)] = bytesToHex(balanceBuf)\n      this._state[bytesToHex(nonceKey)] = bytesToHex(nonceBuf)\n      this._state[bytesToHex(codeHashKey)] = bytesToHex(account.codeHash)\n    } else {\n      if (account !== undefined) {\n        this._accountCache!.put(address, account)\n      } else {\n        this._accountCache!.del(address)\n      }\n    }\n  }\n\n  /**\n   * Deletes an account from state under the provided `address`.\n   * @param address - Address of the account which should be deleted\n   */\n  async deleteAccount(address: Address) {\n    if (this.DEBUG) {\n      debug(`Delete account ${address}`)\n    }\n\n    this._codeCache?.del(address)\n    this._accountCache!.del(address)\n\n    if (!this._storageCacheSettings.deactivate) {\n      this._storageCache?.clearContractStorage(address)\n    }\n  }\n\n  async modifyAccountFields(address: Address, accountFields: AccountFields): Promise<void> {\n    let account = await this.getAccount(address)\n    if (!account) {\n      account = new Account()\n    }\n\n    account.nonce = accountFields.nonce ?? account.nonce\n    account.balance = accountFields.balance ?? account.balance\n    account.storageRoot = accountFields.storageRoot ?? account.storageRoot\n    account.codeHash = accountFields.codeHash ?? account.codeHash\n    await this.putAccount(address, account)\n  }\n\n  getProof(_: Address, __: Uint8Array[] = []): Promise<Proof> {\n    throw new Error('Not implemented yet')\n  }\n\n  async verifyProof(parentVerkleRoot: Uint8Array): Promise<boolean> {\n    // Implementation: https://github.com/crate-crypto/rust-verkle-wasm/blob/master/src/lib.rs#L45\n    // The root is the root of the current (un-updated) trie\n    // The proof is proof of membership of all of the accessed values\n    // keys_values is a map from the key of the accessed value to a tuple\n    // the tuple contains the old value and the updated value\n    //\n    // This function returns the new root when all of the updated values are applied\n\n    const updatedStateRoot: Uint8Array = verifyUpdate(\n      parentVerkleRoot,\n      this._proof!, // TODO: Convert this into a Uint8Array ingestible by the method\n      new Map() // TODO: Generate the keys_values map from the old to the updated value\n    )\n\n    // TODO: Not sure if this should return the updated state Root (current block) or the un-updated one (parent block)\n    const verkleRoot = await this.getStateRoot()\n\n    // Verify that updatedStateRoot matches the state root of the block\n    return equalsBytes(updatedStateRoot, verkleRoot)\n  }\n\n  // Verifies that the witness post-state matches the computed post-state\n  verifyPostState(): boolean {\n    // track what all chunks were accessed so as to compare in the end if any chunks were missed\n    // in access while comparising against the provided poststate in the execution witness\n    const accessedChunks = new Map<string, boolean>()\n    // switch to false if postVerify fails\n    let postVerified = true\n\n    for (const accessedState of this.accessWitness!.accesses()) {\n      const { address, type } = accessedState\n      let extraMeta = ''\n      if (accessedState.type === AccessedStateType.Code) {\n        extraMeta = `codeOffset=${accessedState.codeOffset}`\n      } else if (accessedState.type === AccessedStateType.Storage) {\n        extraMeta = `slot=${accessedState.slot}`\n      }\n\n      const { chunkKey } = accessedState\n      accessedChunks.set(chunkKey, true)\n      let computedValue = this.getComputedValue(accessedState)\n      let canonicalValue: string | null | undefined = this._postState[chunkKey]\n\n      if (canonicalValue === undefined) {\n        debug(\n          `Block accesses missing in canonical address=${address} type=${type} ${extraMeta} chunkKey=${chunkKey}`\n        )\n        postVerified = false\n        continue\n      }\n\n      // if the access type is code, then we can't match the first byte because since the computed value\n      // doesn't has the first byte for push data since previous chunk code itself might not be available\n      if (accessedState.type === AccessedStateType.Code) {\n        computedValue = computedValue !== null ? `0x${computedValue.slice(4)}` : null\n        canonicalValue = canonicalValue !== null ? `0x${canonicalValue.slice(4)}` : null\n      }\n\n      if (computedValue !== canonicalValue) {\n        const decodedComputedValue = decodeValue(accessedState.type, computedValue)\n        const decodedCanonicalValue = decodeValue(accessedState.type, canonicalValue)\n\n        const displayComputedValue =\n          computedValue === decodedComputedValue\n            ? computedValue\n            : `${computedValue} (${decodedComputedValue})`\n        const displayCanonicalValue =\n          canonicalValue === decodedCanonicalValue\n            ? canonicalValue\n            : `${canonicalValue} (${decodedCanonicalValue})`\n\n        debug(\n          `Block accesses mismatch address=${address} type=${type} ${extraMeta} chunkKey=${chunkKey}`\n        )\n        debug(`expected=${displayCanonicalValue}`)\n        debug(`computed=${displayComputedValue}`)\n        postVerified = false\n      }\n    }\n\n    for (const canChunkKey of Object.keys(this._postState)) {\n      if (accessedChunks.get(canChunkKey) === undefined) {\n        debug(`Missing chunk access for canChunkKey=${canChunkKey}`)\n        postVerified = false\n      }\n    }\n\n    debug(`verifyPostState=${postVerified}`)\n    return postVerified\n  }\n\n  getComputedValue(accessedState: AccessedStateWithAddress): PrefixedHexString | null {\n    const { address, type } = accessedState\n    switch (type) {\n      case AccessedStateType.Version: {\n        const encodedAccount = this._accountCache?.get(address)?.accountRLP\n        if (encodedAccount === undefined) {\n          return null\n        }\n        // Version is always 0\n        // TODO: Update this when versioning is added to accounts\n        return ZEROVALUE\n      }\n      case AccessedStateType.Balance: {\n        const encodedAccount = this._accountCache?.get(address)?.accountRLP\n        if (encodedAccount === undefined) {\n          return null\n        }\n\n        const balanceBigint = Account.fromRlpSerializedAccount(encodedAccount).balance\n        return bytesToHex(setLengthRight(bigIntToBytes(balanceBigint, true), 32))\n      }\n\n      case AccessedStateType.Nonce: {\n        const encodedAccount = this._accountCache?.get(address)?.accountRLP\n        if (encodedAccount === undefined) {\n          return null\n        }\n        const nonceBigint = Account.fromRlpSerializedAccount(encodedAccount).nonce\n        return bytesToHex(setLengthRight(bigIntToBytes(nonceBigint, true), 32))\n      }\n\n      case AccessedStateType.CodeHash: {\n        const encodedAccount = this._accountCache?.get(address)?.accountRLP\n        if (encodedAccount === undefined) {\n          return null\n        }\n        return bytesToHex(Account.fromRlpSerializedAccount(encodedAccount).codeHash)\n      }\n\n      case AccessedStateType.CodeSize: {\n        const codeSize = this._codeCache?.get(address)?.code?.length\n        if (codeSize === undefined) {\n          // it could be an EOA lets check for that\n          const encodedAccount = this._accountCache?.get(address)?.accountRLP\n          if (encodedAccount === undefined) {\n            return null\n          }\n\n          const account = Account.fromRlpSerializedAccount(encodedAccount)\n          if (account.isContract()) {\n            throw Error(`Code cache not found for address=${address.toString()}`)\n          } else {\n            return null\n          }\n        }\n\n        return bytesToHex(setLengthRight(bigIntToBytes(BigInt(codeSize), true), 32))\n      }\n\n      case AccessedStateType.Code: {\n        const { codeOffset } = accessedState\n        const code = this._codeCache?.get(address)?.code\n        if (code === undefined) {\n          return null\n        }\n\n        // we can only compare the actual code because to compare the first byte would\n        // be very tricky and impossible in certain scenarios like when the previous code chunk\n        // was not accessed and hence not even provided in the witness\n        const chunkSize = 31\n        return bytesToHex(code.slice(codeOffset, codeOffset + chunkSize))\n      }\n\n      case AccessedStateType.Storage: {\n        const { slot } = accessedState\n        const storage = this._storageCache?.get(address, bigIntToBytes(slot))\n        if (storage === undefined) {\n          return null\n        }\n        return bytesToHex(storage)\n      }\n    }\n  }\n\n  /**\n   * Checkpoints the current state of the StateManager instance.\n   * State changes that follow can then be committed by calling\n   * `commit` or `reverted` by calling rollback.\n   */\n  async checkpoint(): Promise<void> {\n    this._checkpoints.push(this._state)\n    this._accountCache?.checkpoint()\n    this._storageCache?.checkpoint()\n    this._codeCache?.checkpoint()\n  }\n\n  /**\n   * Commits the current change-set to the instance since the\n   * last call to checkpoint.\n   */\n  async commit(): Promise<void> {\n    this._checkpoints.pop()\n    this._accountCache!.commit()\n    this._storageCache?.commit()\n    this._codeCache?.commit()\n  }\n\n  // TODO\n  async hasStateRoot(_: Uint8Array): Promise<boolean> {\n    return true\n  }\n\n  /**\n   * Reverts the current change-set to the instance since the\n   * last call to checkpoint.\n   */\n  async revert(): Promise<void> {\n    // setup trie checkpointing\n    this._checkpoints.pop()\n    this._accountCache?.revert()\n    this._storageCache?.revert()\n    this._codeCache?.revert()\n  }\n\n  /**\n   * Writes all cache items to the trie\n   */\n  async flush(): Promise<void> {}\n\n  /**\n   * Gets the verkle root.\n   * NOTE: this needs some examination in the code where this is needed\n   * and if we have the verkle root present\n   * @returns {Promise<Uint8Array>} - Returns the verkle root of the `StateManager`\n   */\n  async getStateRoot(): Promise<Uint8Array> {\n    return new Uint8Array(0)\n  }\n\n  /**\n   * TODO: needed?\n   * Maybe in this context: reset to original pre state suffice\n   * @param stateRoot - The verkle root to reset the instance to\n   */\n  async setStateRoot(_: Uint8Array): Promise<void> {}\n\n  /**\n   * Dumps the RLP-encoded storage values for an `account` specified by `address`.\n   * @param address - The address of the `account` to return storage for\n   * @returns {Promise<StorageDump>} - The state of the account as an `Object` map.\n   * Keys are are the storage keys, values are the storage values as strings.\n   * Both are represented as hex strings without the `0x` prefix.\n   */\n  async dumpStorage(_: Address): Promise<StorageDump> {\n    throw Error('not implemented')\n  }\n\n  dumpStorageRange(_: Address, __: bigint, ___: number): Promise<StorageRange> {\n    throw Error('not implemented')\n  }\n\n  /**\n   * Clears all underlying caches\n   */\n  clearCaches() {\n    this._accountCache?.clear()\n    this._codeCache?.clear()\n    this._storageCache?.clear()\n  }\n\n  generateCanonicalGenesis(_initState: any): Promise<void> {\n    return Promise.resolve()\n  }\n\n  getAppliedKey(_: Uint8Array): Uint8Array {\n    throw Error('not implemented')\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","import { KeyEncoding, ValueEncoding, bytesToHex, hexToBytes } from '@ethereumjs/util'\nimport { LRUCache } from 'lru-cache'\n\nimport type { Checkpoint, CheckpointDBOpts } from '../types.js'\nimport type { BatchDBOp, DB, DelBatch, PutBatch } from '@ethereumjs/util'\n\n/**\n * DB is a thin wrapper around the underlying levelup db,\n * which validates inputs and sets encoding type.\n */\nexport class CheckpointDB implements DB {\n  public checkpoints: Checkpoint[]\n  public db: DB<Uint8Array, Uint8Array>\n  public readonly cacheSize: number\n\n  // Starting with lru-cache v8 undefined and null are not allowed any more\n  // as cache values. At the same time our design works well, since undefined\n  // indicates for us that we know that the value is not present in the\n  // underlying tree database as well (so it carries real value).\n  //\n  // Solution here seems therefore adequate, other solutions would rather\n  // be some not so clean workaround.\n  //\n  // (note that @ts-ignore doesn't work since stripped on declaration (.d.ts) files)\n  protected _cache?: LRUCache<string, any>\n\n  _stats = {\n    cache: {\n      reads: 0,\n      hits: 0,\n      writes: 0,\n    },\n    db: {\n      reads: 0,\n      hits: 0,\n      writes: 0,\n    },\n  }\n\n  /**\n   * Initialize a DB instance.\n   */\n  constructor(opts: CheckpointDBOpts) {\n    this.db = opts.db\n    this.cacheSize = opts.cacheSize ?? 0\n    // Roots of tree at the moment of checkpoint\n    this.checkpoints = []\n\n    if (this.cacheSize > 0) {\n      this._cache = new LRUCache({\n        max: this.cacheSize,\n        updateAgeOnGet: true,\n      })\n    }\n  }\n\n  /**\n   * Flush the checkpoints and use the given checkpoints instead.\n   * @param {Checkpoint[]} checkpoints\n   */\n  setCheckpoints(checkpoints: Checkpoint[]) {\n    this.checkpoints = []\n\n    for (let i = 0; i < checkpoints.length; i++) {\n      this.checkpoints.push({\n        root: checkpoints[i].root,\n        keyValueMap: new Map(checkpoints[i].keyValueMap),\n      })\n    }\n  }\n\n  /**\n   * Is the DB during a checkpoint phase?\n   */\n  hasCheckpoints() {\n    return this.checkpoints.length > 0\n  }\n\n  /**\n   * Adds a new checkpoint to the stack\n   * @param root\n   */\n  checkpoint(root: Uint8Array) {\n    this.checkpoints.push({ keyValueMap: new Map<string, Uint8Array>(), root })\n  }\n\n  /**\n   * Commits the latest checkpoint\n   */\n  async commit() {\n    const { keyValueMap } = this.checkpoints.pop()!\n    if (!this.hasCheckpoints()) {\n      // This was the final checkpoint, we should now commit and flush everything to disk\n      const batchOp: BatchDBOp[] = []\n      for (const [key, value] of keyValueMap.entries()) {\n        if (value === undefined) {\n          batchOp.push({\n            type: 'del',\n            key: hexToBytes(key),\n            opts: {\n              keyEncoding: KeyEncoding.Bytes,\n            },\n          })\n        } else {\n          batchOp.push({\n            type: 'put',\n            key: hexToBytes(key),\n            value,\n            opts: { keyEncoding: KeyEncoding.Bytes, valueEncoding: ValueEncoding.Bytes },\n          })\n        }\n      }\n      await this.batch(batchOp)\n    } else {\n      // dump everything into the current (higher level) diff cache\n      const currentKeyValueMap = this.checkpoints[this.checkpoints.length - 1].keyValueMap\n      for (const [key, value] of keyValueMap.entries()) {\n        currentKeyValueMap.set(key, value)\n      }\n    }\n  }\n\n  /**\n   * Reverts the latest checkpoint\n   */\n  async revert() {\n    const { root } = this.checkpoints.pop()!\n    return root\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async get(key: Uint8Array): Promise<Uint8Array | undefined> {\n    const keyHex = bytesToHex(key)\n    if (this._cache !== undefined) {\n      const value = this._cache.get(keyHex)\n      this._stats.cache.reads += 1\n      if (value !== undefined) {\n        this._stats.cache.hits += 1\n        return value\n      }\n    }\n\n    // Lookup the value in our diff cache. We return the latest checkpointed value (which should be the value on disk)\n    for (let index = this.checkpoints.length - 1; index >= 0; index--) {\n      if (this.checkpoints[index].keyValueMap.has(keyHex)) {\n        return this.checkpoints[index].keyValueMap.get(keyHex)\n      }\n    }\n    // Nothing has been found in diff cache, look up from disk\n    const value = await this.db.get(key, {\n      keyEncoding: KeyEncoding.Bytes,\n      valueEncoding: ValueEncoding.Bytes,\n    })\n    this._stats.db.reads += 1\n    if (value !== undefined) {\n      this._stats.db.hits += 1\n    }\n    this._cache?.set(keyHex, value)\n    if (this.hasCheckpoints()) {\n      // Since we are a checkpoint, put this value in diff cache,\n      // so future `get` calls will not look the key up again from disk.\n      this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, value)\n    }\n\n    return value\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async put(key: Uint8Array, value: Uint8Array): Promise<void> {\n    const keyHex = bytesToHex(key)\n    if (this.hasCheckpoints()) {\n      // put value in diff cache\n      this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, value)\n    } else {\n      await this.db.put(key, value, {\n        keyEncoding: KeyEncoding.Bytes,\n        valueEncoding: ValueEncoding.Bytes,\n      })\n      this._stats.db.writes += 1\n\n      if (this._cache !== undefined) {\n        this._cache.set(keyHex, value)\n        this._stats.cache.writes += 1\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async del(key: Uint8Array): Promise<void> {\n    const keyHex = bytesToHex(key)\n    if (this.hasCheckpoints()) {\n      // delete the value in the current diff cache\n      this.checkpoints[this.checkpoints.length - 1].keyValueMap.set(keyHex, undefined)\n    } else {\n      // delete the value on disk\n      await this.db.del(key, {\n        keyEncoding: KeyEncoding.Bytes,\n      })\n      this._stats.db.writes += 1\n\n      if (this._cache !== undefined) {\n        this._cache.set(keyHex, undefined)\n        this._stats.cache.writes += 1\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async batch(opStack: BatchDBOp[]): Promise<void> {\n    if (this.hasCheckpoints()) {\n      for (const op of opStack) {\n        if (op.type === 'put') {\n          await this.put(op.key, op.value)\n        } else if (op.type === 'del') {\n          await this.del(op.key)\n        }\n      }\n    } else {\n      const convertedOps = opStack.map((op) => {\n        const convertedOp = {\n          key: op.key,\n          value: op.type === 'put' ? op.value : undefined,\n          type: op.type,\n          opts: op.opts,\n        }\n        if (op.type === 'put') return convertedOp as PutBatch<Uint8Array, Uint8Array>\n        else return convertedOp as DelBatch<Uint8Array>\n      })\n      await this.db.batch(convertedOps)\n    }\n  }\n\n  stats(reset = true) {\n    const stats = { ...this._stats, size: this._cache?.size ?? 0 }\n    if (reset) {\n      this._stats = {\n        cache: {\n          reads: 0,\n          hits: 0,\n          writes: 0,\n        },\n        db: {\n          reads: 0,\n          hits: 0,\n          writes: 0,\n        },\n      }\n    }\n    return stats\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shallowCopy(): CheckpointDB {\n    return new CheckpointDB({ db: this.db, cacheSize: this.cacheSize })\n  }\n\n  open() {\n    return Promise.resolve()\n  }\n}\n","export * from './checkpoint.js'\n","export * from './db/index.js'\nexport * from './node/index.js'\nexport * from './types.js'\nexport * from './util/index.js'\nexport * from './verkleTree.js'\n","import { RLP } from '@ethereumjs/rlp'\n\nimport { type VerkleNodeInterface, type VerkleNodeOptions, type VerkleNodeType } from './types.js'\n\nimport type { Point } from '../types.js'\n\nexport abstract class BaseVerkleNode<T extends VerkleNodeType> implements VerkleNodeInterface {\n  public commitment: Point\n  public depth: number\n\n  constructor(options: VerkleNodeOptions[T]) {\n    this.commitment = options.commitment\n    this.depth = options.depth\n  }\n\n  abstract commit(): Point\n\n  // Hash returns the field representation of the commitment.\n  hash(): Uint8Array {\n    throw new Error('Not implemented')\n  }\n\n  abstract insert(key: Uint8Array, value: Uint8Array, nodeResolverFn: () => void): void\n\n  abstract raw(): Uint8Array[]\n\n  /**\n   * @returns the RLP serialized node\n   */\n  serialize(): Uint8Array {\n    return RLP.encode(this.raw())\n  }\n}\n","export * from './baseVerkleNode.js'\nexport * from './internalNode.js'\nexport * from './leafNode.js'\nexport * from './types.js'\nexport * from './util.js'\n","import { equalsBytes } from '@ethereumjs/util'\n\nimport { POINT_IDENTITY } from '../util/crypto.js'\n\nimport { BaseVerkleNode } from './baseVerkleNode.js'\nimport { LeafNode } from './leafNode.js'\nimport { NODE_WIDTH, VerkleNodeType } from './types.js'\n\nimport type { Point } from '../types.js'\nimport type { VerkleNode, VerkleNodeOptions } from './types.js'\n\nexport class InternalNode extends BaseVerkleNode<VerkleNodeType.Internal> {\n  // Array of references to children nodes\n  public children: Array<VerkleNode | null>\n  public copyOnWrite: Record<string, Point>\n  public type = VerkleNodeType.Internal\n\n  /* TODO: options.children is not actually used here */\n  constructor(options: VerkleNodeOptions[VerkleNodeType.Internal]) {\n    super(options)\n    this.children = options.children ?? new Array(NODE_WIDTH).fill(null)\n    this.copyOnWrite = options.copyOnWrite ?? {}\n  }\n\n  commit(): Point {\n    throw new Error('Not implemented')\n  }\n\n  cowChild(_: number): void {\n    // Not implemented yet\n  }\n\n  setChild(index: number, child: VerkleNode) {\n    this.children[index] = child\n  }\n\n  static fromRawNode(rawNode: Uint8Array[], depth: number): InternalNode {\n    const nodeType = rawNode[0][0]\n    if (nodeType !== VerkleNodeType.Internal) {\n      throw new Error('Invalid node type')\n    }\n\n    // The length of the rawNode should be the # of children, + 2 for the node type and the commitment\n    if (rawNode.length !== NODE_WIDTH + 2) {\n      throw new Error('Invalid node length')\n    }\n\n    // TODO: Generate Point from rawNode value\n    const commitment = rawNode[rawNode.length - 1] as unknown as Point\n\n    return new InternalNode({ commitment, depth })\n  }\n\n  static create(depth: number): InternalNode {\n    const node = new InternalNode({\n      commitment: POINT_IDENTITY,\n      depth,\n    })\n\n    return node\n  }\n\n  getChildren(index: number): VerkleNode | null {\n    return this.children?.[index] ?? null\n  }\n\n  insert(key: Uint8Array, value: Uint8Array, resolver: () => void): void {\n    const values = new Array<Uint8Array>(NODE_WIDTH)\n    values[key[31]] = value\n    this.insertStem(key.slice(0, 31), values, resolver)\n  }\n\n  insertStem(stem: Uint8Array, values: Uint8Array[], resolver: () => void): void {\n    // Index of the child pointed by the next byte in the key\n    const childIndex = stem[this.depth]\n\n    const child = this.children[childIndex]\n\n    if (child instanceof LeafNode) {\n      this.cowChild(childIndex)\n      if (equalsBytes(child.stem, stem)) {\n        return child.insertMultiple(stem, values)\n      }\n\n      // A new branch node has to be inserted. Depending\n      // on the next byte in both keys, a recursion into\n      // the moved leaf node can occur.\n      const nextByteInExistingKey = child.stem[this.depth + 1]\n      const newBranch = InternalNode.create(this.depth + 1)\n      newBranch.cowChild(nextByteInExistingKey)\n      this.children[childIndex] = newBranch\n      newBranch.children[nextByteInExistingKey] = child\n      child.depth += 1\n\n      const nextByteInInsertedKey = stem[this.depth + 1]\n      if (nextByteInInsertedKey === nextByteInExistingKey) {\n        return newBranch.insertStem(stem, values, resolver)\n      }\n\n      // Next word differs, so this was the last level.\n      // Insert it directly into its final slot.\n      const leafNode = LeafNode.create(stem, values)\n\n      leafNode.setDepth(this.depth + 2)\n      newBranch.cowChild(nextByteInInsertedKey)\n      newBranch.children[nextByteInInsertedKey] = leafNode\n    } else if (child instanceof InternalNode) {\n      this.cowChild(childIndex)\n      return child.insertStem(stem, values, resolver)\n    } else {\n      throw new Error('Invalid node type')\n    }\n  }\n\n  // TODO: go-verkle also adds the bitlist to the raw format.\n  raw(): Uint8Array[] {\n    throw new Error('not implemented yet')\n    // return [new Uint8Array([VerkleNodeType.Internal]), ...this.children, this.commitment]\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseVerkleNode } from './baseVerkleNode.js'\nimport { NODE_WIDTH, VerkleNodeType } from './types.js'\n\nimport type { Point } from '../types.js'\nimport type { VerkleNodeOptions } from './types.js'\n\nexport class LeafNode extends BaseVerkleNode<VerkleNodeType.Leaf> {\n  public stem: Uint8Array\n  public values: Uint8Array[]\n  public c1: Point\n  public c2: Point\n  public type = VerkleNodeType.Leaf\n\n  constructor(options: VerkleNodeOptions[VerkleNodeType.Leaf]) {\n    super(options)\n\n    this.stem = options.stem\n    this.values = options.values\n    this.c1 = options.c1\n    this.c2 = options.c2\n  }\n\n  static create(stem: Uint8Array, values: Uint8Array[]): LeafNode {\n    throw new Error('Not implemented')\n  }\n\n  static fromRawNode(rawNode: Uint8Array[], depth: number): LeafNode {\n    const nodeType = rawNode[0][0]\n    if (nodeType !== VerkleNodeType.Leaf) {\n      throw new Error('Invalid node type')\n    }\n\n    // The length of the rawNode should be the # of values (node width) + 5 for the node type, the stem, the commitment and the 2 commitments\n    if (rawNode.length !== NODE_WIDTH + 5) {\n      throw new Error('Invalid node length')\n    }\n\n    const stem = rawNode[1]\n    // TODO: Convert the rawNode commitments to points\n    const commitment = rawNode[2] as unknown as Point\n    const c1 = rawNode[3] as unknown as Point\n    const c2 = rawNode[4] as unknown as Point\n    const values = rawNode.slice(5, rawNode.length)\n\n    return new LeafNode({ depth, stem, values, c1, c2, commitment })\n  }\n  commit(): Point {\n    throw new Error('Not implemented')\n  }\n\n  getValue(index: number): Uint8Array | null {\n    return this.values?.[index] ?? null\n  }\n\n  insert(key: Uint8Array, value: Uint8Array, nodeResolverFn: () => void): void {\n    const values = new Array<Uint8Array>(NODE_WIDTH)\n    values[key[31]] = value\n    this.insertStem(key.slice(0, 31), values, nodeResolverFn)\n  }\n\n  insertMultiple(key: Uint8Array, values: Uint8Array[]): void {\n    throw new Error('Not implemented')\n  }\n\n  insertStem(key: Uint8Array, value: Uint8Array[], resolver: () => void): void {\n    throw new Error('Not implemented')\n  }\n\n  // TODO: go-verkle also adds the bitlist to the raw format.\n  raw(): Uint8Array[] {\n    return [\n      new Uint8Array([VerkleNodeType.Leaf]),\n      this.stem,\n      this.commitment.bytes(),\n      this.c1.bytes(),\n      this.c2.bytes(),\n      ...this.values,\n    ]\n  }\n\n  setDepth(depth: number): void {\n    this.depth = depth\n  }\n}\n","import type { Point } from '../types.js'\nimport type { InternalNode } from './internalNode.js'\nimport type { LeafNode } from './leafNode.js'\n\nexport enum VerkleNodeType {\n  Internal,\n  Leaf,\n}\n\nexport interface TypedVerkleNode {\n  [VerkleNodeType.Internal]: InternalNode\n  [VerkleNodeType.Leaf]: LeafNode\n}\n\nexport type VerkleNode = TypedVerkleNode[VerkleNodeType]\n\nexport interface VerkleNodeInterface {\n  commit(): Point\n  hash(): any\n  serialize(): Uint8Array\n}\n\ninterface BaseVerkleNodeOptions {\n  // Value of the commitment\n  commitment: Point\n  depth: number\n}\n\ninterface VerkleInternalNodeOptions extends BaseVerkleNodeOptions {\n  // Children nodes of this internal node.\n  children?: VerkleNode[]\n\n  // Values of the child commitments before the tree is modified by inserts.\n  // This is useful because the delta of the child commitments can be used to efficiently update the node's commitment\n  copyOnWrite?: Record<string, Point>\n}\ninterface VerkleLeafNodeOptions extends BaseVerkleNodeOptions {\n  stem: Uint8Array\n  values: Uint8Array[]\n  c1: Point\n  c2: Point\n}\n\nexport interface VerkleNodeOptions {\n  [VerkleNodeType.Internal]: VerkleInternalNodeOptions\n  [VerkleNodeType.Leaf]: VerkleLeafNodeOptions\n}\n\nexport const NODE_WIDTH = 256\n","import { RLP } from '@ethereumjs/rlp'\n\nimport { InternalNode } from './internalNode.js'\nimport { LeafNode } from './leafNode.js'\nimport { type VerkleNode, VerkleNodeType } from './types.js'\n\nexport function decodeRawNode(raw: Uint8Array[]): VerkleNode {\n  const nodeType = raw[0][0]\n  const depth = 0\n  switch (nodeType) {\n    case VerkleNodeType.Internal:\n      return InternalNode.fromRawNode(raw, depth)\n    case VerkleNodeType.Leaf:\n      return LeafNode.fromRawNode(raw, depth)\n    default:\n      throw new Error('Invalid node type')\n  }\n}\n\nexport function decodeNode(raw: Uint8Array) {\n  const decoded = RLP.decode(Uint8Array.from(raw)) as Uint8Array[]\n  if (!Array.isArray(decoded)) {\n    throw new Error('Invalid node')\n  }\n  return decodeRawNode(decoded)\n}\n\nexport function isRawNode(node: Uint8Array | Uint8Array[]): node is Uint8Array[] {\n  return Array.isArray(node) && !(node instanceof Uint8Array)\n}\n","import { utf8ToBytes } from '@ethereumjs/util'\n\nimport type { VerkleNode } from './node/index.js'\nimport type { WalkController } from './util/walkController.js'\nimport type { DB } from '@ethereumjs/util'\n\n// Field representation of a commitment\nexport interface Fr {}\n\n// Elliptic curve point representation of a commitment\nexport interface Point {\n  // Bytes returns the compressed serialized version of the element.\n  bytes(): Uint8Array\n  // BytesUncompressed returns the uncompressed serialized version of the element.\n  bytesUncompressed(): Uint8Array\n\n  // SetBytes deserializes a compressed group element from buf.\n  // This method does all the proper checks assuming the bytes come from an\n  // untrusted source.\n  setBytes(bytes: Uint8Array): void\n\n  // SetBytesUncompressed deserializes an uncompressed group element from buf.\n  setBytesUncompressed(bytes: Uint8Array, trusted: boolean): void\n\n  // computes X/Y\n  mapToBaseField(): Point\n\n  // mapToScalarField maps a group element to the scalar field.\n  mapToScalarField(field: Fr): void\n\n  // Equal returns true if p and other represent the same point.\n  equal(secondPoint: Point): boolean\n\n  // SetIdentity sets p to the identity element.\n  setIdentity(): Point\n\n  // Double sets p to 2*p1.\n  double(point1: Point): Point\n\n  // Add sets p to p1+p2.\n  add(point1: Point, point2: Point): Point\n\n  // Sub sets p to p1-p2.\n  sub(point1: Point, point2: Point): Point\n\n  // IsOnCurve returns true if p is on the curve.\n  isOnCurve(): boolean\n\n  normalise(): void\n\n  // Set sets p to p1.\n  set(): Point\n\n  // Neg sets p to -p1.\n  neg(): Point\n\n  // ScalarMul sets p to p1*s.\n  scalarMul(point1: Point, scalarMont: Fr): Point\n}\n\nexport type Proof = Uint8Array[]\n\nexport interface VerkleTreeOpts {\n  /**\n   * A database instance.\n   */\n  db?: DB<Uint8Array, Uint8Array>\n\n  /**\n   * A `Uint8Array` for the root of a previously stored tree\n   */\n  root?: Uint8Array\n\n  /**\n   * Store the root inside the database after every `write` operation\n   */\n  useRootPersistence?: boolean\n\n  /**\n   * LRU cache for tree nodes to allow for faster node retrieval.\n   *\n   * Default: 0 (deactivated)\n   */\n  cacheSize?: number\n}\n\nexport type VerkleTreeOptsWithDefaults = VerkleTreeOpts & {\n  useRootPersistence: boolean\n  cacheSize: number\n}\n\nexport interface CheckpointDBOpts {\n  /**\n   * A database instance.\n   */\n  db: DB<Uint8Array, Uint8Array>\n\n  /**\n   * Cache size (default: 0)\n   */\n  cacheSize?: number\n}\n\nexport type Checkpoint = {\n  // We cannot use a Uint8Array => Uint8Array map directly. If you create two Uint8Arrays with the same internal value,\n  // then when setting a value on the Map, it actually creates two indices.\n  keyValueMap: Map<string, Uint8Array | undefined>\n  root: Uint8Array\n}\n\nexport type FoundNodeFunction = (\n  nodeRef: Uint8Array,\n  node: VerkleNode | null,\n  key: Uint8Array,\n  walkController: WalkController\n) => void\n\nexport const ROOT_DB_KEY = utf8ToBytes('__root__')\n","/**\n * Compares two byte arrays and returns the count of consecutively matching items from the start.\n *\n * @function\n * @param {Uint8Array} bytes1 - The first Uint8Array to compare.\n * @param {Uint8Array} bytes2 - The second Uint8Array to compare.\n * @returns {number} The count of consecutively matching items from the start.\n */\nexport function matchingBytesLength(bytes1: Uint8Array, bytes2: Uint8Array): number {\n  let count = 0\n\n  // The minimum length of both arrays\n  const minLength = Math.min(bytes1.length, bytes2.length)\n\n  for (let i = 0; i < minLength; i++) {\n    if (bytes1[i] === bytes2[i]) {\n      count++\n    } else {\n      // Stop counting as soon as a mismatch is found\n      break\n    }\n  }\n\n  return count\n}\n","import {\n  type Address,\n  bigIntToBytes,\n  bytesToHex,\n  concatBytes,\n  int32ToBytes,\n  setLengthLeft,\n  setLengthRight,\n} from '@ethereumjs/util'\nimport { pedersen_hash, verify_update } from 'rust-verkle-wasm'\n\nimport type { Point } from '../types.js'\n\nexport function pedersenHash(input: Uint8Array): Uint8Array {\n  const pedersenHash = pedersen_hash(input)\n\n  if (pedersenHash === null) {\n    throw new Error(\n      `pedersenHash: Wrong pedersenHash input: ${bytesToHex(\n        input\n      )}. This might happen if length is not correct.`\n    )\n  }\n\n  return pedersenHash\n}\n\nexport function verifyUpdate(\n  root: Uint8Array,\n  proof: Uint8Array,\n  keyValues: Map<any, any>\n): Uint8Array {\n  return verify_update(root, proof, keyValues)\n}\n\n/**\n * @dev Returns the 31-bytes verkle tree stem for a given address and tree index.\n * @dev Assumes that the verkle node width = 256\n * @param address The address to generate the tree key for.\n * @param treeIndex The index of the tree to generate the key for. Defaults to 0.\n * @return The 31-bytes verkle tree stem as a Uint8Array.\n */\nexport function getStem(address: Address, treeIndex: number | bigint = 0): Uint8Array {\n  const address32 = setLengthLeft(address.toBytes(), 32)\n\n  let treeIndexBytes: Uint8Array\n  if (typeof treeIndex === 'number') {\n    treeIndexBytes = setLengthRight(int32ToBytes(Number(treeIndex), true), 32)\n  } else {\n    treeIndexBytes = setLengthRight(bigIntToBytes(BigInt(treeIndex), true).slice(0, 32), 32)\n  }\n\n  const input = concatBytes(address32, treeIndexBytes)\n  const treeStem = pedersenHash(input).slice(0, 31)\n\n  return treeStem\n}\n\n/**\n * @dev Returns the tree key for a given verkle tree stem, and sub index.\n * @dev Assumes that the verkle node width = 256\n * @param stem The 31-bytes verkle tree stem as a Uint8Array.\n * @param subIndex The sub index of the tree to generate the key for as a Uint8Array.\n * @return The tree key as a Uint8Array.\n */\n\nexport function getKey(stem: Uint8Array, subIndex: Uint8Array): Uint8Array {\n  const treeKey = concatBytes(stem, subIndex)\n  return treeKey\n}\n\nexport function verifyProof(\n  root: Uint8Array,\n  proof: Uint8Array,\n  keyValues: Map<any, any>\n): Uint8Array {\n  return verify_update(root, proof, keyValues)\n}\n\n// TODO: Replace this by the actual value of Point().Identity() from the Go code.\nexport const POINT_IDENTITY = new Uint8Array(32).fill(0) as unknown as Point\n","export * from './bytes.js'\nexport * from './crypto.js'\nexport * from './tasks.js'\nexport * from './walkController.js'\n","interface Task {\n  priority: number\n  fn: Function\n}\n\nexport class PrioritizedTaskExecutor {\n  /** The maximum size of the pool */\n  private maxPoolSize: number\n  /** The current size of the pool */\n  private currentPoolSize: number\n  /** The task queue */\n  private queue: Task[]\n\n  /**\n   * Executes tasks up to maxPoolSize at a time, other items are put in a priority queue.\n   * @class PrioritizedTaskExecutor\n   * @private\n   * @param maxPoolSize The maximum size of the pool\n   */\n  constructor(maxPoolSize: number) {\n    this.maxPoolSize = maxPoolSize\n    this.currentPoolSize = 0\n    this.queue = []\n  }\n\n  /**\n   * Executes the task or queues it if no spots are available.\n   * When a task is added, check if there are spots left in the pool.\n   * If a spot is available, claim that spot and give back the spot once the asynchronous task has been resolved.\n   * When no spots are available, add the task to the task queue. The task will be executed at some point when another task has been resolved.\n   * @private\n   * @param priority The priority of the task\n   * @param fn The function that accepts the callback, which must be called upon the task completion.\n   */\n  executeOrQueue(priority: number, fn: Function) {\n    if (this.currentPoolSize < this.maxPoolSize) {\n      this.currentPoolSize++\n      fn(() => {\n        this.currentPoolSize--\n        if (this.queue.length > 0) {\n          this.queue.sort((a, b) => b.priority - a.priority)\n          const item = this.queue.shift()\n          this.executeOrQueue(item!.priority, item!.fn)\n        }\n      })\n    } else {\n      this.queue.push({ priority, fn })\n    }\n  }\n\n  /**\n   * Checks if the taskExecutor is finished.\n   * @private\n   * @returns Returns `true` if the taskExecutor is finished, otherwise returns `false`.\n   */\n  finished(): boolean {\n    return this.currentPoolSize === 0\n  }\n}\n","import { InternalNode, LeafNode } from '../node/index.js'\n\nimport { PrioritizedTaskExecutor } from './tasks.js'\n\nimport type { VerkleNode } from '../node/types.js'\nimport type { FoundNodeFunction } from '../types.js'\nimport type { VerkleTree } from '../verkleTree.js'\n\n/**\n * WalkController is an interface to control how the tree is being traversed.\n */\nexport class WalkController {\n  readonly onNode: FoundNodeFunction\n  readonly taskExecutor: PrioritizedTaskExecutor\n  readonly tree: VerkleTree\n  private resolve: Function\n  private reject: Function\n\n  /**\n   * Creates a new WalkController\n   * @param onNode - The `FoundNodeFunction` to call if a node is found.\n   * @param tree - The `VerkleTree` to walk on.\n   * @param poolSize - The size of the task queue.\n   */\n  private constructor(onNode: FoundNodeFunction, tree: VerkleTree, poolSize: number) {\n    this.onNode = onNode\n    this.taskExecutor = new PrioritizedTaskExecutor(poolSize)\n    this.tree = tree\n    this.resolve = () => {}\n    this.reject = () => {}\n  }\n\n  /**\n   * Async function to create and start a new walk over a tree.\n   * @param onNode - The `FoundNodeFunction to call if a node is found.\n   * @param tree - The tree to walk on.\n   * @param root - The root key to walk on.\n   * @param poolSize - Task execution pool size to prevent OOM errors. Defaults to 500.\n   */\n  static async newWalk(\n    onNode: FoundNodeFunction,\n    tree: VerkleTree,\n    root: Uint8Array,\n    poolSize?: number\n  ): Promise<void> {\n    const strategy = new WalkController(onNode, tree, poolSize ?? 500)\n    await strategy.startWalk(root)\n  }\n\n  private async startWalk(root: Uint8Array): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n      let node\n      try {\n        node = await this.tree.lookupNode(root)\n      } catch (error) {\n        return this.reject(error)\n      }\n      this.processNode(root, node, new Uint8Array(0))\n    })\n  }\n\n  /**\n   * Run all children of a node. Priority of these nodes are the key length of the children.\n   * @param node - Node to retrieve all children from of and call onNode on.\n   * @param key - The current `key` which would yield the `node` when trying to get this node with a `get` operation.\n   */\n  allChildren(node: VerkleNode, key: Uint8Array = new Uint8Array()) {\n    if (node instanceof LeafNode) {\n      return\n    }\n\n    const children = node.children.map((nodeRef, index) => ({\n      keyExtension: index,\n      nodeRef,\n    }))\n\n    for (const child of children) {\n      if (child.nodeRef !== null) {\n        const childKey = new Uint8Array([...key, child.keyExtension])\n        this.pushNodeToQueue(child.nodeRef.hash(), childKey)\n      }\n    }\n  }\n\n  /**\n   * Push a node to the queue. If the queue has places left for tasks, the node is executed immediately, otherwise it is queued.\n   * @param nodeRef - Push a node reference to the event queue. This reference is a 32-byte keccak hash of the value corresponding to the `key`.\n   * @param key - The current key.\n   * @param priority - Optional priority, defaults to key length\n   */\n  pushNodeToQueue(nodeRef: Uint8Array, key: Uint8Array = new Uint8Array(0), priority?: number) {\n    this.taskExecutor.executeOrQueue(\n      priority ?? key.length,\n      async (taskFinishedCallback: Function) => {\n        let childNode\n        try {\n          childNode = await this.tree.lookupNode(nodeRef)\n        } catch (error: any) {\n          return this.reject(error)\n        }\n        taskFinishedCallback() // this marks the current task as finished. If there are any tasks left in the queue, this will immediately execute the first task.\n        this.processNode(nodeRef, childNode as VerkleNode, key)\n      }\n    )\n  }\n\n  /**\n   * Push the child of an internal node to the event queue.\n   * @param node - The node to select a children from. Should be an InternalNode.\n   * @param key - The current key which leads to the corresponding node.\n   * @param childIndex - The child index to add to the event queue.\n   * @param priority - Optional priority of the event, defaults to the total key length.\n   */\n  pushChildrenAtIndex(\n    node: InternalNode,\n    key: Uint8Array = new Uint8Array(0),\n    childIndex: number,\n    priority?: number\n  ) {\n    if (!(node instanceof InternalNode)) {\n      throw new Error('Expected internal node')\n    }\n    const childRef = node.getChildren(childIndex)\n    if (!childRef) {\n      throw new Error('Could not get node at childIndex')\n    }\n    const childKey = new Uint8Array([...key, childIndex])\n    this.pushNodeToQueue(childRef.hash(), childKey, priority ?? childKey.length)\n  }\n\n  private processNode(\n    nodeRef: Uint8Array,\n    node: VerkleNode | null,\n    key: Uint8Array = new Uint8Array(0)\n  ) {\n    this.onNode(nodeRef, node, key, this)\n    if (this.taskExecutor.finished()) {\n      // onNode should schedule new tasks. If no tasks was added and the queue is empty, then we have finished our walk.\n      this.resolve()\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { KeyEncoding, Lock, ValueEncoding, equalsBytes, zeros } from '@ethereumjs/util'\n\nimport { CheckpointDB } from './db/checkpoint.js'\nimport { InternalNode } from './node/internalNode.js'\nimport { LeafNode } from './node/leafNode.js'\nimport { decodeNode, decodeRawNode, isRawNode } from './node/util.js'\nimport {\n  type Proof,\n  ROOT_DB_KEY,\n  type VerkleTreeOpts,\n  type VerkleTreeOptsWithDefaults,\n} from './types.js'\nimport { WalkController, matchingBytesLength } from './util/index.js'\n\nimport type { VerkleNode } from './node/types.js'\nimport type { FoundNodeFunction } from './types.js'\nimport type { BatchDBOp, DB, PutBatch } from '@ethereumjs/util'\n\ninterface Path {\n  node: VerkleNode | null\n  remaining: Uint8Array\n  stack: VerkleNode[]\n}\n\n/**\n * The basic verkle tree interface, use with `import { VerkleTree } from '@ethereumjs/verkle'`.\n */\nexport class VerkleTree {\n  protected readonly _opts: VerkleTreeOptsWithDefaults = {\n    useRootPersistence: false,\n    cacheSize: 0,\n  }\n\n  /** The root for an empty tree */\n  EMPTY_TREE_ROOT: Uint8Array\n\n  /** The backend DB */\n  protected _db!: CheckpointDB\n  protected _hashLen: number\n  protected _lock = new Lock()\n  protected _root: Uint8Array\n\n  /**\n   * Creates a new verkle tree.\n   * @param opts Options for instantiating the verkle tree\n   *\n   * Note: in most cases, the static {@link VerkleTree.create} constructor should be used.  It uses the same API but provides sensible defaults\n   */\n  constructor(opts?: VerkleTreeOpts) {\n    if (opts !== undefined) {\n      this._opts = { ...this._opts, ...opts }\n    }\n\n    this.database(opts?.db)\n\n    this.EMPTY_TREE_ROOT = zeros(32)\n    this._hashLen = this.EMPTY_TREE_ROOT.length\n    this._root = this.EMPTY_TREE_ROOT\n\n    if (opts?.root) {\n      this.root(opts.root)\n    }\n  }\n\n  static async create(opts?: VerkleTreeOpts) {\n    const key = ROOT_DB_KEY\n\n    if (opts?.db !== undefined && opts?.useRootPersistence === true) {\n      if (opts?.root === undefined) {\n        opts.root = await opts?.db.get(key, {\n          keyEncoding: KeyEncoding.Bytes,\n          valueEncoding: ValueEncoding.Bytes,\n        })\n      } else {\n        await opts?.db.put(key, opts.root, {\n          keyEncoding: KeyEncoding.Bytes,\n          valueEncoding: ValueEncoding.Bytes,\n        })\n      }\n    }\n\n    return new VerkleTree(opts)\n  }\n\n  database(db?: DB<Uint8Array, Uint8Array>) {\n    if (db !== undefined) {\n      if (db instanceof CheckpointDB) {\n        throw new Error('Cannot pass in an instance of CheckpointDB')\n      }\n\n      this._db = new CheckpointDB({ db, cacheSize: this._opts.cacheSize })\n    }\n\n    return this._db\n  }\n\n  /**\n   * Gets and/or Sets the current root of the `tree`\n   */\n  root(value?: Uint8Array | null): Uint8Array {\n    if (value !== undefined) {\n      if (value === null) {\n        value = this.EMPTY_TREE_ROOT\n      }\n\n      if (value.length !== this._hashLen) {\n        throw new Error(`Invalid root length. Roots are ${this._hashLen} bytes`)\n      }\n\n      this._root = value\n    }\n\n    return this._root\n  }\n\n  /**\n   * Checks if a given root exists.\n   */\n  async checkRoot(root: Uint8Array): Promise<boolean> {\n    try {\n      const value = await this.lookupNode(root)\n      return value !== null\n    } catch (error: any) {\n      if (error.message === 'Missing node in DB') {\n        return equalsBytes(root, this.EMPTY_TREE_ROOT)\n      } else {\n        throw error\n      }\n    }\n  }\n\n  /**\n   * Gets a value given a `key`\n   * @param key - the key to search for\n   * @param throwIfMissing - if true, throws if any nodes are missing. Used for verifying proofs. (default: false)\n   * @returns A Promise that resolves to `Uint8Array` if a value was found or `null` if no value was found.\n   */\n  async get(key: Uint8Array, throwIfMissing = false): Promise<Uint8Array | null> {\n    const node = await this.findLeafNode(key, throwIfMissing)\n    if (node !== null) {\n      const keyLastByte = key[key.length - 1]\n\n      // The retrieved leaf node contains an array of 256 possible values.\n      // The index of the value we want is at the key's last byte\n      return node.values?.[keyLastByte] ?? null\n    }\n\n    return null\n  }\n\n  /**\n   * Stores a given `value` at the given `key` or do a delete if `value` is empty\n   * (delete operations are only executed on DB with `deleteFromDB` set to `true`)\n   * @param key - the key to store the value at\n   * @param value - the value to store\n   * @returns A Promise that resolves once value is stored.\n   */\n  async put(key: Uint8Array, value: Uint8Array): Promise<void> {\n    await this._db.put(key, value)\n\n    // Find or create the leaf node\n    const leafNode = await this.findLeafNode(key, false)\n    if (leafNode === null) {\n      // If leafNode is missing, create it\n      // leafNode = LeafNode.create()\n      throw new Error('Not implemented')\n    }\n\n    // Walk up the tree and update internal nodes\n    let currentNode: VerkleNode = leafNode\n    let currentKey = leafNode.stem\n    let currentDepth = leafNode.depth\n\n    while (currentDepth > 0) {\n      const parentKey = currentKey.slice(0, -1)\n      const parentIndex = currentKey[currentKey.length - 1]\n      const parentNode = InternalNode.create(currentDepth)\n      parentNode.children[parentIndex] = currentNode\n      await this._db.put(parentKey, parentNode.serialize())\n\n      currentNode = parentNode\n      currentKey = parentKey\n      currentDepth--\n    }\n\n    this._root = currentNode.hash()\n  }\n\n  /**\n   * Tries to find a path to the node for the given key.\n   * It returns a `stack` of nodes to the closest node.\n   * @param key - the search key\n   * @param throwIfMissing - if true, throws if any nodes are missing. Used for verifying proofs. (default: false)\n   */\n  async findPath(key: Uint8Array, throwIfMissing = false): Promise<Path> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n      const stack: VerkleNode[] = []\n\n      const onFound: FoundNodeFunction = async (_, node, keyProgress, walkController) => {\n        if (node === null) {\n          return reject(new Error('Path not found'))\n        }\n        const keyRemainder = key.slice(matchingBytesLength(keyProgress, key))\n        stack.push(node)\n\n        if (node instanceof InternalNode) {\n          if (keyRemainder.length === 0) {\n            // we exhausted the key without finding a node\n            resolve({ node, remaining: new Uint8Array(0), stack })\n          } else {\n            const childrenIndex = keyRemainder[0]\n            const childNode = node.getChildren(childrenIndex)\n            if (childNode === null) {\n              // There are no more nodes to find and we didn't find the key\n              resolve({ node: null, remaining: keyRemainder, stack })\n            } else {\n              // node found, continue search from children\n              walkController.pushChildrenAtIndex(node, keyProgress, childrenIndex)\n            }\n          }\n        } else if (node instanceof LeafNode) {\n          // The stem of the leaf node should be the full key minus the last byte\n          const stem = key.slice(0, key.length - 1)\n          if (equalsBytes(stem, node.stem)) {\n            // keys match, return node with empty key\n            resolve({ node, remaining: new Uint8Array(0), stack })\n          } else {\n            // reached leaf but keys don't match\n            resolve({ node: null, remaining: keyRemainder, stack })\n          }\n        }\n      }\n\n      // walk tree and process nodes\n      try {\n        await this.walkTree(this.root(), onFound)\n      } catch (error: any) {\n        if (error.message === 'Missing node in DB' && !throwIfMissing) {\n          // pass\n        } else {\n          reject(error)\n        }\n      }\n\n      // Resolve if walkTree finishes without finding any nodes\n      resolve({ node: null, remaining: new Uint8Array(0), stack })\n    })\n  }\n\n  /**\n   * Walks a tree until finished.\n   * @param root\n   * @param onFound - callback to call when a node is found. This schedules new tasks. If no tasks are available, the Promise resolves.\n   * @returns Resolves when finished walking tree.\n   */\n  async walkTree(root: Uint8Array, onFound: FoundNodeFunction): Promise<void> {\n    await WalkController.newWalk(onFound, this, root)\n  }\n\n  /**\n   * Tries to find the leaf node leading up to the given key, or null if not found.\n   * @param key - the search key\n   * @param throwIfMissing - if true, throws if any nodes are missing. Used for verifying proofs. (default: false)\n   */\n  async findLeafNode(key: Uint8Array, throwIfMissing = false): Promise<LeafNode | null> {\n    const { node } = await this.findPath(key, throwIfMissing)\n    if (!(node instanceof LeafNode)) {\n      if (throwIfMissing) {\n        throw new Error('leaf node not found')\n      }\n      return null\n    }\n    return node\n  }\n\n  /**\n   * Creates the initial node from an empty tree.\n   * @private\n   */\n  protected async _createInitialNode(key: Uint8Array, value: Uint8Array): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Retrieves a node from db by hash.\n   */\n  async lookupNode(node: Uint8Array | Uint8Array[]): Promise<VerkleNode | null> {\n    if (isRawNode(node)) {\n      return decodeRawNode(node)\n    }\n    const value = await this._db.get(node)\n    if (value !== undefined) {\n      return decodeNode(value)\n    } else {\n      // Dev note: this error message text is used for error checking in `checkRoot`, `verifyProof`, and `findPath`\n      throw new Error('Missing node in DB')\n    }\n  }\n\n  /**\n   * Updates a node.\n   * @private\n   * @param key\n   * @param value\n   * @param keyRemainder\n   * @param stack\n   */\n  protected async _updateNode(\n    k: Uint8Array,\n    value: Uint8Array,\n    keyRemainder: Uint8Array,\n    stack: VerkleNode[]\n  ): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Saves a stack of nodes to the database.\n   *\n   * @param key - the key. Should follow the stack\n   * @param stack - a stack of nodes to the value given by the key\n   * @param opStack - a stack of levelup operations to commit at the end of this function\n   */\n  async saveStack(\n    key: Uint8Array,\n    stack: VerkleNode[],\n    opStack: PutBatch<Uint8Array, Uint8Array>[]\n  ): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Formats node to be saved by `levelup.batch`.\n   * @private\n   * @param node - the node to format.\n   * @param topLevel - if the node is at the top level.\n   * @param opStack - the opStack to push the node's data.\n   * @param remove - whether to remove the node\n   * @returns The node's hash used as the key or the rawNode.\n   */\n  _formatNode(\n    node: VerkleNode,\n    topLevel: boolean,\n    opStack: PutBatch<Uint8Array, Uint8Array>,\n    remove: boolean = false\n  ): Uint8Array {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * The given hash of operations (key additions or deletions) are executed on the tree\n   * (delete operations are only executed on DB with `deleteFromDB` set to `true`)\n   * @example\n   * const ops = [\n   *    { type: 'del', key: Uint8Array.from('father') }\n   *  , { type: 'put', key: Uint8Array.from('name'), value: Uint8Array.from('Yuri Irsenovich Kim') }\n   *  , { type: 'put', key: Uint8Array.from('dob'), value: Uint8Array.from('16 February 1941') }\n   *  , { type: 'put', key: Uint8Array.from('spouse'), value: Uint8Array.from('Kim Young-sook') }\n   *  , { type: 'put', key: Uint8Array.from('occupation'), value: Uint8Array.from('Clown') }\n   * ]\n   * await tree.batch(ops)\n   * @param ops\n   */\n  async batch(ops: BatchDBOp[]): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Saves the nodes from a proof into the tree.\n   * @param proof\n   */\n  async fromProof(proof: Proof): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Creates a proof from a tree and key that can be verified using {@link VerkleTree.verifyProof}.\n   * @param key\n   */\n  async createProof(key: Uint8Array): Promise<Proof> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Verifies a proof.\n   * @param rootHash\n   * @param key\n   * @param proof\n   * @throws If proof is found to be invalid.\n   * @returns The value from the key, or null if valid proof of non-existence.\n   */\n  async verifyProof(\n    rootHash: Uint8Array,\n    key: Uint8Array,\n    proof: Proof\n  ): Promise<Uint8Array | null> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * The `data` event is given an `Object` that has two properties; the `key` and the `value`. Both should be Uint8Arrays.\n   * @return Returns a [stream](https://nodejs.org/dist/latest-v12.x/docs/api/stream.html#stream_class_stream_readable) of the contents of the `tree`\n   */\n  createReadStream(): any {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Returns a copy of the underlying tree.\n   *\n   * Note on db: the copy will create a reference to the\n   * same underlying database.\n   *\n   * Note on cache: for memory reasons a copy will not\n   * recreate a new LRU cache but initialize with cache\n   * being deactivated.\n   *\n   * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n   */\n  shallowCopy(includeCheckpoints = true): VerkleTree {\n    const tree = new VerkleTree({\n      ...this._opts,\n      db: this._db.db.shallowCopy(),\n      root: this.root(),\n      cacheSize: 0,\n    })\n    if (includeCheckpoints && this.hasCheckpoints()) {\n      tree._db.setCheckpoints(this._db.checkpoints)\n    }\n    return tree\n  }\n\n  /**\n   * Persists the root hash in the underlying database\n   */\n  async persistRoot() {\n    if (this._opts.useRootPersistence) {\n      await this._db.put(ROOT_DB_KEY, this.root())\n    }\n  }\n\n  /**\n   * Finds all nodes that are stored directly in the db\n   * (some nodes are stored raw inside other nodes)\n   * called by {@link ScratchReadStream}\n   * @private\n   */\n  protected async _findDbNodes(onFound: () => void): Promise<void> {\n    throw new Error('Not implemented')\n  }\n\n  /**\n   * Is the tree during a checkpoint phase?\n   */\n  hasCheckpoints() {\n    return this._db.hasCheckpoints()\n  }\n\n  /**\n   * Creates a checkpoint that can later be reverted to or committed.\n   * After this is called, all changes can be reverted until `commit` is called.\n   */\n  checkpoint() {\n    this._db.checkpoint(this.root())\n  }\n\n  /**\n   * Commits a checkpoint to disk, if current checkpoint is not nested.\n   * If nested, only sets the parent checkpoint as current checkpoint.\n   * @throws If not during a checkpoint phase\n   */\n  async commit(): Promise<void> {\n    if (!this.hasCheckpoints()) {\n      throw new Error('trying to commit when not checkpointed')\n    }\n\n    await this._lock.acquire()\n    await this._db.commit()\n    await this.persistRoot()\n    this._lock.release()\n  }\n\n  /**\n   * Reverts the tree to the state it was at when `checkpoint` was first called.\n   * If during a nested checkpoint, sets root to most recent checkpoint, and sets\n   * parent checkpoint as current.\n   */\n  async revert(): Promise<void> {\n    if (!this.hasCheckpoints()) {\n      throw new Error('trying to revert when not checkpointed')\n    }\n\n    await this._lock.acquire()\n    this.root(await this._db.revert())\n    await this.persistRoot()\n    this._lock.release()\n  }\n\n  /**\n   * Flushes all checkpoints, restoring the initial checkpoint state.\n   */\n  flushCheckpoints() {\n    this._db.checkpoints = []\n  }\n}\n","import { zeros } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport type { Common } from '@ethereumjs/common'\n\nconst BYTE_SIZE = 256\n\nexport class Bloom {\n  bitvector: Uint8Array\n  keccakFunction: (msg: Uint8Array) => Uint8Array\n\n  /**\n   * Represents a Bloom filter.\n   */\n  constructor(bitvector?: Uint8Array, common?: Common) {\n    if (common?.customCrypto.keccak256 !== undefined) {\n      this.keccakFunction = common.customCrypto.keccak256\n    } else {\n      this.keccakFunction = keccak256\n    }\n    if (!bitvector) {\n      this.bitvector = zeros(BYTE_SIZE)\n    } else {\n      if (bitvector.length !== BYTE_SIZE) throw new Error('bitvectors must be 2048 bits long')\n      this.bitvector = bitvector\n    }\n  }\n\n  /**\n   * Adds an element to a bit vector of a 64 byte bloom filter.\n   * @param e - The element to add\n   */\n  add(e: Uint8Array) {\n    e = this.keccakFunction(e)\n    const mask = 2047 // binary 11111111111\n\n    for (let i = 0; i < 3; i++) {\n      const first2bytes = new DataView(e.buffer).getUint16(i * 2)\n      const loc = mask & first2bytes\n      const byteLoc = loc >> 3\n      const bitLoc = 1 << loc % 8\n      this.bitvector[BYTE_SIZE - byteLoc - 1] |= bitLoc\n    }\n  }\n\n  /**\n   * Checks if an element is in the bloom.\n   * @param e - The element to check\n   */\n  check(e: Uint8Array): boolean {\n    e = this.keccakFunction(e)\n    const mask = 2047 // binary 11111111111\n    let match = true\n\n    for (let i = 0; i < 3 && match; i++) {\n      const first2bytes = new DataView(e.buffer).getUint16(i * 2)\n      const loc = mask & first2bytes\n      const byteLoc = loc >> 3\n      const bitLoc = 1 << loc % 8\n      match = (this.bitvector[BYTE_SIZE - byteLoc - 1] & bitLoc) !== 0\n    }\n\n    return Boolean(match)\n  }\n\n  /**\n   * Checks if multiple topics are in a bloom.\n   * @returns `true` if every topic is in the bloom\n   */\n  multiCheck(topics: Uint8Array[]): boolean {\n    return topics.every((t: Uint8Array) => this.check(t))\n  }\n\n  /**\n   * Bitwise or blooms together.\n   */\n  or(bloom: Bloom) {\n    for (let i = 0; i <= BYTE_SIZE; i++) {\n      this.bitvector[i] = this.bitvector[i] | bloom.bitvector[i]\n    }\n  }\n}\n","import { Block } from '@ethereumjs/block'\nimport { ConsensusType, Hardfork } from '@ethereumjs/common'\nimport { RLP } from '@ethereumjs/rlp'\nimport { Trie } from '@ethereumjs/trie'\nimport { BlobEIP4844Transaction } from '@ethereumjs/tx'\nimport {\n  Address,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_2,\n  GWEI_TO_WEI,\n  KECCAK256_RLP,\n  TypeOutput,\n  Withdrawal,\n  toBytes,\n  toType,\n  zeros,\n} from '@ethereumjs/util'\n\nimport { Bloom } from './bloom/index.js'\nimport {\n  accumulateParentBeaconBlockRoot,\n  accumulateParentBlockHash,\n  calculateMinerReward,\n  encodeReceipt,\n  rewardAccount,\n} from './runBlock.js'\n\nimport type { BuildBlockOpts, BuilderOpts, RunTxResult, SealBlockOpts } from './types.js'\nimport type { VM } from './vm.js'\nimport type { HeaderData } from '@ethereumjs/block'\nimport type { TypedTransaction } from '@ethereumjs/tx'\n\nexport enum BuildStatus {\n  Reverted = 'reverted',\n  Build = 'build',\n  Pending = 'pending',\n}\n\ntype BlockStatus =\n  | { status: BuildStatus.Pending | BuildStatus.Reverted }\n  | { status: BuildStatus.Build; block: Block }\n\nexport class BlockBuilder {\n  /**\n   * The cumulative gas used by the transactions added to the block.\n   */\n  gasUsed = BIGINT_0\n  /**\n   *  The cumulative blob gas used by the blobs in a block\n   */\n  blobGasUsed = BIGINT_0\n  /**\n   * Value of the block, represented by the final transaction fees\n   * acruing to the miner.\n   */\n  private _minerValue = BIGINT_0\n\n  private readonly vm: VM\n  private blockOpts: BuilderOpts\n  private headerData: HeaderData\n  private transactions: TypedTransaction[] = []\n  private transactionResults: RunTxResult[] = []\n  private withdrawals?: Withdrawal[]\n  private checkpointed = false\n  private blockStatus: BlockStatus = { status: BuildStatus.Pending }\n\n  get transactionReceipts() {\n    return this.transactionResults.map((result) => result.receipt)\n  }\n\n  get minerValue() {\n    return this._minerValue\n  }\n\n  constructor(vm: VM, opts: BuildBlockOpts) {\n    this.vm = vm\n    this.blockOpts = { putBlockIntoBlockchain: true, ...opts.blockOpts, common: this.vm.common }\n\n    this.headerData = {\n      ...opts.headerData,\n      parentHash: opts.parentBlock.hash(),\n      number: opts.headerData?.number ?? opts.parentBlock.header.number + BIGINT_1,\n      gasLimit: opts.headerData?.gasLimit ?? opts.parentBlock.header.gasLimit,\n      timestamp: opts.headerData?.timestamp ?? Math.round(Date.now() / 1000),\n    }\n    this.withdrawals = opts.withdrawals?.map(Withdrawal.fromWithdrawalData)\n\n    if (\n      this.vm.common.isActivatedEIP(1559) === true &&\n      typeof this.headerData.baseFeePerGas === 'undefined'\n    ) {\n      if (this.headerData.number === vm.common.hardforkBlock(Hardfork.London)) {\n        this.headerData.baseFeePerGas = vm.common.param('gasConfig', 'initialBaseFee')\n      } else {\n        this.headerData.baseFeePerGas = opts.parentBlock.header.calcNextBaseFee()\n      }\n    }\n\n    if (typeof this.headerData.gasLimit === 'undefined') {\n      if (this.headerData.number === vm.common.hardforkBlock(Hardfork.London)) {\n        this.headerData.gasLimit = opts.parentBlock.header.gasLimit * BIGINT_2\n      } else {\n        this.headerData.gasLimit = opts.parentBlock.header.gasLimit\n      }\n    }\n\n    if (\n      this.vm.common.isActivatedEIP(4844) === true &&\n      typeof this.headerData.excessBlobGas === 'undefined'\n    ) {\n      this.headerData.excessBlobGas = opts.parentBlock.header.calcNextExcessBlobGas()\n    }\n  }\n\n  /**\n   * Throws if the block has already been built or reverted.\n   */\n  private checkStatus() {\n    if (this.blockStatus.status === BuildStatus.Build) {\n      throw new Error('Block has already been built')\n    }\n    if (this.blockStatus.status === BuildStatus.Reverted) {\n      throw new Error('State has already been reverted')\n    }\n  }\n\n  public getStatus(): BlockStatus {\n    return this.blockStatus\n  }\n\n  /**\n   * Calculates and returns the transactionsTrie for the block.\n   */\n  public async transactionsTrie() {\n    return Block.genTransactionsTrieRoot(this.transactions, new Trie({ common: this.vm.common }))\n  }\n\n  /**\n   * Calculates and returns the logs bloom for the block.\n   */\n  public logsBloom() {\n    const bloom = new Bloom(undefined, this.vm.common)\n    for (const txResult of this.transactionResults) {\n      // Combine blooms via bitwise OR\n      bloom.or(txResult.bloom)\n    }\n    return bloom.bitvector\n  }\n\n  /**\n   * Calculates and returns the receiptTrie for the block.\n   */\n  public async receiptTrie() {\n    if (this.transactionResults.length === 0) {\n      return KECCAK256_RLP\n    }\n    const receiptTrie = new Trie({ common: this.vm.common })\n    for (const [i, txResult] of this.transactionResults.entries()) {\n      const tx = this.transactions[i]\n      const encodedReceipt = encodeReceipt(txResult.receipt, tx.type)\n      await receiptTrie.put(RLP.encode(i), encodedReceipt)\n    }\n    return receiptTrie.root()\n  }\n\n  /**\n   * Adds the block miner reward to the coinbase account.\n   */\n  private async rewardMiner() {\n    const minerReward = this.vm.common.param('pow', 'minerReward')\n    const reward = calculateMinerReward(minerReward, 0)\n    const coinbase =\n      this.headerData.coinbase !== undefined\n        ? new Address(toBytes(this.headerData.coinbase))\n        : Address.zero()\n    await rewardAccount(this.vm.evm, coinbase, reward, this.vm.common)\n  }\n\n  /**\n   * Adds the withdrawal amount to the withdrawal address\n   */\n  private async processWithdrawals() {\n    for (const withdrawal of this.withdrawals ?? []) {\n      const { address, amount } = withdrawal\n      // If there is no amount to add, skip touching the account\n      // as per the implementation of other clients geth/nethermind\n      // although this should never happen as no withdrawals with 0\n      // amount should ever land up here.\n      if (amount === 0n) continue\n      // Withdrawal amount is represented in Gwei so needs to be\n      // converted to wei\n      await rewardAccount(this.vm.evm, address, amount * GWEI_TO_WEI, this.vm.common)\n    }\n  }\n\n  /**\n   * Run and add a transaction to the block being built.\n   * Please note that this modifies the state of the VM.\n   * Throws if the transaction's gasLimit is greater than\n   * the remaining gas in the block.\n   */\n  async addTransaction(\n    tx: TypedTransaction,\n    { skipHardForkValidation }: { skipHardForkValidation?: boolean } = {}\n  ) {\n    this.checkStatus()\n\n    if (!this.checkpointed) {\n      await this.vm.evm.journal.checkpoint()\n      this.checkpointed = true\n    }\n\n    // According to the Yellow Paper, a transaction's gas limit\n    // cannot be greater than the remaining gas in the block\n    const blockGasLimit = toType(this.headerData.gasLimit, TypeOutput.BigInt)\n\n    const blobGasLimit = this.vm.common.param('gasConfig', 'maxblobGasPerBlock')\n    const blobGasPerBlob = this.vm.common.param('gasConfig', 'blobGasPerBlob')\n\n    const blockGasRemaining = blockGasLimit - this.gasUsed\n    if (tx.gasLimit > blockGasRemaining) {\n      throw new Error('tx has a higher gas limit than the remaining gas in the block')\n    }\n    let blobGasUsed = undefined\n    if (tx instanceof BlobEIP4844Transaction) {\n      if (this.blockOpts.common?.isActivatedEIP(4844) !== true) {\n        throw Error('eip4844 not activated yet for adding a blob transaction')\n      }\n      const blobTx = tx as BlobEIP4844Transaction\n\n      // Guard against the case if a tx came into the pool without blobs i.e. network wrapper payload\n      if (blobTx.blobs === undefined) {\n        throw new Error('blobs missing for 4844 transaction')\n      }\n\n      if (this.blobGasUsed + BigInt(blobTx.numBlobs()) * blobGasPerBlob > blobGasLimit) {\n        throw new Error('block blob gas limit reached')\n      }\n\n      blobGasUsed = this.blobGasUsed\n    }\n    const header = {\n      ...this.headerData,\n      gasUsed: this.gasUsed,\n      // correct excessBlobGas should already part of headerData used above\n      blobGasUsed,\n    }\n\n    const blockData = { header, transactions: this.transactions }\n    const block = Block.fromBlockData(blockData, this.blockOpts)\n\n    const result = await this.vm.runTx({ tx, block, skipHardForkValidation })\n\n    // If tx is a blob transaction, remove blobs/kzg commitments before adding to block per EIP-4844\n    if (tx instanceof BlobEIP4844Transaction) {\n      const txData = tx as BlobEIP4844Transaction\n      this.blobGasUsed += BigInt(txData.blobVersionedHashes.length) * blobGasPerBlob\n      tx = BlobEIP4844Transaction.minimalFromNetworkWrapper(txData, {\n        common: this.blockOpts.common,\n      })\n    }\n    this.transactions.push(tx)\n    this.transactionResults.push(result)\n    this.gasUsed += result.totalGasSpent\n    this._minerValue += result.minerValue\n\n    return result\n  }\n\n  /**\n   * Reverts the checkpoint on the StateManager to reset the state from any transactions that have been run.\n   */\n  async revert() {\n    if (this.checkpointed) {\n      await this.vm.evm.journal.revert()\n      this.checkpointed = false\n    }\n    this.blockStatus = { status: BuildStatus.Reverted }\n  }\n\n  /**\n   * This method returns the finalized block.\n   * It also:\n   *  - Assigns the reward for miner (PoW)\n   *  - Commits the checkpoint on the StateManager\n   *  - Sets the tip of the VM's blockchain to this block\n   * For PoW, optionally seals the block with params `nonce` and `mixHash`,\n   * which is validated along with the block number and difficulty by ethash.\n   * For PoA, please pass `blockOption.cliqueSigner` into the buildBlock constructor,\n   * as the signer will be awarded the txs amount spent on gas as they are added.\n   */\n  async build(sealOpts?: SealBlockOpts) {\n    this.checkStatus()\n    const blockOpts = this.blockOpts\n    const consensusType = this.vm.common.consensusType()\n\n    if (consensusType === ConsensusType.ProofOfWork) {\n      await this.rewardMiner()\n    }\n    await this.processWithdrawals()\n\n    const stateRoot = await this.vm.stateManager.getStateRoot()\n    const transactionsTrie = await this.transactionsTrie()\n    const withdrawalsRoot = this.withdrawals\n      ? await Block.genWithdrawalsTrieRoot(this.withdrawals, new Trie({ common: this.vm.common }))\n      : undefined\n    const receiptTrie = await this.receiptTrie()\n    const logsBloom = this.logsBloom()\n    const gasUsed = this.gasUsed\n    // timestamp should already be set in constructor\n    const timestamp = this.headerData.timestamp ?? BIGINT_0\n\n    let blobGasUsed = undefined\n    if (this.vm.common.isActivatedEIP(4844) === true) {\n      blobGasUsed = this.blobGasUsed\n    }\n\n    const headerData = {\n      ...this.headerData,\n      stateRoot,\n      transactionsTrie,\n      withdrawalsRoot,\n      receiptTrie,\n      logsBloom,\n      gasUsed,\n      timestamp,\n      // correct excessBlobGas should already be part of headerData used above\n      blobGasUsed,\n    }\n\n    if (consensusType === ConsensusType.ProofOfWork) {\n      headerData.nonce = sealOpts?.nonce ?? headerData.nonce\n      headerData.mixHash = sealOpts?.mixHash ?? headerData.mixHash\n    }\n\n    const blockData = {\n      header: headerData,\n      transactions: this.transactions,\n      withdrawals: this.withdrawals,\n    }\n    const block = Block.fromBlockData(blockData, blockOpts)\n\n    if (this.blockOpts.putBlockIntoBlockchain === true) {\n      await this.vm.blockchain.putBlock(block)\n    }\n\n    this.blockStatus = { status: BuildStatus.Build, block }\n    if (this.checkpointed) {\n      await this.vm.evm.journal.commit()\n      this.checkpointed = false\n    }\n\n    return block\n  }\n\n  async initState() {\n    if (this.vm.common.isActivatedEIP(4788)) {\n      if (!this.checkpointed) {\n        await this.vm.evm.journal.checkpoint()\n        this.checkpointed = true\n      }\n\n      const { parentBeaconBlockRoot, timestamp } = this.headerData\n      // timestamp should already be set in constructor\n      const timestampBigInt = toType(timestamp ?? 0, TypeOutput.BigInt)\n      const parentBeaconBlockRootBuf =\n        toType(parentBeaconBlockRoot!, TypeOutput.Uint8Array) ?? zeros(32)\n\n      await accumulateParentBeaconBlockRoot.bind(this.vm)(parentBeaconBlockRootBuf, timestampBigInt)\n    }\n    if (this.vm.common.isActivatedEIP(2935)) {\n      if (!this.checkpointed) {\n        await this.vm.evm.journal.checkpoint()\n        this.checkpointed = true\n      }\n\n      const { parentHash, number } = this.headerData\n      // timestamp should already be set in constructor\n      const numberBigInt = toType(number ?? 0, TypeOutput.BigInt)\n      const parentHashSanitized = toType(parentHash, TypeOutput.Uint8Array) ?? zeros(32)\n\n      await accumulateParentBlockHash.bind(this.vm)(numberBigInt, parentHashSanitized)\n    }\n  }\n}\n\nexport async function buildBlock(this: VM, opts: BuildBlockOpts): Promise<BlockBuilder> {\n  const blockBuilder = new BlockBuilder(this, opts)\n  await blockBuilder.initState()\n  return blockBuilder\n}\n","export { Bloom } from './bloom/index.js'\nexport { BlockBuilder, BuildStatus } from './buildBlock.js'\nexport { encodeReceipt } from './runBlock.js'\nexport * from './types.js'\nexport { VM } from './vm.js'\n","import { Block } from '@ethereumjs/block'\nimport { ConsensusType, Hardfork } from '@ethereumjs/common'\nimport { RLP } from '@ethereumjs/rlp'\nimport { StatelessVerkleStateManager } from '@ethereumjs/statemanager'\nimport { Trie } from '@ethereumjs/trie'\nimport { TransactionType } from '@ethereumjs/tx'\nimport {\n  Account,\n  Address,\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_8,\n  GWEI_TO_WEI,\n  KECCAK256_RLP,\n  bigIntToBytes,\n  bigIntToHex,\n  bytesToHex,\n  concatBytes,\n  equalsBytes,\n  hexToBytes,\n  intToBytes,\n  setLengthLeft,\n  short,\n  unprefixedHexToBytes,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\n\nimport { Bloom } from './bloom/index.js'\n\nimport type {\n  AfterBlockEvent,\n  ApplyBlockResult,\n  PostByzantiumTxReceipt,\n  PreByzantiumTxReceipt,\n  RunBlockOpts,\n  RunBlockResult,\n  RunTxResult,\n  TxReceipt,\n} from './types.js'\nimport type { VM } from './vm.js'\nimport type { Common } from '@ethereumjs/common'\nimport type { EVM, EVMInterface } from '@ethereumjs/evm'\n\nconst { debug: createDebugLogger } = debugDefault\n\nconst debug = createDebugLogger('vm:block')\n\nconst parentBeaconBlockRootAddress = Address.fromString(\n  '0x000F3df6D732807Ef1319fB7B8bB8522d0Beac02'\n)\n\nlet enableProfiler = false\nconst stateRootCPLabel = 'New state root, DAO HF, checkpoints, block validation'\nconst processTxsLabel = 'Tx processing [ use per-tx profiler for more details ]'\nconst withdrawalsRewardsCommitLabel = 'Withdrawals, Rewards, EVM journal commit'\nconst entireBlockLabel = 'Entire block'\n\n/**\n * @ignore\n */\nexport async function runBlock(this: VM, opts: RunBlockOpts): Promise<RunBlockResult> {\n  if (this._opts.profilerOpts?.reportAfterBlock === true) {\n    enableProfiler = true\n    // eslint-disable-next-line no-console\n    console.time(entireBlockLabel)\n  }\n\n  const state = this.stateManager\n\n  const { root } = opts\n  const clearCache = opts.clearCache ?? true\n  const setHardfork = opts.setHardfork ?? false\n  let { block } = opts\n  const generateFields = opts.generate === true\n\n  if (enableProfiler) {\n    const title = `Profiler run - Block ${block.header.number} (${bytesToHex(block.hash())} with ${\n      block.transactions.length\n    } txs`\n    // eslint-disable-next-line no-console\n    console.log(title)\n    // eslint-disable-next-line no-console\n    console.time(stateRootCPLabel)\n  }\n\n  /**\n   * The `beforeBlock` event.\n   *\n   * @event Event: beforeBlock\n   * @type {Object}\n   * @property {Block} block emits the block that is about to be processed\n   */\n  await this._emit('beforeBlock', block)\n\n  if (setHardfork !== false || this._setHardfork !== false) {\n    const setHardforkUsed = setHardfork ?? this._setHardfork\n    if (setHardforkUsed === true) {\n      this.common.setHardforkBy({\n        blockNumber: block.header.number,\n        timestamp: block.header.timestamp,\n      })\n    } else if (typeof setHardforkUsed !== 'boolean') {\n      this.common.setHardforkBy({\n        blockNumber: block.header.number,\n        td: setHardforkUsed,\n        timestamp: block.header.timestamp,\n      })\n    }\n  }\n\n  if (this.DEBUG) {\n    debug('-'.repeat(100))\n    debug(\n      `Running block hash=${bytesToHex(block.hash())} number=${\n        block.header.number\n      } hardfork=${this.common.hardfork()}`\n    )\n  }\n\n  // Set state root if provided\n  if (root) {\n    if (this.DEBUG) {\n      debug(`Set provided state root ${bytesToHex(root)} clearCache=${clearCache}`)\n    }\n    await state.setStateRoot(root, clearCache)\n  }\n\n  if (this.common.isActivatedEIP(6800)) {\n    if (!(state instanceof StatelessVerkleStateManager)) {\n      throw Error(`StatelessVerkleStateManager needed for execution of verkle blocks`)\n    }\n    if (this.DEBUG) {\n      debug(`Initializing StatelessVerkleStateManager executionWitness`)\n    }\n    ;(this._opts.stateManager as StatelessVerkleStateManager).initVerkleExecutionWitness(\n      block.executionWitness\n    )\n  } else {\n    if (state instanceof StatelessVerkleStateManager) {\n      throw Error(`StatelessVerkleStateManager can't execute merkle blocks`)\n    }\n  }\n\n  // check for DAO support and if we should apply the DAO fork\n  if (\n    this.common.hardforkIsActiveOnBlock(Hardfork.Dao, block.header.number) === true &&\n    block.header.number === this.common.hardforkBlock(Hardfork.Dao)!\n  ) {\n    if (this.DEBUG) {\n      debug(`Apply DAO hardfork`)\n    }\n\n    await this.evm.journal.checkpoint()\n    await _applyDAOHardfork(this.evm)\n    await this.evm.journal.commit()\n  }\n\n  // Checkpoint state\n  await this.evm.journal.checkpoint()\n  if (this.DEBUG) {\n    debug(`block checkpoint`)\n  }\n\n  let result: ApplyBlockResult\n\n  try {\n    result = await applyBlock.bind(this)(block, opts)\n    if (this.DEBUG) {\n      debug(\n        `Received block results gasUsed=${result.gasUsed} bloom=${short(result.bloom.bitvector)} (${\n          result.bloom.bitvector.length\n        } bytes) receiptsRoot=${bytesToHex(result.receiptsRoot)} receipts=${\n          result.receipts.length\n        } txResults=${result.results.length}`\n      )\n    }\n  } catch (err: any) {\n    await this.evm.journal.revert()\n    if (this.DEBUG) {\n      debug(`block checkpoint reverted`)\n    }\n    if (enableProfiler) {\n      // eslint-disable-next-line no-console\n      console.timeEnd(withdrawalsRewardsCommitLabel)\n    }\n    throw err\n  }\n\n  // Persist state\n  await this.evm.journal.commit()\n  if (this.DEBUG) {\n    debug(`block checkpoint committed`)\n  }\n\n  const stateRoot = await state.getStateRoot()\n\n  // Given the generate option, either set resulting header\n  // values to the current block, or validate the resulting\n  // header values against the current block.\n  if (generateFields) {\n    const bloom = result.bloom.bitvector\n    const gasUsed = result.gasUsed\n    const receiptTrie = result.receiptsRoot\n    const transactionsTrie = await _genTxTrie(block)\n    const generatedFields = { stateRoot, bloom, gasUsed, receiptTrie, transactionsTrie }\n    const blockData = {\n      ...block,\n      header: { ...block.header, ...generatedFields },\n    }\n    block = Block.fromBlockData(blockData, { common: this.common })\n  } else if (this.common.isActivatedEIP(6800) === false) {\n    // Only validate the following headers if verkle blocks aren't activated\n    if (equalsBytes(result.receiptsRoot, block.header.receiptTrie) === false) {\n      if (this.DEBUG) {\n        debug(\n          `Invalid receiptTrie received=${bytesToHex(result.receiptsRoot)} expected=${bytesToHex(\n            block.header.receiptTrie\n          )}`\n        )\n      }\n      const msg = _errorMsg('invalid receiptTrie', this, block)\n      throw new Error(msg)\n    }\n    if (!(equalsBytes(result.bloom.bitvector, block.header.logsBloom) === true)) {\n      if (this.DEBUG) {\n        debug(\n          `Invalid bloom received=${bytesToHex(result.bloom.bitvector)} expected=${bytesToHex(\n            block.header.logsBloom\n          )}`\n        )\n      }\n      const msg = _errorMsg('invalid bloom', this, block)\n      throw new Error(msg)\n    }\n    if (result.gasUsed !== block.header.gasUsed) {\n      if (this.DEBUG) {\n        debug(`Invalid gasUsed received=${result.gasUsed} expected=${block.header.gasUsed}`)\n      }\n      const msg = _errorMsg('invalid gasUsed', this, block)\n      throw new Error(msg)\n    }\n    if (!(equalsBytes(stateRoot, block.header.stateRoot) === true)) {\n      if (this.DEBUG) {\n        debug(\n          `Invalid stateRoot received=${bytesToHex(stateRoot)} expected=${bytesToHex(\n            block.header.stateRoot\n          )}`\n        )\n      }\n      const msg = _errorMsg(\n        `invalid block stateRoot, got: ${bytesToHex(stateRoot)}, want: ${bytesToHex(\n          block.header.stateRoot\n        )}`,\n        this,\n        block\n      )\n      throw new Error(msg)\n    }\n  } else if (this.common.isActivatedEIP(6800) === true) {\n    // If verkle is activated, only validate the post-state\n    if ((this._opts.stateManager as StatelessVerkleStateManager).verifyPostState() === false) {\n      throw new Error(`Verkle post state verification failed on block ${block.header.number}`)\n    }\n    debug(`Verkle post state verification succeeded`)\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(withdrawalsRewardsCommitLabel)\n  }\n\n  const results: RunBlockResult = {\n    receipts: result.receipts,\n    logsBloom: result.bloom.bitvector,\n    results: result.results,\n    stateRoot,\n    gasUsed: result.gasUsed,\n    receiptsRoot: result.receiptsRoot,\n    preimages: result.preimages,\n  }\n\n  const afterBlockEvent: AfterBlockEvent = { ...results, block }\n\n  /**\n   * The `afterBlock` event\n   *\n   * @event Event: afterBlock\n   * @type {AfterBlockEvent}\n   * @property {AfterBlockEvent} result emits the results of processing a block\n   */\n  await this._emit('afterBlock', afterBlockEvent)\n  if (this.DEBUG) {\n    debug(\n      `Running block finished hash=${bytesToHex(block.hash())} number=${\n        block.header.number\n      } hardfork=${this.common.hardfork()}`\n    )\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(entireBlockLabel)\n    const logs = (<EVM>this.evm).getPerformanceLogs()\n    if (logs.precompiles.length === 0 && logs.opcodes.length === 0) {\n      // eslint-disable-next-line no-console\n      console.log('No block txs with precompile or opcode execution.')\n    }\n\n    this.emitEVMProfile(logs.precompiles, 'Precompile performance')\n    this.emitEVMProfile(logs.opcodes, 'Opcodes performance')\n    ;(<EVM>this.evm).clearPerformanceLogs()\n  }\n\n  return results\n}\n\n/**\n * Validates and applies a block, computing the results of\n * applying its transactions. This method doesn't modify the\n * block itself. It computes the block rewards and puts\n * them on state (but doesn't persist the changes).\n * @param {Block} block\n * @param {RunBlockOpts} opts\n */\nasync function applyBlock(this: VM, block: Block, opts: RunBlockOpts): Promise<ApplyBlockResult> {\n  // Validate block\n  if (opts.skipBlockValidation !== true) {\n    if (block.header.gasLimit >= BigInt('0x8000000000000000')) {\n      const msg = _errorMsg('Invalid block with gas limit greater than (2^63 - 1)', this, block)\n      throw new Error(msg)\n    } else {\n      if (this.DEBUG) {\n        debug(`Validate block`)\n      }\n      // TODO: decide what block validation method is appropriate here\n      if (opts.skipHeaderValidation !== true) {\n        if (typeof (<any>this.blockchain).validateHeader === 'function') {\n          await (<any>this.blockchain).validateHeader(block.header)\n        } else {\n          throw new Error('cannot validate header: blockchain has no `validateHeader` method')\n        }\n      }\n      await block.validateData()\n    }\n  }\n  if (this.common.isActivatedEIP(4788)) {\n    if (this.DEBUG) {\n      debug(`accumulate parentBeaconBlockRoot`)\n    }\n    await accumulateParentBeaconBlockRoot.bind(this)(\n      block.header.parentBeaconBlockRoot!,\n      block.header.timestamp\n    )\n  }\n  if (this.common.isActivatedEIP(2935)) {\n    if (this.DEBUG) {\n      debug(`accumulate parentBlockHash `)\n    }\n\n    await accumulateParentBlockHash.bind(this)(block.header.number, block.header.parentHash)\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(stateRootCPLabel)\n  }\n\n  // Apply transactions\n  if (this.DEBUG) {\n    debug(`Apply transactions`)\n  }\n  const blockResults = await applyTransactions.bind(this)(block, opts)\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.time(withdrawalsRewardsCommitLabel)\n  }\n\n  // Add txResult preimages to the blockResults preimages\n  // Also add the coinbase preimage\n\n  if (opts.reportPreimages === true) {\n    if (this.evm.stateManager.getAppliedKey === undefined) {\n      throw new Error(\n        'applyBlock: evm.stateManager.getAppliedKey can not be undefined if reportPreimages is true'\n      )\n    }\n    blockResults.preimages.set(\n      bytesToHex(this.evm.stateManager.getAppliedKey(block.header.coinbase.toBytes())),\n      block.header.coinbase.toBytes()\n    )\n    for (const txResult of blockResults.results) {\n      if (txResult.preimages !== undefined) {\n        for (const [key, preimage] of txResult.preimages) {\n          blockResults.preimages.set(key, preimage)\n        }\n      }\n    }\n  }\n\n  if (this.common.isActivatedEIP(4895)) {\n    if (opts.reportPreimages === true) this.evm.journal.startReportingPreimages!()\n    await assignWithdrawals.bind(this)(block)\n    if (opts.reportPreimages === true && this.evm.journal.preimages !== undefined) {\n      for (const [key, preimage] of this.evm.journal.preimages) {\n        blockResults.preimages.set(key, preimage)\n      }\n    }\n    await this.evm.journal.cleanup()\n  }\n  // Pay ommers and miners\n  if (block.common.consensusType() === ConsensusType.ProofOfWork) {\n    await assignBlockRewards.bind(this)(block)\n  }\n\n  return blockResults\n}\n\n/**\n * This method runs the logic of EIP 2935 (save blockhashes to state)\n * It will put the `parentHash` of the block to the storage slot of `block.number - 1` of the history storage contract.\n * This contract is used to retrieve BLOCKHASHes in EVM if EIP 2935 is activated.\n * In case that the previous block of `block` is pre-EIP-2935 (so we are on the EIP 2935 fork block), additionally\n * also add the currently available past blockhashes which are available by BLOCKHASH (so, the past 256 block hashes)\n * @param this The VM to run on\n * @param block The current block to save the parent block hash of\n */\nexport async function accumulateParentBlockHash(\n  this: VM,\n  currentBlockNumber: bigint,\n  parentHash: Uint8Array\n) {\n  if (!this.common.isActivatedEIP(2935)) {\n    throw new Error('Cannot call `accumulateParentBlockHash`: EIP 2935 is not active')\n  }\n  const historyAddress = Address.fromString(\n    bigIntToHex(this.common.param('vm', 'historyStorageAddress'))\n  )\n  const historyServeWindow = this.common.param('vm', 'historyServeWindow')\n\n  // Is this the fork block?\n  const forkTime = this.common.eipTimestamp(2935)\n  if (forkTime === null) {\n    throw new Error('EIP 2935 should be activated by timestamp')\n  }\n\n  if ((await this.stateManager.getAccount(historyAddress)) === undefined) {\n    await this.evm.journal.putAccount(historyAddress, new Account())\n  }\n\n  async function putBlockHash(vm: VM, hash: Uint8Array, number: bigint) {\n    // ringKey is the key the hash is actually put in (it is a ring buffer)\n    const ringKey = number % historyServeWindow\n    const key = setLengthLeft(bigIntToBytes(ringKey), 32)\n    await vm.stateManager.putContractStorage(historyAddress, key, hash)\n  }\n  await putBlockHash(this, parentHash, currentBlockNumber - BIGINT_1)\n\n  const parentBlock = await this.blockchain.getBlock(parentHash)\n\n  // If on the fork block, store the old block hashes as well\n  if (parentBlock.header.timestamp < forkTime) {\n    let ancestor = parentBlock\n    for (let i = 0; i < Number(historyServeWindow) - 1; i++) {\n      if (ancestor.header.number === BIGINT_0) {\n        break\n      }\n\n      ancestor = await this.blockchain.getBlock(ancestor.header.parentHash)\n      await putBlockHash(this, ancestor.hash(), ancestor.header.number)\n    }\n  }\n}\n\nexport async function accumulateParentBeaconBlockRoot(\n  this: VM,\n  root: Uint8Array,\n  timestamp: bigint\n) {\n  if (!this.common.isActivatedEIP(4788)) {\n    throw new Error('Cannot call `accumulateParentBeaconBlockRoot`: EIP 4788 is not active')\n  }\n  // Save the parentBeaconBlockRoot to the beaconroot stateful precompile ring buffers\n  const historicalRootsLength = BigInt(this.common.param('vm', 'historicalRootsLength'))\n  const timestampIndex = timestamp % historicalRootsLength\n  const timestampExtended = timestampIndex + historicalRootsLength\n\n  /**\n   * Note: (by Jochem)\n   * If we don't do this (put account if undefined / non-existant), block runner crashes because the beacon root address does not exist\n   * This is hence (for me) again a reason why it should /not/ throw if the address does not exist\n   * All ethereum accounts have empty storage by default\n   */\n\n  if ((await this.stateManager.getAccount(parentBeaconBlockRootAddress)) === undefined) {\n    await this.evm.journal.putAccount(parentBeaconBlockRootAddress, new Account())\n  }\n\n  await this.stateManager.putContractStorage(\n    parentBeaconBlockRootAddress,\n    setLengthLeft(bigIntToBytes(timestampIndex), 32),\n    bigIntToBytes(timestamp)\n  )\n  await this.stateManager.putContractStorage(\n    parentBeaconBlockRootAddress,\n    setLengthLeft(bigIntToBytes(timestampExtended), 32),\n    root\n  )\n}\n\n/**\n * Applies the transactions in a block, computing the receipts\n * as well as gas usage and some relevant data. This method is\n * side-effect free (it doesn't modify the block nor the state).\n * @param {Block} block\n * @param {RunBlockOpts} opts\n */\nasync function applyTransactions(this: VM, block: Block, opts: RunBlockOpts) {\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.time(processTxsLabel)\n  }\n\n  const bloom = new Bloom(undefined, this.common)\n  // the total amount of gas used processing these transactions\n  let gasUsed = BIGINT_0\n\n  let receiptTrie: Trie | undefined = undefined\n  if (block.transactions.length !== 0) {\n    receiptTrie = new Trie({ common: this.common })\n  }\n\n  const receipts: TxReceipt[] = []\n  const txResults: RunTxResult[] = []\n\n  /*\n   * Process transactions\n   */\n  for (let txIdx = 0; txIdx < block.transactions.length; txIdx++) {\n    const tx = block.transactions[txIdx]\n\n    let maxGasLimit\n    if (this.common.isActivatedEIP(1559) === true) {\n      maxGasLimit = block.header.gasLimit * this.common.param('gasConfig', 'elasticityMultiplier')\n    } else {\n      maxGasLimit = block.header.gasLimit\n    }\n    const gasLimitIsHigherThanBlock = maxGasLimit < tx.gasLimit + gasUsed\n    if (gasLimitIsHigherThanBlock) {\n      const msg = _errorMsg('tx has a higher gas limit than the block', this, block)\n      throw new Error(msg)\n    }\n\n    // Run the tx through the VM\n    const { skipBalance, skipNonce, skipHardForkValidation, reportPreimages } = opts\n\n    const txRes = await this.runTx({\n      tx,\n      block,\n      skipBalance,\n      skipNonce,\n      skipHardForkValidation,\n      blockGasUsed: gasUsed,\n      reportPreimages,\n    })\n    txResults.push(txRes)\n    if (this.DEBUG) {\n      debug('-'.repeat(100))\n    }\n\n    // Add to total block gas usage\n    gasUsed += txRes.totalGasSpent\n    if (this.DEBUG) {\n      debug(`Add tx gas used (${txRes.totalGasSpent}) to total block gas usage (-> ${gasUsed})`)\n    }\n\n    // Combine blooms via bitwise OR\n    bloom.or(txRes.bloom)\n\n    // Add receipt to trie to later calculate receipt root\n    receipts.push(txRes.receipt)\n    const encodedReceipt = encodeReceipt(txRes.receipt, tx.type)\n    await receiptTrie!.put(RLP.encode(txIdx), encodedReceipt)\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(processTxsLabel)\n  }\n\n  const receiptsRoot = receiptTrie !== undefined ? receiptTrie.root() : KECCAK256_RLP\n\n  return {\n    bloom,\n    gasUsed,\n    preimages: new Map<string, Uint8Array>(),\n    receiptsRoot,\n    receipts,\n    results: txResults,\n  }\n}\n\nasync function assignWithdrawals(this: VM, block: Block): Promise<void> {\n  const withdrawals = block.withdrawals!\n  for (const withdrawal of withdrawals) {\n    const { address, amount } = withdrawal\n    // Withdrawal amount is represented in Gwei so needs to be\n    // converted to wei\n    // Note: event if amount is 0, still reward the account\n    // such that the account is touched and marked for cleanup if it is empty\n    await rewardAccount(this.evm, address, amount * GWEI_TO_WEI, this.common)\n  }\n}\n\n/**\n * Calculates block rewards for miner and ommers and puts\n * the updated balances of their accounts to state.\n */\nasync function assignBlockRewards(this: VM, block: Block): Promise<void> {\n  if (this.DEBUG) {\n    debug(`Assign block rewards`)\n  }\n  const minerReward = this.common.param('pow', 'minerReward')\n  const ommers = block.uncleHeaders\n  // Reward ommers\n  for (const ommer of ommers) {\n    const reward = calculateOmmerReward(ommer.number, block.header.number, minerReward)\n    const account = await rewardAccount(this.evm, ommer.coinbase, reward, this.common)\n    if (this.DEBUG) {\n      debug(`Add uncle reward ${reward} to account ${ommer.coinbase} (-> ${account.balance})`)\n    }\n  }\n  // Reward miner\n  const reward = calculateMinerReward(minerReward, ommers.length)\n  const account = await rewardAccount(this.evm, block.header.coinbase, reward, this.common)\n  if (this.DEBUG) {\n    debug(`Add miner reward ${reward} to account ${block.header.coinbase} (-> ${account.balance})`)\n  }\n}\n\nfunction calculateOmmerReward(\n  ommerBlockNumber: bigint,\n  blockNumber: bigint,\n  minerReward: bigint\n): bigint {\n  const heightDiff = blockNumber - ommerBlockNumber\n  let reward = ((BIGINT_8 - heightDiff) * minerReward) / BIGINT_8\n  if (reward < BIGINT_0) {\n    reward = BIGINT_0\n  }\n  return reward\n}\n\nexport function calculateMinerReward(minerReward: bigint, ommersNum: number): bigint {\n  // calculate nibling reward\n  const niblingReward = minerReward / BigInt(32)\n  const totalNiblingReward = niblingReward * BigInt(ommersNum)\n  const reward = minerReward + totalNiblingReward\n  return reward\n}\n\nexport async function rewardAccount(\n  evm: EVMInterface,\n  address: Address,\n  reward: bigint,\n  common?: Common\n): Promise<Account> {\n  let account = await evm.stateManager.getAccount(address)\n  if (account === undefined) {\n    if (common?.isActivatedEIP(6800) === true) {\n      ;(\n        evm.stateManager as StatelessVerkleStateManager\n      ).accessWitness!.touchAndChargeProofOfAbsence(address)\n    }\n    account = new Account()\n  }\n  account.balance += reward\n  await evm.journal.putAccount(address, account)\n\n  if (common?.isActivatedEIP(6800) === true) {\n    // use this utility to build access but the computed gas is not charged and hence free\n    ;(evm.stateManager as StatelessVerkleStateManager).accessWitness!.touchTxExistingAndComputeGas(\n      address,\n      { sendsValue: true }\n    )\n  }\n  return account\n}\n\n/**\n * Returns the encoded tx receipt.\n */\nexport function encodeReceipt(receipt: TxReceipt, txType: TransactionType) {\n  const encoded = RLP.encode([\n    (receipt as PreByzantiumTxReceipt).stateRoot ??\n      ((receipt as PostByzantiumTxReceipt).status === 0 ? Uint8Array.from([]) : hexToBytes('0x01')),\n    bigIntToBytes(receipt.cumulativeBlockGasUsed),\n    receipt.bitvector,\n    receipt.logs,\n  ])\n\n  if (txType === TransactionType.Legacy) {\n    return encoded\n  }\n\n  // Serialize receipt according to EIP-2718:\n  // `typed-receipt = tx-type || receipt-data`\n  return concatBytes(intToBytes(txType), encoded)\n}\n\n/**\n * Apply the DAO fork changes to the VM\n */\nasync function _applyDAOHardfork(evm: EVMInterface) {\n  const state = evm.stateManager\n\n  /* DAO account list */\n  const DAOAccountList = DAOConfig.DAOAccounts\n  const DAORefundContract = DAOConfig.DAORefundContract\n\n  const DAORefundContractAddress = new Address(unprefixedHexToBytes(DAORefundContract))\n  if ((await state.getAccount(DAORefundContractAddress)) === undefined) {\n    await evm.journal.putAccount(DAORefundContractAddress, new Account())\n  }\n  let DAORefundAccount = await state.getAccount(DAORefundContractAddress)\n  if (DAORefundAccount === undefined) {\n    DAORefundAccount = new Account()\n  }\n\n  for (const addr of DAOAccountList) {\n    // retrieve the account and add it to the DAO's Refund accounts' balance.\n    const address = new Address(unprefixedHexToBytes(addr))\n    let account = await state.getAccount(address)\n    if (account === undefined) {\n      account = new Account()\n    }\n    DAORefundAccount.balance += account.balance\n    // clear the accounts' balance\n    account.balance = BIGINT_0\n    await evm.journal.putAccount(address, account)\n  }\n\n  // finally, put the Refund Account\n  await evm.journal.putAccount(DAORefundContractAddress, DAORefundAccount)\n}\n\nasync function _genTxTrie(block: Block) {\n  if (block.transactions.length === 0) {\n    return KECCAK256_RLP\n  }\n  const trie = new Trie({ common: block.common })\n  for (const [i, tx] of block.transactions.entries()) {\n    await trie.put(RLP.encode(i), tx.serialize())\n  }\n  return trie.root()\n}\n\n/**\n * Internal helper function to create an annotated error message\n *\n * @param msg Base error message\n * @hidden\n */\nfunction _errorMsg(msg: string, vm: VM, block: Block) {\n  const blockErrorStr = 'errorStr' in block ? block.errorStr() : 'block'\n\n  const errorMsg = `${msg} (${vm.errorStr()} -> ${blockErrorStr})`\n  return errorMsg\n}\n\nconst DAOConfig = {\n  DAOAccounts: [\n    'd4fe7bc31cedb7bfb8a345f31e668033056b2728',\n    'b3fb0e5aba0e20e5c49d252dfd30e102b171a425',\n    '2c19c7f9ae8b751e37aeb2d93a699722395ae18f',\n    'ecd135fa4f61a655311e86238c92adcd779555d2',\n    '1975bd06d486162d5dc297798dfc41edd5d160a7',\n    'a3acf3a1e16b1d7c315e23510fdd7847b48234f6',\n    '319f70bab6845585f412ec7724b744fec6095c85',\n    '06706dd3f2c9abf0a21ddcc6941d9b86f0596936',\n    '5c8536898fbb74fc7445814902fd08422eac56d0',\n    '6966ab0d485353095148a2155858910e0965b6f9',\n    '779543a0491a837ca36ce8c635d6154e3c4911a6',\n    '2a5ed960395e2a49b1c758cef4aa15213cfd874c',\n    '5c6e67ccd5849c0d29219c4f95f1a7a93b3f5dc5',\n    '9c50426be05db97f5d64fc54bf89eff947f0a321',\n    '200450f06520bdd6c527622a273333384d870efb',\n    'be8539bfe837b67d1282b2b1d61c3f723966f049',\n    '6b0c4d41ba9ab8d8cfb5d379c69a612f2ced8ecb',\n    'f1385fb24aad0cd7432824085e42aff90886fef5',\n    'd1ac8b1ef1b69ff51d1d401a476e7e612414f091',\n    '8163e7fb499e90f8544ea62bbf80d21cd26d9efd',\n    '51e0ddd9998364a2eb38588679f0d2c42653e4a6',\n    '627a0a960c079c21c34f7612d5d230e01b4ad4c7',\n    'f0b1aa0eb660754448a7937c022e30aa692fe0c5',\n    '24c4d950dfd4dd1902bbed3508144a54542bba94',\n    '9f27daea7aca0aa0446220b98d028715e3bc803d',\n    'a5dc5acd6a7968a4554d89d65e59b7fd3bff0f90',\n    'd9aef3a1e38a39c16b31d1ace71bca8ef58d315b',\n    '63ed5a272de2f6d968408b4acb9024f4cc208ebf',\n    '6f6704e5a10332af6672e50b3d9754dc460dfa4d',\n    '77ca7b50b6cd7e2f3fa008e24ab793fd56cb15f6',\n    '492ea3bb0f3315521c31f273e565b868fc090f17',\n    '0ff30d6de14a8224aa97b78aea5388d1c51c1f00',\n    '9ea779f907f0b315b364b0cfc39a0fde5b02a416',\n    'ceaeb481747ca6c540a000c1f3641f8cef161fa7',\n    'cc34673c6c40e791051898567a1222daf90be287',\n    '579a80d909f346fbfb1189493f521d7f48d52238',\n    'e308bd1ac5fda103967359b2712dd89deffb7973',\n    '4cb31628079fb14e4bc3cd5e30c2f7489b00960c',\n    'ac1ecab32727358dba8962a0f3b261731aad9723',\n    '4fd6ace747f06ece9c49699c7cabc62d02211f75',\n    '440c59b325d2997a134c2c7c60a8c61611212bad',\n    '4486a3d68fac6967006d7a517b889fd3f98c102b',\n    '9c15b54878ba618f494b38f0ae7443db6af648ba',\n    '27b137a85656544b1ccb5a0f2e561a5703c6a68f',\n    '21c7fdb9ed8d291d79ffd82eb2c4356ec0d81241',\n    '23b75c2f6791eef49c69684db4c6c1f93bf49a50',\n    '1ca6abd14d30affe533b24d7a21bff4c2d5e1f3b',\n    'b9637156d330c0d605a791f1c31ba5890582fe1c',\n    '6131c42fa982e56929107413a9d526fd99405560',\n    '1591fc0f688c81fbeb17f5426a162a7024d430c2',\n    '542a9515200d14b68e934e9830d91645a980dd7a',\n    'c4bbd073882dd2add2424cf47d35213405b01324',\n    '782495b7b3355efb2833d56ecb34dc22ad7dfcc4',\n    '58b95c9a9d5d26825e70a82b6adb139d3fd829eb',\n    '3ba4d81db016dc2890c81f3acec2454bff5aada5',\n    'b52042c8ca3f8aa246fa79c3feaa3d959347c0ab',\n    'e4ae1efdfc53b73893af49113d8694a057b9c0d1',\n    '3c02a7bc0391e86d91b7d144e61c2c01a25a79c5',\n    '0737a6b837f97f46ebade41b9bc3e1c509c85c53',\n    '97f43a37f595ab5dd318fb46e7a155eae057317a',\n    '52c5317c848ba20c7504cb2c8052abd1fde29d03',\n    '4863226780fe7c0356454236d3b1c8792785748d',\n    '5d2b2e6fcbe3b11d26b525e085ff818dae332479',\n    '5f9f3392e9f62f63b8eac0beb55541fc8627f42c',\n    '057b56736d32b86616a10f619859c6cd6f59092a',\n    '9aa008f65de0b923a2a4f02012ad034a5e2e2192',\n    '304a554a310c7e546dfe434669c62820b7d83490',\n    '914d1b8b43e92723e64fd0a06f5bdb8dd9b10c79',\n    '4deb0033bb26bc534b197e61d19e0733e5679784',\n    '07f5c1e1bc2c93e0402f23341973a0e043f7bf8a',\n    '35a051a0010aba705c9008d7a7eff6fb88f6ea7b',\n    '4fa802324e929786dbda3b8820dc7834e9134a2a',\n    '9da397b9e80755301a3b32173283a91c0ef6c87e',\n    '8d9edb3054ce5c5774a420ac37ebae0ac02343c6',\n    '0101f3be8ebb4bbd39a2e3b9a3639d4259832fd9',\n    '5dc28b15dffed94048d73806ce4b7a4612a1d48f',\n    'bcf899e6c7d9d5a215ab1e3444c86806fa854c76',\n    '12e626b0eebfe86a56d633b9864e389b45dcb260',\n    'a2f1ccba9395d7fcb155bba8bc92db9bafaeade7',\n    'ec8e57756626fdc07c63ad2eafbd28d08e7b0ca5',\n    'd164b088bd9108b60d0ca3751da4bceb207b0782',\n    '6231b6d0d5e77fe001c2a460bd9584fee60d409b',\n    '1cba23d343a983e9b5cfd19496b9a9701ada385f',\n    'a82f360a8d3455c5c41366975bde739c37bfeb8a',\n    '9fcd2deaff372a39cc679d5c5e4de7bafb0b1339',\n    '005f5cee7a43331d5a3d3eec71305925a62f34b6',\n    '0e0da70933f4c7849fc0d203f5d1d43b9ae4532d',\n    'd131637d5275fd1a68a3200f4ad25c71a2a9522e',\n    'bc07118b9ac290e4622f5e77a0853539789effbe',\n    '47e7aa56d6bdf3f36be34619660de61275420af8',\n    'acd87e28b0c9d1254e868b81cba4cc20d9a32225',\n    'adf80daec7ba8dcf15392f1ac611fff65d94f880',\n    '5524c55fb03cf21f549444ccbecb664d0acad706',\n    '40b803a9abce16f50f36a77ba41180eb90023925',\n    'fe24cdd8648121a43a7c86d289be4dd2951ed49f',\n    '17802f43a0137c506ba92291391a8a8f207f487d',\n    '253488078a4edf4d6f42f113d1e62836a942cf1a',\n    '86af3e9626fce1957c82e88cbf04ddf3a2ed7915',\n    'b136707642a4ea12fb4bae820f03d2562ebff487',\n    'dbe9b615a3ae8709af8b93336ce9b477e4ac0940',\n    'f14c14075d6c4ed84b86798af0956deef67365b5',\n    'ca544e5c4687d109611d0f8f928b53a25af72448',\n    'aeeb8ff27288bdabc0fa5ebb731b6f409507516c',\n    'cbb9d3703e651b0d496cdefb8b92c25aeb2171f7',\n    '6d87578288b6cb5549d5076a207456a1f6a63dc0',\n    'b2c6f0dfbb716ac562e2d85d6cb2f8d5ee87603e',\n    'accc230e8a6e5be9160b8cdf2864dd2a001c28b6',\n    '2b3455ec7fedf16e646268bf88846bd7a2319bb2',\n    '4613f3bca5c44ea06337a9e439fbc6d42e501d0a',\n    'd343b217de44030afaa275f54d31a9317c7f441e',\n    '84ef4b2357079cd7a7c69fd7a37cd0609a679106',\n    'da2fef9e4a3230988ff17df2165440f37e8b1708',\n    'f4c64518ea10f995918a454158c6b61407ea345c',\n    '7602b46df5390e432ef1c307d4f2c9ff6d65cc97',\n    'bb9bc244d798123fde783fcc1c72d3bb8c189413',\n    '807640a13483f8ac783c557fcdf27be11ea4ac7a',\n  ],\n  DAORefundContract: 'bf4ed7b27f1d666546e30d74d50d173d20bca754',\n}\n","import { Block } from '@ethereumjs/block'\nimport { ConsensusType, Hardfork } from '@ethereumjs/common'\nimport { StatelessVerkleStateManager } from '@ethereumjs/statemanager'\nimport { BlobEIP4844Transaction, Capability, isBlobEIP4844Tx } from '@ethereumjs/tx'\nimport {\n  Account,\n  Address,\n  BIGINT_0,\n  KECCAK256_NULL,\n  bigIntToBytes,\n  bytesToHex,\n  bytesToUnprefixedHex,\n  equalsBytes,\n  generateAddress,\n  hexToBytes,\n  short,\n} from '@ethereumjs/util'\nimport debugDefault from 'debug'\n\nimport { Bloom } from './bloom/index.js'\n\nimport type {\n  AfterTxEvent,\n  BaseTxReceipt,\n  EIP4844BlobTxReceipt,\n  PostByzantiumTxReceipt,\n  PreByzantiumTxReceipt,\n  RunTxOpts,\n  RunTxResult,\n  TxReceipt,\n} from './types.js'\nimport type { VM } from './vm.js'\nimport type { AccessList, AccessListItem, Common } from '@ethereumjs/common'\nimport type { EVM } from '@ethereumjs/evm'\nimport type {\n  AccessListEIP2930Transaction,\n  FeeMarketEIP1559Transaction,\n  LegacyTransaction,\n  TypedTransaction,\n} from '@ethereumjs/tx'\nconst { debug: createDebugLogger } = debugDefault\n\nconst debug = createDebugLogger('vm:tx')\nconst debugGas = createDebugLogger('vm:tx:gas')\n\nlet enableProfiler = false\nconst initLabel = 'EVM journal init, address/slot warming, fee validation'\nconst balanceNonceLabel = 'Balance/Nonce checks and update'\nconst executionLabel = 'Execution'\nconst logsGasBalanceLabel = 'Logs, gas usage, account/miner balances'\nconst accountsCleanUpLabel = 'Accounts clean up'\nconst accessListLabel = 'Access list label'\nconst journalCacheCleanUpLabel = 'Journal/cache cleanup'\nconst receiptsLabel = 'Receipts'\nconst entireTxLabel = 'Entire tx'\n\n/**\n * Returns the hardfork excluding the merge hf which has\n * no effect on the vm execution capabilities.\n *\n * This is particularly useful in executing/evaluating the transaction\n * when chain td is not available at many places to correctly set the\n * hardfork in for e.g. vm or txs or when the chain is not fully synced yet.\n *\n * @returns Hardfork name\n */\nfunction execHardfork(\n  hardfork: Hardfork | string,\n  preMergeHf: Hardfork | string\n): string | Hardfork {\n  return hardfork !== Hardfork.Paris ? hardfork : preMergeHf\n}\n\n/**\n * @ignore\n */\nexport async function runTx(this: VM, opts: RunTxOpts): Promise<RunTxResult> {\n  if (this._opts.profilerOpts?.reportAfterTx === true) {\n    enableProfiler = true\n  }\n\n  if (enableProfiler) {\n    const title = `Profiler run - Tx ${bytesToHex(opts.tx.hash())}`\n    // eslint-disable-next-line no-console\n    console.log(title)\n    // eslint-disable-next-line no-console\n    console.time(initLabel)\n    // eslint-disable-next-line no-console\n    console.time(entireTxLabel)\n  }\n\n  // create a reasonable default if no block is given\n  opts.block = opts.block ?? Block.fromBlockData({}, { common: this.common })\n\n  if (opts.skipHardForkValidation !== true) {\n    // Find and set preMerge hf for easy access later\n    const hfs = this.common.hardforks()\n    const preMergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined) - 1\n    // If no pre merge hf found, set it to first hf even if its merge\n    const preMergeHf = preMergeIndex >= 0 ? hfs[preMergeIndex].name : hfs[0].name\n\n    // If block and tx don't have a same hardfork, set tx hardfork to block\n    if (\n      execHardfork(opts.tx.common.hardfork(), preMergeHf) !==\n      execHardfork(opts.block.common.hardfork(), preMergeHf)\n    ) {\n      opts.tx.common.setHardfork(opts.block.common.hardfork())\n    }\n    if (\n      execHardfork(opts.block.common.hardfork(), preMergeHf) !==\n      execHardfork(this.common.hardfork(), preMergeHf)\n    ) {\n      // Block and VM's hardfork should match as well\n      const msg = _errorMsg('block has a different hardfork than the vm', this, opts.block, opts.tx)\n      throw new Error(msg)\n    }\n  }\n\n  if (opts.skipBlockGasLimitValidation !== true && opts.block.header.gasLimit < opts.tx.gasLimit) {\n    const msg = _errorMsg('tx has a higher gas limit than the block', this, opts.block, opts.tx)\n    throw new Error(msg)\n  }\n\n  // Ensure we start with a clear warmed accounts Map\n  await this.evm.journal.cleanup()\n\n  if (opts.reportAccessList === true) {\n    this.evm.journal.startReportingAccessList()\n  }\n\n  if (opts.reportPreimages === true) {\n    this.evm.journal.startReportingPreimages!()\n  }\n\n  await this.evm.journal.checkpoint()\n  if (this.DEBUG) {\n    debug('-'.repeat(100))\n    debug(`tx checkpoint`)\n  }\n\n  // Typed transaction specific setup tasks\n  if (\n    opts.tx.supports(Capability.EIP2718TypedTransaction) &&\n    this.common.isActivatedEIP(2718) === true\n  ) {\n    // Is it an Access List transaction?\n    if (this.common.isActivatedEIP(2930) === false) {\n      await this.evm.journal.revert()\n      const msg = _errorMsg(\n        'Cannot run transaction: EIP 2930 is not activated.',\n        this,\n        opts.block,\n        opts.tx\n      )\n      throw new Error(msg)\n    }\n    if (\n      opts.tx.supports(Capability.EIP1559FeeMarket) &&\n      this.common.isActivatedEIP(1559) === false\n    ) {\n      await this.evm.journal.revert()\n      const msg = _errorMsg(\n        'Cannot run transaction: EIP 1559 is not activated.',\n        this,\n        opts.block,\n        opts.tx\n      )\n      throw new Error(msg)\n    }\n\n    const castedTx = <AccessListEIP2930Transaction>opts.tx\n\n    for (const accessListItem of castedTx.AccessListJSON) {\n      this.evm.journal.addAlwaysWarmAddress(accessListItem.address, true)\n      for (const storageKey of accessListItem.storageKeys) {\n        this.evm.journal.addAlwaysWarmSlot(accessListItem.address, storageKey, true)\n      }\n    }\n  }\n\n  try {\n    const result = await _runTx.bind(this)(opts)\n    await this.evm.journal.commit()\n    if (this.DEBUG) {\n      debug(`tx checkpoint committed`)\n    }\n    return result\n  } catch (e: any) {\n    await this.evm.journal.revert()\n    if (this.DEBUG) {\n      debug(`tx checkpoint reverted`)\n    }\n    throw e\n  } finally {\n    if (this.common.isActivatedEIP(2929) === true) {\n      this.evm.journal.cleanJournal()\n    }\n    this.evm.stateManager.originalStorageCache.clear()\n    if (enableProfiler) {\n      // eslint-disable-next-line no-console\n      console.timeEnd(entireTxLabel)\n      const logs = (<EVM>this.evm).getPerformanceLogs()\n      if (logs.precompiles.length === 0 && logs.opcodes.length === 0) {\n        // eslint-disable-next-line no-console\n        console.log('No precompile or opcode execution.')\n      }\n      this.emitEVMProfile(logs.precompiles, 'Precompile performance')\n      this.emitEVMProfile(logs.opcodes, 'Opcodes performance')\n      ;(<EVM>this.evm).clearPerformanceLogs()\n    }\n  }\n}\n\nasync function _runTx(this: VM, opts: RunTxOpts): Promise<RunTxResult> {\n  const state = this.stateManager\n\n  let stateAccesses\n  if (this.common.isActivatedEIP(6800)) {\n    if (!(this.stateManager instanceof StatelessVerkleStateManager)) {\n      throw Error(`StatelessVerkleStateManager needed for execution of verkle blocks`)\n    }\n    stateAccesses = (this.stateManager as StatelessVerkleStateManager).accessWitness\n  }\n  let txAccesses = stateAccesses?.shallowCopy()\n\n  const { tx, block } = opts\n\n  if (!block) {\n    throw new Error('block required')\n  }\n\n  /**\n   * The `beforeTx` event\n   *\n   * @event Event: beforeTx\n   * @type {Object}\n   * @property {Transaction} tx emits the Transaction that is about to be processed\n   */\n  await this._emit('beforeTx', tx)\n\n  const caller = tx.getSenderAddress()\n  if (this.DEBUG) {\n    debug(\n      `New tx run hash=${\n        opts.tx.isSigned() ? bytesToHex(opts.tx.hash()) : 'unsigned'\n      } sender=${caller}`\n    )\n  }\n\n  if (this.common.isActivatedEIP(2929) === true) {\n    // Add origin and precompiles to warm addresses\n    const activePrecompiles = this.evm.precompiles\n    for (const [addressStr] of activePrecompiles.entries()) {\n      this.evm.journal.addAlwaysWarmAddress(addressStr)\n    }\n    this.evm.journal.addAlwaysWarmAddress(caller.toString())\n    if (tx.to !== undefined) {\n      // Note: in case we create a contract, we do this in EVMs `_executeCreate` (this is also correct in inner calls, per the EIP)\n      this.evm.journal.addAlwaysWarmAddress(bytesToUnprefixedHex(tx.to.bytes))\n    }\n    if (this.common.isActivatedEIP(3651) === true) {\n      this.evm.journal.addAlwaysWarmAddress(bytesToUnprefixedHex(block.header.coinbase.bytes))\n    }\n  }\n\n  // Validate gas limit against tx base fee (DataFee + TxFee + Creation Fee)\n  const txBaseFee = tx.getBaseFee()\n  let gasLimit = tx.gasLimit\n  if (gasLimit < txBaseFee) {\n    const msg = _errorMsg(\n      `tx gas limit ${Number(gasLimit)} is lower than the minimum gas limit of ${Number(\n        txBaseFee\n      )}`,\n      this,\n      block,\n      tx\n    )\n    throw new Error(msg)\n  }\n  gasLimit -= txBaseFee\n  if (this.DEBUG) {\n    debugGas(`Subtracting base fee (${txBaseFee}) from gasLimit (-> ${gasLimit})`)\n  }\n\n  if (this.common.isActivatedEIP(1559) === true) {\n    // EIP-1559 spec:\n    // Ensure that the user was willing to at least pay the base fee\n    // assert transaction.max_fee_per_gas >= block.base_fee_per_gas\n    const maxFeePerGas = 'maxFeePerGas' in tx ? tx.maxFeePerGas : tx.gasPrice\n    const baseFeePerGas = block.header.baseFeePerGas!\n    if (maxFeePerGas < baseFeePerGas) {\n      const msg = _errorMsg(\n        `Transaction's ${\n          'maxFeePerGas' in tx ? 'maxFeePerGas' : 'gasPrice'\n        } (${maxFeePerGas}) is less than the block's baseFeePerGas (${baseFeePerGas})`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n  }\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(initLabel)\n    // eslint-disable-next-line no-console\n    console.time(balanceNonceLabel)\n  }\n\n  // Check from account's balance and nonce\n  let fromAccount = await state.getAccount(caller)\n  if (fromAccount === undefined) {\n    fromAccount = new Account()\n  }\n  const { nonce, balance } = fromAccount\n  if (this.DEBUG) {\n    debug(`Sender's pre-tx balance is ${balance}`)\n  }\n  // EIP-3607: Reject transactions from senders with deployed code\n  if (\n    this.common.isActivatedEIP(3607) === true &&\n    !equalsBytes(fromAccount.codeHash, KECCAK256_NULL)\n  ) {\n    const msg = _errorMsg('invalid sender address, address is not EOA (EIP-3607)', this, block, tx)\n    throw new Error(msg)\n  }\n\n  let upfrontAwGas = BIGINT_0\n  if (this.common.isActivatedEIP(6800)) {\n    upfrontAwGas += txAccesses!.touchTxOriginAndComputeGas(caller)\n    const sendsValue = tx.value !== BIGINT_0\n    if (tx.to !== undefined) {\n      upfrontAwGas += txAccesses!.touchTxExistingAndComputeGas(tx.to, { sendsValue })\n      debug(`Sender upfront awGas requirement for non contract creation tx is ${upfrontAwGas}`)\n    } else {\n      const contractTo = new Address(generateAddress(caller.bytes, bigIntToBytes(nonce)))\n      upfrontAwGas += txAccesses!.touchAndChargeContractCreateInit(contractTo, { sendsValue })\n      debug(\n        `Sender upfront awGas requirement is contract creation at=${short(\n          contractTo.bytes\n        )} is ${upfrontAwGas}`\n      )\n    }\n\n    // reset txAccesses to remove the caches so that access gas can be correctly consumed inside the evm run\n    txAccesses = stateAccesses?.shallowCopy()\n  }\n\n  // Check balance against upfront tx cost\n  const upFrontCost = tx.getUpfrontCost(block.header.baseFeePerGas) + upfrontAwGas\n  if (balance < upFrontCost) {\n    if (opts.skipBalance === true && fromAccount.balance < upFrontCost) {\n      if (tx.supports(Capability.EIP1559FeeMarket) === false) {\n        // if skipBalance and not EIP1559 transaction, ensure caller balance is enough to run transaction\n        fromAccount.balance = upFrontCost\n        await this.evm.journal.putAccount(caller, fromAccount)\n      }\n    } else {\n      const msg = _errorMsg(\n        `sender doesn't have enough funds to send tx. The upfront cost is: ${upFrontCost} and the sender's account (${caller}) only has: ${balance}`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n  }\n\n  // Check balance against max potential cost (for EIP 1559 and 4844)\n  let maxCost = tx.value\n  let blobGasPrice = BIGINT_0\n  let totalblobGas = BIGINT_0\n  if (tx.supports(Capability.EIP1559FeeMarket)) {\n    // EIP-1559 spec:\n    // The signer must be able to afford the transaction\n    // `assert balance >= gas_limit * max_fee_per_gas`\n    maxCost += tx.gasLimit * (tx as FeeMarketEIP1559Transaction).maxFeePerGas\n  }\n\n  if (tx instanceof BlobEIP4844Transaction) {\n    if (!this.common.isActivatedEIP(4844)) {\n      const msg = _errorMsg('blob transactions are only valid with EIP4844 active', this, block, tx)\n      throw new Error(msg)\n    }\n    // EIP-4844 spec\n    // the signer must be able to afford the transaction\n    // assert signer(tx).balance >= tx.message.gas * tx.message.max_fee_per_gas + get_total_data_gas(tx) * tx.message.max_fee_per_data_gas\n    const castTx = tx as BlobEIP4844Transaction\n    totalblobGas = castTx.common.param('gasConfig', 'blobGasPerBlob') * BigInt(castTx.numBlobs())\n    maxCost += totalblobGas * castTx.maxFeePerBlobGas\n\n    // 4844 minimum blobGas price check\n    if (opts.block === undefined) {\n      const msg = _errorMsg(\n        `Block option must be supplied to compute blob gas price`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n    blobGasPrice = opts.block.header.getBlobGasPrice()\n    if (castTx.maxFeePerBlobGas < blobGasPrice) {\n      const msg = _errorMsg(\n        `Transaction's maxFeePerBlobGas ${castTx.maxFeePerBlobGas}) is less than block blobGasPrice (${blobGasPrice}).`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n  }\n\n  if (fromAccount.balance < maxCost) {\n    if (opts.skipBalance === true && fromAccount.balance < maxCost) {\n      // if skipBalance, ensure caller balance is enough to run transaction\n      fromAccount.balance = maxCost\n      await this.evm.journal.putAccount(caller, fromAccount)\n    } else {\n      const msg = _errorMsg(\n        `sender doesn't have enough funds to send tx. The max cost is: ${maxCost} and the sender's account (${caller}) only has: ${balance}`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n  }\n\n  if (opts.skipNonce !== true) {\n    if (nonce !== tx.nonce) {\n      const msg = _errorMsg(\n        `the tx doesn't have the correct nonce. account has nonce of: ${nonce} tx has nonce of: ${tx.nonce}`,\n        this,\n        block,\n        tx\n      )\n      throw new Error(msg)\n    }\n  }\n\n  let gasPrice: bigint\n  let inclusionFeePerGas: bigint\n  // EIP-1559 tx\n  if (tx.supports(Capability.EIP1559FeeMarket)) {\n    // TODO make txs use the new getEffectivePriorityFee\n    const baseFee = block.header.baseFeePerGas!\n    inclusionFeePerGas = tx.getEffectivePriorityFee(baseFee)\n\n    gasPrice = inclusionFeePerGas + baseFee\n  } else {\n    // Have to cast as legacy tx since EIP1559 tx does not have gas price\n    gasPrice = (<LegacyTransaction>tx).gasPrice\n    if (this.common.isActivatedEIP(1559) === true) {\n      const baseFee = block.header.baseFeePerGas!\n      inclusionFeePerGas = (<LegacyTransaction>tx).gasPrice - baseFee\n    }\n  }\n\n  // EIP-4844 tx\n  let blobVersionedHashes\n  if (tx instanceof BlobEIP4844Transaction) {\n    blobVersionedHashes = (tx as BlobEIP4844Transaction).blobVersionedHashes\n  }\n\n  // Update from account's balance\n  const txCost = tx.gasLimit * gasPrice\n  const blobGasCost = totalblobGas * blobGasPrice\n  fromAccount.balance -= txCost\n  fromAccount.balance -= blobGasCost\n  if (opts.skipBalance === true && fromAccount.balance < BIGINT_0) {\n    fromAccount.balance = BIGINT_0\n  }\n  await this.evm.journal.putAccount(caller, fromAccount)\n  if (this.DEBUG) {\n    debug(`Update fromAccount (caller) balance (-> ${fromAccount.balance}))`)\n  }\n  let executionTimerPrecise: number\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(balanceNonceLabel)\n    executionTimerPrecise = performance.now()\n  }\n\n  /*\n   * Execute message\n   */\n  const { value, data, to } = tx\n\n  if (this.DEBUG) {\n    debug(\n      `Running tx=${\n        tx.isSigned() ? bytesToHex(tx.hash()) : 'unsigned'\n      } with caller=${caller} gasLimit=${gasLimit} to=${\n        to?.toString() ?? 'none'\n      } value=${value} data=${short(data)}`\n    )\n  }\n\n  const results = (await this.evm.runCall({\n    block,\n    gasPrice,\n    caller,\n    gasLimit,\n    to,\n    value,\n    data,\n    blobVersionedHashes,\n    accessWitness: txAccesses,\n  })) as RunTxResult\n\n  if (this.common.isActivatedEIP(6800)) {\n    stateAccesses?.merge(txAccesses!)\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.log(`${executionLabel}: ${performance.now() - executionTimerPrecise!}ms`)\n    // eslint-disable-next-line no-console\n    console.log('[ For execution details see table output ]')\n    // eslint-disable-next-line no-console\n    console.time(logsGasBalanceLabel)\n  }\n\n  if (this.DEBUG) {\n    debug(`Update fromAccount (caller) nonce (-> ${fromAccount.nonce})`)\n  }\n\n  if (this.DEBUG) {\n    const { executionGasUsed, exceptionError, returnValue } = results.execResult\n    debug('-'.repeat(100))\n    debug(\n      `Received tx execResult: [ executionGasUsed=${executionGasUsed} exceptionError=${\n        exceptionError !== undefined ? `'${exceptionError.error}'` : 'none'\n      } returnValue=${short(returnValue)} gasRefund=${results.gasRefund ?? 0} ]`\n    )\n  }\n\n  /*\n   * Parse results\n   */\n  // Generate the bloom for the tx\n  results.bloom = txLogsBloom(results.execResult.logs, this.common)\n  if (this.DEBUG) {\n    debug(`Generated tx bloom with logs=${results.execResult.logs?.length}`)\n  }\n\n  // Calculate the total gas used\n  results.totalGasSpent = results.execResult.executionGasUsed + txBaseFee\n  if (this.DEBUG) {\n    debugGas(`tx add baseFee ${txBaseFee} to totalGasSpent (-> ${results.totalGasSpent})`)\n  }\n\n  // Add blob gas used to result\n  if (isBlobEIP4844Tx(tx)) {\n    results.blobGasUsed = totalblobGas\n  }\n\n  // Process any gas refund\n  let gasRefund = results.execResult.gasRefund ?? BIGINT_0\n  results.gasRefund = gasRefund\n  const maxRefundQuotient = this.common.param('gasConfig', 'maxRefundQuotient')\n  if (gasRefund !== BIGINT_0) {\n    const maxRefund = results.totalGasSpent / maxRefundQuotient\n    gasRefund = gasRefund < maxRefund ? gasRefund : maxRefund\n    results.totalGasSpent -= gasRefund\n    if (this.DEBUG) {\n      debug(`Subtract tx gasRefund (${gasRefund}) from totalGasSpent (-> ${results.totalGasSpent})`)\n    }\n  } else {\n    if (this.DEBUG) {\n      debug(`No tx gasRefund`)\n    }\n  }\n  results.amountSpent = results.totalGasSpent * gasPrice\n\n  // Update sender's balance\n  fromAccount = await state.getAccount(caller)\n  if (fromAccount === undefined) {\n    fromAccount = new Account()\n  }\n  const actualTxCost = results.totalGasSpent * gasPrice\n  const txCostDiff = txCost - actualTxCost\n  fromAccount.balance += txCostDiff\n  await this.evm.journal.putAccount(caller, fromAccount)\n  if (this.DEBUG) {\n    debug(\n      `Refunded txCostDiff (${txCostDiff}) to fromAccount (caller) balance (-> ${fromAccount.balance})`\n    )\n  }\n\n  // Update miner's balance\n  let miner\n  if (this.common.consensusType() === ConsensusType.ProofOfAuthority) {\n    miner = block.header.cliqueSigner()\n  } else {\n    miner = block.header.coinbase\n  }\n\n  let minerAccount = await state.getAccount(miner)\n  if (minerAccount === undefined) {\n    if (this.common.isActivatedEIP(6800)) {\n      ;(state as StatelessVerkleStateManager).accessWitness!.touchAndChargeProofOfAbsence(miner)\n    }\n    minerAccount = new Account()\n  }\n  // add the amount spent on gas to the miner's account\n  results.minerValue =\n    this.common.isActivatedEIP(1559) === true\n      ? results.totalGasSpent * inclusionFeePerGas!\n      : results.amountSpent\n  minerAccount.balance += results.minerValue\n\n  if (this.common.isActivatedEIP(6800)) {\n    // use this utility to build access but the computed gas is not charged and hence free\n    ;(state as StatelessVerkleStateManager).accessWitness!.touchTxExistingAndComputeGas(miner, {\n      sendsValue: true,\n    })\n  }\n\n  // Put the miner account into the state. If the balance of the miner account remains zero, note that\n  // the state.putAccount function puts this into the \"touched\" accounts. This will thus be removed when\n  // we clean the touched accounts below in case we are in a fork >= SpuriousDragon\n  await this.evm.journal.putAccount(miner, minerAccount)\n  if (this.DEBUG) {\n    debug(`tx update miner account (${miner}) balance (-> ${minerAccount.balance})`)\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(logsGasBalanceLabel)\n    // eslint-disable-next-line no-console\n    console.time(accountsCleanUpLabel)\n  }\n\n  /*\n   * Cleanup accounts\n   */\n  if (results.execResult.selfdestruct !== undefined) {\n    for (const addressToSelfdestructHex of results.execResult.selfdestruct) {\n      const address = new Address(hexToBytes(addressToSelfdestructHex))\n      if (this.common.isActivatedEIP(6780)) {\n        // skip cleanup of addresses not in createdAddresses\n        if (!results.execResult.createdAddresses!.has(address.toString())) {\n          continue\n        }\n      }\n      await this.evm.journal.deleteAccount(address)\n      if (this.DEBUG) {\n        debug(`tx selfdestruct on address=${address}`)\n      }\n    }\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(accountsCleanUpLabel)\n    // eslint-disable-next-line no-console\n    console.time(accessListLabel)\n  }\n\n  if (opts.reportAccessList === true && this.common.isActivatedEIP(2930)) {\n    // Convert the Map to the desired type\n    const accessList: AccessList = []\n    for (const [address, set] of this.evm.journal.accessList!) {\n      const addressPrefixed = '0x' + address\n      const item: AccessListItem = {\n        address: addressPrefixed,\n        storageKeys: [],\n      }\n      for (const slot of set) {\n        const slotPrefixed = '0x' + slot\n        item.storageKeys.push(slotPrefixed)\n      }\n      accessList.push(item)\n    }\n\n    results.accessList = accessList\n  }\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(accessListLabel)\n    // eslint-disable-next-line no-console\n    console.time(journalCacheCleanUpLabel)\n  }\n\n  if (opts.reportPreimages === true && this.evm.journal.preimages !== undefined) {\n    results.preimages = this.evm.journal.preimages\n  }\n\n  await this.evm.journal.cleanup()\n  state.originalStorageCache.clear()\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(journalCacheCleanUpLabel)\n    // eslint-disable-next-line no-console\n    console.time(receiptsLabel)\n  }\n\n  // Generate the tx receipt\n  const gasUsed = opts.blockGasUsed !== undefined ? opts.blockGasUsed : block.header.gasUsed\n  const cumulativeGasUsed = gasUsed + results.totalGasSpent\n  results.receipt = await generateTxReceipt.bind(this)(\n    tx,\n    results,\n    cumulativeGasUsed,\n    totalblobGas,\n    blobGasPrice\n  )\n\n  if (enableProfiler) {\n    // eslint-disable-next-line no-console\n    console.timeEnd(receiptsLabel)\n  }\n\n  /**\n   * The `afterTx` event\n   *\n   * @event Event: afterTx\n   * @type {Object}\n   * @property {Object} result result of the transaction\n   */\n  const event: AfterTxEvent = { transaction: tx, ...results }\n  await this._emit('afterTx', event)\n  if (this.DEBUG) {\n    debug(\n      `tx run finished hash=${\n        opts.tx.isSigned() ? bytesToHex(opts.tx.hash()) : 'unsigned'\n      } sender=${caller}`\n    )\n  }\n\n  return results\n}\n\n/**\n * @method txLogsBloom\n * @private\n */\nfunction txLogsBloom(logs?: any[], common?: Common): Bloom {\n  const bloom = new Bloom(undefined, common)\n  if (logs) {\n    for (let i = 0; i < logs.length; i++) {\n      const log = logs[i]\n      // add the address\n      bloom.add(log[0])\n      // add the topics\n      const topics = log[1]\n      for (let q = 0; q < topics.length; q++) {\n        bloom.add(topics[q])\n      }\n    }\n  }\n  return bloom\n}\n\n/**\n * Returns the tx receipt.\n * @param this The vm instance\n * @param tx The transaction\n * @param txResult The tx result\n * @param cumulativeGasUsed The gas used in the block including this tx\n * @param blobGasUsed The blob gas used in the tx\n * @param blobGasPrice The blob gas price for the block including this tx\n */\nexport async function generateTxReceipt(\n  this: VM,\n  tx: TypedTransaction,\n  txResult: RunTxResult,\n  cumulativeGasUsed: bigint,\n  blobGasUsed?: bigint,\n  blobGasPrice?: bigint\n): Promise<TxReceipt> {\n  const baseReceipt: BaseTxReceipt = {\n    cumulativeBlockGasUsed: cumulativeGasUsed,\n    bitvector: txResult.bloom.bitvector,\n    logs: txResult.execResult.logs ?? [],\n  }\n\n  let receipt\n  if (this.DEBUG) {\n    debug(\n      `Generate tx receipt transactionType=${\n        tx.type\n      } cumulativeBlockGasUsed=${cumulativeGasUsed} bitvector=${short(baseReceipt.bitvector)} (${\n        baseReceipt.bitvector.length\n      } bytes) logs=${baseReceipt.logs.length}`\n    )\n  }\n\n  if (!tx.supports(Capability.EIP2718TypedTransaction)) {\n    // Legacy transaction\n    if (this.common.gteHardfork(Hardfork.Byzantium) === true) {\n      // Post-Byzantium\n      receipt = {\n        status: txResult.execResult.exceptionError !== undefined ? 0 : 1, // Receipts have a 0 as status on error\n        ...baseReceipt,\n      } as PostByzantiumTxReceipt\n    } else {\n      // Pre-Byzantium\n      const stateRoot = await this.stateManager.getStateRoot()\n      receipt = {\n        stateRoot,\n        ...baseReceipt,\n      } as PreByzantiumTxReceipt\n    }\n  } else {\n    // Typed EIP-2718 Transaction\n    if (isBlobEIP4844Tx(tx)) {\n      receipt = {\n        blobGasUsed,\n        blobGasPrice,\n        status: txResult.execResult.exceptionError ? 0 : 1,\n        ...baseReceipt,\n      } as EIP4844BlobTxReceipt\n    } else {\n      receipt = {\n        status: txResult.execResult.exceptionError ? 0 : 1,\n        ...baseReceipt,\n      } as PostByzantiumTxReceipt\n    }\n  }\n  return receipt\n}\n\n/**\n * Internal helper function to create an annotated error message\n *\n * @param msg Base error message\n * @hidden\n */\nfunction _errorMsg(msg: string, vm: VM, block: Block, tx: TypedTransaction) {\n  const blockErrorStr = 'errorStr' in block ? block.errorStr() : 'block'\n  const txErrorStr = 'errorStr' in tx ? tx.errorStr() : 'tx'\n\n  const errorMsg = `${msg} (${vm.errorStr()} -> ${blockErrorStr} -> ${txErrorStr})`\n  return errorMsg\n}\n","import { Blockchain } from '@ethereumjs/blockchain'\nimport { Chain, Common } from '@ethereumjs/common'\nimport { EVM, getActivePrecompiles } from '@ethereumjs/evm'\nimport { DefaultStateManager } from '@ethereumjs/statemanager'\nimport { Account, Address, AsyncEventEmitter, unprefixedHexToBytes } from '@ethereumjs/util'\n\nimport { buildBlock } from './buildBlock.js'\nimport { runBlock } from './runBlock.js'\nimport { runTx } from './runTx.js'\n\nimport type { BlockBuilder } from './buildBlock.js'\nimport type {\n  BuildBlockOpts,\n  RunBlockOpts,\n  RunBlockResult,\n  RunTxOpts,\n  RunTxResult,\n  VMEvents,\n  VMOpts,\n} from './types.js'\nimport type { BlockchainInterface } from '@ethereumjs/blockchain'\nimport type { EVMStateManagerInterface } from '@ethereumjs/common'\nimport type { EVMInterface } from '@ethereumjs/evm'\nimport type { EVMPerformanceLogOutput } from '@ethereumjs/evm/dist/cjs/logger.js'\nimport type { BigIntLike } from '@ethereumjs/util'\n\n/**\n * Execution engine which can be used to run a blockchain, individual\n * blocks, individual transactions, or snippets of EVM bytecode.\n *\n * This class is an AsyncEventEmitter, please consult the README to learn how to use it.\n */\nexport class VM {\n  /**\n   * The StateManager used by the VM\n   */\n  readonly stateManager: EVMStateManagerInterface\n\n  /**\n   * The blockchain the VM operates on\n   */\n  readonly blockchain: BlockchainInterface\n\n  readonly common: Common\n\n  readonly events: AsyncEventEmitter<VMEvents>\n  /**\n   * The EVM used for bytecode execution\n   */\n  readonly evm: EVMInterface\n\n  protected readonly _opts: VMOpts\n  protected _isInitialized: boolean = false\n\n  protected readonly _setHardfork: boolean | BigIntLike\n\n  /**\n   * Cached emit() function, not for public usage\n   * set to public due to implementation internals\n   * @hidden\n   */\n  public readonly _emit: (topic: string, data: any) => Promise<void>\n\n  /**\n   * VM is run in DEBUG mode (default: false)\n   * Taken from DEBUG environment variable\n   *\n   * Safeguards on debug() calls are added for\n   * performance reasons to avoid string literal evaluation\n   * @hidden\n   */\n  readonly DEBUG: boolean = false\n\n  /**\n   * VM async constructor. Creates engine instance and initializes it.\n   *\n   * @param opts VM engine constructor options\n   */\n  static async create(opts: VMOpts = {}): Promise<VM> {\n    // Save if a `StateManager` was passed (for activatePrecompiles)\n    const didPassStateManager = opts.stateManager !== undefined\n\n    // Add common, SM, blockchain, EVM here\n    if (opts.common === undefined) {\n      opts.common = new Common({ chain: Chain.Mainnet })\n    }\n\n    if (opts.stateManager === undefined) {\n      opts.stateManager = new DefaultStateManager({ common: opts.common })\n    }\n\n    if (opts.blockchain === undefined) {\n      opts.blockchain = await Blockchain.create({ common: opts.common })\n    }\n\n    const genesisState = opts.genesisState ?? {}\n    if (opts.genesisState !== undefined) {\n      await opts.stateManager.generateCanonicalGenesis(genesisState)\n    }\n\n    if (opts.profilerOpts !== undefined) {\n      const profilerOpts = opts.profilerOpts\n      if (profilerOpts.reportAfterBlock === true && profilerOpts.reportAfterTx === true) {\n        throw new Error(\n          'Cannot have `reportProfilerAfterBlock` and `reportProfilerAfterTx` set to `true` at the same time'\n        )\n      }\n    }\n\n    if (opts.evm === undefined) {\n      let enableProfiler = false\n      if (\n        opts.profilerOpts?.reportAfterBlock === true ||\n        opts.profilerOpts?.reportAfterTx === true\n      ) {\n        enableProfiler = true\n      }\n      opts.evm = await EVM.create({\n        common: opts.common,\n        stateManager: opts.stateManager,\n        blockchain: opts.blockchain,\n        profiler: {\n          enabled: enableProfiler,\n        },\n      })\n    }\n\n    if (opts.activatePrecompiles === true && !didPassStateManager) {\n      await opts.evm.journal.checkpoint()\n      // put 1 wei in each of the precompiles in order to make the accounts non-empty and thus not have them deduct `callNewAccount` gas.\n      for (const [addressStr] of getActivePrecompiles(opts.common)) {\n        const address = new Address(unprefixedHexToBytes(addressStr))\n        let account = await opts.evm.stateManager.getAccount(address)\n        // Only do this if it is not overridden in genesis\n        // Note: in the case that custom genesis has storage fields, this is preserved\n        if (account === undefined) {\n          account = new Account()\n          const newAccount = Account.fromAccountData({\n            balance: 1,\n            storageRoot: account.storageRoot,\n          })\n          await opts.evm.stateManager.putAccount(address, newAccount)\n        }\n      }\n      await opts.evm.journal.commit()\n    }\n\n    return new VM(opts)\n  }\n\n  /**\n   * Instantiates a new {@link VM} Object.\n   *\n   * @deprecated The direct usage of this constructor is discouraged since\n   * non-finalized async initialization might lead to side effects. Please\n   * use the async {@link VM.create} constructor instead (same API).\n   * @param opts\n   */\n  protected constructor(opts: VMOpts = {}) {\n    this.common = opts.common!\n    this.stateManager = opts.stateManager!\n    this.blockchain = opts.blockchain!\n    this.evm = opts.evm!\n\n    this.events = new AsyncEventEmitter<VMEvents>()\n\n    this._opts = opts\n\n    this._setHardfork = opts.setHardfork ?? false\n\n    this._emit = async (topic: string, data: any): Promise<void> => {\n      return new Promise((resolve) => this.events.emit(topic as keyof VMEvents, data, resolve))\n    }\n\n    // Skip DEBUG calls unless 'ethjs' included in environmental DEBUG variables\n    // Additional window check is to prevent vite browser bundling (and potentially other) to break\n    this.DEBUG =\n      typeof window === 'undefined' ? process?.env?.DEBUG?.includes('ethjs') ?? false : false\n  }\n\n  /**\n   * Processes the `block` running all of the transactions it contains and updating the miner's account\n   *\n   * This method modifies the state. If `generate` is `true`, the state modifications will be\n   * reverted if an exception is raised. If it's `false`, it won't revert if the block's header is\n   * invalid. If an error is thrown from an event handler, the state may or may not be reverted.\n   *\n   * @param {RunBlockOpts} opts - Default values for options:\n   *  - `generate`: false\n   */\n  async runBlock(opts: RunBlockOpts): Promise<RunBlockResult> {\n    return runBlock.bind(this)(opts)\n  }\n\n  /**\n   * Process a transaction. Run the vm. Transfers eth. Checks balances.\n   *\n   * This method modifies the state. If an error is thrown, the modifications are reverted, except\n   * when the error is thrown from an event handler. In the latter case the state may or may not be\n   * reverted.\n   *\n   * @param {RunTxOpts} opts\n   */\n  async runTx(opts: RunTxOpts): Promise<RunTxResult> {\n    return runTx.bind(this)(opts)\n  }\n\n  /**\n   * Build a block on top of the current state\n   * by adding one transaction at a time.\n   *\n   * Creates a checkpoint on the StateManager and modifies the state\n   * as transactions are run. The checkpoint is committed on {@link BlockBuilder.build}\n   * or discarded with {@link BlockBuilder.revert}.\n   *\n   * @param {BuildBlockOpts} opts\n   * @returns An instance of {@link BlockBuilder} with methods:\n   * - {@link BlockBuilder.addTransaction}\n   * - {@link BlockBuilder.build}\n   * - {@link BlockBuilder.revert}\n   */\n  async buildBlock(opts: BuildBlockOpts): Promise<BlockBuilder> {\n    return buildBlock.bind(this)(opts)\n  }\n\n  /**\n   * Returns a copy of the {@link VM} instance.\n   *\n   * Note that the returned copy will share the same db as the original for the blockchain and the statemanager.\n   *\n   * Associated caches will be deleted and caches will be re-initialized for a more short-term focused\n   * usage, being less memory intense (the statemanager caches will switch to using an ORDERED_MAP cache\n   * datastructure more suitable for short-term usage, the trie node LRU cache will not be activated at all).\n   * To fine-tune this behavior (if the shallow-copy-returned object has a longer life span e.g.) you can set\n   * the `downlevelCaches` option to `false`.\n   *\n   * @param downlevelCaches Downlevel (so: adopted for short-term usage) associated state caches (default: true)\n   */\n  async shallowCopy(downlevelCaches = true): Promise<VM> {\n    const common = this.common.copy()\n    common.setHardfork(this.common.hardfork())\n    const blockchain = this.blockchain.shallowCopy()\n    const stateManager = this.stateManager.shallowCopy(downlevelCaches)\n    const evmOpts = {\n      ...(this.evm as any)._optsCached,\n      common,\n      blockchain,\n      stateManager,\n    }\n    const evmCopy = await EVM.create(evmOpts) // TODO fixme (should copy the EVMInterface, not default EVM)\n    return VM.create({\n      stateManager,\n      blockchain: this.blockchain,\n      common,\n      evm: evmCopy,\n      setHardfork: this._setHardfork,\n      profilerOpts: this._opts.profilerOpts,\n    })\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  errorStr() {\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n    const errorStr = `vm hf=${hf}`\n    return errorStr\n  }\n\n  /**\n   * Emit EVM profile logs\n   * @param logs\n   * @param profileTitle\n   * @hidden\n   */\n  emitEVMProfile(logs: EVMPerformanceLogOutput[], profileTitle: string) {\n    if (logs.length === 0) {\n      return\n    }\n\n    // Track total calls / time (ms) / gas\n\n    let calls = 0\n    let totalMs = 0\n    let totalGas = 0\n\n    // Order of columns to report (see `EVMPerformanceLogOutput` type)\n\n    const colOrder = [\n      'tag',\n      'calls',\n      'avgTimePerCall',\n      'totalTime',\n      'staticGasUsed',\n      'dynamicGasUsed',\n      'gasUsed',\n      'staticGas',\n      'millionGasPerSecond',\n      'blocksPerSlot',\n    ]\n\n    // The name of this column to report (saves space)\n    const colNames = [\n      'tag',\n      'calls',\n      'ms/call',\n      'total (ms)',\n      'sgas',\n      'dgas',\n      'total (s+d)',\n      'static fee',\n      'Mgas/s',\n      'BpS',\n    ]\n\n    // Special padStr method which inserts whitespace left and right\n    // This ensures that there is at least one whitespace between the columns (denoted by pipe `|` chars)\n    function padStr(str: string | number, leftpad: number) {\n      return ' ' + str.toString().padStart(leftpad, ' ') + ' '\n    }\n    // Returns the string length of this column. Used to calculate how big the header / footer should be\n    function strLen(str: string | number) {\n      return padStr(str, 0).length - 2\n    }\n\n    // Step one: calculate the length of each colum\n    const colLength: number[] = []\n\n    for (const entry of logs) {\n      let ins = 0\n      colLength[ins] = Math.max(colLength[ins] ?? 0, strLen(colNames[ins]))\n      for (const key of colOrder) {\n        // @ts-ignore\n        if (entry[key] !== undefined) {\n          // If entry is available, max out the current column length (this will be the longest string of this column)\n          //@ts-ignore\n          colLength[ins] = Math.max(colLength[ins] ?? 0, strLen(entry[key]))\n          ins++\n          // In this switch statement update the total calls / time / gas used\n          switch (key) {\n            case 'calls':\n              calls += entry[key]\n              break\n            case 'totalTime':\n              totalMs += entry[key]\n              break\n            case 'gasUsed':\n              totalGas += entry[key]\n              break\n          }\n        }\n      }\n    }\n\n    // Ensure that the column names also fit on the column length\n    for (const i in colLength) {\n      colLength[i] = Math.max(colLength[i] ?? 0, strLen(colNames[i]))\n    }\n\n    // Calculate the total header length\n    // This is done by summing all columns together, plus adding three extra chars per column (two whitespace, one pipe)\n    // Remove the final pipe character since this is included in the header string (so subtract one)\n    const headerLength = colLength.reduce((pv, cv) => pv + cv, 0) + colLength.length * 3 - 1\n\n    const blockGasLimit = 30_000_000 // Block gas limit\n    const slotTime = 12000 // Time in milliseconds (!) per slot\n\n    // Normalize constant to check if execution time is above one block per slot (>=1) or not (<1)\n    const bpsNormalizer = blockGasLimit / slotTime\n\n    const avgGas = totalGas / totalMs // Gas per millisecond\n    const mGasSAvg = Math.round(avgGas) / 1e3\n    const bpSAvg = Math.round((avgGas / bpsNormalizer) * 1e3) / 1e3\n\n    // Write the profile title\n    // eslint-disable-next-line\n    console.log('+== ' + profileTitle + ' ==+')\n    // Write the summary of this profile\n    // eslint-disable-next-line\n    console.log(\n      `+== Calls: ${calls}, Total time: ${\n        Math.round(totalMs * 1e3) / 1e3\n      }ms, Total gas: ${totalGas}, MGas/s: ${mGasSAvg}, Blocks per Slot (BpS): ${bpSAvg} ==+`\n    )\n\n    // Generate and write the header\n    const header = '|' + '-'.repeat(headerLength) + '|'\n    // eslint-disable-next-line\n    console.log(header)\n\n    // Write the columns\n    let str = ''\n    for (const i in colLength) {\n      str += '|' + padStr(colNames[i], colLength[i])\n    }\n    str += '|'\n\n    // eslint-disable-next-line\n    console.log(str)\n\n    // Write each profile entry\n    for (const entry of logs) {\n      let str = ''\n      let i = 0\n      for (const key of colOrder) {\n        //@ts-ignore\n        if (entry[key] !== undefined) {\n          //@ts-ignore\n          str += '|' + padStr(entry[key], colLength[i])\n          i++\n        }\n      }\n      str += '|'\n      // eslint-disable-next-line\n      console.log(str)\n    }\n\n    // Finally, write the footer\n    const footer = '+' + '-'.repeat(headerLength) + '+'\n    // eslint-disable-next-line\n    console.log(footer)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): SignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => SignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number) {\n      return new Signature(this.r, this.s, recovery);\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery); // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash (not message: you need to hash it by yourself).\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param opts `lowS, extraEntropy, prehash`\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): Signature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = ut.createHmacDrbg<Signature>(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = {\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n};\n\nconst isoMap = htf.isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n      '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n      '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n      '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n      '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n      '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n      '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n      '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n      '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n      '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n      '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n);\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n  A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n  B: BigInt('1771'),\n  Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(\n  secp256k1.ProjectivePoint,\n  (scalars: bigint[]) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n  },\n  {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n  }\n);\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/*!\n * ansi-gray <https://github.com/jonschlinkert/ansi-gray>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar wrap = require('ansi-wrap');\n\nmodule.exports = function gray(message) {\n  return wrap(90, 39, message);\n};\n","'use strict';\n\nmodule.exports = function(a, b, msg) {\n  return '\\u001b['+ a + 'm' + msg + '\\u001b[' + b + 'm';\n};\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  // use default type for parsers\n  var opts = Object.create(options || null, {\n    type: {\n      configurable: true,\n      enumerable: true,\n      value: undefined,\n      writable: true\n    }\n  })\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\nvar JSON_SYNTAX_CHAR = '#'\nvar JSON_SYNTAX_REGEXP = /#+/g\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = ''\n\n  if (index !== -1) {\n    partial = str.substring(0, index) + JSON_SYNTAX_CHAR\n\n    for (var i = index + 1; i < str.length; i++) {\n      partial += JSON_SYNTAX_CHAR\n    }\n  }\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace(JSON_SYNTAX_REGEXP, function (placeholder) {\n        return str.substring(index, index + placeholder.length)\n      }),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  // light validation\n  if (stream === undefined) {\n    throw new TypeError('argument stream is required')\n  } else if (typeof stream !== 'object' || stream === null || typeof stream.on !== 'function') {\n    throw new TypeError('argument stream must be a stream')\n  }\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert = require('assert');\n\nvar Zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\nvar GZIP_HEADER_ID1 = 0x1f;\nvar GZIP_HEADER_ID2 = 0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {\n    throw new TypeError('Bad argument');\n  }\n\n  this.dictionary = null;\n  this.err = 0;\n  this.flush = 0;\n  this.init_done = false;\n  this.level = 0;\n  this.memLevel = 0;\n  this.mode = mode;\n  this.strategy = 0;\n  this.windowBits = 0;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.gzip_id_bytes_read = 0;\n}\n\nZlib.prototype.close = function () {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  assert(this.init_done, 'close before init');\n  assert(this.mode <= exports.UNZIP);\n\n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n\n  this.mode = exports.NONE;\n\n  this.dictionary = null;\n};\n\nZlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {\n  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {\n  assert.equal(arguments.length, 8);\n\n  assert(this.init_done, 'write before init');\n  assert(this.mode !== exports.NONE, 'already finalized');\n  assert.equal(false, this.write_in_progress, 'write already in progress');\n  assert.equal(false, this.pending_close, 'close is pending');\n\n  this.write_in_progress = true;\n\n  assert.equal(false, flush === undefined, 'must provide flush value');\n\n  this.write_in_progress = true;\n\n  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = Buffer.alloc(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  this.strm.avail_in = in_len;\n  this.strm.input = input;\n  this.strm.next_in = in_off;\n  this.strm.avail_out = out_len;\n  this.strm.output = out;\n  this.strm.next_out = out_off;\n  this.flush = flush;\n\n  if (!async) {\n    // sync version\n    this._process();\n\n    if (this._checkError()) {\n      return this._afterSync();\n    }\n    return;\n  }\n\n  // async version\n  var self = this;\n  process.nextTick(function () {\n    self._process();\n    self._after();\n  });\n\n  return this;\n};\n\nZlib.prototype._afterSync = function () {\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  return [avail_in, avail_out];\n};\n\nZlib.prototype._process = function () {\n  var next_expected_header_byte = null;\n\n  // If the avail_out is left at 0, then it means that it ran out\n  // of room.  If there was avail_out left over, then it means\n  // that all of the input was consumed.\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflate(this.strm, this.flush);\n      break;\n    case exports.UNZIP:\n      if (this.strm.avail_in > 0) {\n        next_expected_header_byte = this.strm.next_in;\n      }\n\n      switch (this.gzip_id_bytes_read) {\n        case 0:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {\n            this.gzip_id_bytes_read = 1;\n            next_expected_header_byte++;\n\n            if (this.strm.avail_in === 1) {\n              // The only available byte was already read.\n              break;\n            }\n          } else {\n            this.mode = exports.INFLATE;\n            break;\n          }\n\n        // fallthrough\n        case 1:\n          if (next_expected_header_byte === null) {\n            break;\n          }\n\n          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {\n            this.gzip_id_bytes_read = 2;\n            this.mode = exports.GUNZIP;\n          } else {\n            // There is no actual difference between INFLATE and INFLATERAW\n            // (after initialization).\n            this.mode = exports.INFLATE;\n          }\n\n          break;\n        default:\n          throw new Error('invalid number of gzip magic number bytes read');\n      }\n\n    // fallthrough\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      this.err = zlib_inflate.inflate(this.strm, this.flush\n\n      // If data was encoded with dictionary\n      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {\n        // Load it\n        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);\n        if (this.err === exports.Z_OK) {\n          // And try to decode again\n          this.err = zlib_inflate.inflate(this.strm, this.flush);\n        } else if (this.err === exports.Z_DATA_ERROR) {\n          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n          // Make it possible for After() to tell a bad dictionary from bad\n          // input.\n          this.err = exports.Z_NEED_DICT;\n        }\n      }\n      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {\n        // Bytes remain in input buffer. Perhaps this is another compressed\n        // member in the same archive, or just trailing garbage.\n        // Trailing zero bytes are okay, though, since they are frequently\n        // used for padding.\n\n        this.reset();\n        this.err = zlib_inflate.inflate(this.strm, this.flush);\n      }\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n};\n\nZlib.prototype._checkError = function () {\n  // Acceptable error states depend on the type of zlib stream.\n  switch (this.err) {\n    case exports.Z_OK:\n    case exports.Z_BUF_ERROR:\n      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {\n        this._error('unexpected end of file');\n        return false;\n      }\n      break;\n    case exports.Z_STREAM_END:\n      // normal statuses, not fatal\n      break;\n    case exports.Z_NEED_DICT:\n      if (this.dictionary == null) {\n        this._error('Missing dictionary');\n      } else {\n        this._error('Bad dictionary');\n      }\n      return false;\n    default:\n      // something else.\n      this._error('Zlib error');\n      return false;\n  }\n\n  return true;\n};\n\nZlib.prototype._after = function () {\n  if (!this._checkError()) {\n    return;\n  }\n\n  var avail_out = this.strm.avail_out;\n  var avail_in = this.strm.avail_in;\n\n  this.write_in_progress = false;\n\n  // call the write() cb\n  this.callback(avail_in, avail_out);\n\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype._error = function (message) {\n  if (this.strm.msg) {\n    message = this.strm.msg;\n  }\n  this.onerror(message, this.err\n\n  // no hope of rescue.\n  );this.write_in_progress = false;\n  if (this.pending_close) {\n    this.close();\n  }\n};\n\nZlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {\n  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');\n\n  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');\n  assert(level >= -1 && level <= 9, 'invalid compression level');\n\n  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');\n\n  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');\n\n  this._init(level, windowBits, memLevel, strategy, dictionary);\n  this._setDictionary();\n};\n\nZlib.prototype.params = function () {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset = function () {\n  this._reset();\n  this._setDictionary();\n};\n\nZlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {\n  this.level = level;\n  this.windowBits = windowBits;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n\n  this.flush = exports.Z_NO_FLUSH;\n\n  this.err = exports.Z_OK;\n\n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {\n    this.windowBits += 16;\n  }\n\n  if (this.mode === exports.UNZIP) {\n    this.windowBits += 32;\n  }\n\n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {\n    this.windowBits = -1 * this.windowBits;\n  }\n\n  this.strm = new Zstream();\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);\n      break;\n    default:\n      throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Init error');\n  }\n\n  this.dictionary = dictionary;\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype._setDictionary = function () {\n  if (this.dictionary == null) {\n    return;\n  }\n\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to set dictionary');\n  }\n};\n\nZlib.prototype._reset = function () {\n  this.err = exports.Z_OK;\n\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n    case exports.GZIP:\n      this.err = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n    case exports.GUNZIP:\n      this.err = zlib_inflate.inflateReset(this.strm);\n      break;\n    default:\n      break;\n  }\n\n  if (this.err !== exports.Z_OK) {\n    this._error('Failed to reset stream');\n  }\n};\n\nexports.Zlib = Zlib;","'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\nvar kMaxLength = require('buffer').kMaxLength;\nvar kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = 16 * 1024;\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys = Object.keys(binding);\nfor (var bk = 0; bk < bkeys.length; bk++) {\n  var bkey = bkeys[bk];\n  if (bkey.match(/^Z/)) {\n    Object.defineProperty(exports, bkey, {\n      enumerable: true, value: binding[bkey], writable: false\n    });\n  }\n}\n\n// translation table for return codes.\nvar codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nvar ckeys = Object.keys(codes);\nfor (var ck = 0; ck < ckeys.length; ck++) {\n  var ckey = ckeys[ck];\n  codes[codes[ckey]] = ckey;\n}\n\nObject.defineProperty(exports, 'codes', {\n  enumerable: true, value: Object.freeze(codes), writable: false\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function (o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function (o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function (o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function (o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function (o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function (o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function (o) {\n  return new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function (buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function (buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function (buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function (buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf;\n    var err = null;\n\n    if (nread >= kMaxLength) {\n      err = new RangeError(kRangeErrorMessage);\n    } else {\n      buf = Buffer.concat(buffers, nread);\n    }\n\n    buffers = [];\n    engine.close();\n    callback(err, buf);\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string') buffer = Buffer.from(buffer);\n\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');\n\n  var flushFlag = engine._finishFlushFlag;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag) {\n  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  var _this = this;\n\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush && !isValidFlushFlag(opts.flush)) {\n    throw new Error('Invalid flush flag: ' + opts.flush);\n  }\n  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {\n    throw new Error('Invalid flush flag: ' + opts.finishFlush);\n  }\n\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._handle = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._handle.onerror = function (message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    _close(self);\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);\n\n  this._buffer = Buffer.allocUnsafe(this._chunkSize);\n  this._offset = 0;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n\n  Object.defineProperty(this, '_closed', {\n    get: function () {\n      return !_this._handle;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function (level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function () {\n      assert(self._handle, 'zlib binding closed');\n      self._handle.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function () {\n  assert(this._handle, 'zlib binding closed');\n  return this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function (callback) {\n  this._transform(Buffer.alloc(0), '', callback);\n};\n\nZlib.prototype.flush = function (kind, callback) {\n  var _this2 = this;\n\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || kind === undefined && !callback) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback) process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback) this.once('end', callback);\n  } else if (ws.needDrain) {\n    if (callback) {\n      this.once('drain', function () {\n        return _this2.flush(kind, callback);\n      });\n    }\n  } else {\n    this._flushFlag = kind;\n    this.write(Buffer.alloc(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function (callback) {\n  _close(this, callback);\n  process.nextTick(emitCloseNT, this);\n};\n\nfunction _close(engine, callback) {\n  if (callback) process.nextTick(callback);\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) return;\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nfunction emitCloseNT(self) {\n  self.emit('close');\n}\n\nZlib.prototype._transform = function (chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));\n\n  if (!this._handle) return cb(new Error('zlib binding closed'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n  // (or whatever flag was provided using opts.finishFlush).\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last) flushFlag = this._finishFlushFlag;else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function (chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function (er) {\n      error = er;\n    });\n\n    assert(this._handle, 'zlib binding closed');\n    do {\n      var res = this._handle.writeSync(flushFlag, chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    if (nread >= kMaxLength) {\n      _close(this);\n      throw new RangeError(kRangeErrorMessage);\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    _close(this);\n\n    return buf;\n  }\n\n  assert(this._handle, 'zlib binding closed');\n  var req = this._handle.write(flushFlag, chunk, // in\n  inOff, // in_off\n  availInBefore, // in_len\n  this._buffer, // out\n  this._offset, //out_off\n  availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    // When the callback is used in an async write, the callback's\n    // context is the `req` object that was created. The req object\n    // is === this._handle, and that's why it's important to null\n    // out the values after they are done being used. `this._handle`\n    // can stay in memory longer than the callback and buffer are needed.\n    if (this) {\n      this.buffer = null;\n      this.callback = null;\n    }\n\n    if (self._hadError) return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      if (!async) return true;\n\n      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async) return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","module.exports = colorSupport({ alwaysReturn: true }, colorSupport)\n\nfunction colorSupport(options, obj) {\n  obj = obj || {}\n  options = options || {}\n  obj.level = 0\n  obj.hasBasic = false\n  obj.has256 = false\n  obj.has16m = false\n  if (!options.alwaysReturn) {\n    return false\n  }\n  return obj\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","export class ContainerIterator {\n    /**\n     * @internal\n     */\n    constructor(iteratorType = 0 /* IteratorType.NORMAL */) {\n        this.iteratorType = iteratorType;\n    }\n    /**\n     * @param iter - The other iterator you want to compare.\n     * @returns Whether this equals to obj.\n     * @example\n     * container.find(1).equals(container.end());\n     */\n    equals(iter) {\n        return this._node === iter._node;\n    }\n}\nexport class Base {\n    constructor() {\n        /**\n         * @description Container's size.\n         * @internal\n         */\n        this._length = 0;\n    }\n    /**\n     * @returns The size of the container.\n     * @example\n     * const container = new Vector([1, 2]);\n     * console.log(container.length); // 2\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * @returns The size of the container.\n     * @example\n     * const container = new Vector([1, 2]);\n     * console.log(container.size()); // 2\n     */\n    size() {\n        return this._length;\n    }\n    /**\n     * @returns Whether the container is empty.\n     * @example\n     * container.clear();\n     * console.log(container.empty());  // true\n     */\n    empty() {\n        return this._length === 0;\n    }\n}\nexport class Container extends Base {\n}\n","/**\n * @description The iterator type including `NORMAL` and `REVERSE`.\n */\nexport const enum IteratorType {\n  NORMAL = 0,\n  REVERSE = 1\n}\n\nexport abstract class ContainerIterator<T> {\n  /**\n   * @description The container pointed to by the iterator.\n   */\n  abstract readonly container: Container<T>;\n  /**\n   * @internal\n   */\n  abstract _node: unknown;\n  /**\n   * @description Iterator's type.\n   * @example\n   * console.log(container.end().iteratorType === IteratorType.NORMAL);  // true\n   */\n  readonly iteratorType: IteratorType;\n  /**\n   * @internal\n   */\n  protected constructor(iteratorType = IteratorType.NORMAL) {\n    this.iteratorType = iteratorType;\n  }\n  /**\n   * @param iter - The other iterator you want to compare.\n   * @returns Whether this equals to obj.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  equals(iter: ContainerIterator<T>) {\n    return this._node === iter._node;\n  }\n  /**\n   * @description Pointers to element.\n   * @returns The value of the pointer's element.\n   * @example\n   * const val = container.begin().pointer;\n   */\n  abstract get pointer(): T;\n  /**\n   * @description Set pointer's value (some containers are unavailable).\n   * @param newValue - The new value you want to set.\n   * @example\n   * (<LinkList<number>>container).begin().pointer = 1;\n   */\n  abstract set pointer(newValue: T);\n  /**\n   * @description Move `this` iterator to pre.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [0, 1]\n   * const pre = iter.pre();\n   * console.log(pre === iter);  // true\n   * console.log(pre.equals(iter));  // true\n   * console.log(pre.pointer, iter.pointer); // 0, 0\n   */\n  abstract pre(): this;\n  /**\n   * @description Move `this` iterator to next.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.next();\n   * console.log(next === iter);  // true\n   * console.log(next.equals(iter));  // true\n   * console.log(next.pointer, iter.pointer); // 2, 2\n   */\n  abstract next(): this;\n  /**\n   * @description Get a copy of itself.\n   * @returns The copy of self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.copy().next();\n   * console.log(next === iter);  // false\n   * console.log(next.equals(iter));  // false\n   * console.log(next.pointer, iter.pointer); // 2, 1\n   */\n  abstract copy(): ContainerIterator<T>;\n}\n\nexport abstract class Base {\n  /**\n   * @description Container's size.\n   * @internal\n   */\n  protected _length = 0;\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.length); // 2\n   */\n  get length() {\n    return this._length;\n  }\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.size()); // 2\n   */\n  size() {\n    return this._length;\n  }\n  /**\n   * @returns Whether the container is empty.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  empty() {\n    return this._length === 0;\n  }\n  /**\n   * @description Clear the container.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  abstract clear(): void;\n}\n\nexport abstract class Container<T> extends Base {\n  /**\n   * @returns Iterator pointing to the beginning element.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract begin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super end like c++.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract end(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the end element.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rBegin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super begin like c++.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rEnd(): ContainerIterator<T>;\n  /**\n   * @returns The first element of the container.\n   */\n  abstract front(): T | undefined;\n  /**\n   * @returns The last element of the container.\n   */\n  abstract back(): T | undefined;\n  /**\n   * @param element - The element you want to find.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  abstract find(element: T): ContainerIterator<T>;\n  /**\n   * @description Iterate over all elements in the container.\n   * @param callback - Callback function like Array.forEach.\n   * @example\n   * container.forEach((element, index) => console.log(element, index));\n   */\n  abstract forEach(callback: (element: T, index: number, container: Container<T>) => void): void;\n  /**\n   * @description Gets the value of the element at the specified position.\n   * @example\n   * const val = container.getElementByPos(-1); // throw a RangeError\n   */\n  abstract getElementByPos(pos: number): T;\n  /**\n   * @description Removes the element at the specified position.\n   * @param pos - The element's position you want to remove.\n   * @returns The container length after erasing.\n   * @example\n   * container.eraseElementByPos(-1); // throw a RangeError\n   */\n  abstract eraseElementByPos(pos: number): number;\n  /**\n   * @description Removes element by iterator and move `iter` to next.\n   * @param iter - The iterator you want to erase.\n   * @returns The next iterator.\n   * @example\n   * container.eraseElementByIterator(container.begin());\n   * container.eraseElementByIterator(container.end()); // throw a RangeError\n   */\n  abstract eraseElementByIterator(\n    iter: ContainerIterator<T>\n  ): ContainerIterator<T>;\n  /**\n   * @description Using for `for...of` syntax like Array.\n   * @example\n   * for (const element of container) {\n   *   console.log(element);\n   * }\n   */\n  abstract [Symbol.iterator](): Generator<T, void>;\n}\n\n/**\n * @description The initial data type passed in when initializing the container.\n */\nexport type initContainer<T> = {\n  size?: number | (() => number);\n  length?: number;\n  forEach: (callback: (el: T) => void) => void;\n}\n","import { Container, ContainerIterator } from \"../../ContainerBase\";\nimport checkObject from \"../../../utils/checkObject\";\nimport $checkWithinAccessParams from \"../../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nexport class HashContainerIterator extends ContainerIterator {\n    /**\n     * @internal\n     */\n    constructor(node, header, iteratorType) {\n        super(iteratorType);\n        this._node = node;\n        this._header = header;\n        if (this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n    }\n}\nexport class HashContainer extends Container {\n    /**\n     * @internal\n     */\n    constructor() {\n        super();\n        /**\n         * @internal\n         */\n        this._objMap = [];\n        /**\n         * @internal\n         */\n        this._originMap = {};\n        /**\n         * @description Unique symbol used to tag object.\n         */\n        this.HASH_TAG = Symbol('@@HASH_TAG');\n        Object.setPrototypeOf(this._originMap, null);\n        this._header = {};\n        this._header._pre = this._header._next = this._head = this._tail = this._header;\n    }\n    /**\n     * @internal\n     */\n    _eraseNode(node) {\n        const { _pre, _next } = node;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    }\n    /**\n     * @internal\n     */\n    _set(key, value, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        let newTail;\n        if (isObject) {\n            const index = key[this.HASH_TAG];\n            if (index !== undefined) {\n                this._objMap[index]._value = value;\n                return this._length;\n            }\n            Object.defineProperty(key, this.HASH_TAG, {\n                value: this._objMap.length,\n                configurable: true\n            });\n            newTail = {\n                _key: key,\n                _value: value,\n                _pre: this._tail,\n                _next: this._header\n            };\n            this._objMap.push(newTail);\n        }\n        else {\n            const node = this._originMap[key];\n            if (node) {\n                node._value = value;\n                return this._length;\n            }\n            this._originMap[key] = newTail = {\n                _key: key,\n                _value: value,\n                _pre: this._tail,\n                _next: this._header\n            };\n        }\n        if (this._length === 0) {\n            this._head = newTail;\n            this._header._next = newTail;\n        }\n        else {\n            this._tail._next = newTail;\n        }\n        this._tail = newTail;\n        this._header._pre = newTail;\n        return ++this._length;\n    }\n    /**\n     * @internal\n     */\n    _findElementNode(key, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            const index = key[this.HASH_TAG];\n            if (index === undefined)\n                return this._header;\n            return this._objMap[index];\n        }\n        else {\n            return this._originMap[key] || this._header;\n        }\n    }\n    clear() {\n        const HASH_TAG = this.HASH_TAG;\n        this._objMap.forEach(function (el) {\n            delete el._key[HASH_TAG];\n        });\n        this._objMap = [];\n        this._originMap = {};\n        Object.setPrototypeOf(this._originMap, null);\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    }\n    /**\n     * @description Remove the element of the specified key.\n     * @param key - The key you want to remove.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns Whether erase successfully.\n     */\n    eraseElementByKey(key, isObject) {\n        let node;\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            const index = key[this.HASH_TAG];\n            if (index === undefined)\n                return false;\n            delete key[this.HASH_TAG];\n            node = this._objMap[index];\n            delete this._objMap[index];\n        }\n        else {\n            node = this._originMap[key];\n            if (node === undefined)\n                return false;\n            delete this._originMap[key];\n        }\n        this._eraseNode(node);\n        return true;\n    }\n    eraseElementByIterator(iter) {\n        const node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        this._eraseNode(node);\n        return iter.next();\n    }\n    eraseElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        this._eraseNode(node);\n        return this._length;\n    }\n}\n","import { Container, ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport checkObject from '@/utils/checkObject';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nexport type HashLinkNode<K, V> = {\n  _key: K,\n  _value: V,\n  _pre: HashLinkNode<K, V>,\n  _next: HashLinkNode<K, V>\n}\n\nexport abstract class HashContainerIterator<K, V> extends ContainerIterator<K | [K, V]> {\n  abstract readonly container: HashContainer<K, V>;\n  /**\n   * @internal\n   */\n  _node: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected readonly _header: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected constructor(\n    node: HashLinkNode<K, V>,\n    header: HashLinkNode<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport abstract class HashContainer<K, V> extends Container<K | [K, V]> {\n  /**\n   * @internal\n   */\n  protected _objMap: HashLinkNode<K, V>[] = [];\n  /**\n   * @internal\n   */\n  protected _originMap: Record<string, HashLinkNode<K, V>> = {};\n  /**\n   * @internal\n   */\n  protected _head: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _tail: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected readonly _header: HashLinkNode<K, V>;\n  /**\n   * @description Unique symbol used to tag object.\n   */\n  readonly HASH_TAG = Symbol('@@HASH_TAG');\n  /**\n   * @internal\n   */\n  protected constructor() {\n    super();\n    Object.setPrototypeOf(this._originMap, null);\n    this._header = <HashLinkNode<K, V>>{};\n    this._header._pre = this._header._next = this._head = this._tail = this._header;\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNode(node: HashLinkNode<K, V>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  protected _set(key: K, value?: V, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    let newTail;\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index !== undefined) {\n        this._objMap[<number>index]._value = <V>value;\n        return this._length;\n      }\n      Object.defineProperty(key, this.HASH_TAG, {\n        value: this._objMap.length,\n        configurable: true\n      });\n      newTail = {\n        _key: key,\n        _value: <V>value,\n        _pre: this._tail,\n        _next: this._header\n      };\n      this._objMap.push(newTail);\n    } else {\n      const node = this._originMap[<string><unknown>key];\n      if (node) {\n        node._value = <V>value;\n        return this._length;\n      }\n      this._originMap[<string><unknown>key] = newTail = {\n        _key: key,\n        _value: <V>value,\n        _pre: this._tail,\n        _next: this._header\n      };\n    }\n    if (this._length === 0) {\n      this._head = newTail;\n      this._header._next = newTail;\n    } else {\n      this._tail._next = newTail;\n    }\n    this._tail = newTail;\n    this._header._pre = newTail;\n    return ++this._length;\n  }\n  /**\n   * @internal\n   */\n  protected _findElementNode(key: K, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index === undefined) return this._header;\n      return this._objMap[index];\n    } else {\n      return this._originMap[<string><unknown>key] || this._header;\n    }\n  }\n  clear() {\n    const HASH_TAG = this.HASH_TAG;\n    this._objMap.forEach(function (el) {\n      delete (<Record<symbol, number>><unknown>el._key)[HASH_TAG];\n    });\n    this._objMap = [];\n    this._originMap = {};\n    Object.setPrototypeOf(this._originMap, null);\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key: K, isObject?: boolean) {\n    let node;\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index === undefined) return false;\n      delete (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      node = this._objMap[index];\n      delete this._objMap[index];\n    } else {\n      node = this._originMap[<string><unknown>key];\n      if (node === undefined) return false;\n      delete this._originMap[<string><unknown>key];\n    }\n    this._eraseNode(node);\n    return true;\n  }\n  eraseElementByIterator(iter: HashContainerIterator<K, V>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._eraseNode(node);\n    return iter.next();\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    this._eraseNode(node);\n    return this._length;\n  }\n}\n","import { HashContainer, HashContainerIterator } from \"./Base\";\nimport checkObject from \"../../utils/checkObject\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nclass HashMapIterator extends HashContainerIterator {\n    constructor(node, header, container, iteratorType) {\n        super(node, header, iteratorType);\n        this.container = container;\n    }\n    get pointer() {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        const self = this;\n        return new Proxy([], {\n            get(_, props) {\n                if (props === '0')\n                    return self._node._key;\n                else if (props === '1')\n                    return self._node._value;\n            },\n            set(_, props, newValue) {\n                if (props !== '1') {\n                    throw new TypeError('props must be 1');\n                }\n                self._node._value = newValue;\n                return true;\n            }\n        });\n    }\n    copy() {\n        return new HashMapIterator(this._node, this._header, this.container, this.iteratorType);\n    }\n}\nclass HashMap extends HashContainer {\n    constructor(container = []) {\n        super();\n        const self = this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n    }\n    begin() {\n        return new HashMapIterator(this._head, this._header, this);\n    }\n    end() {\n        return new HashMapIterator(this._header, this._header, this);\n    }\n    rBegin() {\n        return new HashMapIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new HashMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        if (this._length === 0)\n            return;\n        return [this._head._key, this._head._value];\n    }\n    back() {\n        if (this._length === 0)\n            return;\n        return [this._tail._key, this._tail._value];\n    }\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after setting.\n     */\n    setElement(key, value, isObject) {\n        return this._set(key, value, isObject);\n    }\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The key want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    getElementByKey(key, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            const index = key[this.HASH_TAG];\n            return index !== undefined ? this._objMap[index]._value : undefined;\n        }\n        const node = this._originMap[key];\n        return node ? node._value : undefined;\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return [node._key, node._value];\n    }\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    find(key, isObject) {\n        const node = this._findElementNode(key, isObject);\n        return new HashMapIterator(node, this._header, this);\n    }\n    forEach(callback) {\n        let index = 0;\n        let node = this._head;\n        while (node !== this._header) {\n            callback([node._key, node._value], index++, this);\n            node = node._next;\n        }\n    }\n    *[Symbol.iterator]() {\n        let node = this._head;\n        while (node !== this._header) {\n            yield [node._key, node._value];\n            node = node._next;\n        }\n    }\n}\nexport default HashMap;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport checkObject from '@/utils/checkObject';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashMapIterator<K, V> extends HashContainerIterator<K, V> {\n  readonly container: HashMap<K, V>;\n  constructor(\n    node: HashLinkNode<K, V>,\n    header: HashLinkNode<K, V>,\n    container: HashMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new HashMapIterator<K, V>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashMapIterator<K, V>): boolean;\n}\n\nexport type { HashMapIterator };\n\nclass HashMap<K, V> extends HashContainer<K, V> {\n  constructor(container: initContainer<[K, V]> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new HashMapIterator<K, V>(this._head, this._header, this);\n  }\n  end() {\n    return new HashMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashMapIterator<K, V>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._head._key, this._head._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._tail._key, this._tail._value];\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after setting.\n   */\n  setElement(key: K, value: V, isObject?: boolean) {\n    return this._set(key, value, isObject);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The key want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      return index !== undefined ? this._objMap[index]._value : undefined;\n    }\n    const node = this._originMap[<string><unknown>key];\n    return node ? node._value : undefined;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return <[K, V]>[node._key, node._value];\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashMapIterator<K, V>(node, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, hashMap: HashMap<K, V>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(<[K, V]>[node._key, node._value], index++, this);\n      node = node._next;\n    }\n  }\n  * [Symbol.iterator]() {\n    let node = this._head;\n    while (node !== this._header) {\n      yield <[K, V]>[node._key, node._value];\n      node = node._next;\n    }\n  }\n}\n\nexport default HashMap;\n","import { HashContainer, HashContainerIterator } from \"./Base\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nclass HashSetIterator extends HashContainerIterator {\n    constructor(node, header, container, iteratorType) {\n        super(node, header, iteratorType);\n        this.container = container;\n    }\n    get pointer() {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        return this._node._key;\n    }\n    copy() {\n        return new HashSetIterator(this._node, this._header, this.container, this.iteratorType);\n    }\n}\nclass HashSet extends HashContainer {\n    constructor(container = []) {\n        super();\n        const self = this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n    }\n    begin() {\n        return new HashSetIterator(this._head, this._header, this);\n    }\n    end() {\n        return new HashSetIterator(this._header, this._header, this);\n    }\n    rBegin() {\n        return new HashSetIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new HashSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        return this._head._key;\n    }\n    back() {\n        return this._tail._key;\n    }\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after inserting.\n     */\n    insert(key, isObject) {\n        return this._set(key, undefined, isObject);\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return node._key;\n    }\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    find(key, isObject) {\n        const node = this._findElementNode(key, isObject);\n        return new HashSetIterator(node, this._header, this);\n    }\n    forEach(callback) {\n        let index = 0;\n        let node = this._head;\n        while (node !== this._header) {\n            callback(node._key, index++, this);\n            node = node._next;\n        }\n    }\n    *[Symbol.iterator]() {\n        let node = this._head;\n        while (node !== this._header) {\n            yield node._key;\n            node = node._next;\n        }\n    }\n}\nexport default HashSet;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashSetIterator<K> extends HashContainerIterator<K, undefined> {\n  readonly container: HashSet<K>;\n  constructor(\n    node: HashLinkNode<K, undefined>,\n    header: HashLinkNode<K, undefined>,\n    container: HashSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key;\n  }\n  copy() {\n    return new HashSetIterator<K>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashSetIterator<K>): boolean;\n}\n\nexport type { HashSetIterator };\n\nclass HashSet<K> extends HashContainer<K, undefined> {\n  constructor(container: initContainer<K> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  begin() {\n    return new HashSetIterator<K>(this._head, this._header, this);\n  }\n  end() {\n    return new HashSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashSetIterator<K>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): K | undefined {\n    return this._head._key;\n  }\n  back(): K | undefined {\n    return this._tail._key;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after inserting.\n   */\n  insert(key: K, isObject?: boolean) {\n    return this._set(key, undefined, isObject);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return node._key;\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashSetIterator<K>(node, this._header, this);\n  }\n  forEach(callback: (element: K, index: number, container: HashSet<K>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(node._key, index++, this);\n      node = node._next;\n    }\n  }\n  * [Symbol.iterator]() {\n    let node = this._head;\n    while (node !== this._header) {\n      yield node._key;\n      node = node._next;\n    }\n  }\n}\n\nexport default HashSet;\n","import { Base } from \"../ContainerBase\";\nclass PriorityQueue extends Base {\n    /**\n     * @description PriorityQueue's constructor.\n     * @param container - Initialize container, must have a forEach function.\n     * @param cmp - Compare function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     * @example\n     * new PriorityQueue();\n     * new PriorityQueue([1, 2, 3]);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n     */\n    constructor(container = [], cmp = function (x, y) {\n        if (x > y)\n            return -1;\n        if (x < y)\n            return 1;\n        return 0;\n    }, copy = true) {\n        super();\n        this._cmp = cmp;\n        if (Array.isArray(container)) {\n            this._priorityQueue = copy ? [...container] : container;\n        }\n        else {\n            this._priorityQueue = [];\n            const self = this;\n            container.forEach(function (el) {\n                self._priorityQueue.push(el);\n            });\n        }\n        this._length = this._priorityQueue.length;\n        const halfLength = this._length >> 1;\n        for (let parent = (this._length - 1) >> 1; parent >= 0; --parent) {\n            this._pushDown(parent, halfLength);\n        }\n    }\n    /**\n     * @internal\n     */\n    _pushUp(pos) {\n        const item = this._priorityQueue[pos];\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentItem = this._priorityQueue[parent];\n            if (this._cmp(parentItem, item) <= 0)\n                break;\n            this._priorityQueue[pos] = parentItem;\n            pos = parent;\n        }\n        this._priorityQueue[pos] = item;\n    }\n    /**\n     * @internal\n     */\n    _pushDown(pos, halfLength) {\n        const item = this._priorityQueue[pos];\n        while (pos < halfLength) {\n            let left = pos << 1 | 1;\n            const right = left + 1;\n            let minItem = this._priorityQueue[left];\n            if (right < this._length &&\n                this._cmp(minItem, this._priorityQueue[right]) > 0) {\n                left = right;\n                minItem = this._priorityQueue[right];\n            }\n            if (this._cmp(minItem, item) >= 0)\n                break;\n            this._priorityQueue[pos] = minItem;\n            pos = left;\n        }\n        this._priorityQueue[pos] = item;\n    }\n    clear() {\n        this._length = 0;\n        this._priorityQueue.length = 0;\n    }\n    /**\n     * @description Push element into a container in order.\n     * @param item - The element you want to push.\n     * @returns The size of heap after pushing.\n     * @example\n     * queue.push(1);\n     */\n    push(item) {\n        this._priorityQueue.push(item);\n        this._pushUp(this._length);\n        this._length += 1;\n    }\n    /**\n     * @description Removes the top element.\n     * @returns The element you popped.\n     * @example\n     * queue.pop();\n     */\n    pop() {\n        if (this._length === 0)\n            return;\n        const value = this._priorityQueue[0];\n        const last = this._priorityQueue.pop();\n        this._length -= 1;\n        if (this._length) {\n            this._priorityQueue[0] = last;\n            this._pushDown(0, this._length >> 1);\n        }\n        return value;\n    }\n    /**\n     * @description Accesses the top element.\n     * @example\n     * const top = queue.top();\n     */\n    top() {\n        return this._priorityQueue[0];\n    }\n    /**\n     * @description Check if element is in heap.\n     * @param item - The item want to find.\n     * @returns Whether element is in heap.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * console.log(que.find(obj));  // true\n     */\n    find(item) {\n        return this._priorityQueue.indexOf(item) >= 0;\n    }\n    /**\n     * @description Remove specified item from heap.\n     * @param item - The item want to remove.\n     * @returns Whether remove success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * que.remove(obj);\n     */\n    remove(item) {\n        const index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        if (index === 0) {\n            this.pop();\n        }\n        else if (index === this._length - 1) {\n            this._priorityQueue.pop();\n            this._length -= 1;\n        }\n        else {\n            this._priorityQueue.splice(index, 1, this._priorityQueue.pop());\n            this._length -= 1;\n            this._pushUp(index);\n            this._pushDown(index, this._length >> 1);\n        }\n        return true;\n    }\n    /**\n     * @description Update item and it's pos in the heap.\n     * @param item - The item want to update.\n     * @returns Whether update success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * obj.id = 2;\n     * que.updateItem(obj);\n     */\n    updateItem(item) {\n        const index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        this._pushUp(index);\n        this._pushDown(index, this._length >> 1);\n        return true;\n    }\n    /**\n     * @returns Return a copy array of heap.\n     * @example\n     * const arr = queue.toArray();\n     */\n    toArray() {\n        return [...this._priorityQueue];\n    }\n}\nexport default PriorityQueue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass PriorityQueue<T> extends Base {\n  /**\n   * @internal\n   */\n  private readonly _priorityQueue: T[];\n  /**\n   * @internal\n   */\n  private readonly _cmp: (x: T, y: T) => number;\n  /**\n   * @description PriorityQueue's constructor.\n   * @param container - Initialize container, must have a forEach function.\n   * @param cmp - Compare function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   * @example\n   * new PriorityQueue();\n   * new PriorityQueue([1, 2, 3]);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n   */\n  constructor(\n    container: initContainer<T> = [],\n    cmp: (x: T, y: T) => number =\n    function (x: T, y: T) {\n      if (x > y) return -1;\n      if (x < y) return 1;\n      return 0;\n    },\n    copy = true\n  ) {\n    super();\n    this._cmp = cmp;\n    if (Array.isArray(container)) {\n      this._priorityQueue = copy ? [...container] : container;\n    } else {\n      this._priorityQueue = [];\n      const self = this;\n      container.forEach(function (el) {\n        self._priorityQueue.push(el);\n      });\n    }\n    this._length = this._priorityQueue.length;\n    const halfLength = this._length >> 1;\n    for (let parent = (this._length - 1) >> 1; parent >= 0; --parent) {\n      this._pushDown(parent, halfLength);\n    }\n  }\n  /**\n   * @internal\n   */\n  private _pushUp(pos: number) {\n    const item = this._priorityQueue[pos];\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const parentItem = this._priorityQueue[parent];\n      if (this._cmp(parentItem, item) <= 0) break;\n      this._priorityQueue[pos] = parentItem;\n      pos = parent;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  /**\n   * @internal\n   */\n  private _pushDown(pos: number, halfLength: number) {\n    const item = this._priorityQueue[pos];\n    while (pos < halfLength) {\n      let left = pos << 1 | 1;\n      const right = left + 1;\n      let minItem = this._priorityQueue[left];\n      if (\n        right < this._length &&\n        this._cmp(minItem, this._priorityQueue[right]) > 0\n      ) {\n        left = right;\n        minItem = this._priorityQueue[right];\n      }\n      if (this._cmp(minItem, item) >= 0) break;\n      this._priorityQueue[pos] = minItem;\n      pos = left;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  clear() {\n    this._length = 0;\n    this._priorityQueue.length = 0;\n  }\n  /**\n   * @description Push element into a container in order.\n   * @param item - The element you want to push.\n   * @returns The size of heap after pushing.\n   * @example\n   * queue.push(1);\n   */\n  push(item: T) {\n    this._priorityQueue.push(item);\n    this._pushUp(this._length);\n    this._length += 1;\n  }\n  /**\n   * @description Removes the top element.\n   * @returns The element you popped.\n   * @example\n   * queue.pop();\n   */\n  pop() {\n    if (this._length === 0) return;\n    const value = this._priorityQueue[0];\n    const last = this._priorityQueue.pop()!;\n    this._length -= 1;\n    if (this._length) {\n      this._priorityQueue[0] = last;\n      this._pushDown(0, this._length >> 1);\n    }\n    return value;\n  }\n  /**\n   * @description Accesses the top element.\n   * @example\n   * const top = queue.top();\n   */\n  top(): T | undefined {\n    return this._priorityQueue[0];\n  }\n  /**\n   * @description Check if element is in heap.\n   * @param item - The item want to find.\n   * @returns Whether element is in heap.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * console.log(que.find(obj));  // true\n   */\n  find(item: T) {\n    return this._priorityQueue.indexOf(item) >= 0;\n  }\n  /**\n   * @description Remove specified item from heap.\n   * @param item - The item want to remove.\n   * @returns Whether remove success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * que.remove(obj);\n   */\n  remove(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    if (index === 0) {\n      this.pop();\n    } else if (index === this._length - 1) {\n      this._priorityQueue.pop();\n      this._length -= 1;\n    } else {\n      this._priorityQueue.splice(index, 1, this._priorityQueue.pop()!);\n      this._length -= 1;\n      this._pushUp(index);\n      this._pushDown(index, this._length >> 1);\n    }\n    return true;\n  }\n  /**\n   * @description Update item and it's pos in the heap.\n   * @param item - The item want to update.\n   * @returns Whether update success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * obj.id = 2;\n   * que.updateItem(obj);\n   */\n  updateItem(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    this._pushUp(index);\n    this._pushDown(index, this._length >> 1);\n    return true;\n  }\n  /**\n   * @returns Return a copy array of heap.\n   * @example\n   * const arr = queue.toArray();\n   */\n  toArray() {\n    return [...this._priorityQueue];\n  }\n}\n\nexport default PriorityQueue;\n","import { Base } from \"../ContainerBase\";\nclass Queue extends Base {\n    constructor(container = []) {\n        super();\n        /**\n         * @internal\n         */\n        this._first = 0;\n        /**\n         * @internal\n         */\n        this._queue = [];\n        const self = this;\n        container.forEach(function (el) {\n            self.push(el);\n        });\n    }\n    clear() {\n        this._queue = [];\n        this._length = this._first = 0;\n    }\n    /**\n     * @description Inserts element to queue's end.\n     * @param element - The element you want to push to the front.\n     * @returns The container length after pushing.\n     */\n    push(element) {\n        const capacity = this._queue.length;\n        if ((this._first / capacity) > 0.5 /* QUEUE_CONSTANT.ALLOCATE_SIGMA */ &&\n            (this._first + this._length) >= capacity &&\n            capacity > 4096 /* QUEUE_CONSTANT.MIN_ALLOCATE_SIZE */) {\n            const length = this._length;\n            for (let i = 0; i < length; ++i) {\n                this._queue[i] = this._queue[this._first + i];\n            }\n            this._first = 0;\n            this._queue[this._length] = element;\n        }\n        else\n            this._queue[this._first + this._length] = element;\n        return ++this._length;\n    }\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    pop() {\n        if (this._length === 0)\n            return;\n        const el = this._queue[this._first++];\n        this._length -= 1;\n        return el;\n    }\n    /**\n     * @description Access the first element.\n     * @returns The first element.\n     */\n    front() {\n        if (this._length === 0)\n            return;\n        return this._queue[this._first];\n    }\n}\nexport default Queue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nconst enum QUEUE_CONSTANT {\n  ALLOCATE_SIGMA = 0.5,\n  MIN_ALLOCATE_SIZE = (1 << 12)\n}\n\nclass Queue<T> extends Base {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _queue: T[] = [];\n  constructor(container: initContainer<T> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.push(el);\n    });\n  }\n  clear() {\n    this._queue = [];\n    this._length = this._first = 0;\n  }\n  /**\n   * @description Inserts element to queue's end.\n   * @param element - The element you want to push to the front.\n   * @returns The container length after pushing.\n   */\n  push(element: T) {\n    const capacity = this._queue.length;\n    if (\n      (this._first / capacity) > QUEUE_CONSTANT.ALLOCATE_SIGMA &&\n      (this._first + this._length) >= capacity &&\n      capacity > QUEUE_CONSTANT.MIN_ALLOCATE_SIZE\n    ) {\n      const length = this._length;\n      for (let i = 0; i < length; ++i) {\n        this._queue[i] = this._queue[this._first + i];\n      }\n      this._first = 0;\n      this._queue[this._length] = element;\n    } else this._queue[this._first + this._length] = element;\n    return ++this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  pop() {\n    if (this._length === 0) return;\n    const el = this._queue[this._first++];\n    this._length -= 1;\n    return el;\n  }\n  /**\n   * @description Access the first element.\n   * @returns The first element.\n   */\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._queue[this._first];\n  }\n}\n\nexport default Queue;\n","import { Base } from \"../ContainerBase\";\nclass Stack extends Base {\n    constructor(container = []) {\n        super();\n        /**\n         * @internal\n         */\n        this._stack = [];\n        const self = this;\n        container.forEach(function (el) {\n            self.push(el);\n        });\n    }\n    clear() {\n        this._length = 0;\n        this._stack = [];\n    }\n    /**\n     * @description Insert element to stack's end.\n     * @description The element you want to push to the back.\n     * @returns The container length after erasing.\n     */\n    push(element) {\n        this._stack.push(element);\n        this._length += 1;\n        return this._length;\n    }\n    /**\n     * @description Removes the end element.\n     * @returns The element you popped.\n     */\n    pop() {\n        if (this._length === 0)\n            return;\n        this._length -= 1;\n        return this._stack.pop();\n    }\n    /**\n     * @description Accesses the end element.\n     * @returns The last element.\n     */\n    top() {\n        return this._stack[this._length - 1];\n    }\n}\nexport default Stack;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass Stack<T> extends Base {\n  /**\n   * @internal\n   */\n  private _stack: T[] = [];\n  constructor(container: initContainer<T> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.push(el);\n    });\n  }\n  clear() {\n    this._length = 0;\n    this._stack = [];\n  }\n  /**\n   * @description Insert element to stack's end.\n   * @description The element you want to push to the back.\n   * @returns The container length after erasing.\n   */\n  push(element: T) {\n    this._stack.push(element);\n    this._length += 1;\n    return this._length;\n  }\n  /**\n   * @description Removes the end element.\n   * @returns The element you popped.\n   */\n  pop() {\n    if (this._length === 0) return;\n    this._length -= 1;\n    return this._stack.pop();\n  }\n  /**\n   * @description Accesses the end element.\n   * @returns The last element.\n   */\n  top(): T | undefined {\n    return this._stack[this._length - 1];\n  }\n}\n\nexport default Stack;\n","import { ContainerIterator } from \"../../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nexport class RandomIterator extends ContainerIterator {\n    /**\n     * @internal\n     */\n    constructor(index, iteratorType) {\n        super(iteratorType);\n        this._node = index;\n        if (this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            this.pre = function () {\n                if (this._node === 0) {\n                    throwIteratorAccessError();\n                }\n                this._node -= 1;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this.container.size()) {\n                    throwIteratorAccessError();\n                }\n                this._node += 1;\n                return this;\n            };\n        }\n        else {\n            this.pre = function () {\n                if (this._node === this.container.size() - 1) {\n                    throwIteratorAccessError();\n                }\n                this._node += 1;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === -1) {\n                    throwIteratorAccessError();\n                }\n                this._node -= 1;\n                return this;\n            };\n        }\n    }\n    get pointer() {\n        return this.container.getElementByPos(this._node);\n    }\n    set pointer(newValue) {\n        this.container.setElementByPos(this._node, newValue);\n    }\n}\n","import { ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport SequentialContainer from '@/container/SequentialContainer/Base/index';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nexport abstract class RandomIterator<T> extends ContainerIterator<T> {\n  abstract readonly container: SequentialContainer<T>;\n  /**\n   * @internal\n   */\n  _node: number;\n  /**\n   * @internal\n   */\n  protected constructor(\n    index: number,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = index;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node === 0) {\n          throwIteratorAccessError();\n        }\n        this._node -= 1;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this.container.size()) {\n          throwIteratorAccessError();\n        }\n        this._node += 1;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this.container.size() - 1) {\n          throwIteratorAccessError();\n        }\n        this._node += 1;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === -1) {\n          throwIteratorAccessError();\n        }\n        this._node -= 1;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    return this.container.getElementByPos(this._node);\n  }\n  set pointer(newValue: T) {\n    this.container.setElementByPos(this._node, newValue);\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n",null,"import { Container } from '@/container/ContainerBase';\n\nabstract class SequentialContainer<T> extends Container<T> {\n  /**\n   * @description Push the element to the back.\n   * @param element - The element you want to push.\n   * @returns The size of container after pushing.\n   */\n  abstract pushBack(element: T): number;\n  /**\n   * @description Removes the last element.\n   * @returns The element you popped.\n   */\n  abstract popBack(): T | undefined;\n  /**\n   * @description Sets element by position.\n   * @param pos - The position you want to change.\n   * @param element - The element's value you want to update.\n   * @example\n   * container.setElementByPos(-1, 1); // throw a RangeError\n   */\n  abstract setElementByPos(pos: number, element: T): void;\n  /**\n   * @description Removes the elements of the specified value.\n   * @param value - The value you want to remove.\n   * @returns The size of container after erasing.\n   * @example\n   * container.eraseElementByValue(-1);\n   */\n  abstract eraseElementByValue(value: T): number;\n  /**\n   * @description Insert several elements after the specified position.\n   * @param pos - The position you want to insert.\n   * @param element - The element you want to insert.\n   * @param num - The number of elements you want to insert (default 1).\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.insert(1, 4);  // [1, 4, 2, 3]\n   * container.insert(1, 5, 3); // [1, 5, 5, 5, 4, 2, 3]\n   */\n  abstract insert(pos: number, element: T, num?: number): number;\n  /**\n   * @description Reverses the container.\n   * @returns The container's self.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.reverse(); // [3, 2, 1]\n   */\n  abstract reverse(): this;\n  /**\n   * @description Removes the duplication of elements in the container.\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 1, 3, 2, 2, 5, 5, 2]);\n   * container.unique(); // [1, 3, 2, 5, 2]\n   */\n  abstract unique(): number;\n  /**\n   * @description Sort the container.\n   * @param cmp - Comparison function to sort.\n   * @returns The container's self.\n   * @example\n   * const container = new Vector([3, 1, 10]);\n   * container.sort();  // [1, 10, 3]\n   * container.sort((x, y) => x - y); // [1, 3, 10]\n   */\n  abstract sort(cmp?: (x: T, y: T) => number): this;\n}\n\nexport default SequentialContainer;\n","import SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport $getContainerSize from \"../../utils/getContainerSize.macro\";\nimport * as Math from \"../../utils/math\";\nclass DequeIterator extends RandomIterator {\n    constructor(node, container, iteratorType) {\n        super(node, iteratorType);\n        this.container = container;\n    }\n    copy() {\n        return new DequeIterator(this._node, this.container, this.iteratorType);\n    }\n}\nclass Deque extends SequentialContainer {\n    constructor(container = [], _bucketSize = (1 << 12)) {\n        super();\n        /**\n         * @internal\n         */\n        this._first = 0;\n        /**\n         * @internal\n         */\n        this._curFirst = 0;\n        /**\n         * @internal\n         */\n        this._last = 0;\n        /**\n         * @internal\n         */\n        this._curLast = 0;\n        /**\n         * @internal\n         */\n        this._bucketNum = 0;\n        /**\n         * @internal\n         */\n        this._map = [];\n        const _length = (() => {\n            if (typeof container.length === \"number\")\n                return container.length;\n            if (typeof container.size === \"number\")\n                return container.size;\n            if (typeof container.size === \"function\")\n                return container.size();\n            throw new TypeError(\"Cannot get the length or size of the container\");\n        })();\n        this._bucketSize = _bucketSize;\n        this._bucketNum = Math.ceil(_length, this._bucketSize) || 1;\n        for (let i = 0; i < this._bucketNum; ++i) {\n            this._map.push(new Array(this._bucketSize));\n        }\n        const needBucketNum = Math.ceil(_length, this._bucketSize);\n        this._first = this._last = (this._bucketNum >> 1) - (needBucketNum >> 1);\n        this._curFirst = this._curLast = (this._bucketSize - _length % this._bucketSize) >> 1;\n        const self = this;\n        container.forEach(function (element) {\n            self.pushBack(element);\n        });\n    }\n    /**\n     * @description Growth the Deque.\n     * @internal\n     */\n    _reAllocate(needBucketNum) {\n        const newMap = [];\n        const addBucketNum = needBucketNum || this._bucketNum >> 1 || 1;\n        for (let i = 0; i < addBucketNum; ++i) {\n            newMap[i] = new Array(this._bucketSize);\n        }\n        for (let i = this._first; i < this._bucketNum; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        for (let i = 0; i < this._last; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        newMap[newMap.length] = [...this._map[this._last]];\n        this._first = addBucketNum;\n        this._last = newMap.length - 1;\n        for (let i = 0; i < addBucketNum; ++i) {\n            newMap[newMap.length] = new Array(this._bucketSize);\n        }\n        this._map = newMap;\n        this._bucketNum = newMap.length;\n    }\n    /**\n     * @description Get the bucket position of the element and the pointer position by index.\n     * @param pos - The element's index.\n     * @internal\n     */\n    _getElementIndex(pos) {\n        let curNodeBucketIndex, curNodePointerIndex;\n        const index = this._curFirst + pos;\n        curNodeBucketIndex = this._first + Math.floor(index / this._bucketSize);\n        if (curNodeBucketIndex >= this._bucketNum) {\n            curNodeBucketIndex -= this._bucketNum;\n        }\n        curNodePointerIndex = (index + 1) % this._bucketSize - 1;\n        if (curNodePointerIndex < 0) {\n            curNodePointerIndex = this._bucketSize - 1;\n        }\n        return { curNodeBucketIndex, curNodePointerIndex };\n    }\n    clear() {\n        this._map = [new Array(this._bucketSize)];\n        this._bucketNum = 1;\n        this._first = this._last = this._length = 0;\n        this._curFirst = this._curLast = this._bucketSize >> 1;\n    }\n    begin() {\n        return new DequeIterator(0, this);\n    }\n    end() {\n        return new DequeIterator(this._length, this);\n    }\n    rBegin() {\n        return new DequeIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new DequeIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        if (this._length === 0)\n            return;\n        return this._map[this._first][this._curFirst];\n    }\n    back() {\n        if (this._length === 0)\n            return;\n        return this._map[this._last][this._curLast];\n    }\n    pushBack(element) {\n        if (this._length) {\n            if (this._curLast < this._bucketSize - 1) {\n                this._curLast += 1;\n            }\n            else if (this._last < this._bucketNum - 1) {\n                this._last += 1;\n                this._curLast = 0;\n            }\n            else {\n                this._last = 0;\n                this._curLast = 0;\n            }\n            if (this._last === this._first &&\n                this._curLast === this._curFirst)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._last][this._curLast] = element;\n        return this._length;\n    }\n    popBack() {\n        if (this._length === 0)\n            return;\n        const value = this._map[this._last][this._curLast];\n        if (this._length !== 1) {\n            if (this._curLast > 0) {\n                this._curLast -= 1;\n            }\n            else if (this._last > 0) {\n                this._last -= 1;\n                this._curLast = this._bucketSize - 1;\n            }\n            else {\n                this._last = this._bucketNum - 1;\n                this._curLast = this._bucketSize - 1;\n            }\n        }\n        this._length -= 1;\n        return value;\n    }\n    /**\n     * @description Push the element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    pushFront(element) {\n        if (this._length) {\n            if (this._curFirst > 0) {\n                this._curFirst -= 1;\n            }\n            else if (this._first > 0) {\n                this._first -= 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            else {\n                this._first = this._bucketNum - 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            if (this._first === this._last &&\n                this._curFirst === this._curLast)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._first][this._curFirst] = element;\n        return this._length;\n    }\n    /**\n     * @description Remove the _first element.\n     * @returns The element you popped.\n     */\n    popFront() {\n        if (this._length === 0)\n            return;\n        const value = this._map[this._first][this._curFirst];\n        if (this._length !== 1) {\n            if (this._curFirst < this._bucketSize - 1) {\n                this._curFirst += 1;\n            }\n            else if (this._first < this._bucketNum - 1) {\n                this._first += 1;\n                this._curFirst = 0;\n            }\n            else {\n                this._first = 0;\n                this._curFirst = 0;\n            }\n        }\n        this._length -= 1;\n        return value;\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        const { curNodeBucketIndex, curNodePointerIndex } = this._getElementIndex(pos);\n        return this._map[curNodeBucketIndex][curNodePointerIndex];\n    }\n    setElementByPos(pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        const { curNodeBucketIndex, curNodePointerIndex } = this._getElementIndex(pos);\n        this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n    }\n    insert(pos, element, num = 1) {\n        const length = this._length;\n        if (pos < 0 || pos > length) {\n            throw new RangeError();\n        }\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            const arr = [];\n            for (let i = pos; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos - 1);\n            for (let i = 0; i < num; ++i)\n                this.pushBack(element);\n            for (let i = 0; i < arr.length; ++i)\n                this.pushBack(arr[i]);\n        }\n        return this._length;\n    }\n    /**\n     * @description Remove all elements after the specified position (excluding the specified position).\n     * @param pos - The previous position of the first removed element.\n     * @returns The size of the container after cutting.\n     * @example\n     * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n     */\n    cut(pos) {\n        if (pos < 0) {\n            this.clear();\n            return 0;\n        }\n        const { curNodeBucketIndex, curNodePointerIndex } = this._getElementIndex(pos);\n        this._last = curNodeBucketIndex;\n        this._curLast = curNodePointerIndex;\n        this._length = pos + 1;\n        return this._length;\n    }\n    eraseElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this._length - 1)\n            this.popBack();\n        else {\n            const length = this._length - 1;\n            let { curNodeBucketIndex: curBucket, curNodePointerIndex: curPointer } = this._getElementIndex(pos);\n            for (let i = pos; i < length; ++i) {\n                const { curNodeBucketIndex: nextBucket, curNodePointerIndex: nextPointer } = this._getElementIndex(pos + 1);\n                this._map[curBucket][curPointer] = this._map[nextBucket][nextPointer];\n                curBucket = nextBucket;\n                curPointer = nextPointer;\n            }\n            this.popBack();\n        }\n        return this._length;\n    }\n    eraseElementByValue(value) {\n        const length = this._length;\n        if (length === 0)\n            return 0;\n        let i = 0;\n        let index = 0;\n        while (i < length) {\n            const element = this.getElementByPos(i);\n            if (element !== value) {\n                this.setElementByPos(index, element);\n                index += 1;\n            }\n            i += 1;\n        }\n        this.cut(index - 1);\n        return this._length;\n    }\n    eraseElementByIterator(iter) {\n        const _node = iter._node;\n        this.eraseElementByPos(_node);\n        iter = iter.next();\n        return iter;\n    }\n    find(element) {\n        for (let i = 0; i < this._length; ++i) {\n            if (this.getElementByPos(i) === element) {\n                return new DequeIterator(i, this);\n            }\n        }\n        return this.end();\n    }\n    reverse() {\n        this._map.reverse().forEach(function (bucket) {\n            bucket.reverse();\n        });\n        const { _first, _last, _curFirst, _curLast } = this;\n        this._first = this._bucketNum - _last - 1;\n        this._last = this._bucketNum - _first - 1;\n        this._curFirst = this._bucketSize - _curLast - 1;\n        this._curLast = this._bucketSize - _curFirst - 1;\n        return this;\n    }\n    unique() {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        let index = 1;\n        let pre = this.getElementByPos(0);\n        for (let i = 1; i < this._length; ++i) {\n            const cur = this.getElementByPos(i);\n            if (cur !== pre) {\n                pre = cur;\n                this.setElementByPos(index++, cur);\n            }\n        }\n        this.cut(index - 1);\n        return this._length;\n    }\n    sort(cmp) {\n        const arr = [];\n        for (let i = 0; i < this._length; ++i) {\n            arr.push(this.getElementByPos(i));\n        }\n        arr.sort(cmp);\n        for (let i = 0; i < this._length; ++i) {\n            this.setElementByPos(i, arr[i]);\n        }\n        return this;\n    }\n    /**\n     * @description Remove as much useless space as possible.\n     */\n    shrinkToFit() {\n        if (this._length === 0)\n            return;\n        const newMap = [];\n        if (this._first === this._last)\n            return;\n        else if (this._first < this._last) {\n            for (let i = this._first; i <= this._last; ++i) {\n                newMap.push(this._map[i]);\n            }\n        }\n        else {\n            for (let i = this._first; i < this._bucketNum; ++i) {\n                newMap.push(this._map[i]);\n            }\n            for (let i = 0; i <= this._last; ++i) {\n                newMap.push(this._map[i]);\n            }\n        }\n        this._first = 0;\n        this._last = newMap.length - 1;\n        this._map = newMap;\n    }\n    forEach(callback) {\n        for (let i = 0; i < this._length; ++i) {\n            callback(this.getElementByPos(i), i, this);\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let i = 0; i < this._length; ++i) {\n            yield this.getElementByPos(i);\n        }\n    }\n}\nexport default Deque;\n","import SequentialContainer from './Base';\nimport { IteratorType, initContainer } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport $getContainerSize from '@/utils/getContainerSize.macro';\nimport * as Math from '@/utils/math';\n\nclass DequeIterator<T> extends RandomIterator<T> {\n  readonly container: Deque<T>;\n  constructor(node: number, container: Deque<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new DequeIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: DequeIterator<T>): boolean;\n}\n\nexport type { DequeIterator };\n\nclass Deque<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _curFirst = 0;\n  /**\n   * @internal\n   */\n  private _last = 0;\n  /**\n   * @internal\n   */\n  private _curLast = 0;\n  /**\n   * @internal\n   */\n  private _bucketNum = 0;\n  /**\n   * @internal\n   */\n  private readonly _bucketSize: number;\n  /**\n   * @internal\n   */\n  private _map: T[][] = [];\n  constructor(container: initContainer<T> = [], _bucketSize = (1 << 12)) {\n    super();\n    const _length = $getContainerSize!(container);\n    this._bucketSize = _bucketSize;\n    this._bucketNum = Math.ceil(_length, this._bucketSize) || 1;\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    const needBucketNum = Math.ceil(_length, this._bucketSize);\n    this._first = this._last = (this._bucketNum >> 1) - (needBucketNum >> 1);\n    this._curFirst = this._curLast = (this._bucketSize - _length % this._bucketSize) >> 1;\n    const self = this;\n    container.forEach(function (element) {\n      self.pushBack(element);\n    });\n  }\n  /**\n   * @description Growth the Deque.\n   * @internal\n   */\n  private _reAllocate(needBucketNum?: number) {\n    const newMap = [];\n    const addBucketNum = needBucketNum || this._bucketNum >> 1 || 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[i] = new Array(this._bucketSize);\n    }\n    for (let i = this._first; i < this._bucketNum; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    for (let i = 0; i < this._last; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    newMap[newMap.length] = [...this._map[this._last]];\n    this._first = addBucketNum;\n    this._last = newMap.length - 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[newMap.length] = new Array(this._bucketSize);\n    }\n    this._map = newMap;\n    this._bucketNum = newMap.length;\n  }\n  /**\n   * @description Get the bucket position of the element and the pointer position by index.\n   * @param pos - The element's index.\n   * @internal\n   */\n  private _getElementIndex(pos: number) {\n    let curNodeBucketIndex, curNodePointerIndex;\n    const index = this._curFirst + pos;\n    curNodeBucketIndex = this._first + Math.floor(index / this._bucketSize);\n    if (curNodeBucketIndex >= this._bucketNum) {\n      curNodeBucketIndex -= this._bucketNum;\n    }\n    curNodePointerIndex = (index + 1) % this._bucketSize - 1;\n    if (curNodePointerIndex < 0) {\n      curNodePointerIndex = this._bucketSize - 1;\n    }\n    return { curNodeBucketIndex, curNodePointerIndex };\n  }\n  clear() {\n    this._map = [new Array(this._bucketSize)];\n    this._bucketNum = 1;\n    this._first = this._last = this._length = 0;\n    this._curFirst = this._curLast = this._bucketSize >> 1;\n  }\n  begin() {\n    return new DequeIterator<T>(0, this);\n  }\n  end() {\n    return new DequeIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new DequeIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new DequeIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._first][this._curFirst];\n  }\n  back(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._last][this._curLast];\n  }\n  pushBack(element: T) {\n    if (this._length) {\n      if (this._curLast < this._bucketSize - 1) {\n        this._curLast += 1;\n      } else if (this._last < this._bucketNum - 1) {\n        this._last += 1;\n        this._curLast = 0;\n      } else {\n        this._last = 0;\n        this._curLast = 0;\n      }\n      if (\n        this._last === this._first &&\n        this._curLast === this._curFirst\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._last][this._curLast] = element;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._map[this._last][this._curLast];\n    if (this._length !== 1) {\n      if (this._curLast > 0) {\n        this._curLast -= 1;\n      } else if (this._last > 0) {\n        this._last -= 1;\n        this._curLast = this._bucketSize - 1;\n      } else {\n        this._last = this._bucketNum - 1;\n        this._curLast = this._bucketSize - 1;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  /**\n   * @description Push the element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    if (this._length) {\n      if (this._curFirst > 0) {\n        this._curFirst -= 1;\n      } else if (this._first > 0) {\n        this._first -= 1;\n        this._curFirst = this._bucketSize - 1;\n      } else {\n        this._first = this._bucketNum - 1;\n        this._curFirst = this._bucketSize - 1;\n      }\n      if (\n        this._first === this._last &&\n        this._curFirst === this._curLast\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._first][this._curFirst] = element;\n    return this._length;\n  }\n  /**\n   * @description Remove the _first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._map[this._first][this._curFirst];\n    if (this._length !== 1) {\n      if (this._curFirst < this._bucketSize - 1) {\n        this._curFirst += 1;\n      } else if (this._first < this._bucketNum - 1) {\n        this._first += 1;\n        this._curFirst = 0;\n      } else {\n        this._first = 0;\n        this._curFirst = 0;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  getElementByPos(pos: number): T {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    return this._map[curNodeBucketIndex][curNodePointerIndex]!;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    const length = this._length;\n    $checkWithinAccessParams!(pos, 0, length);\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      const arr: T[] = [];\n      for (let i = pos; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos - 1);\n      for (let i = 0; i < num; ++i) this.pushBack(element);\n      for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    }\n    return this._length;\n  }\n  /**\n   * @description Remove all elements after the specified position (excluding the specified position).\n   * @param pos - The previous position of the first removed element.\n   * @returns The size of the container after cutting.\n   * @example\n   * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n   */\n  cut(pos: number) {\n    if (pos < 0) {\n      this.clear();\n      return 0;\n    }\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._last = curNodeBucketIndex;\n    this._curLast = curNodePointerIndex;\n    this._length = pos + 1;\n    return this._length;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    if (pos === 0) this.popFront();\n    else if (pos === this._length - 1) this.popBack();\n    else {\n      const length = this._length - 1;\n      let {\n        curNodeBucketIndex: curBucket,\n        curNodePointerIndex: curPointer\n      } = this._getElementIndex(pos);\n      for (let i = pos; i < length; ++i) {\n        const {\n          curNodeBucketIndex: nextBucket,\n          curNodePointerIndex: nextPointer\n        } = this._getElementIndex(pos + 1);\n        this._map[curBucket][curPointer] = this._map[nextBucket][nextPointer];\n        curBucket = nextBucket;\n        curPointer = nextPointer;\n      }\n      this.popBack();\n    }\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    const length = this._length;\n    if (length === 0) return 0;\n    let i = 0;\n    let index = 0;\n    while (i < length) {\n      const element = this.getElementByPos(i);\n      if (element !== value) {\n        this.setElementByPos(index, element!);\n        index += 1;\n      }\n      i += 1;\n    }\n    this.cut(index - 1);\n    return this._length;\n  }\n  eraseElementByIterator(iter: DequeIterator<T>) {\n    const _node = iter._node;\n    this.eraseElementByPos(_node);\n    iter = iter.next();\n    return iter;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this.getElementByPos(i) === element) {\n        return new DequeIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    this._map.reverse().forEach(function (bucket) {\n      bucket.reverse();\n    });\n    const { _first, _last, _curFirst, _curLast } = this;\n    this._first = this._bucketNum - _last - 1;\n    this._last = this._bucketNum - _first - 1;\n    this._curFirst = this._bucketSize - _curLast - 1;\n    this._curLast = this._bucketSize - _curFirst - 1;\n    return this;\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let index = 1;\n    let pre = this.getElementByPos(0);\n    for (let i = 1; i < this._length; ++i) {\n      const cur = this.getElementByPos(i);\n      if (cur !== pre) {\n        pre = cur;\n        this.setElementByPos(index++, cur);\n      }\n    }\n    this.cut(index - 1);\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      arr.push(this.getElementByPos(i));\n    }\n    arr.sort(cmp);\n    for (let i = 0; i < this._length; ++i) {\n      this.setElementByPos(i, arr[i]);\n    }\n    return this;\n  }\n  /**\n   * @description Remove as much useless space as possible.\n   */\n  shrinkToFit() {\n    if (this._length === 0) return;\n    const newMap = [];\n    if (this._first === this._last) return;\n    else if (this._first < this._last) {\n      for (let i = this._first; i <= this._last; ++i) {\n        newMap.push(this._map[i]);\n      }\n    } else {\n      for (let i = this._first; i < this._bucketNum; ++i) {\n        newMap.push(this._map[i]);\n      }\n      for (let i = 0; i <= this._last; ++i) {\n        newMap.push(this._map[i]);\n      }\n    }\n    this._first = 0;\n    this._last = newMap.length - 1;\n    this._map = newMap;\n  }\n  forEach(callback: (element: T, index: number, deque: Deque<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this.getElementByPos(i), i, this);\n    }\n  }\n  * [Symbol.iterator]() {\n    for (let i = 0; i < this._length; ++i) {\n      yield this.getElementByPos(i);\n    }\n  }\n}\n\nexport default Deque;\n","import SequentialContainer from './Base';\nimport { ContainerIterator } from \"../ContainerBase\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nclass LinkListIterator extends ContainerIterator {\n    /**\n     * @internal\n     */\n    constructor(_node, _header, container, iteratorType) {\n        super(iteratorType);\n        this._node = _node;\n        this._header = _header;\n        this.container = container;\n        if (this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n    }\n    get pointer() {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        return this._node._value;\n    }\n    set pointer(newValue) {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        this._node._value = newValue;\n    }\n    copy() {\n        return new LinkListIterator(this._node, this._header, this.container, this.iteratorType);\n    }\n}\nclass LinkList extends SequentialContainer {\n    constructor(container = []) {\n        super();\n        this._header = {};\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n        const self = this;\n        container.forEach(function (el) {\n            self.pushBack(el);\n        });\n    }\n    /**\n     * @internal\n     */\n    _eraseNode(node) {\n        const { _pre, _next } = node;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    }\n    /**\n     * @internal\n     */\n    _insertNode(value, pre) {\n        const next = pre._next;\n        const node = {\n            _value: value,\n            _pre: pre,\n            _next: next\n        };\n        pre._next = node;\n        next._pre = node;\n        if (pre === this._header) {\n            this._head = node;\n        }\n        if (next === this._header) {\n            this._tail = node;\n        }\n        this._length += 1;\n    }\n    clear() {\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    }\n    begin() {\n        return new LinkListIterator(this._head, this._header, this);\n    }\n    end() {\n        return new LinkListIterator(this._header, this._header, this);\n    }\n    rBegin() {\n        return new LinkListIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new LinkListIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        return this._head._value;\n    }\n    back() {\n        return this._tail._value;\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        return curNode._value;\n    }\n    eraseElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        this._eraseNode(curNode);\n        return this._length;\n    }\n    eraseElementByValue(_value) {\n        let curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === _value) {\n                this._eraseNode(curNode);\n            }\n            curNode = curNode._next;\n        }\n        return this._length;\n    }\n    eraseElementByIterator(iter) {\n        const node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        iter = iter.next();\n        this._eraseNode(node);\n        return iter;\n    }\n    pushBack(element) {\n        this._insertNode(element, this._tail);\n        return this._length;\n    }\n    popBack() {\n        if (this._length === 0)\n            return;\n        const value = this._tail._value;\n        this._eraseNode(this._tail);\n        return value;\n    }\n    /**\n     * @description Push an element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    pushFront(element) {\n        this._insertNode(element, this._header);\n        return this._length;\n    }\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    popFront() {\n        if (this._length === 0)\n            return;\n        const value = this._head._value;\n        this._eraseNode(this._head);\n        return value;\n    }\n    setElementByPos(pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        let curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        curNode._value = element;\n    }\n    insert(pos, element, num = 1) {\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (num <= 0)\n            return this._length;\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            let curNode = this._head;\n            for (let i = 1; i < pos; ++i) {\n                curNode = curNode._next;\n            }\n            const next = curNode._next;\n            this._length += num;\n            while (num--) {\n                curNode._next = {\n                    _value: element,\n                    _pre: curNode\n                };\n                curNode._next._pre = curNode;\n                curNode = curNode._next;\n            }\n            curNode._next = next;\n            next._pre = curNode;\n        }\n        return this._length;\n    }\n    find(element) {\n        let curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === element) {\n                return new LinkListIterator(curNode, this._header, this);\n            }\n            curNode = curNode._next;\n        }\n        return this.end();\n    }\n    reverse() {\n        if (this._length <= 1) {\n            return this;\n        }\n        let pHead = this._head;\n        let pTail = this._tail;\n        let cnt = 0;\n        while ((cnt << 1) < this._length) {\n            const tmp = pHead._value;\n            pHead._value = pTail._value;\n            pTail._value = tmp;\n            pHead = pHead._next;\n            pTail = pTail._pre;\n            cnt += 1;\n        }\n        return this;\n    }\n    unique() {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        let curNode = this._head;\n        while (curNode !== this._header) {\n            let tmpNode = curNode;\n            while (tmpNode._next !== this._header &&\n                tmpNode._value === tmpNode._next._value) {\n                tmpNode = tmpNode._next;\n                this._length -= 1;\n            }\n            curNode._next = tmpNode._next;\n            curNode._next._pre = curNode;\n            curNode = curNode._next;\n        }\n        return this._length;\n    }\n    sort(cmp) {\n        if (this._length <= 1) {\n            return this;\n        }\n        const arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        arr.sort(cmp);\n        let curNode = this._head;\n        arr.forEach(function (element) {\n            curNode._value = element;\n            curNode = curNode._next;\n        });\n        return this;\n    }\n    /**\n     * @description Merges two sorted lists.\n     * @param list - The other list you want to merge (must be sorted).\n     * @returns The size of list after merging.\n     * @example\n     * const linkA = new LinkList([1, 3, 5]);\n     * const linkB = new LinkList([2, 4, 6]);\n     * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n     */\n    merge(list) {\n        const self = this;\n        if (this._length === 0) {\n            list.forEach(function (el) {\n                self.pushBack(el);\n            });\n        }\n        else {\n            let curNode = this._head;\n            list.forEach(function (el) {\n                while (curNode !== self._header &&\n                    curNode._value <= el) {\n                    curNode = curNode._next;\n                }\n                self._insertNode(el, curNode._pre);\n            });\n        }\n        return this._length;\n    }\n    forEach(callback) {\n        let curNode = this._head;\n        let index = 0;\n        while (curNode !== this._header) {\n            callback(curNode._value, index++, this);\n            curNode = curNode._next;\n        }\n    }\n    *[Symbol.iterator]() {\n        if (this._length === 0)\n            return;\n        let curNode = this._head;\n        while (curNode !== this._header) {\n            yield curNode._value;\n            curNode = curNode._next;\n        }\n    }\n}\nexport default LinkList;\n","import SequentialContainer from './Base';\nimport { ContainerIterator, initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\ntype LinkNode<T> = {\n  _value: T;\n  _pre: LinkNode<T>;\n  _next: LinkNode<T>;\n}\n\nclass LinkListIterator<T> extends ContainerIterator<T> {\n  readonly container: LinkList<T>;\n  /**\n   * @internal\n   */\n  _node: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  /**\n   * @internal\n   */\n  constructor(\n    _node: LinkNode<T>,\n    _header: LinkNode<T>,\n    container: LinkList<T>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = _node;\n    this._header = _header;\n    this.container = container;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._value;\n  }\n  set pointer(newValue: T) {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._node._value = newValue;\n  }\n  copy() {\n    return new LinkListIterator<T>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: LinkListIterator<T>): boolean;\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport type { LinkListIterator };\n\nclass LinkList<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _head: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private _tail: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  constructor(container: initContainer<T> = []) {\n    super();\n    this._header = <LinkNode<T>>{};\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n    const self = this;\n    container.forEach(function (el) {\n      self.pushBack(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private _eraseNode(node: LinkNode<T>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  private _insertNode(value: T, pre: LinkNode<T>) {\n    const next = pre._next;\n    const node = {\n      _value: value,\n      _pre: pre,\n      _next: next\n    };\n    pre._next = node;\n    next._pre = node;\n    if (pre === this._header) {\n      this._head = node;\n    }\n    if (next === this._header) {\n      this._tail = node;\n    }\n    this._length += 1;\n  }\n  clear() {\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  begin() {\n    return new LinkListIterator<T>(this._head, this._header, this);\n  }\n  end() {\n    return new LinkListIterator<T>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new LinkListIterator<T>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new LinkListIterator<T>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._head._value;\n  }\n  back(): T | undefined {\n    return this._tail._value;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    return curNode._value;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    this._eraseNode(curNode);\n    return this._length;\n  }\n  eraseElementByValue(_value: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === _value) {\n        this._eraseNode(curNode);\n      }\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  eraseElementByIterator(iter: LinkListIterator<T>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    iter = iter.next();\n    this._eraseNode(node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._insertNode(element, this._tail);\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._tail._value;\n    this._eraseNode(this._tail);\n    return value;\n  }\n  /**\n   * @description Push an element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    this._insertNode(element, this._header);\n    return this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._head._value;\n    this._eraseNode(this._head);\n    return value;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    curNode._value = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (num <= 0) return this._length;\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      let curNode = this._head;\n      for (let i = 1; i < pos; ++i) {\n        curNode = curNode._next;\n      }\n      const next = curNode._next;\n      this._length += num;\n      while (num--) {\n        curNode._next = <LinkNode<T>>{\n          _value: element,\n          _pre: curNode\n        };\n        curNode._next._pre = curNode;\n        curNode = curNode._next;\n      }\n      curNode._next = next;\n      next._pre = curNode;\n    }\n    return this._length;\n  }\n  find(element: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === element) {\n        return new LinkListIterator<T>(curNode, this._header, this);\n      }\n      curNode = curNode._next;\n    }\n    return this.end();\n  }\n  reverse() {\n    if (this._length <= 1) {\n      return this;\n    }\n    let pHead = this._head;\n    let pTail = this._tail;\n    let cnt = 0;\n    while ((cnt << 1) < this._length) {\n      const tmp = pHead._value;\n      pHead._value = pTail._value;\n      pTail._value = tmp;\n      pHead = pHead._next;\n      pTail = pTail._pre;\n      cnt += 1;\n    }\n    return this;\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      let tmpNode = curNode;\n      while (\n        tmpNode._next !== this._header &&\n        tmpNode._value === tmpNode._next._value\n      ) {\n        tmpNode = tmpNode._next;\n        this._length -= 1;\n      }\n      curNode._next = tmpNode._next;\n      curNode._next._pre = curNode;\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    if (this._length <= 1) {\n      return this;\n    }\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    arr.sort(cmp);\n    let curNode: LinkNode<T> = this._head;\n    arr.forEach(function (element) {\n      curNode._value = element;\n      curNode = curNode._next;\n    });\n    return this;\n  }\n  /**\n   * @description Merges two sorted lists.\n   * @param list - The other list you want to merge (must be sorted).\n   * @returns The size of list after merging.\n   * @example\n   * const linkA = new LinkList([1, 3, 5]);\n   * const linkB = new LinkList([2, 4, 6]);\n   * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n   */\n  merge(list: LinkList<T>) {\n    const self = this;\n    if (this._length === 0) {\n      list.forEach(function (el) {\n        self.pushBack(el);\n      });\n    } else {\n      let curNode = this._head;\n      list.forEach(function (el) {\n        while (\n          curNode !== self._header &&\n          curNode._value <= el\n        ) {\n          curNode = curNode._next;\n        }\n        self._insertNode(el, curNode._pre);\n      });\n    }\n    return this._length;\n  }\n  forEach(callback: (element: T, index: number, list: LinkList<T>) => void) {\n    let curNode = this._head;\n    let index = 0;\n    while (curNode !== this._header) {\n      callback(curNode._value, index++, this);\n      curNode = curNode._next;\n    }\n  }\n  * [Symbol.iterator]() {\n    if (this._length === 0) return;\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      yield curNode._value;\n      curNode = curNode._next;\n    }\n  }\n}\n\nexport default LinkList;\n","import SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nclass VectorIterator extends RandomIterator {\n    constructor(node, container, iteratorType) {\n        super(node, iteratorType);\n        this.container = container;\n    }\n    copy() {\n        return new VectorIterator(this._node, this.container, this.iteratorType);\n    }\n}\nclass Vector extends SequentialContainer {\n    /**\n     * @param container - Initialize container, must have a forEach function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     */\n    constructor(container = [], copy = true) {\n        super();\n        if (Array.isArray(container)) {\n            this._vector = copy ? [...container] : container;\n            this._length = container.length;\n        }\n        else {\n            this._vector = [];\n            const self = this;\n            container.forEach(function (el) {\n                self.pushBack(el);\n            });\n        }\n    }\n    clear() {\n        this._length = 0;\n        this._vector.length = 0;\n    }\n    begin() {\n        return new VectorIterator(0, this);\n    }\n    end() {\n        return new VectorIterator(this._length, this);\n    }\n    rBegin() {\n        return new VectorIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new VectorIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        return this._vector[0];\n    }\n    back() {\n        return this._vector[this._length - 1];\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        return this._vector[pos];\n    }\n    eraseElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        this._vector.splice(pos, 1);\n        this._length -= 1;\n        return this._length;\n    }\n    eraseElementByValue(value) {\n        let index = 0;\n        for (let i = 0; i < this._length; ++i) {\n            if (this._vector[i] !== value) {\n                this._vector[index++] = this._vector[i];\n            }\n        }\n        this._length = this._vector.length = index;\n        return this._length;\n    }\n    eraseElementByIterator(iter) {\n        const _node = iter._node;\n        iter = iter.next();\n        this.eraseElementByPos(_node);\n        return iter;\n    }\n    pushBack(element) {\n        this._vector.push(element);\n        this._length += 1;\n        return this._length;\n    }\n    popBack() {\n        if (this._length === 0)\n            return;\n        this._length -= 1;\n        return this._vector.pop();\n    }\n    setElementByPos(pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        this._vector[pos] = element;\n    }\n    insert(pos, element, num = 1) {\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        this._vector.splice(pos, 0, ...new Array(num).fill(element));\n        this._length += num;\n        return this._length;\n    }\n    find(element) {\n        for (let i = 0; i < this._length; ++i) {\n            if (this._vector[i] === element) {\n                return new VectorIterator(i, this);\n            }\n        }\n        return this.end();\n    }\n    reverse() {\n        this._vector.reverse();\n        return this;\n    }\n    unique() {\n        let index = 1;\n        for (let i = 1; i < this._length; ++i) {\n            if (this._vector[i] !== this._vector[i - 1]) {\n                this._vector[index++] = this._vector[i];\n            }\n        }\n        this._length = this._vector.length = index;\n        return this._length;\n    }\n    sort(cmp) {\n        this._vector.sort(cmp);\n        return this;\n    }\n    forEach(callback) {\n        for (let i = 0; i < this._length; ++i) {\n            callback(this._vector[i], i, this);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._vector;\n    }\n}\nexport default Vector;\n","import SequentialContainer from './Base';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\n\nclass VectorIterator<T> extends RandomIterator<T> {\n  container: Vector<T>;\n  constructor(node: number, container: Vector<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new VectorIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: VectorIterator<T>): boolean;\n}\n\nexport type { VectorIterator };\n\nclass Vector<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private readonly _vector: T[];\n  /**\n   * @param container - Initialize container, must have a forEach function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   */\n  constructor(container: initContainer<T> = [], copy = true) {\n    super();\n    if (Array.isArray(container)) {\n      this._vector = copy ? [...container] : container;\n      this._length = container.length;\n    } else {\n      this._vector = [];\n      const self = this;\n      container.forEach(function (el) {\n        self.pushBack(el);\n      });\n    }\n  }\n  clear() {\n    this._length = 0;\n    this._vector.length = 0;\n  }\n  begin() {\n    return new VectorIterator<T>(0, this);\n  }\n  end() {\n    return new VectorIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new VectorIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new VectorIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._vector[0];\n  }\n  back(): T | undefined {\n    return this._vector[this._length - 1];\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    return this._vector[pos];\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    this._vector.splice(pos, 1);\n    this._length -= 1;\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    let index = 0;\n    for (let i = 0; i < this._length; ++i) {\n      if (this._vector[i] !== value) {\n        this._vector[index++] = this._vector[i];\n      }\n    }\n    this._length = this._vector.length = index;\n    return this._length;\n  }\n  eraseElementByIterator(iter: VectorIterator<T>) {\n    const _node = iter._node;\n    iter = iter.next();\n    this.eraseElementByPos(_node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._vector.push(element);\n    this._length += 1;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    this._length -= 1;\n    return this._vector.pop();\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    this._vector[pos] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    this._vector.splice(pos, 0, ...new Array<T>(num).fill(element));\n    this._length += num;\n    return this._length;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this._vector[i] === element) {\n        return new VectorIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    this._vector.reverse();\n    return this;\n  }\n  unique() {\n    let index = 1;\n    for (let i = 1; i < this._length; ++i) {\n      if (this._vector[i] !== this._vector[i - 1]) {\n        this._vector[index++] = this._vector[i];\n      }\n    }\n    this._length = this._vector.length = index;\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    this._vector.sort(cmp);\n    return this;\n  }\n  forEach(callback: (element: T, index: number, vector: Vector<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this._vector[i], i, this);\n    }\n  }\n  * [Symbol.iterator]() {\n    yield * this._vector;\n  }\n}\n\nexport default Vector;\n","import { ContainerIterator } from \"../../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nclass TreeIterator extends ContainerIterator {\n    /**\n     * @internal\n     */\n    constructor(node, header, iteratorType) {\n        super(iteratorType);\n        this._node = node;\n        this._header = header;\n        if (this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            this.pre = function () {\n                if (this._node === this._header._left) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre();\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next();\n                return this;\n            };\n        }\n        else {\n            this.pre = function () {\n                if (this._node === this._header._right) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next();\n                return this;\n            };\n            this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre();\n                return this;\n            };\n        }\n    }\n    /**\n     * @description Get the sequential index of the iterator in the tree container.<br/>\n     *              <strong>Note:</strong>\n     *              This function only takes effect when the specified tree container `enableIndex = true`.\n     * @returns The index subscript of the node in the tree.\n     * @example\n     * const st = new OrderedSet([1, 2, 3], true);\n     * console.log(st.begin().next().index);  // 1\n     */\n    get index() {\n        let _node = this._node;\n        const root = this._header._parent;\n        if (_node === this._header) {\n            if (root) {\n                return root._subTreeSize - 1;\n            }\n            return 0;\n        }\n        let index = 0;\n        if (_node._left) {\n            index += _node._left._subTreeSize;\n        }\n        while (_node !== root) {\n            const _parent = _node._parent;\n            if (_node === _parent._right) {\n                index += 1;\n                if (_parent._left) {\n                    index += _parent._left._subTreeSize;\n                }\n            }\n            _node = _parent;\n        }\n        return index;\n    }\n}\nexport default TreeIterator;\n","import { TreeNode } from './TreeNode';\nimport type { TreeNodeEnableIndex } from './TreeNode';\nimport { ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport TreeContainer from '@/container/TreeContainer/Base/index';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeIterator<K, V> extends ContainerIterator<K | [K, V]> {\n  abstract readonly container: TreeContainer<K, V>;\n  /**\n   * @internal\n   */\n  _node: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node === this._header._left) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this._header._right) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n    }\n  }\n  /**\n   * @description Get the sequential index of the iterator in the tree container.<br/>\n   *              <strong>Note:</strong>\n   *              This function only takes effect when the specified tree container `enableIndex = true`.\n   * @returns The index subscript of the node in the tree.\n   * @example\n   * const st = new OrderedSet([1, 2, 3], true);\n   * console.log(st.begin().next().index);  // 1\n   */\n  get index() {\n    let _node = this._node as TreeNodeEnableIndex<K, V>;\n    const root = this._header._parent as TreeNodeEnableIndex<K, V>;\n    if (_node === this._header) {\n      if (root) {\n        return root._subTreeSize - 1;\n      }\n      return 0;\n    }\n    let index = 0;\n    if (_node._left) {\n      index += (_node._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    while (_node !== root) {\n      const _parent = _node._parent as TreeNodeEnableIndex<K, V>;\n      if (_node === _parent._right) {\n        index += 1;\n        if (_parent._left) {\n          index += (_parent._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n        }\n      }\n      _node = _parent;\n    }\n    return index;\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport default TreeIterator;\n","export class TreeNode {\n    constructor(key, value, color = 1 /* TreeNodeColor.RED */) {\n        this._left = undefined;\n        this._right = undefined;\n        this._parent = undefined;\n        this._key = key;\n        this._value = value;\n        this._color = color;\n    }\n    /**\n     * @description Get the pre node.\n     * @returns TreeNode about the pre node.\n     */\n    _pre() {\n        let preNode = this;\n        if (preNode._color === 1 /* TreeNodeColor.RED */ &&\n            preNode._parent._parent === preNode) {\n            preNode = preNode._right;\n        }\n        else if (preNode._left) {\n            preNode = preNode._left;\n            while (preNode._right) {\n                preNode = preNode._right;\n            }\n        }\n        else {\n            let pre = preNode._parent;\n            while (pre._left === preNode) {\n                preNode = pre;\n                pre = preNode._parent;\n            }\n            preNode = pre;\n        }\n        return preNode;\n    }\n    /**\n     * @description Get the next node.\n     * @returns TreeNode about the next node.\n     */\n    _next() {\n        let nextNode = this;\n        if (nextNode._right) {\n            nextNode = nextNode._right;\n            while (nextNode._left) {\n                nextNode = nextNode._left;\n            }\n            return nextNode;\n        }\n        else {\n            let pre = nextNode._parent;\n            while (pre._right === nextNode) {\n                nextNode = pre;\n                pre = nextNode._parent;\n            }\n            if (nextNode._right !== pre) {\n                return pre;\n            }\n            else\n                return nextNode;\n        }\n    }\n    /**\n     * @description Rotate left.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    _rotateLeft() {\n        const PP = this._parent;\n        const V = this._right;\n        const R = V._left;\n        if (PP._parent === this)\n            PP._parent = V;\n        else if (PP._left === this)\n            PP._left = V;\n        else\n            PP._right = V;\n        V._parent = PP;\n        V._left = this;\n        this._parent = V;\n        this._right = R;\n        if (R)\n            R._parent = this;\n        return V;\n    }\n    /**\n     * @description Rotate right.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    _rotateRight() {\n        const PP = this._parent;\n        const F = this._left;\n        const K = F._right;\n        if (PP._parent === this)\n            PP._parent = F;\n        else if (PP._left === this)\n            PP._left = F;\n        else\n            PP._right = F;\n        F._parent = PP;\n        F._right = this;\n        this._parent = F;\n        this._left = K;\n        if (K)\n            K._parent = this;\n        return F;\n    }\n}\nexport class TreeNodeEnableIndex extends TreeNode {\n    constructor() {\n        super(...arguments);\n        this._subTreeSize = 1;\n    }\n    /**\n     * @description Rotate left and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    _rotateLeft() {\n        const parent = super._rotateLeft();\n        this._recount();\n        parent._recount();\n        return parent;\n    }\n    /**\n     * @description Rotate right and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    _rotateRight() {\n        const parent = super._rotateRight();\n        this._recount();\n        parent._recount();\n        return parent;\n    }\n    _recount() {\n        this._subTreeSize = 1;\n        if (this._left) {\n            this._subTreeSize += this._left._subTreeSize;\n        }\n        if (this._right) {\n            this._subTreeSize += this._right._subTreeSize;\n        }\n    }\n}\n","export const enum TreeNodeColor {\n  RED = 1,\n  BLACK = 0\n}\n\nexport class TreeNode<K, V> {\n  _color: TreeNodeColor;\n  _key: K | undefined;\n  _value: V | undefined;\n  _left: TreeNode<K, V> | undefined = undefined;\n  _right: TreeNode<K, V> | undefined = undefined;\n  _parent: TreeNode<K, V> | undefined = undefined;\n  constructor(\n    key?: K,\n    value?: V,\n    color: TreeNodeColor = TreeNodeColor.RED\n  ) {\n    this._key = key;\n    this._value = value;\n    this._color = color;\n  }\n  /**\n   * @description Get the pre node.\n   * @returns TreeNode about the pre node.\n   */\n  _pre() {\n    let preNode: TreeNode<K, V> = this;\n    if (\n      preNode._color === TreeNodeColor.RED &&\n      preNode._parent!._parent === preNode\n    ) {\n      preNode = preNode._right!;\n    } else if (preNode._left) {\n      preNode = preNode._left;\n      while (preNode._right) {\n        preNode = preNode._right;\n      }\n    } else {\n      let pre = preNode._parent!;\n      while (pre._left === preNode) {\n        preNode = pre;\n        pre = preNode._parent!;\n      }\n      preNode = pre;\n    }\n    return preNode;\n  }\n  /**\n   * @description Get the next node.\n   * @returns TreeNode about the next node.\n   */\n  _next() {\n    let nextNode: TreeNode<K, V> = this;\n    if (nextNode._right) {\n      nextNode = nextNode._right;\n      while (nextNode._left) {\n        nextNode = nextNode._left;\n      }\n      return nextNode;\n    } else {\n      let pre = nextNode._parent!;\n      while (pre._right === nextNode) {\n        nextNode = pre;\n        pre = nextNode._parent!;\n      }\n      if (nextNode._right !== pre) {\n        return pre;\n      } else return nextNode;\n    }\n  }\n  /**\n   * @description Rotate left.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const PP = this._parent!;\n    const V = this._right!;\n    const R = V._left;\n\n    if (PP._parent === this) PP._parent = V;\n    else if (PP._left === this) PP._left = V;\n    else PP._right = V;\n\n    V._parent = PP;\n    V._left = this;\n\n    this._parent = V;\n    this._right = R;\n\n    if (R) R._parent = this;\n\n    return V;\n  }\n  /**\n   * @description Rotate right.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const PP = this._parent!;\n    const F = this._left!;\n    const K = F._right;\n\n    if (PP._parent === this) PP._parent = F;\n    else if (PP._left === this) PP._left = F;\n    else PP._right = F;\n\n    F._parent = PP;\n    F._right = this;\n\n    this._parent = F;\n    this._left = K;\n\n    if (K) K._parent = this;\n\n    return F;\n  }\n}\n\nexport class TreeNodeEnableIndex<K, V> extends TreeNode<K, V> {\n  _subTreeSize = 1;\n  /**\n   * @description Rotate left and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const parent = super._rotateLeft() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  /**\n   * @description Rotate right and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const parent = super._rotateRight() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  _recount() {\n    this._subTreeSize = 1;\n    if (this._left) {\n      this._subTreeSize += (this._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    if (this._right) {\n      this._subTreeSize += (this._right as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n  }\n}\n","import { TreeNode, TreeNodeEnableIndex } from './TreeNode';\nimport { Container } from \"../../ContainerBase\";\nimport $checkWithinAccessParams from \"../../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nclass TreeContainer extends Container {\n    /**\n     * @internal\n     */\n    constructor(cmp = function (x, y) {\n        if (x < y)\n            return -1;\n        if (x > y)\n            return 1;\n        return 0;\n    }, enableIndex = false) {\n        super();\n        /**\n         * @internal\n         */\n        this._root = undefined;\n        this._cmp = cmp;\n        this.enableIndex = enableIndex;\n        this._TreeNodeClass = enableIndex ? TreeNodeEnableIndex : TreeNode;\n        this._header = new this._TreeNodeClass();\n    }\n    /**\n     * @internal\n     */\n    _lowerBound(curNode, key) {\n        let resNode = this._header;\n        while (curNode) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                resNode = curNode;\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return resNode;\n    }\n    /**\n     * @internal\n     */\n    _upperBound(curNode, key) {\n        let resNode = this._header;\n        while (curNode) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult <= 0) {\n                curNode = curNode._right;\n            }\n            else {\n                resNode = curNode;\n                curNode = curNode._left;\n            }\n        }\n        return resNode;\n    }\n    /**\n     * @internal\n     */\n    _reverseLowerBound(curNode, key) {\n        let resNode = this._header;\n        while (curNode) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                resNode = curNode;\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return resNode;\n    }\n    /**\n     * @internal\n     */\n    _reverseUpperBound(curNode, key) {\n        let resNode = this._header;\n        while (curNode) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                resNode = curNode;\n                curNode = curNode._right;\n            }\n            else {\n                curNode = curNode._left;\n            }\n        }\n        return resNode;\n    }\n    /**\n     * @internal\n     */\n    _eraseNodeSelfBalance(curNode) {\n        while (true) {\n            const parentNode = curNode._parent;\n            if (parentNode === this._header)\n                return;\n            if (curNode._color === 1 /* TreeNodeColor.RED */) {\n                curNode._color = 0 /* TreeNodeColor.BLACK */;\n                return;\n            }\n            if (curNode === parentNode._left) {\n                const brother = parentNode._right;\n                if (brother._color === 1 /* TreeNodeColor.RED */) {\n                    brother._color = 0 /* TreeNodeColor.BLACK */;\n                    parentNode._color = 1 /* TreeNodeColor.RED */;\n                    if (parentNode === this._root) {\n                        this._root = parentNode._rotateLeft();\n                    }\n                    else\n                        parentNode._rotateLeft();\n                }\n                else {\n                    if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = parentNode._color;\n                        parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._right._color = 0 /* TreeNodeColor.BLACK */;\n                        if (parentNode === this._root) {\n                            this._root = parentNode._rotateLeft();\n                        }\n                        else\n                            parentNode._rotateLeft();\n                        return;\n                    }\n                    else if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        brother._left._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._rotateRight();\n                    }\n                    else {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        curNode = parentNode;\n                    }\n                }\n            }\n            else {\n                const brother = parentNode._left;\n                if (brother._color === 1 /* TreeNodeColor.RED */) {\n                    brother._color = 0 /* TreeNodeColor.BLACK */;\n                    parentNode._color = 1 /* TreeNodeColor.RED */;\n                    if (parentNode === this._root) {\n                        this._root = parentNode._rotateRight();\n                    }\n                    else\n                        parentNode._rotateRight();\n                }\n                else {\n                    if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = parentNode._color;\n                        parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._left._color = 0 /* TreeNodeColor.BLACK */;\n                        if (parentNode === this._root) {\n                            this._root = parentNode._rotateRight();\n                        }\n                        else\n                            parentNode._rotateRight();\n                        return;\n                    }\n                    else if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        brother._right._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._rotateLeft();\n                    }\n                    else {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        curNode = parentNode;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    _eraseNode(curNode) {\n        if (this._length === 1) {\n            this.clear();\n            return;\n        }\n        let swapNode = curNode;\n        while (swapNode._left || swapNode._right) {\n            if (swapNode._right) {\n                swapNode = swapNode._right;\n                while (swapNode._left)\n                    swapNode = swapNode._left;\n            }\n            else {\n                swapNode = swapNode._left;\n            }\n            const key = curNode._key;\n            curNode._key = swapNode._key;\n            swapNode._key = key;\n            const value = curNode._value;\n            curNode._value = swapNode._value;\n            swapNode._value = value;\n            curNode = swapNode;\n        }\n        if (this._header._left === swapNode) {\n            this._header._left = swapNode._parent;\n        }\n        else if (this._header._right === swapNode) {\n            this._header._right = swapNode._parent;\n        }\n        this._eraseNodeSelfBalance(swapNode);\n        let _parent = swapNode._parent;\n        if (swapNode === _parent._left) {\n            _parent._left = undefined;\n        }\n        else\n            _parent._right = undefined;\n        this._length -= 1;\n        this._root._color = 0 /* TreeNodeColor.BLACK */;\n        if (this.enableIndex) {\n            while (_parent !== this._header) {\n                _parent._subTreeSize -= 1;\n                _parent = _parent._parent;\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    _inOrderTraversal(param) {\n        const pos = typeof param === 'number' ? param : undefined;\n        const callback = typeof param === 'function' ? param : undefined;\n        const nodeList = typeof param === 'undefined' ? [] : undefined;\n        let index = 0;\n        let curNode = this._root;\n        const stack = [];\n        while (stack.length || curNode) {\n            if (curNode) {\n                stack.push(curNode);\n                curNode = curNode._left;\n            }\n            else {\n                curNode = stack.pop();\n                if (index === pos)\n                    return curNode;\n                nodeList && nodeList.push(curNode);\n                callback && callback(curNode, index, this);\n                index += 1;\n                curNode = curNode._right;\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * @internal\n     */\n    _insertNodeSelfBalance(curNode) {\n        while (true) {\n            const parentNode = curNode._parent;\n            if (parentNode._color === 0 /* TreeNodeColor.BLACK */)\n                return;\n            const grandParent = parentNode._parent;\n            if (parentNode === grandParent._left) {\n                const uncle = grandParent._right;\n                if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n                    uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root)\n                        return;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    curNode = grandParent;\n                    continue;\n                }\n                else if (curNode === parentNode._right) {\n                    curNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (curNode._left) {\n                        curNode._left._parent = parentNode;\n                    }\n                    if (curNode._right) {\n                        curNode._right._parent = grandParent;\n                    }\n                    parentNode._right = curNode._left;\n                    grandParent._left = curNode._right;\n                    curNode._left = parentNode;\n                    curNode._right = grandParent;\n                    if (grandParent === this._root) {\n                        this._root = curNode;\n                        this._header._parent = curNode;\n                    }\n                    else {\n                        const GP = grandParent._parent;\n                        if (GP._left === grandParent) {\n                            GP._left = curNode;\n                        }\n                        else\n                            GP._right = curNode;\n                    }\n                    curNode._parent = grandParent._parent;\n                    parentNode._parent = curNode;\n                    grandParent._parent = curNode;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                }\n                else {\n                    parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root) {\n                        this._root = grandParent._rotateRight();\n                    }\n                    else\n                        grandParent._rotateRight();\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    return;\n                }\n            }\n            else {\n                const uncle = grandParent._left;\n                if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n                    uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root)\n                        return;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    curNode = grandParent;\n                    continue;\n                }\n                else if (curNode === parentNode._left) {\n                    curNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (curNode._left) {\n                        curNode._left._parent = grandParent;\n                    }\n                    if (curNode._right) {\n                        curNode._right._parent = parentNode;\n                    }\n                    grandParent._right = curNode._left;\n                    parentNode._left = curNode._right;\n                    curNode._left = grandParent;\n                    curNode._right = parentNode;\n                    if (grandParent === this._root) {\n                        this._root = curNode;\n                        this._header._parent = curNode;\n                    }\n                    else {\n                        const GP = grandParent._parent;\n                        if (GP._left === grandParent) {\n                            GP._left = curNode;\n                        }\n                        else\n                            GP._right = curNode;\n                    }\n                    curNode._parent = grandParent._parent;\n                    parentNode._parent = curNode;\n                    grandParent._parent = curNode;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                }\n                else {\n                    parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root) {\n                        this._root = grandParent._rotateLeft();\n                    }\n                    else\n                        grandParent._rotateLeft();\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    return;\n                }\n            }\n            if (this.enableIndex) {\n                parentNode._recount();\n                grandParent._recount();\n                curNode._recount();\n            }\n            return;\n        }\n    }\n    /**\n     * @internal\n     */\n    _set(key, value, hint) {\n        if (this._root === undefined) {\n            this._length += 1;\n            this._root = new this._TreeNodeClass(key, value, 0 /* TreeNodeColor.BLACK */);\n            this._root._parent = this._header;\n            this._header._parent = this._header._left = this._header._right = this._root;\n            return this._length;\n        }\n        let curNode;\n        const minNode = this._header._left;\n        const compareToMin = this._cmp(minNode._key, key);\n        if (compareToMin === 0) {\n            minNode._value = value;\n            return this._length;\n        }\n        else if (compareToMin > 0) {\n            minNode._left = new this._TreeNodeClass(key, value);\n            minNode._left._parent = minNode;\n            curNode = minNode._left;\n            this._header._left = curNode;\n        }\n        else {\n            const maxNode = this._header._right;\n            const compareToMax = this._cmp(maxNode._key, key);\n            if (compareToMax === 0) {\n                maxNode._value = value;\n                return this._length;\n            }\n            else if (compareToMax < 0) {\n                maxNode._right = new this._TreeNodeClass(key, value);\n                maxNode._right._parent = maxNode;\n                curNode = maxNode._right;\n                this._header._right = curNode;\n            }\n            else {\n                if (hint !== undefined) {\n                    const iterNode = hint._node;\n                    if (iterNode !== this._header) {\n                        const iterCmpRes = this._cmp(iterNode._key, key);\n                        if (iterCmpRes === 0) {\n                            iterNode._value = value;\n                            return this._length;\n                        }\n                        else /* istanbul ignore else */ if (iterCmpRes > 0) {\n                            const preNode = iterNode._pre();\n                            const preCmpRes = this._cmp(preNode._key, key);\n                            if (preCmpRes === 0) {\n                                preNode._value = value;\n                                return this._length;\n                            }\n                            else if (preCmpRes < 0) {\n                                curNode = new this._TreeNodeClass(key, value);\n                                if (preNode._right === undefined) {\n                                    preNode._right = curNode;\n                                    curNode._parent = preNode;\n                                }\n                                else {\n                                    iterNode._left = curNode;\n                                    curNode._parent = iterNode;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (curNode === undefined) {\n                    curNode = this._root;\n                    while (true) {\n                        const cmpResult = this._cmp(curNode._key, key);\n                        if (cmpResult > 0) {\n                            if (curNode._left === undefined) {\n                                curNode._left = new this._TreeNodeClass(key, value);\n                                curNode._left._parent = curNode;\n                                curNode = curNode._left;\n                                break;\n                            }\n                            curNode = curNode._left;\n                        }\n                        else if (cmpResult < 0) {\n                            if (curNode._right === undefined) {\n                                curNode._right = new this._TreeNodeClass(key, value);\n                                curNode._right._parent = curNode;\n                                curNode = curNode._right;\n                                break;\n                            }\n                            curNode = curNode._right;\n                        }\n                        else {\n                            curNode._value = value;\n                            return this._length;\n                        }\n                    }\n                }\n            }\n        }\n        if (this.enableIndex) {\n            let parent = curNode._parent;\n            while (parent !== this._header) {\n                parent._subTreeSize += 1;\n                parent = parent._parent;\n            }\n        }\n        this._insertNodeSelfBalance(curNode);\n        this._length += 1;\n        return this._length;\n    }\n    /**\n     * @internal\n     */\n    _getTreeNodeByKey(curNode, key) {\n        while (curNode) {\n            const cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return curNode || this._header;\n    }\n    clear() {\n        this._length = 0;\n        this._root = undefined;\n        this._header._parent = undefined;\n        this._header._left = this._header._right = undefined;\n    }\n    /**\n     * @description Update node's key by iterator.\n     * @param iter - The iterator you want to change.\n     * @param key - The key you want to update.\n     * @returns Whether the modification is successful.\n     * @example\n     * const st = new orderedSet([1, 2, 5]);\n     * const iter = st.find(2);\n     * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n     */\n    updateKeyByIterator(iter, key) {\n        const node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        if (this._length === 1) {\n            node._key = key;\n            return true;\n        }\n        const nextKey = node._next()._key;\n        if (node === this._header._left) {\n            if (this._cmp(nextKey, key) > 0) {\n                node._key = key;\n                return true;\n            }\n            return false;\n        }\n        const preKey = node._pre()._key;\n        if (node === this._header._right) {\n            if (this._cmp(preKey, key) < 0) {\n                node._key = key;\n                return true;\n            }\n            return false;\n        }\n        if (this._cmp(preKey, key) >= 0 ||\n            this._cmp(nextKey, key) <= 0)\n            return false;\n        node._key = key;\n        return true;\n    }\n    eraseElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        const node = this._inOrderTraversal(pos);\n        this._eraseNode(node);\n        return this._length;\n    }\n    /**\n     * @description Remove the element of the specified key.\n     * @param key - The key you want to remove.\n     * @returns Whether erase successfully.\n     */\n    eraseElementByKey(key) {\n        if (this._length === 0)\n            return false;\n        const curNode = this._getTreeNodeByKey(this._root, key);\n        if (curNode === this._header)\n            return false;\n        this._eraseNode(curNode);\n        return true;\n    }\n    eraseElementByIterator(iter) {\n        const node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        const hasNoRight = node._right === undefined;\n        const isNormal = iter.iteratorType === 0 /* IteratorType.NORMAL */;\n        // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n        if (isNormal) {\n            // So we should move it to next when it's right is null.\n            if (hasNoRight)\n                iter.next();\n        }\n        else {\n            // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n            // So when it has right, or it is a leaf node we should move it to `next`.\n            if (!hasNoRight || node._left === undefined)\n                iter.next();\n        }\n        this._eraseNode(node);\n        return iter;\n    }\n    /**\n     * @description Get the height of the tree.\n     * @returns Number about the height of the RB-tree.\n     */\n    getHeight() {\n        if (this._length === 0)\n            return 0;\n        function traversal(curNode) {\n            if (!curNode)\n                return 0;\n            return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n        }\n        return traversal(this._root);\n    }\n}\nexport default TreeContainer;\n","import type TreeIterator from './TreeIterator';\nimport { TreeNode, TreeNodeColor, TreeNodeEnableIndex } from './TreeNode';\nimport { Container, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeContainer<K, V> extends Container<K | [K, V]> {\n  enableIndex: boolean;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _root: TreeNode<K, V> | undefined = undefined;\n  /**\n   * @internal\n   */\n  protected readonly _cmp: (x: K, y: K) => number;\n  /**\n   * @internal\n   */\n  protected readonly _TreeNodeClass: typeof TreeNode | typeof TreeNodeEnableIndex;\n  /**\n   * @internal\n   */\n  protected constructor(\n    cmp: (x: K, y: K) => number =\n    function (x: K, y: K) {\n      if (x < y) return -1;\n      if (x > y) return 1;\n      return 0;\n    },\n    enableIndex = false\n  ) {\n    super();\n    this._cmp = cmp;\n    this.enableIndex = enableIndex;\n    this._TreeNodeClass = enableIndex ? TreeNodeEnableIndex : TreeNode;\n    this._header = new this._TreeNodeClass();\n  }\n  /**\n   * @internal\n   */\n  protected _lowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        resNode = curNode;\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _upperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult <= 0) {\n        curNode = curNode._right;\n      } else {\n        resNode = curNode;\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseLowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseUpperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else {\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode === this._header) return;\n      if (curNode._color === TreeNodeColor.RED) {\n        curNode._color = TreeNodeColor.BLACK;\n        return;\n      }\n      if (curNode === parentNode._left) {\n        const brother = parentNode._right!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateLeft();\n          } else parentNode._rotateLeft();\n        } else {\n          if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._right._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateLeft();\n            } else parentNode._rotateLeft();\n            return;\n          } else if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._left._color = TreeNodeColor.BLACK;\n            brother._rotateRight();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      } else {\n        const brother = parentNode._left!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateRight();\n          } else parentNode._rotateRight();\n        } else {\n          if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._left._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateRight();\n            } else parentNode._rotateRight();\n            return;\n          } else if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._right._color = TreeNodeColor.BLACK;\n            brother._rotateLeft();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNode(curNode: TreeNode<K, V>) {\n    if (this._length === 1) {\n      this.clear();\n      return;\n    }\n    let swapNode = curNode;\n    while (swapNode._left || swapNode._right) {\n      if (swapNode._right) {\n        swapNode = swapNode._right;\n        while (swapNode._left) swapNode = swapNode._left;\n      } else {\n        swapNode = swapNode._left!;\n      }\n      const key = curNode._key;\n      curNode._key = swapNode._key;\n      swapNode._key = key;\n      const value = curNode._value;\n      curNode._value = swapNode._value;\n      swapNode._value = value;\n      curNode = swapNode;\n    }\n    if (this._header._left === swapNode) {\n      this._header._left = swapNode._parent;\n    } else if (this._header._right === swapNode) {\n      this._header._right = swapNode._parent;\n    }\n    this._eraseNodeSelfBalance(swapNode);\n    let _parent = swapNode._parent as TreeNodeEnableIndex<K, V>;\n    if (swapNode === _parent._left) {\n      _parent._left = undefined;\n    } else _parent._right = undefined;\n    this._length -= 1;\n    this._root!._color = TreeNodeColor.BLACK;\n    if (this.enableIndex) {\n      while (_parent !== this._header) {\n        _parent._subTreeSize -= 1;\n        _parent = _parent._parent as TreeNodeEnableIndex<K, V>;\n      }\n    }\n  }\n  protected _inOrderTraversal(): TreeNode<K, V>[];\n  protected _inOrderTraversal(pos: number): TreeNode<K, V>;\n  protected _inOrderTraversal(\n    callback: (node: TreeNode<K, V>, index: number, map: this) => void\n  ): TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _inOrderTraversal(\n    param?: number | ((node: TreeNode<K, V>, index: number, map: this) => void)\n  ) {\n    const pos = typeof param === 'number' ? param : undefined;\n    const callback = typeof param === 'function' ? param : undefined;\n    const nodeList = typeof param === 'undefined' ? <TreeNode<K, V>[]>[] : undefined;\n    let index = 0;\n    let curNode = this._root;\n    const stack: TreeNode<K, V>[] = [];\n    while (stack.length || curNode) {\n      if (curNode) {\n        stack.push(curNode);\n        curNode = curNode._left;\n      } else {\n        curNode = stack.pop()!;\n        if (index === pos) return curNode;\n        nodeList && nodeList.push(curNode);\n        callback && callback(curNode, index, this);\n        index += 1;\n        curNode = curNode._right;\n      }\n    }\n    return nodeList;\n  }\n  /**\n   * @internal\n   */\n  protected _insertNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode._color === TreeNodeColor.BLACK) return;\n      const grandParent = parentNode._parent!;\n      if (parentNode === grandParent._left) {\n        const uncle = grandParent._right;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._right) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) {\n            curNode._left._parent = parentNode;\n          }\n          if (curNode._right) {\n            curNode._right._parent = grandParent;\n          }\n          parentNode._right = curNode._left;\n          grandParent._left = curNode._right;\n          curNode._left = parentNode;\n          curNode._right = grandParent;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateRight();\n          } else grandParent._rotateRight();\n          grandParent._color = TreeNodeColor.RED;\n          return;\n        }\n      } else {\n        const uncle = grandParent._left;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._left) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) {\n            curNode._left._parent = grandParent;\n          }\n          if (curNode._right) {\n            curNode._right._parent = parentNode;\n          }\n          grandParent._right = curNode._left;\n          parentNode._left = curNode._right;\n          curNode._left = grandParent;\n          curNode._right = parentNode;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateLeft();\n          } else grandParent._rotateLeft();\n          grandParent._color = TreeNodeColor.RED;\n          return;\n        }\n      }\n      if (this.enableIndex) {\n        (<TreeNodeEnableIndex<K, V>>parentNode)._recount();\n        (<TreeNodeEnableIndex<K, V>>grandParent)._recount();\n        (<TreeNodeEnableIndex<K, V>>curNode)._recount();\n      }\n      return;\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _set(key: K, value?: V, hint?: TreeIterator<K, V>) {\n    if (this._root === undefined) {\n      this._length += 1;\n      this._root = new this._TreeNodeClass(key, value, TreeNodeColor.BLACK);\n      this._root._parent = this._header;\n      this._header._parent = this._header._left = this._header._right = this._root;\n      return this._length;\n    }\n    let curNode;\n    const minNode = this._header._left!;\n    const compareToMin = this._cmp(minNode._key!, key);\n    if (compareToMin === 0) {\n      minNode._value = value;\n      return this._length;\n    } else if (compareToMin > 0) {\n      minNode._left = new this._TreeNodeClass(key, value);\n      minNode._left._parent = minNode;\n      curNode = minNode._left;\n      this._header._left = curNode;\n    } else {\n      const maxNode = this._header._right!;\n      const compareToMax = this._cmp(maxNode._key!, key);\n      if (compareToMax === 0) {\n        maxNode._value = value;\n        return this._length;\n      } else if (compareToMax < 0) {\n        maxNode._right = new this._TreeNodeClass(key, value);\n        maxNode._right._parent = maxNode;\n        curNode = maxNode._right;\n        this._header._right = curNode;\n      } else {\n        if (hint !== undefined) {\n          const iterNode = hint._node;\n          if (iterNode !== this._header) {\n            const iterCmpRes = this._cmp(iterNode._key!, key);\n            if (iterCmpRes === 0) {\n              iterNode._value = value;\n              return this._length;\n            } else /* istanbul ignore else */ if (iterCmpRes > 0) {\n              const preNode = iterNode._pre();\n              const preCmpRes = this._cmp(preNode._key!, key);\n              if (preCmpRes === 0) {\n                preNode._value = value;\n                return this._length;\n              } else if (preCmpRes < 0) {\n                curNode = new this._TreeNodeClass(key, value);\n                if (preNode._right === undefined) {\n                  preNode._right = curNode;\n                  curNode._parent = preNode;\n                } else {\n                  iterNode._left = curNode;\n                  curNode._parent = iterNode;\n                }\n              }\n            }\n          }\n        }\n        if (curNode === undefined) {\n          curNode = this._root;\n          while (true) {\n            const cmpResult = this._cmp(curNode._key!, key);\n            if (cmpResult > 0) {\n              if (curNode._left === undefined) {\n                curNode._left = new this._TreeNodeClass(key, value);\n                curNode._left._parent = curNode;\n                curNode = curNode._left;\n                break;\n              }\n              curNode = curNode._left;\n            } else if (cmpResult < 0) {\n              if (curNode._right === undefined) {\n                curNode._right = new this._TreeNodeClass(key, value);\n                curNode._right._parent = curNode;\n                curNode = curNode._right;\n                break;\n              }\n              curNode = curNode._right;\n            } else {\n              curNode._value = value;\n              return this._length;\n            }\n          }\n        }\n      }\n    }\n    if (this.enableIndex) {\n      let parent = curNode._parent as TreeNodeEnableIndex<K, V>;\n      while (parent !== this._header) {\n        parent._subTreeSize += 1;\n        parent = parent._parent as TreeNodeEnableIndex<K, V>;\n      }\n    }\n    this._insertNodeSelfBalance(curNode);\n    this._length += 1;\n    return this._length;\n  }\n  /**\n   * @internal\n   */\n  protected _getTreeNodeByKey(curNode: TreeNode<K, V> | undefined, key: K) {\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return curNode || this._header;\n  }\n  clear() {\n    this._length = 0;\n    this._root = undefined;\n    this._header._parent = undefined;\n    this._header._left = this._header._right = undefined;\n  }\n  /**\n   * @description Update node's key by iterator.\n   * @param iter - The iterator you want to change.\n   * @param key - The key you want to update.\n   * @returns Whether the modification is successful.\n   * @example\n   * const st = new orderedSet([1, 2, 5]);\n   * const iter = st.find(2);\n   * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n   */\n  updateKeyByIterator(iter: TreeIterator<K, V>, key: K): boolean {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    if (this._length === 1) {\n      node._key = key;\n      return true;\n    }\n    const nextKey = node._next()._key!;\n    if (node === this._header._left) {\n      if (this._cmp(nextKey, key) > 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    const preKey = node._pre()._key!;\n    if (node === this._header._right) {\n      if (this._cmp(preKey, key) < 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    if (\n      this._cmp(preKey, key) >= 0 ||\n      this._cmp(nextKey, key) <= 0\n    ) return false;\n    node._key = key;\n    return true;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    this._eraseNode(node);\n    return this._length;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key: K) {\n    if (this._length === 0) return false;\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    if (curNode === this._header) return false;\n    this._eraseNode(curNode);\n    return true;\n  }\n  eraseElementByIterator(iter: TreeIterator<K, V>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    const hasNoRight = node._right === undefined;\n    const isNormal = iter.iteratorType === IteratorType.NORMAL;\n    // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n    if (isNormal) {\n      // So we should move it to next when it's right is null.\n      if (hasNoRight) iter.next();\n    } else {\n      // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n      // So when it has right, or it is a leaf node we should move it to `next`.\n      if (!hasNoRight || node._left === undefined) iter.next();\n    }\n    this._eraseNode(node);\n    return iter;\n  }\n  /**\n   * @description Get the height of the tree.\n   * @returns Number about the height of the RB-tree.\n   */\n  getHeight() {\n    if (this._length === 0) return 0;\n    function traversal(curNode: TreeNode<K, V> | undefined): number {\n      if (!curNode) return 0;\n      return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n    }\n    return traversal(this._root);\n  }\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element less than the given key.\n   */\n  abstract reverseUpperBound(key: K): TreeIterator<K, V>;\n  /**\n   * @description Union the other tree to self.\n   * @param other - The other tree container you want to merge.\n   * @returns The size of the tree after union.\n   */\n  abstract union(other: TreeContainer<K, V>): number;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not greater than the given key.\n   */\n  abstract reverseLowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not less than the given key.\n   */\n  abstract lowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element greater than the given key.\n   */\n  abstract upperBound(key: K): TreeIterator<K, V>;\n}\n\nexport default TreeContainer;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nclass OrderedMapIterator extends TreeIterator {\n    constructor(node, header, container, iteratorType) {\n        super(node, header, iteratorType);\n        this.container = container;\n    }\n    get pointer() {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        const self = this;\n        return new Proxy([], {\n            get(_, props) {\n                if (props === '0')\n                    return self._node._key;\n                else if (props === '1')\n                    return self._node._value;\n            },\n            set(_, props, newValue) {\n                if (props !== '1') {\n                    throw new TypeError('props must be 1');\n                }\n                self._node._value = newValue;\n                return true;\n            }\n        });\n    }\n    copy() {\n        return new OrderedMapIterator(this._node, this._header, this.container, this.iteratorType);\n    }\n}\nclass OrderedMap extends TreeContainer {\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedMap();\n     * new OrderedMap([[0, 1], [2, 1]]);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n     */\n    constructor(container = [], cmp, enableIndex) {\n        super(cmp, enableIndex);\n        const self = this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n    }\n    begin() {\n        return new OrderedMapIterator(this._header._left || this._header, this._header, this);\n    }\n    end() {\n        return new OrderedMapIterator(this._header, this._header, this);\n    }\n    rBegin() {\n        return new OrderedMapIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new OrderedMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        if (this._length === 0)\n            return;\n        const minNode = this._header._left;\n        return [minNode._key, minNode._value];\n    }\n    back() {\n        if (this._length === 0)\n            return;\n        const maxNode = this._header._right;\n        return [maxNode._key, maxNode._value];\n    }\n    lowerBound(key) {\n        const resNode = this._lowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    }\n    upperBound(key) {\n        const resNode = this._upperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    }\n    reverseLowerBound(key) {\n        const resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    }\n    reverseUpperBound(key) {\n        const resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    }\n    forEach(callback) {\n        this._inOrderTraversal(function (node, index, map) {\n            callback([node._key, node._value], index, map);\n        });\n    }\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n     * const iter = mp.begin();\n     * mp.setElement(1, 0);\n     * mp.setElement(3, 0, iter);  // give a hint will be faster.\n     */\n    setElement(key, value, hint) {\n        return this._set(key, value, hint);\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        const node = this._inOrderTraversal(pos);\n        return [node._key, node._value];\n    }\n    find(key) {\n        const curNode = this._getTreeNodeByKey(this._root, key);\n        return new OrderedMapIterator(curNode, this._header, this);\n    }\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The specified key you want to get.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    getElementByKey(key) {\n        const curNode = this._getTreeNodeByKey(this._root, key);\n        return curNode._value;\n    }\n    union(other) {\n        const self = this;\n        other.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return this._length;\n    }\n    *[Symbol.iterator]() {\n        const length = this._length;\n        const nodeList = this._inOrderTraversal();\n        for (let i = 0; i < length; ++i) {\n            const node = nodeList[i];\n            yield [node._key, node._value];\n        }\n    }\n}\nexport default OrderedMap;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedMapIterator<K, V> extends TreeIterator<K, V> {\n  container: OrderedMap<K, V>;\n  constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    container: OrderedMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new OrderedMapIterator<K, V>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedMapIterator<K, V>): boolean;\n}\n\nexport type { OrderedMapIterator };\n\nclass OrderedMap<K, V> extends TreeContainer<K, V> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedMap();\n   * new OrderedMap([[0, 1], [2, 1]]);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<[K, V]> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new OrderedMapIterator<K, V>(this._header._left || this._header, this._header, this);\n  }\n  end() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedMapIterator<K, V>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    const minNode = this._header._left!;\n    return <[K, V]>[minNode._key, minNode._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    const maxNode = this._header._right!;\n    return <[K, V]>[maxNode._key, maxNode._value];\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, map: OrderedMap<K, V>) => void) {\n    this._inOrderTraversal(function (node, index, map) {\n      callback(<[K, V]>[node._key, node._value], index, map);\n    });\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n   * const iter = mp.begin();\n   * mp.setElement(1, 0);\n   * mp.setElement(3, 0, iter);  // give a hint will be faster.\n   */\n  setElement(key: K, value: V, hint?: OrderedMapIterator<K, V>) {\n    return this._set(key, value, hint);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    return <[K, V]>[node._key, node._value];\n  }\n  find(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return new OrderedMapIterator<K, V>(curNode, this._header, this);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The specified key you want to get.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K) {\n    const curNode = this._getTreeNodeByKey(this._root, key);\n    return curNode._value;\n  }\n  union(other: OrderedMap<K, V>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n    return this._length;\n  }\n  * [Symbol.iterator]() {\n    const length = this._length;\n    const nodeList = this._inOrderTraversal();\n    for (let i = 0; i < length; ++i) {\n      const node = nodeList[i];\n      yield <[K, V]>[node._key, node._value];\n    }\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedMapIterator<K, V>): OrderedMapIterator<K, V>;\n}\n\nexport default OrderedMap;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nclass OrderedSetIterator extends TreeIterator {\n    constructor(node, header, container, iteratorType) {\n        super(node, header, iteratorType);\n        this.container = container;\n    }\n    get pointer() {\n        if (this._node === this._header) {\n            throwIteratorAccessError();\n        }\n        return this._node._key;\n    }\n    copy() {\n        return new OrderedSetIterator(this._node, this._header, this.container, this.iteratorType);\n    }\n}\nclass OrderedSet extends TreeContainer {\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedSet();\n     * new OrderedSet([0, 1, 2]);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n     */\n    constructor(container = [], cmp, enableIndex) {\n        super(cmp, enableIndex);\n        const self = this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n    }\n    begin() {\n        return new OrderedSetIterator(this._header._left || this._header, this._header, this);\n    }\n    end() {\n        return new OrderedSetIterator(this._header, this._header, this);\n    }\n    rBegin() {\n        return new OrderedSetIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    rEnd() {\n        return new OrderedSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    }\n    front() {\n        return this._header._left ? this._header._left._key : undefined;\n    }\n    back() {\n        return this._header._right ? this._header._right._key : undefined;\n    }\n    lowerBound(key) {\n        const resNode = this._lowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    }\n    upperBound(key) {\n        const resNode = this._upperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    }\n    reverseLowerBound(key) {\n        const resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    }\n    reverseUpperBound(key) {\n        const resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    }\n    forEach(callback) {\n        this._inOrderTraversal(function (node, index, set) {\n            callback(node._key, index, set);\n        });\n    }\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const st = new OrderedSet([2, 4, 5]);\n     * const iter = st.begin();\n     * st.insert(1);\n     * st.insert(3, iter);  // give a hint will be faster.\n     */\n    insert(key, hint) {\n        return this._set(key, undefined, hint);\n    }\n    getElementByPos(pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        const node = this._inOrderTraversal(pos);\n        return node._key;\n    }\n    find(element) {\n        const resNode = this._getTreeNodeByKey(this._root, element);\n        return new OrderedSetIterator(resNode, this._header, this);\n    }\n    union(other) {\n        const self = this;\n        other.forEach(function (el) {\n            self.insert(el);\n        });\n        return this._length;\n    }\n    *[Symbol.iterator]() {\n        const length = this._length;\n        const nodeList = this._inOrderTraversal();\n        for (let i = 0; i < length; ++i) {\n            yield nodeList[i]._key;\n        }\n    }\n}\nexport default OrderedSet;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedSetIterator<K> extends TreeIterator<K, undefined> {\n  container: OrderedSet<K>;\n  constructor(\n    node: TreeNode<K, undefined>,\n    header: TreeNode<K, undefined>,\n    container: OrderedSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key!;\n  }\n  copy() {\n    return new OrderedSetIterator<K>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedSetIterator<K>): boolean;\n}\n\nexport type { OrderedSetIterator };\n\nclass OrderedSet<K> extends TreeContainer<K, undefined> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedSet();\n   * new OrderedSet([0, 1, 2]);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<K> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  begin() {\n    return new OrderedSetIterator<K>(\n      this._header._left || this._header,\n      this._header,\n      this\n    );\n  }\n  end() {\n    return new OrderedSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedSetIterator<K>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    return this._header._left ? this._header._left._key : undefined;\n  }\n  back() {\n    return this._header._right ? this._header._right._key : undefined;\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  forEach(callback: (element: K, index: number, set: OrderedSet<K>) => void) {\n    this._inOrderTraversal(function (node, index, set) {\n      callback(node._key as K, index, set);\n    });\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const st = new OrderedSet([2, 4, 5]);\n   * const iter = st.begin();\n   * st.insert(1);\n   * st.insert(3, iter);  // give a hint will be faster.\n   */\n  insert(key: K, hint?: OrderedSetIterator<K>) {\n    return this._set(key, undefined, hint);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const node = this._inOrderTraversal(pos);\n    return node._key as K;\n  }\n  find(element: K) {\n    const resNode = this._getTreeNodeByKey(this._root, element);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  union(other: OrderedSet<K>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.insert(el);\n    });\n    return this._length;\n  }\n  * [Symbol.iterator]() {\n    const length = this._length;\n    const nodeList = this._inOrderTraversal();\n    for (let i = 0; i < length; ++i) {\n      yield nodeList[i]._key as K;\n    }\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedSetIterator<K>): OrderedSetIterator<K>;\n}\n\nexport default OrderedSet;\n","\"use strict\";\n\nObject.defineProperty(exports, \"t\", {\n    value: true\n});\n\nObject.defineProperty(exports, \"Deque\", {\n    enumerable: true,\n    get: function() {\n        return _Deque.default;\n    }\n});\n\nObject.defineProperty(exports, \"HashMap\", {\n    enumerable: true,\n    get: function() {\n        return _HashMap.default;\n    }\n});\n\nObject.defineProperty(exports, \"HashSet\", {\n    enumerable: true,\n    get: function() {\n        return _HashSet.default;\n    }\n});\n\nObject.defineProperty(exports, \"LinkList\", {\n    enumerable: true,\n    get: function() {\n        return _LinkList.default;\n    }\n});\n\nObject.defineProperty(exports, \"OrderedMap\", {\n    enumerable: true,\n    get: function() {\n        return _OrderedMap.default;\n    }\n});\n\nObject.defineProperty(exports, \"OrderedSet\", {\n    enumerable: true,\n    get: function() {\n        return _OrderedSet.default;\n    }\n});\n\nObject.defineProperty(exports, \"PriorityQueue\", {\n    enumerable: true,\n    get: function() {\n        return _PriorityQueue.default;\n    }\n});\n\nObject.defineProperty(exports, \"Queue\", {\n    enumerable: true,\n    get: function() {\n        return _Queue.default;\n    }\n});\n\nObject.defineProperty(exports, \"Stack\", {\n    enumerable: true,\n    get: function() {\n        return _Stack.default;\n    }\n});\n\nObject.defineProperty(exports, \"Vector\", {\n    enumerable: true,\n    get: function() {\n        return _Vector.default;\n    }\n});\n\nvar _Stack = _interopRequireDefault(require(\"./container/OtherContainer/Stack\"));\n\nvar _Queue = _interopRequireDefault(require(\"./container/OtherContainer/Queue\"));\n\nvar _PriorityQueue = _interopRequireDefault(require(\"./container/OtherContainer/PriorityQueue\"));\n\nvar _Vector = _interopRequireDefault(require(\"./container/SequentialContainer/Vector\"));\n\nvar _LinkList = _interopRequireDefault(require(\"./container/SequentialContainer/LinkList\"));\n\nvar _Deque = _interopRequireDefault(require(\"./container/SequentialContainer/Deque\"));\n\nvar _OrderedSet = _interopRequireDefault(require(\"./container/TreeContainer/OrderedSet\"));\n\nvar _OrderedMap = _interopRequireDefault(require(\"./container/TreeContainer/OrderedMap\"));\n\nvar _HashSet = _interopRequireDefault(require(\"./container/HashContainer/HashSet\"));\n\nvar _HashMap = _interopRequireDefault(require(\"./container/HashContainer/HashMap\"));\n\nfunction _interopRequireDefault(e) {\n    return e && e.t ? e : {\n        default: e\n    };\n}\n//# sourceMappingURL=index.js.map\n","export { default as Stack } from '@/container/OtherContainer/Stack';\nexport { default as Queue } from '@/container/OtherContainer/Queue';\nexport { default as PriorityQueue } from '@/container/OtherContainer/PriorityQueue';\nexport { default as Vector } from '@/container/SequentialContainer/Vector';\nexport { default as LinkList } from '@/container/SequentialContainer/LinkList';\nexport { default as Deque } from '@/container/SequentialContainer/Deque';\nexport { default as OrderedSet } from '@/container/TreeContainer/OrderedSet';\nexport { default as OrderedMap } from '@/container/TreeContainer/OrderedMap';\nexport { default as HashSet } from '@/container/HashContainer/HashSet';\nexport { default as HashMap } from '@/container/HashContainer/HashMap';\nexport type { VectorIterator } from '@/container/SequentialContainer/Vector';\nexport type { LinkListIterator } from '@/container/SequentialContainer/LinkList';\nexport type { DequeIterator } from '@/container/SequentialContainer/Deque';\nexport type { OrderedSetIterator } from '@/container/TreeContainer/OrderedSet';\nexport type { OrderedMapIterator } from '@/container/TreeContainer/OrderedMap';\nexport type { HashSetIterator } from '@/container/HashContainer/HashSet';\nexport type { HashMapIterator } from '@/container/HashContainer/HashMap';\nexport type { IteratorType, Container, ContainerIterator } from '@/container/ContainerBase';\nexport type { default as SequentialContainer } from '@/container/SequentialContainer/Base';\nexport type { default as TreeContainer } from '@/container/TreeContainer/Base';\nexport type { HashContainer } from '@/container/HashContainer/Base';\n","/**\n * @description Determine whether the type of key is `object`.\n * @param key - The key want to check.\n * @returns Whether the type of key is `object`.\n * @internal\n */\nexport default function checkObject(key) {\n    const t = typeof key;\n    return (t === 'object' && key !== null) || t === 'function';\n}\n","/**\n * @description Determine whether the type of key is `object`.\n * @param key - The key want to check.\n * @returns Whether the type of key is `object`.\n * @internal\n */\nexport default function checkObject<T>(key: T) {\n  const t = typeof key;\n  return (t === 'object' && key !== null) || t === 'function';\n}\n","/**\n * @description Same to Math.ceil(a / b).\n * @param a - numerator.\n * @param b - Denominator.\n * @internal\n */\nexport function ceil(a, b) {\n    return Math.floor((a + b - 1) / b);\n}\n/**\n * @internal\n */\nexport const floor = Math.floor;\n","/**\n * @description Same to Math.ceil(a / b).\n * @param a - numerator.\n * @param b - Denominator.\n * @internal\n */\nexport function ceil(a: number, b: number) {\n  return Math.floor((a + b - 1) / b);\n}\n\n/**\n * @internal\n */\nexport const floor = Math.floor;\n","/**\n * @description Throw an iterator access error.\n * @internal\n */\nexport function throwIteratorAccessError() {\n    throw new RangeError('Iterator access denied!');\n}\n","/**\n * @description Throw an iterator access error.\n * @internal\n */\nexport function throwIteratorAccessError() {\n  throw new RangeError('Iterator access denied!');\n}\n","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isPlainObject = exports.clone = exports.recursive = exports.merge = exports.main = void 0;\r\nmodule.exports = exports = main;\r\nexports.default = main;\r\nfunction main() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return merge.apply(void 0, items);\r\n}\r\nexports.main = main;\r\nmain.clone = clone;\r\nmain.isPlainObject = isPlainObject;\r\nmain.recursive = recursive;\r\nfunction merge() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, false, items);\r\n}\r\nexports.merge = merge;\r\nfunction recursive() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, true, items);\r\n}\r\nexports.recursive = recursive;\r\nfunction clone(input) {\r\n    if (Array.isArray(input)) {\r\n        var output = [];\r\n        for (var index = 0; index < input.length; ++index)\r\n            output.push(clone(input[index]));\r\n        return output;\r\n    }\r\n    else if (isPlainObject(input)) {\r\n        var output = {};\r\n        for (var index in input)\r\n            output[index] = clone(input[index]);\r\n        return output;\r\n    }\r\n    else {\r\n        return input;\r\n    }\r\n}\r\nexports.clone = clone;\r\nfunction isPlainObject(input) {\r\n    return input && typeof input === 'object' && !Array.isArray(input);\r\n}\r\nexports.isPlainObject = isPlainObject;\r\nfunction _recursiveMerge(base, extend) {\r\n    if (!isPlainObject(base))\r\n        return extend;\r\n    for (var key in extend) {\r\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n            continue;\r\n        base[key] = (isPlainObject(base[key]) && isPlainObject(extend[key])) ?\r\n            _recursiveMerge(base[key], extend[key]) :\r\n            extend[key];\r\n    }\r\n    return base;\r\n}\r\nfunction _merge(isClone, isRecursive, items) {\r\n    var result;\r\n    if (isClone || !isPlainObject(result = items.shift()))\r\n        result = {};\r\n    for (var index = 0; index < items.length; ++index) {\r\n        var item = items[index];\r\n        if (!isPlainObject(item))\r\n            continue;\r\n        for (var key in item) {\r\n            if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n                continue;\r\n            var value = isClone ? clone(item[key]) : item[key];\r\n            result[key] = isRecursive ? _recursiveMerge(result[key], value) : value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {FrWrapper} lhs\n* @param {FrWrapper} rhs\n* @returns {FrWrapper}\n*/\nexport function fr_add(lhs, rhs) {\n    _assertClass(lhs, FrWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, FrWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.fr_add(ptr0, ptr1);\n    return FrWrapper.__wrap(ret);\n}\n\n/**\n* @param {FrWrapper} lhs\n* @param {FrWrapper} rhs\n* @returns {FrWrapper}\n*/\nexport function fr_sub(lhs, rhs) {\n    _assertClass(lhs, FrWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, FrWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.fr_sub(ptr0, ptr1);\n    return FrWrapper.__wrap(ret);\n}\n\n/**\n* @param {FrWrapper} lhs\n* @param {FrWrapper} rhs\n* @returns {FrWrapper}\n*/\nexport function fr_mul(lhs, rhs) {\n    _assertClass(lhs, FrWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, FrWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.fr_mul(ptr0, ptr1);\n    return FrWrapper.__wrap(ret);\n}\n\n/**\n* @param {FrWrapper} lhs\n* @param {FrWrapper} rhs\n* @returns {FrWrapper}\n*/\nexport function fr_div(lhs, rhs) {\n    _assertClass(lhs, FrWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, FrWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.fr_div(ptr0, ptr1);\n    return FrWrapper.__wrap(ret);\n}\n\n/**\n* @param {FrWrapper} lhs\n* @returns {FrWrapper}\n*/\nexport function fr_sqrt(lhs) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(lhs, FrWrapper);\n        var ptr0 = lhs.__destroy_into_raw();\n        wasm.fr_sqrt(retptr, ptr0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return FrWrapper.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {FrWrapper} lhs\n* @returns {FrWrapper}\n*/\nexport function fr_square(lhs) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(lhs, FrWrapper);\n        var ptr0 = lhs.__destroy_into_raw();\n        wasm.fr_square(retptr, ptr0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return FrWrapper.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* @param {Array<any>} arr\n* @returns {ElementWrapper}\n*/\nexport function commit_scalar_values(arr) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.commit_scalar_values(retptr, addBorrowedObject(arr));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return ElementWrapper.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {Uint8Array} address_tree_index\n* @returns {any}\n*/\nexport function pedersen_hash(address_tree_index) {\n    const ret = wasm.pedersen_hash(addHeapObject(address_tree_index));\n    return takeObject(ret);\n}\n\n/**\n* @param {Uint8Array} js_root\n* @param {Uint8Array} js_proof\n* @param {Map<any, any>} js_key_values\n* @returns {any}\n*/\nexport function verify_update(js_root, js_proof, js_key_values) {\n    try {\n        const ret = wasm.verify_update(addHeapObject(js_root), addHeapObject(js_proof), addBorrowedObject(js_key_values));\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {ElementWrapper} lhs\n* @param {ElementWrapper} rhs\n* @returns {ElementWrapper}\n*/\nexport function element_add(lhs, rhs) {\n    _assertClass(lhs, ElementWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, ElementWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.element_add(ptr0, ptr1);\n    return ElementWrapper.__wrap(ret);\n}\n\n/**\n* @param {ElementWrapper} lhs\n* @param {ElementWrapper} rhs\n* @returns {ElementWrapper}\n*/\nexport function element_sub(lhs, rhs) {\n    _assertClass(lhs, ElementWrapper);\n    var ptr0 = lhs.__destroy_into_raw();\n    _assertClass(rhs, ElementWrapper);\n    var ptr1 = rhs.__destroy_into_raw();\n    const ret = wasm.element_sub(ptr0, ptr1);\n    return ElementWrapper.__wrap(ret);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nexport class ElementWrapper {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ElementWrapper.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_elementwrapper_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {ElementWrapper}\n    */\n    static fromBytes(bytes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.elementwrapper_fromBytes(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return ElementWrapper.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {ElementWrapper}\n    */\n    static generator() {\n        const ret = wasm.elementwrapper_generator();\n        return ElementWrapper.__wrap(ret);\n    }\n    /**\n    * @param {ElementWrapper} element_wrapper\n    * @param {FrWrapper} scalar_wrapper\n    * @returns {ElementWrapper}\n    */\n    static scalarMul(element_wrapper, scalar_wrapper) {\n        _assertClass(element_wrapper, ElementWrapper);\n        var ptr0 = element_wrapper.__destroy_into_raw();\n        _assertClass(scalar_wrapper, FrWrapper);\n        var ptr1 = scalar_wrapper.__destroy_into_raw();\n        const ret = wasm.elementwrapper_scalarMul(ptr0, ptr1);\n        return ElementWrapper.__wrap(ret);\n    }\n    /**\n    * @returns {ElementWrapper}\n    */\n    static zero() {\n        const ret = wasm.elementwrapper_zero();\n        return ElementWrapper.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    toHexString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.elementwrapper_toHexString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    toBytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.elementwrapper_toBytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {FrWrapper}\n    */\n    mapToScalarField() {\n        const ret = wasm.elementwrapper_mapToScalarField(this.__wbg_ptr);\n        return FrWrapper.__wrap(ret);\n    }\n}\n/**\n*/\nexport class FrWrapper {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(FrWrapper.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_frwrapper_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} bytes\n    * @returns {FrWrapper}\n    */\n    static fromBytes(bytes) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passArray8ToWasm0(bytes, wasm.__wbindgen_malloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.frwrapper_fromBytes(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return FrWrapper.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} string\n    * @returns {FrWrapper}\n    */\n    static fromDecimalString(string) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.frwrapper_fromDecimalString(retptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return FrWrapper.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {FrWrapper}\n    */\n    static _default() {\n        const ret = wasm.frwrapper__default();\n        return FrWrapper.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    toHexString() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.frwrapper_toHexString(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    toBytes() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.frwrapper_toBytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {SerializableFrWrapper}\n    */\n    toSerializableWrapper() {\n        const ret = wasm.frwrapper_toSerializableWrapper(this.__wbg_ptr);\n        return SerializableFrWrapper.__wrap(ret);\n    }\n}\n/**\n*/\nexport class SerializableFrWrapper {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(SerializableFrWrapper.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_serializablefrwrapper_free(ptr);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_json_serialize = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = JSON.stringify(obj === undefined ? null : obj);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_log_ca2cef7e603e7b33 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_is_null = function(arg0) {\n        const ret = getObject(arg0) === null;\n        return ret;\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_get_44be0491f933a435 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_fff51ee6522a1a18 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_next_ddb3312ca1c4e32a = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_5c1f01fb660d73b5 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_1695675138684bd5 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_from_d7c216d4616bb368 = function(arg0) {\n        const ret = Array.from(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_entries_b5bd4a28ac6701ef = function(arg0) {\n        const ret = getObject(arg0).entries();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_085ec1f694018c4f = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8125e318e6245eed = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_5cf90238115182c3 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_72e2208bbc0efc61 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('rust_verkle_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initRustBN = void 0;\nvar _base = require(\"@scure/base\");\nvar _wasm = _interopRequireDefault(require(\"./wasm.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar imports = {};\nvar wasm;\nvar WASM_VECTOR_LEN = 0;\nvar cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nvar cachedTextEncoder = new TextEncoder();\nvar encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  var buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    var buf = cachedTextEncoder.encode(arg);\n    var _ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0().subarray(_ptr, _ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return _ptr;\n  }\n  var len = arg.length;\n  var ptr = malloc(len, 1) >>> 0;\n  var mem = getUint8Memory0();\n  var offset = 0;\n  for (; offset < len; offset++) {\n    var code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    var ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nvar cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\nvar cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n * @param {string} input_hex\n * @returns {string}\n */\nvar ec_mul = function ec_mul(input_hex) {\n  var deferred2_0;\n  var deferred2_1;\n  try {\n    var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = passStringToWasm0(input_hex, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ec_mul(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred2_0 = r0;\n    deferred2_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n  }\n};\n/**\n * @param {string} input_str\n * @returns {string}\n */\nvar ec_add = function ec_add(input_str) {\n  var deferred2_0;\n  var deferred2_1;\n  try {\n    var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = passStringToWasm0(input_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ec_add(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred2_0 = r0;\n    deferred2_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n  }\n};\n/**\n * @param {string} input_str\n * @returns {string}\n */\nvar ec_pairing = function ec_pairing(input_str) {\n  var deferred2_0;\n  var deferred2_1;\n  try {\n    var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = passStringToWasm0(input_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ec_pairing(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred2_0 = r0;\n    deferred2_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n  }\n};\nvar initRustBN = exports.initRustBN = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var wasmInstance;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = WebAssembly;\n          _context.next = 3;\n          return WebAssembly.compile(_base.base64.decode(_wasm[\"default\"].wasm));\n        case 3:\n          _context.t1 = _context.sent;\n          _context.t2 = imports;\n          _context.next = 7;\n          return _context.t0.instantiate.call(_context.t0, _context.t1, _context.t2);\n        case 7:\n          wasmInstance = _context.sent;\n          wasm = wasmInstance.exports;\n          return _context.abrupt(\"return\", {\n            ec_pairing: ec_pairing,\n            ec_add: ec_add,\n            ec_mul: ec_mul\n          });\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function initRustBN() {\n    return _ref.apply(this, arguments);\n  };\n}();","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = exports[\"default\"] = {\n  \"wasm\": \"\"\n};","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.createBase58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64urlnopad = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexports.utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexports.base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.createBase58check = createBase58check;\n// legacy export, bad name\nexports.base58check = exports.createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString; // as in python, but for bytes only\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/g, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n","/*!\n * time-stamp <https://github.com/jonschlinkert/time-stamp>\n *\n * Copyright (c) 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar dateRegex = /(?=(YYYY|YY|MM|DD|HH|mm|ss|ms))\\1([:\\/]*)/g;\nvar timespan = {\n  YYYY: ['getFullYear', 4],\n  YY: ['getFullYear', 2],\n  MM: ['getMonth', 2, 1], // getMonth is zero-based, thus the extra increment field\n  DD: ['getDate', 2],\n  HH: ['getHours', 2],\n  mm: ['getMinutes', 2],\n  ss: ['getSeconds', 2],\n  ms: ['getMilliseconds', 3]\n};\n\nvar timestamp = function(str, date, utc) {\n  if (typeof str !== 'string') {\n    date = str;\n    str = 'YYYY-MM-DD';\n  }\n\n  if (!date) date = new Date();\n  return str.replace(dateRegex, function(match, key, rest) {\n    var args = timespan[key];\n    var name = args[0];\n    var chars = args[1];\n    if (utc === true) name = 'getUTC' + name.slice(3);\n    var val = '00' + String(date[name]() + (args[2] || 0));\n    return val.slice(-chars) + (rest || '');\n  });\n};\n\ntimestamp.utc = function(str, date) {\n  return timestamp(str, date, true);\n};\n\nmodule.exports = timestamp;\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { FormatterError } from 'web3-errors';\nimport { Iban } from 'web3-eth-iban';\nimport {\n\tBlockTags,\n\tFilter,\n\tNumbers,\n\tTopic,\n\tBlockInput,\n\tBlockOutput,\n\tLogsInput,\n\tLogsOutput,\n\tMutable,\n\tPostInput,\n\tPostOutput,\n\tProof,\n\tReceiptInput,\n\tReceiptOutput,\n\tSyncInput,\n\tSyncOutput,\n\tTransactionInput,\n\tTransactionOutput,\n} from 'web3-types';\nimport {\n\tfromUtf8,\n\thexToNumber,\n\thexToNumberString,\n\tisAddress,\n\tisHexStrict,\n\tmergeDeep,\n\tnumberToHex,\n\tsha3Raw,\n\ttoChecksumAddress,\n\ttoNumber,\n\ttoUtf8,\n\tutf8ToHex,\n} from 'web3-utils';\nimport { isBlockTag, isHex, isNullish } from 'web3-validator';\n\n/* eslint-disable deprecation/deprecation */\n/**\n * @deprecated Use format function from web3-utils package instead\n * Will format the given storage key array values to hex strings.\n */\nexport const inputStorageKeysFormatter = (keys: Array<string>) => keys.map(num => numberToHex(num));\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Will format the given proof response from the node.\n */\nexport const outputProofFormatter = (proof: Proof): Proof => ({\n\taddress: toChecksumAddress(proof.address),\n\tnonce: hexToNumberString(proof.nonce),\n\tbalance: hexToNumberString(proof.balance),\n});\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Should the format output to a big number\n */\nexport const outputBigIntegerFormatter = (number: Numbers) => toNumber(number);\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Returns the given block number as hex string or the predefined block number 'latest', 'pending', 'earliest', 'genesis'\n */\nexport const inputBlockNumberFormatter = (blockNumber: Numbers | undefined) => {\n\tif (isNullish(blockNumber)) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof blockNumber === 'string' && isBlockTag(blockNumber)) {\n\t\treturn blockNumber;\n\t}\n\n\tif (blockNumber === 'genesis') {\n\t\treturn '0x0';\n\t}\n\n\tif (typeof blockNumber === 'string' && isHexStrict(blockNumber)) {\n\t\treturn blockNumber.toLowerCase();\n\t}\n\n\treturn numberToHex(blockNumber);\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Returns the given block number as hex string or does return the defaultBlock property of the current module\n */\nexport const inputDefaultBlockNumberFormatter = (\n\tblockNumber: Numbers | undefined,\n\tdefaultBlock: Numbers,\n) => {\n\tif (!blockNumber) {\n\t\treturn inputBlockNumberFormatter(defaultBlock);\n\t}\n\n\treturn inputBlockNumberFormatter(blockNumber);\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * @param address\n */\nexport const inputAddressFormatter = (address: string): string | never => {\n\tif (Iban.isValid(address) && Iban.isDirect(address)) {\n\t\tconst iban = new Iban(address);\n\n\t\treturn iban.toAddress().toLowerCase();\n\t}\n\n\tif (isAddress(address)) {\n\t\treturn `0x${address.toLowerCase().replace('0x', '')}`;\n\t}\n\n\tthrow new FormatterError(\n\t\t`Provided address ${address} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`,\n\t);\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the input of a transaction and converts all values to HEX\n */\nexport const txInputOptionsFormatter = (options: TransactionInput): Mutable<TransactionOutput> => {\n\tconst modifiedOptions = { ...options } as unknown as Mutable<TransactionOutput>;\n\n\tif (options.to) {\n\t\t// it might be contract creation\n\t\tmodifiedOptions.to = inputAddressFormatter(options.to);\n\t}\n\n\tif (options.data && options.input) {\n\t\tthrow new FormatterError(\n\t\t\t'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.',\n\t\t);\n\t}\n\n\tif (!options.input && options.data) {\n\t\tmodifiedOptions.input = options.data;\n\t\tdelete modifiedOptions.data;\n\t}\n\n\tif (options.input && !options.input.startsWith('0x')) {\n\t\tmodifiedOptions.input = `0x${options.input}`;\n\t}\n\n\tif (modifiedOptions.input && !isHexStrict(modifiedOptions.input)) {\n\t\tthrow new FormatterError('The input field must be HEX encoded data.');\n\t}\n\n\t// allow both\n\tif (options.gas || options.gasLimit) {\n\t\tmodifiedOptions.gas = toNumber(options.gas ?? options.gasLimit);\n\t}\n\n\tif (options.maxPriorityFeePerGas || options.maxFeePerGas) {\n\t\tdelete modifiedOptions.gasPrice;\n\t}\n\n\t['gasPrice', 'gas', 'value', 'maxPriorityFeePerGas', 'maxFeePerGas', 'nonce', 'chainId']\n\t\t.filter(key => !isNullish(modifiedOptions[key]))\n\t\t.forEach(key => {\n\t\t\tmodifiedOptions[key] = numberToHex(modifiedOptions[key] as Numbers);\n\t\t});\n\n\treturn modifiedOptions as TransactionOutput;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the input of a transaction and converts all values to HEX\n */\nexport const inputCallFormatter = (options: TransactionInput, defaultAccount?: string) => {\n\tconst opts = txInputOptionsFormatter(options);\n\n\tconst from = opts.from ?? defaultAccount;\n\n\tif (from) {\n\t\topts.from = inputAddressFormatter(from);\n\t}\n\n\treturn opts;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the input of a transaction and converts all values to HEX\n */\nexport const inputTransactionFormatter = (options: TransactionInput, defaultAccount?: string) => {\n\tconst opts = txInputOptionsFormatter(options);\n\n\t// check from, only if not number, or object\n\tif (!(typeof opts.from === 'number') && !(!!opts.from && typeof opts.from === 'object')) {\n\t\topts.from = opts.from ?? defaultAccount;\n\n\t\tif (!options.from && !(typeof options.from === 'number')) {\n\t\t\tthrow new FormatterError('The send transactions \"from\" field must be defined!');\n\t\t}\n\n\t\topts.from = inputAddressFormatter(options.from);\n\t}\n\n\treturn opts;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Hex encodes the data passed to eth_sign and personal_sign\n */\nexport const inputSignFormatter = (data: string) => (isHexStrict(data) ? data : utf8ToHex(data));\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the output of a transaction to its proper values\n * @function outputTransactionFormatter\n */\nexport const outputTransactionFormatter = (tx: TransactionInput): TransactionOutput => {\n\tconst modifiedTx = { ...tx } as unknown as Mutable<TransactionOutput>;\n\n\tif (tx.blockNumber) {\n\t\tmodifiedTx.blockNumber = hexToNumber(tx.blockNumber);\n\t}\n\n\tif (tx.transactionIndex) {\n\t\tmodifiedTx.transactionIndex = hexToNumber(tx.transactionIndex);\n\t}\n\n\tmodifiedTx.nonce = hexToNumber(tx.nonce);\n\tmodifiedTx.gas = hexToNumber(tx.gas);\n\n\tif (tx.gasPrice) {\n\t\tmodifiedTx.gasPrice = outputBigIntegerFormatter(tx.gasPrice);\n\t}\n\n\tif (tx.maxFeePerGas) {\n\t\tmodifiedTx.maxFeePerGas = outputBigIntegerFormatter(tx.maxFeePerGas);\n\t}\n\n\tif (tx.maxPriorityFeePerGas) {\n\t\tmodifiedTx.maxPriorityFeePerGas = outputBigIntegerFormatter(tx.maxPriorityFeePerGas);\n\t}\n\n\tif (tx.type) {\n\t\tmodifiedTx.type = hexToNumber(tx.type);\n\t}\n\n\tmodifiedTx.value = outputBigIntegerFormatter(tx.value);\n\n\tif (tx.to && isAddress(tx.to)) {\n\t\t// tx.to could be `0x0` or `null` while contract creation\n\t\tmodifiedTx.to = toChecksumAddress(tx.to);\n\t} else {\n\t\tmodifiedTx.to = undefined; // set to `null` if invalid address\n\t}\n\n\tif (tx.from) {\n\t\tmodifiedTx.from = toChecksumAddress(tx.from);\n\t}\n\n\treturn modifiedTx;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * @param topic\n */\n// To align with specification we use the type \"null\" here\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const inputTopicFormatter = (topic: Topic): Topic | null => {\n\t// Using \"null\" value intentionally for validation\n\t// eslint-disable-next-line no-null/no-null\n\tif (isNullish(topic)) return null;\n\n\tconst value = String(topic);\n\n\treturn isHex(value) ? value : fromUtf8(value);\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * @param filter\n */\nexport const inputLogFormatter = (filter: Filter) => {\n\tconst val: Mutable<Filter> = isNullish(filter)\n\t\t? {}\n\t\t: mergeDeep({}, filter as Record<string, unknown>);\n\n\t// If options !== undefined, don't blow out existing data\n\tif (isNullish(val.fromBlock)) {\n\t\tval.fromBlock = BlockTags.LATEST;\n\t}\n\n\tval.fromBlock = inputBlockNumberFormatter(val.fromBlock);\n\n\tif (!isNullish(val.toBlock)) {\n\t\tval.toBlock = inputBlockNumberFormatter(val.toBlock);\n\t}\n\n\t// make sure topics, get converted to hex\n\tval.topics = val.topics ?? [];\n\tval.topics = val.topics.map(topic =>\n\t\tArray.isArray(topic)\n\t\t\t? (topic.map(inputTopicFormatter) as Topic[])\n\t\t\t: inputTopicFormatter(topic as Topic),\n\t);\n\n\tif (val.address) {\n\t\tval.address = Array.isArray(val.address)\n\t\t\t? val.address.map(addr => inputAddressFormatter(addr))\n\t\t\t: inputAddressFormatter(val.address);\n\t}\n\n\treturn val as Filter;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the output of a log\n * @function outputLogFormatter\n */\nexport const outputLogFormatter = (log: Partial<LogsInput>): LogsOutput => {\n\tconst modifiedLog = { ...log } as unknown as Mutable<LogsOutput>;\n\n\tconst logIndex =\n\t\ttypeof log.logIndex === 'string'\n\t\t\t? log.logIndex\n\t\t\t: numberToHex(log.logIndex as unknown as number);\n\n\t// generate a custom log id\n\tif (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string') {\n\t\tconst shaId = sha3Raw(\n\t\t\t`${log.blockHash.replace('0x', '')}${log.transactionHash.replace(\n\t\t\t\t'0x',\n\t\t\t\t'',\n\t\t\t)}${logIndex.replace('0x', '')}`,\n\t\t);\n\t\tmodifiedLog.id = `log_${shaId.replace('0x', '').slice(0, 8)}`;\n\t} else if (!log.id) {\n\t\tmodifiedLog.id = undefined;\n\t}\n\n\tif (log.blockNumber && isHexStrict(log.blockNumber)) {\n\t\tmodifiedLog.blockNumber = hexToNumber(log.blockNumber);\n\t}\n\tif (log.transactionIndex && isHexStrict(log.transactionIndex)) {\n\t\tmodifiedLog.transactionIndex = hexToNumber(log.transactionIndex);\n\t}\n\n\tif (log.logIndex && isHexStrict(log.logIndex)) {\n\t\tmodifiedLog.logIndex = hexToNumber(log.logIndex);\n\t}\n\n\tif (log.address) {\n\t\tmodifiedLog.address = toChecksumAddress(log.address);\n\t}\n\n\treturn modifiedLog;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the output of a transaction receipt to its proper values\n */\nexport const outputTransactionReceiptFormatter = (receipt: ReceiptInput): ReceiptOutput => {\n\tif (typeof receipt !== 'object') {\n\t\tthrow new FormatterError(`Received receipt is invalid: ${String(receipt)}`);\n\t}\n\tconst modifiedReceipt = { ...receipt } as unknown as Mutable<ReceiptOutput>;\n\n\tif (receipt.blockNumber) {\n\t\tmodifiedReceipt.blockNumber = hexToNumber(receipt.blockNumber);\n\t}\n\n\tif (receipt.transactionIndex) {\n\t\tmodifiedReceipt.transactionIndex = hexToNumber(receipt.transactionIndex);\n\t}\n\n\tmodifiedReceipt.cumulativeGasUsed = hexToNumber(receipt.cumulativeGasUsed);\n\tmodifiedReceipt.gasUsed = hexToNumber(receipt.gasUsed);\n\n\tif (receipt.logs && Array.isArray(receipt.logs)) {\n\t\tmodifiedReceipt.logs = receipt.logs.map(outputLogFormatter);\n\t}\n\n\tif (receipt.effectiveGasPrice) {\n\t\tmodifiedReceipt.effectiveGasPrice = hexToNumber(receipt.effectiveGasPrice);\n\t}\n\n\tif (receipt.contractAddress) {\n\t\tmodifiedReceipt.contractAddress = toChecksumAddress(receipt.contractAddress);\n\t}\n\n\tif (receipt.status) {\n\t\tmodifiedReceipt.status = Boolean(parseInt(receipt.status, 10));\n\t}\n\n\treturn modifiedReceipt;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the output of a block to its proper values\n * @function outputBlockFormatter\n */\nexport const outputBlockFormatter = (block: BlockInput): BlockOutput => {\n\tconst modifiedBlock = { ...block } as unknown as Mutable<BlockOutput>;\n\n\t// transform to number\n\tmodifiedBlock.gasLimit = hexToNumber(block.gasLimit);\n\tmodifiedBlock.gasUsed = hexToNumber(block.gasUsed);\n\tmodifiedBlock.size = hexToNumber(block.size);\n\tmodifiedBlock.timestamp = hexToNumber(block.timestamp);\n\n\tif (block.number) {\n\t\tmodifiedBlock.number = hexToNumber(block.number);\n\t}\n\n\tif (block.difficulty) {\n\t\tmodifiedBlock.difficulty = outputBigIntegerFormatter(block.difficulty);\n\t}\n\n\tif (block.totalDifficulty) {\n\t\tmodifiedBlock.totalDifficulty = outputBigIntegerFormatter(block.totalDifficulty);\n\t}\n\n\tif (block.transactions && Array.isArray(block.transactions)) {\n\t\tmodifiedBlock.transactions = block.transactions.map(outputTransactionFormatter);\n\t}\n\n\tif (block.miner) {\n\t\tmodifiedBlock.miner = toChecksumAddress(block.miner);\n\t}\n\n\tif (block.baseFeePerGas) {\n\t\tmodifiedBlock.baseFeePerGas = outputBigIntegerFormatter(block.baseFeePerGas);\n\t}\n\n\treturn modifiedBlock;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the input of a whisper post and converts all values to HEX\n */\nexport const inputPostFormatter = (post: PostOutput): PostInput => {\n\tconst modifiedPost = { ...post } as unknown as Mutable<PostInput>;\n\n\tif (post.ttl) {\n\t\tmodifiedPost.ttl = numberToHex(post.ttl);\n\t}\n\n\tif (post.workToProve) {\n\t\tmodifiedPost.workToProve = numberToHex(post.workToProve);\n\t}\n\n\tif (post.priority) {\n\t\tmodifiedPost.priority = numberToHex(post.priority);\n\t}\n\n\t// fallback\n\tif (post.topics && !Array.isArray(post.topics)) {\n\t\tmodifiedPost.topics = post.topics ? [post.topics] : [];\n\t}\n\n\t// format the following options\n\tmodifiedPost.topics = modifiedPost.topics?.map(topic =>\n\t\ttopic.startsWith('0x') ? topic : fromUtf8(topic),\n\t);\n\n\treturn modifiedPost;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n * Formats the output of a received post message\n * @function outputPostFormatter\n */\nexport const outputPostFormatter = (post: PostInput): PostOutput => {\n\tconst modifiedPost = { ...post } as unknown as Mutable<PostOutput>;\n\n\tif (post.expiry) {\n\t\tmodifiedPost.expiry = hexToNumber(post.expiry);\n\t}\n\n\tif (post.sent) {\n\t\tmodifiedPost.sent = hexToNumber(post.sent);\n\t}\n\n\tif (post.ttl) {\n\t\tmodifiedPost.ttl = hexToNumber(post.ttl);\n\t}\n\n\tif (post.workProved) {\n\t\tmodifiedPost.workProved = hexToNumber(post.workProved);\n\t}\n\n\t// post.payloadRaw = post.payload;\n\t// post.payload = utils.hexToAscii(post.payload);\n\n\t// if (utils.isJson(post.payload)) {\n\t//     post.payload = JSON.parse(post.payload);\n\t// }\n\n\t// format the following options\n\tif (!post.topics) {\n\t\tmodifiedPost.topics = [];\n\t}\n\n\tmodifiedPost.topics = modifiedPost.topics?.map(toUtf8);\n\n\treturn modifiedPost;\n};\n\n/**\n * @deprecated Use format function from web3-utils package instead\n */\nexport const outputSyncingFormatter = (result: SyncInput): SyncOutput => {\n\tconst modifiedResult = { ...result } as unknown as Mutable<SyncOutput>;\n\n\tmodifiedResult.startingBlock = hexToNumber(result.startingBlock);\n\tmodifiedResult.currentBlock = hexToNumber(result.currentBlock);\n\tmodifiedResult.highestBlock = hexToNumber(result.highestBlock);\n\n\tif (result.knownStates) {\n\t\tmodifiedResult.knownStates = hexToNumber(result.knownStates);\n\t}\n\n\tif (result.pulledStates) {\n\t\tmodifiedResult.pulledStates = hexToNumber(result.pulledStates);\n\t}\n\n\treturn modifiedResult;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport * from './web3_config.js';\nexport * from './web3_request_manager.js';\nexport * from './web3_subscription_manager.js';\nexport * from './web3_subscriptions.js';\nexport * from './web3_context.js';\nexport * from './web3_batch_request.js';\nexport * from './utils.js';\nexport * from './types.js';\nexport * from './formatters.js';\nexport * from './web3_promi_event.js';\nexport * from './web3_event_emitter.js';\n\n// For backward usability export as namespace\nexport * as formatters from './formatters.js';\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tEIP1193Provider,\n\tLegacyRequestProvider,\n\tLegacySendAsyncProvider,\n\tLegacySendProvider,\n\tSupportedProviders,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n} from 'web3-types';\n\nexport const isWeb3Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is Web3BaseProvider<API> => Web3BaseProvider.isWeb3Provider(provider);\n\nexport const isLegacyRequestProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacyRequestProvider =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'Function';\n\nexport const isEIP1193Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is EIP1193Provider<API> =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'AsyncFunction';\n\nexport const isLegacySendProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendProvider => typeof provider !== 'string' && 'send' in provider;\n\nexport const isLegacySendAsyncProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendAsyncProvider => typeof provider !== 'string' && 'sendAsync' in provider;\n\nexport const isSupportedProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is SupportedProviders<API> =>\n\tprovider &&\n\t(isWeb3Provider(provider) ||\n\t\tisEIP1193Provider(provider) ||\n\t\tisLegacyRequestProvider(provider) ||\n\t\tisLegacySendAsyncProvider(provider) ||\n\t\tisLegacySendProvider(provider));\n\nexport const isSupportSubscriptions = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): boolean => {\n\tif (provider && 'supportsSubscriptions' in provider) {\n\t\treturn provider.supportsSubscriptions();\n\t}\n\n\tif (provider && typeof provider !== 'string' && 'on' in provider) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { JsonRpcBatchResponse, JsonRpcOptionalRequest, JsonRpcRequest } from 'web3-types';\nimport { jsonRpc, Web3DeferredPromise } from 'web3-utils';\nimport { OperationAbortError, OperationTimeoutError, ResponseError } from 'web3-errors';\nimport { Web3RequestManager } from './web3_request_manager.js';\n\nexport const DEFAULT_BATCH_REQUEST_TIMEOUT = 1000;\n\nexport class Web3BatchRequest {\n\tprivate readonly _requestManager: Web3RequestManager;\n\tprivate readonly _requests: Map<\n\t\tnumber,\n\t\t{ payload: JsonRpcRequest; promise: Web3DeferredPromise<unknown> }\n\t>;\n\n\tpublic constructor(requestManager: Web3RequestManager) {\n\t\tthis._requestManager = requestManager;\n\t\tthis._requests = new Map();\n\t}\n\n\tpublic get requests() {\n\t\treturn [...this._requests.values()].map(r => r.payload);\n\t}\n\n\tpublic add<ResponseType = unknown>(request: JsonRpcOptionalRequest<unknown>) {\n\t\tconst payload = jsonRpc.toPayload(request) as JsonRpcRequest;\n\t\tconst promise = new Web3DeferredPromise<ResponseType>();\n\n\t\tthis._requests.set(payload.id as number, { payload, promise });\n\n\t\treturn promise;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic async execute(options?: {\n\t\ttimeout?: number;\n\t}): Promise<JsonRpcBatchResponse<unknown, unknown>> {\n\t\tif (this.requests.length === 0) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst request = new Web3DeferredPromise<JsonRpcBatchResponse<unknown, unknown>>({\n\t\t\ttimeout: options?.timeout ?? DEFAULT_BATCH_REQUEST_TIMEOUT,\n\t\t\teagerStart: true,\n\t\t\ttimeoutMessage: 'Batch request timeout',\n\t\t});\n\n\t\tthis._processBatchRequest(request).catch(err => request.reject(err));\n\n\t\trequest.catch((err: Error) => {\n\t\t\tif (err instanceof OperationTimeoutError) {\n\t\t\t\tthis._abortAllRequests('Batch request timeout');\n\t\t\t}\n\n\t\t\trequest.reject(err);\n\t\t});\n\n\t\treturn request;\n\t}\n\n\tprivate async _processBatchRequest(\n\t\tpromise: Web3DeferredPromise<JsonRpcBatchResponse<unknown, unknown>>,\n\t) {\n\t\tconst response = await this._requestManager.sendBatch(\n\t\t\t[...this._requests.values()].map(r => r.payload),\n\t\t);\n\n\t\tif (response.length !== this._requests.size) {\n\t\t\tthis._abortAllRequests('Invalid batch response');\n\n\t\t\tthrow new ResponseError(\n\t\t\t\tresponse,\n\t\t\t\t`Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${response.length}`,\n\t\t\t);\n\t\t}\n\n\t\tconst requestIds = this.requests\n\t\t\t.map(r => r.id)\n\t\t\t.map(Number)\n\t\t\t.sort((a, b) => a - b);\n\n\t\tconst responseIds = response\n\t\t\t.map(r => r.id)\n\t\t\t.map(Number)\n\t\t\t.sort((a, b) => a - b);\n\n\t\tif (JSON.stringify(requestIds) !== JSON.stringify(responseIds)) {\n\t\t\tthis._abortAllRequests('Invalid batch response');\n\n\t\t\tthrow new ResponseError(\n\t\t\t\tresponse,\n\t\t\t\t`Batch request mismatch the results. Requests: [${requestIds.join()}], Responses: [${responseIds.join()}]`,\n\t\t\t);\n\t\t}\n\n\t\tfor (const res of response) {\n\t\t\tif (jsonRpc.isResponseWithResult(res)) {\n\t\t\t\tthis._requests.get(res.id as number)?.promise.resolve(res.result);\n\t\t\t} else if (jsonRpc.isResponseWithError(res)) {\n\t\t\t\tthis._requests.get(res.id as number)?.promise.reject(res.error);\n\t\t\t}\n\t\t}\n\n\t\tpromise.resolve(response);\n\t}\n\n\tprivate _abortAllRequests(msg: string) {\n\t\tfor (const { promise } of this._requests.values()) {\n\t\t\tpromise.reject(new OperationAbortError(msg));\n\t\t}\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Numbers, HexString, BlockNumberOrTag, Common } from 'web3-types';\nimport { ConfigHardforkMismatchError, ConfigChainMismatchError } from 'web3-errors';\nimport { isNullish, toHex } from 'web3-utils';\nimport { TransactionTypeParser } from './types.js';\n// eslint-disable-next-line import/no-cycle\nimport { TransactionBuilder } from './web3_context.js';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\n\n// To avoid cycle dependency declare this\nexport interface Web3ConfigOptions {\n\thandleRevert: boolean;\n\tdefaultAccount?: HexString;\n\tdefaultBlock: BlockNumberOrTag;\n\ttransactionSendTimeout: number;\n\ttransactionBlockTimeout: number;\n\ttransactionConfirmationBlocks: number;\n\ttransactionPollingInterval: number;\n\ttransactionPollingTimeout: number;\n\ttransactionReceiptPollingInterval?: number;\n\ttransactionConfirmationPollingInterval?: number;\n\tblockHeaderTimeout: number;\n\tmaxListenersWarningThreshold: number;\n\tcontractDataInputFill: 'data' | 'input' | 'both';\n\tdefaultNetworkId?: Numbers;\n\tdefaultChain: string;\n\tdefaultHardfork: string;\n\n\tdefaultCommon?: Common;\n\tdefaultTransactionType: Numbers;\n\tdefaultMaxPriorityFeePerGas: Numbers;\n\tenableExperimentalFeatures: {\n\t\tuseSubscriptionWhenCheckingBlockTimeout: boolean;\n\t\tuseRpcCallSpecification: boolean; // EIP-1474 https://eips.ethereum.org/EIPS/eip-1474\n\t\t// other experimental features...\n\t};\n\ttransactionBuilder?: TransactionBuilder;\n\ttransactionTypeParser?: TransactionTypeParser;\n}\n\ntype ConfigEvent<T, P extends keyof T = keyof T> = P extends unknown\n\t? { name: P; oldValue: T[P]; newValue: T[P] }\n\t: never;\n\nexport enum Web3ConfigEvent {\n\tCONFIG_CHANGE = 'CONFIG_CHANGE',\n}\n\nexport abstract class Web3Config\n\textends Web3EventEmitter<{ [Web3ConfigEvent.CONFIG_CHANGE]: ConfigEvent<Web3ConfigOptions> }>\n\timplements Web3ConfigOptions\n{\n\tpublic config: Web3ConfigOptions = {\n\t\thandleRevert: false,\n\t\tdefaultAccount: undefined,\n\t\tdefaultBlock: 'latest',\n\t\ttransactionBlockTimeout: 50,\n\t\ttransactionConfirmationBlocks: 24,\n\t\ttransactionPollingInterval: 1000,\n\t\ttransactionPollingTimeout: 750 * 1000,\n\t\ttransactionReceiptPollingInterval: undefined,\n\t\ttransactionSendTimeout: 750 * 1000,\n\t\ttransactionConfirmationPollingInterval: undefined,\n\t\tblockHeaderTimeout: 10,\n\t\tmaxListenersWarningThreshold: 100,\n\t\tcontractDataInputFill: 'input',\n\t\tdefaultNetworkId: undefined,\n\t\tdefaultChain: 'mainnet',\n\t\tdefaultHardfork: 'london',\n\t\t// TODO - Check if there is a default Common\n\t\tdefaultCommon: undefined,\n\t\tdefaultTransactionType: '0x2',\n\t\tdefaultMaxPriorityFeePerGas: toHex(2500000000),\n\t\tenableExperimentalFeatures: {\n\t\t\tuseSubscriptionWhenCheckingBlockTimeout: false,\n\t\t\tuseRpcCallSpecification: false,\n\t\t},\n\t\ttransactionBuilder: undefined,\n\t\ttransactionTypeParser: undefined,\n\t};\n\n\tpublic constructor(options?: Partial<Web3ConfigOptions>) {\n\t\tsuper();\n\n\t\tthis.setConfig(options ?? {});\n\t}\n\n\tpublic setConfig(options: Partial<Web3ConfigOptions>) {\n\t\t// TODO: Improve and add key check\n\t\tObject.assign(this.config, options);\n\t}\n\n\t/**\n\t * The `handleRevert` options property returns the revert reason string if enabled for the following methods:\n\t * - web3.eth.sendTransaction()\n\t * - web3.eth.call()\n\t * - myContract.methods.myMethod().call()\n\t * - myContract.methods.myMethod().send()\n\t * Default is `false`.\n\t *\n\t * `Note`: At the moment `handleRevert` is only supported for `sendTransaction` and not for `sendSignedTransaction`\n\t */\n\tpublic get handleRevert() {\n\t\treturn this.config.handleRevert;\n\t}\n\n\t/**\n\t * Will set the handleRevert\n\t */\n\tpublic set handleRevert(val) {\n\t\tthis._triggerConfigChange('handleRevert', val);\n\t\tthis.config.handleRevert = val;\n\t}\n\n\t/**\n\t * The `contractDataInputFill` options property will allow you to set the hash of the method signature and encoded parameters to the property\n\t * either `data`, `input` or both within your contract.\n\t * This will affect the contracts send, call and estimateGas methods\n\t * Default is `input`.\n\t */\n\tpublic get contractDataInputFill() {\n\t\treturn this.config.contractDataInputFill;\n\t}\n\n\t/**\n\t * Will set the contractDataInputFill\n\t */\n\tpublic set contractDataInputFill(val) {\n\t\tthis._triggerConfigChange('contractDataInputFill', val);\n\t\tthis.config.contractDataInputFill = val;\n\t}\n\n\t/**\n\t * This default address is used as the default `from` property, if no `from` property is specified in for the following methods:\n\t * - web3.eth.sendTransaction()\n\t * - web3.eth.call()\n\t * - myContract.methods.myMethod().call()\n\t * - myContract.methods.myMethod().send()\n\t */\n\tpublic get defaultAccount() {\n\t\treturn this.config.defaultAccount;\n\t}\n\t/**\n\t * Will set the default account.\n\t */\n\tpublic set defaultAccount(val) {\n\t\tthis._triggerConfigChange('defaultAccount', val);\n\t\tthis.config.defaultAccount = val;\n\t}\n\n\t/**\n\t * The default block is used for certain methods. You can override it by passing in the defaultBlock as last parameter. The default value is `\"latest\"`.\n\t * - web3.eth.getBalance()\n\t * - web3.eth.getCode()\n\t * - web3.eth.getTransactionCount()\n\t * - web3.eth.getStorageAt()\n\t * - web3.eth.call()\n\t * - myContract.methods.myMethod().call()\n\t */\n\tpublic get defaultBlock() {\n\t\treturn this.config.defaultBlock;\n\t}\n\n\t/**\n\t * Will set the default block.\n\t *\n\t * - A block number\n\t * - `\"earliest\"` - String: The genesis block\n\t * - `\"latest\"` - String: The latest block (current head of the blockchain)\n\t * - `\"pending\"` - String: The currently mined block (including pending transactions)\n\t * - `\"finalized\"` - String: (For POS networks) The finalized block is one which has been accepted as canonical by greater than 2/3 of validators\n\t * - `\"safe\"` - String: (For POS networks) The safe head block is one which under normal network conditions, is expected to be included in the canonical chain. Under normal network conditions the safe head and the actual tip of the chain will be equivalent (with safe head trailing only by a few seconds). Safe heads will be less likely to be reorged than the proof of work network`s latest blocks.\n\t */\n\tpublic set defaultBlock(val) {\n\t\tthis._triggerConfigChange('defaultBlock', val);\n\t\tthis.config.defaultBlock = val;\n\t}\n\n\t/**\n\t * The time used to wait for Ethereum Node to return the sent transaction result.\n\t * Note: If the RPC call stuck at the Node and therefor timed-out, the transaction may still be pending or even mined by the Network. We recommend checking the pending transactions in such a case.\n\t * Default is `750` seconds (12.5 minutes).\n\t */\n\tpublic get transactionSendTimeout() {\n\t\treturn this.config.transactionSendTimeout;\n\t}\n\n\t/**\n\t * Will set the transactionSendTimeout.\n\t */\n\tpublic set transactionSendTimeout(val) {\n\t\tthis._triggerConfigChange('transactionSendTimeout', val);\n\t\tthis.config.transactionSendTimeout = val;\n\t}\n\n\t/**\n\t * The `transactionBlockTimeout` is used over socket-based connections. This option defines the amount of new blocks it should wait until the first confirmation happens, otherwise the PromiEvent rejects with a timeout error.\n\t * Default is `50`.\n\t */\n\tpublic get transactionBlockTimeout() {\n\t\treturn this.config.transactionBlockTimeout;\n\t}\n\n\t/**\n\t * Will set the transactionBlockTimeout.\n\t */\n\tpublic set transactionBlockTimeout(val) {\n\t\tthis._triggerConfigChange('transactionBlockTimeout', val);\n\t\tthis.config.transactionBlockTimeout = val;\n\t}\n\n\t/**\n\t * This defines the number of blocks it requires until a transaction is considered confirmed.\n\t * Default is `24`.\n\t */\n\tpublic get transactionConfirmationBlocks() {\n\t\treturn this.config.transactionConfirmationBlocks;\n\t}\n\n\t/**\n\t * Will set the transactionConfirmationBlocks.\n\t */\n\tpublic set transactionConfirmationBlocks(val) {\n\t\tthis._triggerConfigChange('transactionConfirmationBlocks', val);\n\t\tthis.config.transactionConfirmationBlocks = val;\n\t}\n\n\t/**\n\t * Used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.\n\t * Default is `1000` ms.\n\t */\n\tpublic get transactionPollingInterval() {\n\t\treturn this.config.transactionPollingInterval;\n\t}\n\n\t/**\n\t * Will set the transactionPollingInterval.\n\t */\n\tpublic set transactionPollingInterval(val) {\n\t\tthis._triggerConfigChange('transactionPollingInterval', val);\n\t\tthis.config.transactionPollingInterval = val;\n\n\t\tthis.transactionReceiptPollingInterval = val;\n\t\tthis.transactionConfirmationPollingInterval = val;\n\t}\n\t/**\n\t * Used over HTTP connections. This option defines the number of seconds Web3 will wait for a receipt which confirms that a transaction was mined by the network. Note: If this method times out, the transaction may still be pending.\n\t * Default is `750` seconds (12.5 minutes).\n\t */\n\tpublic get transactionPollingTimeout() {\n\t\treturn this.config.transactionPollingTimeout;\n\t}\n\n\t/**\n\t * Will set the transactionPollingTimeout.\n\t */\n\tpublic set transactionPollingTimeout(val) {\n\t\tthis._triggerConfigChange('transactionPollingTimeout', val);\n\n\t\tthis.config.transactionPollingTimeout = val;\n\t}\n\n\t/**\n\t * The `transactionPollingInterval` is used over HTTP connections. This option defines the number of seconds between Web3 calls for a receipt which confirms that a transaction was mined by the network.\n\t * Default is `undefined`\n\t */\n\tpublic get transactionReceiptPollingInterval() {\n\t\treturn this.config.transactionReceiptPollingInterval;\n\t}\n\n\t/**\n\t * Will set the transactionReceiptPollingInterval\n\t */\n\tpublic set transactionReceiptPollingInterval(val) {\n\t\tthis._triggerConfigChange('transactionReceiptPollingInterval', val);\n\t\tthis.config.transactionReceiptPollingInterval = val;\n\t}\n\n\tpublic get transactionConfirmationPollingInterval() {\n\t\treturn this.config.transactionConfirmationPollingInterval;\n\t}\n\n\tpublic set transactionConfirmationPollingInterval(val) {\n\t\tthis._triggerConfigChange('transactionConfirmationPollingInterval', val);\n\t\tthis.config.transactionConfirmationPollingInterval = val;\n\t}\n\n\t/**\n\t * The blockHeaderTimeout is used over socket-based connections. This option defines the amount seconds it should wait for `'newBlockHeaders'` event before falling back to polling to fetch transaction receipt.\n\t * Default is `10` seconds.\n\t */\n\tpublic get blockHeaderTimeout() {\n\t\treturn this.config.blockHeaderTimeout;\n\t}\n\n\t/**\n\t * Will set the blockHeaderTimeout\n\t */\n\tpublic set blockHeaderTimeout(val) {\n\t\tthis._triggerConfigChange('blockHeaderTimeout', val);\n\n\t\tthis.config.blockHeaderTimeout = val;\n\t}\n\n\t/**\n\t * The enableExperimentalFeatures is used to enable trying new experimental features that are still not fully implemented or not fully tested or still have some related issues.\n\t * Default is `false` for every feature.\n\t */\n\tpublic get enableExperimentalFeatures() {\n\t\treturn this.config.enableExperimentalFeatures;\n\t}\n\n\t/**\n\t * Will set the enableExperimentalFeatures\n\t */\n\tpublic set enableExperimentalFeatures(val) {\n\t\tthis._triggerConfigChange('enableExperimentalFeatures', val);\n\n\t\tthis.config.enableExperimentalFeatures = val;\n\t}\n\n\tpublic get maxListenersWarningThreshold() {\n\t\treturn this.config.maxListenersWarningThreshold;\n\t}\n\n\tpublic set maxListenersWarningThreshold(val) {\n\t\tthis._triggerConfigChange('maxListenersWarningThreshold', val);\n\t\tthis.setMaxListenerWarningThreshold(val);\n\t\tthis.config.maxListenersWarningThreshold = val;\n\t}\n\n\tpublic get defaultNetworkId() {\n\t\treturn this.config.defaultNetworkId;\n\t}\n\n\tpublic set defaultNetworkId(val) {\n\t\tthis._triggerConfigChange('defaultNetworkId', val);\n\n\t\tthis.config.defaultNetworkId = val;\n\t}\n\n\tpublic get defaultChain() {\n\t\treturn this.config.defaultChain;\n\t}\n\n\tpublic set defaultChain(val) {\n\t\tif (\n\t\t\t!isNullish(this.config.defaultCommon) &&\n\t\t\t!isNullish(this.config.defaultCommon.baseChain) &&\n\t\t\tval !== this.config.defaultCommon.baseChain\n\t\t)\n\t\t\tthrow new ConfigChainMismatchError(this.config.defaultChain, val);\n\n\t\tthis._triggerConfigChange('defaultChain', val);\n\n\t\tthis.config.defaultChain = val;\n\t}\n\n\t/**\n\t * Will return the default hardfork. Default is `london`\n\t * The default hardfork property can be one of the following:\n\t * - `chainstart`\n\t * - `homestead`\n\t * - `dao`\n\t * - `tangerineWhistle`\n\t * - `spuriousDragon`\n\t * - `byzantium`\n\t * - `constantinople`\n\t * - `petersburg`\n\t * - `istanbul`\n\t * - `berlin`\n\t * - `london`\n\t * - 'arrowGlacier',\n\t * - 'tangerineWhistle',\n\t * - 'muirGlacier'\n\t *\n\t */\n\tpublic get defaultHardfork() {\n\t\treturn this.config.defaultHardfork;\n\t}\n\n\t/**\n\t * Will set the default hardfork.\n\t *\n\t */\n\tpublic set defaultHardfork(val) {\n\t\tif (\n\t\t\t!isNullish(this.config.defaultCommon) &&\n\t\t\t!isNullish(this.config.defaultCommon.hardfork) &&\n\t\t\tval !== this.config.defaultCommon.hardfork\n\t\t)\n\t\t\tthrow new ConfigHardforkMismatchError(this.config.defaultCommon.hardfork, val);\n\t\tthis._triggerConfigChange('defaultHardfork', val);\n\n\t\tthis.config.defaultHardfork = val;\n\t}\n\n\t/**\n\t *\n\t * Will get the default common property\n\t * The default common property does contain the following Common object:\n\t * - `customChain` - `Object`: The custom chain properties\n\t * \t- `name` - `string`: (optional) The name of the chain\n\t * \t- `networkId` - `number`: Network ID of the custom chain\n\t * \t- `chainId` - `number`: Chain ID of the custom chain\n\t * - `baseChain` - `string`: (optional) mainnet, goerli, kovan, rinkeby, or ropsten\n\t * - `hardfork` - `string`: (optional) chainstart, homestead, dao, tangerineWhistle, spuriousDragon, byzantium, constantinople, petersburg, istanbul, berlin, or london\n\t * Default is `undefined`.\n\t *\n\t */\n\tpublic get defaultCommon() {\n\t\treturn this.config.defaultCommon;\n\t}\n\n\t/**\n\t * Will set the default common property\n\t *\n\t */\n\tpublic set defaultCommon(val: Common | undefined) {\n\t\t// validation check if default hardfork is set and matches defaultCommon hardfork\n\t\tif (\n\t\t\t!isNullish(this.config.defaultHardfork) &&\n\t\t\t!isNullish(val) &&\n\t\t\t!isNullish(val.hardfork) &&\n\t\t\tthis.config.defaultHardfork !== val.hardfork\n\t\t)\n\t\t\tthrow new ConfigHardforkMismatchError(this.config.defaultHardfork, val.hardfork);\n\t\tif (\n\t\t\t!isNullish(this.config.defaultChain) &&\n\t\t\t!isNullish(val) &&\n\t\t\t!isNullish(val.baseChain) &&\n\t\t\tthis.config.defaultChain !== val.baseChain\n\t\t)\n\t\t\tthrow new ConfigChainMismatchError(this.config.defaultChain, val.baseChain);\n\t\tthis._triggerConfigChange('defaultCommon', val);\n\n\t\tthis.config.defaultCommon = val;\n\t}\n\n\tpublic get defaultTransactionType() {\n\t\treturn this.config.defaultTransactionType;\n\t}\n\n\tpublic set defaultTransactionType(val) {\n\t\tthis._triggerConfigChange('defaultTransactionType', val);\n\n\t\tthis.config.defaultTransactionType = val;\n\t}\n\n\tpublic get defaultMaxPriorityFeePerGas() {\n\t\treturn this.config.defaultMaxPriorityFeePerGas;\n\t}\n\n\tpublic set defaultMaxPriorityFeePerGas(val) {\n\t\tthis._triggerConfigChange('defaultMaxPriorityFeePerGas', val);\n\t\tthis.config.defaultMaxPriorityFeePerGas = val;\n\t}\n\n\tpublic get transactionBuilder() {\n\t\treturn this.config.transactionBuilder;\n\t}\n\n\tpublic set transactionBuilder(val) {\n\t\tthis._triggerConfigChange('transactionBuilder', val);\n\t\tthis.config.transactionBuilder = val;\n\t}\n\n\tpublic get transactionTypeParser() {\n\t\treturn this.config.transactionTypeParser;\n\t}\n\n\tpublic set transactionTypeParser(val) {\n\t\tthis._triggerConfigChange('transactionTypeParser', val);\n\t\tthis.config.transactionTypeParser = val;\n\t}\n\n\tprivate _triggerConfigChange<K extends keyof Web3ConfigOptions>(\n\t\tconfig: K,\n\t\tnewValue: Web3ConfigOptions[K],\n\t) {\n\t\tthis.emit(Web3ConfigEvent.CONFIG_CHANGE, {\n\t\t\tname: config,\n\t\t\toldValue: this.config[config],\n\t\t\tnewValue,\n\t\t} as ConfigEvent<Web3ConfigOptions>);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3APISpec,\n\tWeb3BaseWallet,\n\tWeb3BaseWalletAccount,\n\tWeb3AccountProvider,\n\tSupportedProviders,\n\tHexString,\n\tEthExecutionAPI,\n\tWeb3BaseProvider,\n\tTransaction,\n} from 'web3-types';\nimport { isNullish } from 'web3-utils';\nimport { ExistingPluginNamespaceError } from 'web3-errors';\n\nimport { isSupportedProvider } from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { Web3Config, Web3ConfigEvent, Web3ConfigOptions } from './web3_config.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\nimport { Web3SubscriptionConstructor } from './web3_subscriptions.js';\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3BatchRequest } from './web3_batch_request.js';\nimport { ExtensionObject } from './types.js';\n\n// To avoid circular dependencies, we need to export type from here.\nexport type Web3ContextObject<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> = {\n\tconfig: Web3ConfigOptions;\n\tprovider?: SupportedProviders<API> | string;\n\trequestManager: Web3RequestManager<API>;\n\tsubscriptionManager?: Web3SubscriptionManager<API, RegisteredSubs> | undefined;\n\tregisteredSubscriptions?: RegisteredSubs;\n\tproviders: typeof Web3RequestManager.providers;\n\taccountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\twallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n};\n\nexport type Web3ContextInitOptions<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> = {\n\tconfig?: Partial<Web3ConfigOptions>;\n\tprovider?: SupportedProviders<API> | string;\n\trequestManager?: Web3RequestManager<API>;\n\tsubscriptionManager?: Web3SubscriptionManager<API, RegisteredSubs> | undefined;\n\tregisteredSubscriptions?: RegisteredSubs;\n\taccountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\twallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n};\n\n// eslint-disable-next-line no-use-before-define\nexport type Web3ContextConstructor<T extends Web3Context, T2 extends unknown[]> = new (\n\t...args: [...extras: T2, context: Web3ContextObject]\n) => T;\n\n// To avoid circular dependencies, we need to export type from here.\nexport type Web3ContextFactory<\n\t// eslint-disable-next-line no-use-before-define\n\tT extends Web3Context,\n\tT2 extends unknown[],\n> = Web3ContextConstructor<T, T2> & {\n\tfromContextObject(this: Web3ContextConstructor<T, T2>, contextObject: Web3ContextObject): T;\n};\n\nexport class Web3Context<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> extends Web3Config {\n\tpublic static readonly providers = Web3RequestManager.providers;\n\tpublic static givenProvider?: SupportedProviders<never>;\n\tpublic readonly providers = Web3RequestManager.providers;\n\tprotected _requestManager: Web3RequestManager<API>;\n\tprotected _subscriptionManager: Web3SubscriptionManager<API, RegisteredSubs>;\n\tprotected _accountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\tprotected _wallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<API>\n\t\t\t| Web3ContextInitOptions<API, RegisteredSubs>,\n\t) {\n\t\tsuper();\n\n\t\t// If \"providerOrContext\" is provided as \"string\" or an objects matching \"SupportedProviders\" interface\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() !== '') ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders<API>)\n\t\t) {\n\t\t\tthis._requestManager = new Web3RequestManager<API>(\n\t\t\t\tproviderOrContext as undefined | string | SupportedProviders<API>,\n\t\t\t);\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(\n\t\t\t\tthis._requestManager,\n\t\t\t\t{} as RegisteredSubs,\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tconfig,\n\t\t\tprovider,\n\t\t\trequestManager,\n\t\t\tsubscriptionManager,\n\t\t\tregisteredSubscriptions,\n\t\t\taccountProvider,\n\t\t\twallet,\n\t\t} = providerOrContext as Web3ContextInitOptions<API, RegisteredSubs>;\n\n\t\tthis.setConfig(config ?? {});\n\n\t\tthis._requestManager =\n\t\t\trequestManager ??\n\t\t\tnew Web3RequestManager<API>(\n\t\t\t\tprovider,\n\t\t\t\tconfig?.enableExperimentalFeatures?.useSubscriptionWhenCheckingBlockTimeout,\n\t\t\t);\n\n\t\tif (subscriptionManager) {\n\t\t\tthis._subscriptionManager = subscriptionManager;\n\t\t} else {\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(\n\t\t\t\tthis.requestManager,\n\t\t\t\tregisteredSubscriptions ?? ({} as RegisteredSubs),\n\t\t\t);\n\t\t}\n\n\t\tif (accountProvider) {\n\t\t\tthis._accountProvider = accountProvider;\n\t\t}\n\n\t\tif (wallet) {\n\t\t\tthis._wallet = wallet;\n\t\t}\n\t}\n\n\tpublic get requestManager() {\n\t\treturn this._requestManager;\n\t}\n\n\t/**\n\t * Will return the current subscriptionManager ({@link Web3SubscriptionManager})\n\t */\n\tpublic get subscriptionManager() {\n\t\treturn this._subscriptionManager;\n\t}\n\n\tpublic get wallet() {\n\t\treturn this._wallet;\n\t}\n\n\tpublic get accountProvider() {\n\t\treturn this._accountProvider;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromContextObject<T extends Web3Context, T3 extends unknown[]>(\n\t\tthis: Web3ContextConstructor<T, T3>,\n\t\t...args: [Web3ContextObject, ...T3]\n\t) {\n\t\treturn new this(...(args.reverse() as [...T3, Web3ContextObject]));\n\t}\n\n\tpublic getContextObject(): Web3ContextObject<API, RegisteredSubs> {\n\t\treturn {\n\t\t\tconfig: this.config,\n\t\t\tprovider: this.provider,\n\t\t\trequestManager: this.requestManager,\n\t\t\tsubscriptionManager: this.subscriptionManager,\n\t\t\tregisteredSubscriptions: this.subscriptionManager?.registeredSubscriptions,\n\t\t\tproviders: this.providers,\n\t\t\twallet: this.wallet,\n\t\t\taccountProvider: this.accountProvider,\n\t\t};\n\t}\n\n\t/**\n\t * Use to create new object of any type extended by `Web3Context`\n\t * and link it to current context. This can be used to initiate a global context object\n\t * and then use it to create new objects of any type extended by `Web3Context`.\n\t */\n\tpublic use<T extends Web3Context, T2 extends unknown[]>(\n\t\tContextRef: Web3ContextConstructor<T, T2>,\n\t\t...args: [...T2]\n\t) {\n\t\tconst newContextChild: T = new ContextRef(\n\t\t\t...([...args, this.getContextObject()] as unknown as [...T2, Web3ContextObject]),\n\t\t);\n\n\t\tthis.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tnewContextChild.setConfig({ [event.name]: event.newValue });\n\t\t});\n\n\t\treturn newContextChild;\n\t}\n\n\t/**\n\t * Link current context to another context.\n\t */\n\tpublic link<T extends Web3Context>(parentContext: T) {\n\t\tthis.setConfig(parentContext.config);\n\t\tthis._requestManager = parentContext.requestManager;\n\t\tthis.provider = parentContext.provider;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tthis._subscriptionManager = parentContext.subscriptionManager;\n\t\tthis._wallet = parentContext.wallet;\n\t\tthis._accountProvider = parentContext._accountProvider;\n\n\t\tparentContext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tthis.setConfig({ [event.name]: event.newValue });\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-use-before-define\n\tpublic registerPlugin(plugin: Web3PluginBase) {\n\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\tif (this[plugin.pluginNamespace] !== undefined)\n\t\t\tthrow new ExistingPluginNamespaceError(plugin.pluginNamespace);\n\n\t\tconst _pluginObject = {\n\t\t\t[plugin.pluginNamespace]: plugin,\n\t\t};\n\t\t_pluginObject[plugin.pluginNamespace].link(this);\n\t\tObject.assign(this, _pluginObject);\n\t}\n\n\t/**\n\t * Will return the current provider.\n\t *\n\t * @returns Returns the current provider\n\t * @example\n\t * ```ts\n\t * const web3 = new Web3Context(\"http://localhost:8545\");\n\t * console.log(web3.provider);\n\t * > HttpProvider {\n\t * \tclientUrl: 'http://localhost:8545',\n\t * \thttpProviderOptions: undefined\n\t *  }\n\t * ```\n\t */\n\n\tpublic get provider(): Web3BaseProvider<API> | undefined {\n\t\treturn this.currentProvider;\n\t}\n\n\t/**\n\t * Will set the current provider.\n\t *\n\t * @param provider - The provider to set\n\t *\n\t * Accepted providers are of type {@link SupportedProviders}\n\t * @example\n\t * ```ts\n\t *  const web3Context = new web3ContextContext(\"http://localhost:8545\");\n\t * web3Context.provider = \"ws://localhost:8545\";\n\t * console.log(web3Context.provider);\n\t * > WebSocketProvider {\n\t * _eventEmitter: EventEmitter {\n\t * _events: [Object: null prototype] {},\n\t * _eventsCount: 0,\n\t * ...\n\t * }\n\t * ```\n\t */\n\n\tpublic set provider(provider: SupportedProviders<API> | string | undefined) {\n\t\tthis.requestManager.setProvider(provider);\n\t}\n\n\t/**\n\t * Will return the current provider. (The same as `provider`)\n\t *\n\t * @returns Returns the current provider\n\t * @example\n\t * ```ts\n\t * const web3Context = new Web3Context(\"http://localhost:8545\");\n\t * console.log(web3Context.provider);\n\t * > HttpProvider {\n\t * \tclientUrl: 'http://localhost:8545',\n\t * \thttpProviderOptions: undefined\n\t *  }\n\t * ```\n\t */\n\tpublic get currentProvider(): Web3BaseProvider<API> | undefined {\n\t\treturn this.requestManager.provider as Web3BaseProvider<API>;\n\t}\n\n\t/**\n\t * Will set the current provider. (The same as `provider`)\n\t *\n\t * @param provider - {@link SupportedProviders} The provider to set\n\t *\n\t * @example\n\t * ```ts\n\t *  const web3Context = new Web3Context(\"http://localhost:8545\");\n\t * web3Context.currentProvider = \"ws://localhost:8545\";\n\t * console.log(web3Context.provider);\n\t * > WebSocketProvider {\n\t * _eventEmitter: EventEmitter {\n\t * _events: [Object: null prototype] {},\n\t * _eventsCount: 0,\n\t * ...\n\t * }\n\t * ```\n\t */\n\tpublic set currentProvider(provider: SupportedProviders<API> | string | undefined) {\n\t\tthis.requestManager.setProvider(provider);\n\t}\n\n\t/**\n\t * Will return the givenProvider if available.\n\t *\n\t * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise `undefined`.\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic get givenProvider() {\n\t\treturn Web3Context.givenProvider;\n\t}\n\t/**\n\t * Will set the provider.\n\t *\n\t * @param provider - {@link SupportedProviders} The provider to set\n\t * @returns Returns true if the provider was set\n\t */\n\tpublic setProvider(provider?: SupportedProviders<API> | string): boolean {\n\t\tthis.provider = provider;\n\t\treturn true;\n\t}\n\t/**\n\t * Will return the {@link Web3BatchRequest} constructor.\n\t */\n\tpublic get BatchRequest(): new () => Web3BatchRequest {\n\t\treturn Web3BatchRequest.bind(\n\t\t\tundefined,\n\t\t\tthis._requestManager as unknown as Web3RequestManager,\n\t\t);\n\t}\n\n\t/**\n\t * This method allows extending the web3 modules.\n\t * Note: This method is only for backward compatibility, and It is recommended to use Web3 v4 Plugin feature for extending web3.js functionality if you are developing some thing new.\n\t */\n\tpublic extend(extendObj: ExtensionObject) {\n\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\tif (extendObj.property && !this[extendObj.property])\n\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\tthis[extendObj.property] = {};\n\n\t\textendObj.methods?.forEach(element => {\n\t\t\tconst method = async (...givenParams: unknown[]) =>\n\t\t\t\tthis.requestManager.send({\n\t\t\t\t\tmethod: element.call,\n\t\t\t\t\tparams: givenParams,\n\t\t\t\t});\n\n\t\t\tif (extendObj.property)\n\t\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tthis[extendObj.property][element.name] = method;\n\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\telse this[element.name] = method;\n\t\t});\n\t\treturn this;\n\t}\n}\n\n// To avoid cycle dependency declare this type in this file\nexport type TransactionBuilder<API extends Web3APISpec = unknown> = <\n\tReturnType = Transaction,\n>(options: {\n\ttransaction: Transaction;\n\tweb3Context: Web3Context<API>;\n\tprivateKey?: HexString | Uint8Array;\n\tfillGasPrice?: boolean;\n}) => Promise<ReturnType>;\n\n/**\n * Extend this class when creating a plugin that either doesn't require {@link EthExecutionAPI},\n * or interacts with a RPC node that doesn't fully implement {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager},\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport abstract class Web3PluginBase<\n\tAPI extends Web3APISpec = Web3APISpec,\n> extends Web3Context<API> {\n\tpublic abstract pluginNamespace: string;\n}\n\n/**\n * Extend this class when creating a plugin that makes use of {@link EthExecutionAPI},\n * or depends on other Web3 packages (such as `web3-eth-contract`) that depend on {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager} (in addition to {@link EthExecutionAPI}),\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport abstract class Web3EthPluginBase<API extends Web3APISpec = unknown> extends Web3PluginBase<\n\tAPI & EthExecutionAPI\n> {}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { EventEmitter } from 'web3-utils';\n\nexport type Web3EventMap = Record<string, unknown>;\nexport type Web3EventKey<T extends Web3EventMap> = string & keyof T;\nexport type Web3EventCallback<T> = (params: T) => void | Promise<void>;\nexport interface Web3Emitter<T extends Web3EventMap> {\n\ton<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>): void;\n\tonce<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>): void;\n\toff<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>): void;\n\temit<K extends Web3EventKey<T>>(eventName: K, params: T[K]): void;\n}\n\nexport class Web3EventEmitter<T extends Web3EventMap> implements Web3Emitter<T> {\n\tprivate readonly _emitter = new EventEmitter();\n\n\tpublic on<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\t\tthis._emitter.on(eventName, fn);\n\t}\n\n\tpublic once<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\t\tthis._emitter.once(eventName, fn);\n\t}\n\n\tpublic off<K extends Web3EventKey<T>>(eventName: K, fn: Web3EventCallback<T[K]>) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\t\tthis._emitter.off(eventName, fn);\n\t}\n\n\tpublic emit<K extends Web3EventKey<T>>(eventName: K, params: T[K]) {\n\t\tthis._emitter.emit(eventName, params);\n\t}\n\n\tpublic listenerCount<K extends Web3EventKey<T>>(eventName: K) {\n\t\treturn this._emitter.listenerCount(eventName);\n\t}\n\n\tpublic listeners<K extends Web3EventKey<T>>(eventName: K) {\n\t\treturn this._emitter.listeners(eventName);\n\t}\n\n\tpublic eventNames() {\n\t\treturn this._emitter.eventNames();\n\t}\n\n\tpublic removeAllListeners() {\n\t\treturn this._emitter.removeAllListeners();\n\t}\n\tpublic setMaxListenerWarningThreshold(maxListenersWarningThreshold: number) {\n\t\tthis._emitter.setMaxListeners(maxListenersWarningThreshold);\n\t}\n\tpublic getMaxListeners() {\n\t\treturn this._emitter.getMaxListeners();\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tWeb3EventCallback,\n\tWeb3EventEmitter,\n\tWeb3EventKey,\n\tWeb3EventMap,\n} from './web3_event_emitter.js';\n\nexport type PromiseExecutor<T> = (\n\tresolve: (data: T) => void,\n\treject: (reason: unknown) => void,\n) => void;\n\nexport class Web3PromiEvent<ResolveType, EventMap extends Web3EventMap>\n\textends Web3EventEmitter<EventMap>\n\timplements Promise<ResolveType>\n{\n\tprivate readonly _promise: Promise<ResolveType>;\n\n\tpublic constructor(executor: PromiseExecutor<ResolveType>) {\n\t\tsuper();\n\t\tthis._promise = new Promise<ResolveType>(executor);\n\t}\n\n\t// public tag to treat object as promise by different libs\n\t// eslint-disable-next-line @typescript-eslint/prefer-as-const\n\tpublic [Symbol.toStringTag]: 'Promise' = 'Promise';\n\n\tpublic async then<TResult1 = ResolveType, TResult2 = never>(\n\t\tonfulfilled?: ((value: ResolveType) => TResult1 | PromiseLike<TResult1>) | undefined,\n\t\tonrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this._promise.then(onfulfilled, onrejected);\n\t}\n\n\tpublic async catch<TResult = never>(\n\t\tonrejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | undefined,\n\t): Promise<ResolveType | TResult> {\n\t\treturn this._promise.catch(onrejected);\n\t}\n\n\tpublic async finally(onfinally?: (() => void) | undefined): Promise<ResolveType> {\n\t\treturn this._promise.finally(onfinally);\n\t}\n\n\tpublic on<K extends Web3EventKey<EventMap>>(\n\t\teventName: K,\n\t\tfn: Web3EventCallback<EventMap[K]>,\n\t): this {\n\t\tsuper.on(eventName, fn);\n\n\t\treturn this;\n\t}\n\n\tpublic once<K extends Web3EventKey<EventMap>>(\n\t\teventName: K,\n\t\tfn: Web3EventCallback<EventMap[K]>,\n\t): this {\n\t\tsuper.once(eventName, fn);\n\n\t\treturn this;\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tContractExecutionError,\n\tInvalidResponseError,\n\tProviderError,\n\tResponseError,\n\trpcErrorsMap,\n\tRpcError,\n} from 'web3-errors';\nimport HttpProvider from 'web3-providers-http';\nimport WSProvider from 'web3-providers-ws';\nimport {\n\tEthExecutionAPI,\n\tJsonRpcBatchRequest,\n\tJsonRpcBatchResponse,\n\tJsonRpcPayload,\n\tJsonRpcResponse,\n\tJsonRpcError,\n\tJsonRpcResponseWithResult,\n\tJsonRpcResponseWithError,\n\tSupportedProviders,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APIRequest,\n\tWeb3APIReturnType,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n\tWeb3BaseProviderConstructor,\n} from 'web3-types';\nimport { isNullish, isPromise, jsonRpc, isResponseRpcError } from 'web3-utils';\nimport {\n\tisEIP1193Provider,\n\tisLegacyRequestProvider,\n\tisLegacySendAsyncProvider,\n\tisLegacySendProvider,\n\tisWeb3Provider,\n} from './utils.js';\nimport { Web3EventEmitter } from './web3_event_emitter.js';\n\nexport enum Web3RequestManagerEvent {\n\tPROVIDER_CHANGED = 'PROVIDER_CHANGED',\n\tBEFORE_PROVIDER_CHANGE = 'BEFORE_PROVIDER_CHANGE',\n}\n\nconst availableProviders: {\n\tHttpProvider: Web3BaseProviderConstructor;\n\tWebsocketProvider: Web3BaseProviderConstructor;\n} = {\n\tHttpProvider: HttpProvider as Web3BaseProviderConstructor,\n\tWebsocketProvider: WSProvider as Web3BaseProviderConstructor,\n};\n\nexport class Web3RequestManager<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends Web3EventEmitter<{\n\t[key in Web3RequestManagerEvent]: SupportedProviders<API> | undefined;\n}> {\n\tprivate _provider?: SupportedProviders<API>;\n\tprivate readonly useRpcCallSpecification?: boolean;\n\tpublic constructor(\n\t\tprovider?: SupportedProviders<API> | string,\n\t\tuseRpcCallSpecification?: boolean,\n\t) {\n\t\tsuper();\n\n\t\tif (!isNullish(provider)) {\n\t\t\tthis.setProvider(provider);\n\t\t}\n\t\tthis.useRpcCallSpecification = useRpcCallSpecification;\n\t}\n\n\t/**\n\t * Will return all available providers\n\t */\n\tpublic static get providers() {\n\t\treturn availableProviders;\n\t}\n\n\t/**\n\t * Will return the current provider.\n\t *\n\t * @returns Returns the current provider\n\t */\n\tpublic get provider() {\n\t\treturn this._provider;\n\t}\n\n\t/**\n\t * Will return all available providers\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic get providers() {\n\t\treturn availableProviders;\n\t}\n\n\t/**\n\t * Use to set provider. Provider can be a provider instance or a string.\n\t *\n\t * @param provider - The provider to set\n\t */\n\tpublic setProvider(provider?: SupportedProviders<API> | string): boolean {\n\t\tlet newProvider: SupportedProviders<API> | undefined;\n\n\t\t// autodetect provider\n\t\tif (provider && typeof provider === 'string' && this.providers) {\n\t\t\t// HTTP\n\t\t\tif (/^http(s)?:\\/\\//i.test(provider)) {\n\t\t\t\tnewProvider = new this.providers.HttpProvider<API>(provider);\n\n\t\t\t\t// WS\n\t\t\t} else if (/^ws(s)?:\\/\\//i.test(provider)) {\n\t\t\t\tnewProvider = new this.providers.WebsocketProvider<API>(provider);\n\t\t\t} else {\n\t\t\t\tthrow new ProviderError(`Can't autodetect provider for \"${provider}\"`);\n\t\t\t}\n\t\t} else if (isNullish(provider)) {\n\t\t\t// In case want to unset the provider\n\t\t\tnewProvider = undefined;\n\t\t} else {\n\t\t\tnewProvider = provider as SupportedProviders<API>;\n\t\t}\n\n\t\tthis.emit(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, this._provider);\n\t\tthis._provider = newProvider;\n\t\tthis.emit(Web3RequestManagerEvent.PROVIDER_CHANGED, this._provider);\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * Will execute a request\n\t *\n\t * @param request - {@link Web3APIRequest} The request to send\n\t *\n\t * @returns The response of the request {@link ResponseType}. If there is error\n\t * in the response, will throw an error\n\t */\n\tpublic async send<\n\t\tMethod extends Web3APIMethod<API>,\n\t\tResponseType = Web3APIReturnType<API, Method>,\n\t>(request: Web3APIRequest<API, Method>): Promise<ResponseType> {\n\t\tconst response = await this._sendRequest<Method, ResponseType>(request);\n\t\tif (jsonRpc.isResponseWithResult(response)) {\n\t\t\treturn response.result;\n\t\t}\n\n\t\tthrow new ResponseError(response);\n\t}\n\n\t/**\n\t * Same as send, but, will execute a batch of requests\n\t *\n\t * @param request {@link JsonRpcBatchRequest} The batch request to send\n\t */\n\tpublic async sendBatch(request: JsonRpcBatchRequest): Promise<JsonRpcBatchResponse<unknown>> {\n\t\tconst response = await this._sendRequest<never, never>(request);\n\n\t\treturn response as JsonRpcBatchResponse<unknown>;\n\t}\n\n\tprivate async _sendRequest<\n\t\tMethod extends Web3APIMethod<API>,\n\t\tResponseType = Web3APIReturnType<API, Method>,\n\t>(\n\t\trequest: Web3APIRequest<API, Method> | JsonRpcBatchRequest,\n\t): Promise<JsonRpcResponse<ResponseType>> {\n\t\tconst { provider } = this;\n\n\t\tif (isNullish(provider)) {\n\t\t\tthrow new ProviderError(\n\t\t\t\t'Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.',\n\t\t\t);\n\t\t}\n\n\t\tconst payload = jsonRpc.isBatchRequest(request)\n\t\t\t? jsonRpc.toBatchPayload(request)\n\t\t\t: jsonRpc.toPayload(request);\n\n\t\tif (isWeb3Provider(provider)) {\n\t\t\tlet response;\n\n\t\t\ttry {\n\t\t\t\tresponse = await provider.request<Method, ResponseType>(\n\t\t\t\t\tpayload as Web3APIPayload<API, Method>,\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\t// Check if the provider throw an error instead of reject with error\n\t\t\t\tresponse = error as JsonRpcResponse<ResponseType>;\n\t\t\t}\n\t\t\treturn this._processJsonRpcResponse(payload, response, { legacy: false, error: false });\n\t\t}\n\n\t\tif (isEIP1193Provider(provider)) {\n\t\t\treturn (provider as Web3BaseProvider<API>)\n\t\t\t\t.request<Method, ResponseType>(payload as Web3APIPayload<API, Method>)\n\t\t\t\t.then(\n\t\t\t\t\tres =>\n\t\t\t\t\t\tthis._processJsonRpcResponse(payload, res, {\n\t\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t}) as JsonRpcResponseWithResult<ResponseType>,\n\t\t\t\t)\n\t\t\t\t.catch(error =>\n\t\t\t\t\tthis._processJsonRpcResponse(\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t\terror as JsonRpcResponse<ResponseType, unknown>,\n\t\t\t\t\t\t{ legacy: true, error: true },\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t}\n\n\t\t// TODO: This could be deprecated and removed.\n\t\tif (isLegacyRequestProvider(provider)) {\n\t\t\treturn new Promise<JsonRpcResponse<ResponseType>>((resolve, reject) => {\n\t\t\t\tconst rejectWithError = (err: unknown) =>\n\t\t\t\t\treject(\n\t\t\t\t\t\tthis._processJsonRpcResponse(\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\terr as JsonRpcResponse<ResponseType>,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\tconst resolveWithResponse = (response: JsonRpcResponse<ResponseType>) =>\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tthis._processJsonRpcResponse(payload, response, {\n\t\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\tconst result = provider.request<ResponseType>(\n\t\t\t\t\tpayload,\n\t\t\t\t\t// a callback that is expected to be called after getting the response:\n\t\t\t\t\t(err, response) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn rejectWithError(err);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn resolveWithResponse(response);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\t// Some providers, that follow a previous drafted version of EIP1193, has a `request` function\n\t\t\t\t//\tthat is not defined as `async`, but it returns a promise.\n\t\t\t\t// Such providers would not be picked with if(isEIP1193Provider(provider)) above\n\t\t\t\t//\tbecause the `request` function was not defined with `async` and so the function definition is not `AsyncFunction`.\n\t\t\t\t// Like this provider: https://github.dev/NomicFoundation/hardhat/blob/62bea2600785595ba36f2105564076cf5cdf0fd8/packages/hardhat-core/src/internal/core/providers/backwards-compatibility.ts#L19\n\t\t\t\t// So check if the returned result is a Promise, and resolve with it accordingly.\n\t\t\t\t// Note: in this case we expect the callback provided above to never be called.\n\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\tconst responsePromise = result as unknown as Promise<\n\t\t\t\t\t\tJsonRpcResponse<ResponseType>\n\t\t\t\t\t>;\n\t\t\t\t\tresponsePromise.then(resolveWithResponse).catch(rejectWithError);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// TODO: This could be deprecated and removed.\n\t\tif (isLegacySendProvider(provider)) {\n\t\t\treturn new Promise<JsonRpcResponse<ResponseType>>((resolve, reject): void => {\n\t\t\t\tprovider.send<ResponseType>(payload, (err, response) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(\n\t\t\t\t\t\t\tthis._processJsonRpcResponse(\n\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\terr as unknown as JsonRpcResponse<ResponseType>,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\t\t\t\terror: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isNullish(response)) {\n\t\t\t\t\t\tthrow new ResponseError(\n\t\t\t\t\t\t\t'' as never,\n\t\t\t\t\t\t\t'Got a \"nullish\" response from provider.',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve(\n\t\t\t\t\t\tthis._processJsonRpcResponse(payload, response, {\n\t\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// TODO: This could be deprecated and removed.\n\t\tif (isLegacySendAsyncProvider(provider)) {\n\t\t\treturn provider\n\t\t\t\t.sendAsync<ResponseType>(payload)\n\t\t\t\t.then(response =>\n\t\t\t\t\tthis._processJsonRpcResponse(payload, response, { legacy: true, error: false }),\n\t\t\t\t)\n\t\t\t\t.catch(error =>\n\t\t\t\t\tthis._processJsonRpcResponse(payload, error as JsonRpcResponse<ResponseType>, {\n\t\t\t\t\t\tlegacy: true,\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t}\n\n\t\tthrow new ProviderError('Provider does not have a request or send method to use.');\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _processJsonRpcResponse<ResultType, ErrorType, RequestType>(\n\t\tpayload: JsonRpcPayload<RequestType>,\n\t\tresponse: JsonRpcResponse<ResultType, ErrorType>,\n\t\t{ legacy, error }: { legacy: boolean; error: boolean },\n\t): JsonRpcResponse<ResultType> | never {\n\t\tif (isNullish(response)) {\n\t\t\treturn this._buildResponse(\n\t\t\t\tpayload,\n\t\t\t\t// Some providers uses \"null\" as valid empty response\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\tnull as unknown as JsonRpcResponse<ResultType, ErrorType>,\n\t\t\t\terror,\n\t\t\t);\n\t\t}\n\n\t\t// This is the majority of the cases so check these first\n\t\t// A valid JSON-RPC response with error object\n\t\tif (jsonRpc.isResponseWithError<ErrorType>(response)) {\n\t\t\t// check if its an rpc error\n\t\t\tif (\n\t\t\t\tthis.useRpcCallSpecification &&\n\t\t\t\tisResponseRpcError(response as JsonRpcResponseWithError)\n\t\t\t) {\n\t\t\t\tconst rpcErrorResponse = response as JsonRpcResponseWithError;\n\t\t\t\t// check if rpc error flag is on and response error code match an EIP-1474 or a standard rpc error code\n\t\t\t\tif (rpcErrorsMap.get(rpcErrorResponse.error.code)) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tconst Err = rpcErrorsMap.get(rpcErrorResponse.error.code)!.error;\n\t\t\t\t\tthrow new Err(rpcErrorResponse);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new RpcError(rpcErrorResponse);\n\t\t\t\t}\n\t\t\t} else if (!Web3RequestManager._isReverted(response)) {\n\t\t\t\tthrow new InvalidResponseError<ErrorType, RequestType>(response, payload);\n\t\t\t}\n\t\t}\n\n\t\t// This is the majority of the cases so check these first\n\t\t// A valid JSON-RPC response with result object\n\t\tif (jsonRpc.isResponseWithResult<ResultType>(response)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tif ((response as unknown) instanceof Error) {\n\t\t\tWeb3RequestManager._isReverted(response);\n\t\t\tthrow response;\n\t\t}\n\n\t\tif (!legacy && jsonRpc.isBatchRequest(payload) && jsonRpc.isBatchResponse(response)) {\n\t\t\treturn response as JsonRpcBatchResponse<ResultType>;\n\t\t}\n\n\t\tif (legacy && !error && jsonRpc.isBatchRequest(payload)) {\n\t\t\treturn response as JsonRpcBatchResponse<ResultType>;\n\t\t}\n\n\t\tif (legacy && error && jsonRpc.isBatchRequest(payload)) {\n\t\t\t// In case of error batch response we don't want to throw Invalid response\n\t\t\tthrow response;\n\t\t}\n\n\t\tif (\n\t\t\tlegacy &&\n\t\t\t!jsonRpc.isResponseWithError(response) &&\n\t\t\t!jsonRpc.isResponseWithResult(response)\n\t\t) {\n\t\t\treturn this._buildResponse(payload, response, error);\n\t\t}\n\n\t\tif (jsonRpc.isBatchRequest(payload) && !Array.isArray(response)) {\n\t\t\tthrow new ResponseError(response, 'Got normal response for a batch request.');\n\t\t}\n\n\t\tif (!jsonRpc.isBatchRequest(payload) && Array.isArray(response)) {\n\t\t\tthrow new ResponseError(response, 'Got batch response for a normal request.');\n\t\t}\n\n\t\tif (\n\t\t\t(jsonRpc.isResponseWithError(response) || jsonRpc.isResponseWithResult(response)) &&\n\t\t\t!jsonRpc.isBatchRequest(payload)\n\t\t) {\n\t\t\tif (response.id && payload.id !== response.id) {\n\t\t\t\tthrow new InvalidResponseError<ErrorType>(response);\n\t\t\t}\n\t\t}\n\n\t\tthrow new ResponseError(response, 'Invalid response');\n\t}\n\n\tprivate static _isReverted<ResultType, ErrorType>(\n\t\tresponse: JsonRpcResponse<ResultType, ErrorType>,\n\t): boolean {\n\t\tlet error: JsonRpcError | undefined;\n\n\t\tif (jsonRpc.isResponseWithError<ErrorType>(response)) {\n\t\t\terror = (response as JsonRpcResponseWithError).error;\n\t\t} else if ((response as unknown) instanceof Error) {\n\t\t\terror = response as unknown as JsonRpcError;\n\t\t}\n\n\t\t// This message means that there was an error while executing the code of the smart contract\n\t\t// However, more processing will happen at a higher level to decode the error data,\n\t\t//\taccording to the Error ABI, if it was available as of EIP-838.\n\t\tif (error?.message.includes('revert')) throw new ContractExecutionError(error);\n\n\t\treturn false;\n\t}\n\t// Need to use same types as _processJsonRpcResponse so have to declare as instance method\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _buildResponse<ResultType, ErrorType, RequestType>(\n\t\tpayload: JsonRpcPayload<RequestType>,\n\t\tresponse: JsonRpcResponse<ResultType, ErrorType>,\n\t\terror: boolean,\n\t): JsonRpcResponse<ResultType> {\n\t\tconst res = {\n\t\t\tjsonrpc: '2.0',\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\tid: jsonRpc.isBatchRequest(payload)\n\t\t\t\t? payload[0].id\n\t\t\t\t: 'id' in payload\n\t\t\t\t? payload.id\n\t\t\t\t: // Have to use the null here explicitly\n\t\t\t\t  // eslint-disable-next-line no-null/no-null\n\t\t\t\t  null,\n\t\t};\n\n\t\tif (error) {\n\t\t\treturn {\n\t\t\t\t...res,\n\t\t\t\terror: response as unknown,\n\t\t\t} as JsonRpcResponse<ResultType>;\n\t\t}\n\n\t\treturn {\n\t\t\t...res,\n\t\t\tresult: response as unknown,\n\t\t} as JsonRpcResponse<ResultType>;\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEIP1193Provider,\n\tJsonRpcNotification,\n\tJsonRpcSubscriptionResult,\n\tJsonRpcSubscriptionResultOld,\n\tLog,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n} from 'web3-types';\nimport { ProviderError, SubscriptionError } from 'web3-errors';\nimport { isNullish } from 'web3-utils';\nimport { isSupportSubscriptions } from './utils.js';\nimport { Web3RequestManager, Web3RequestManagerEvent } from './web3_request_manager.js';\n// eslint-disable-next-line import/no-cycle\nimport { Web3SubscriptionConstructor } from './web3_subscriptions.js';\n\ntype ShouldUnsubscribeCondition = ({\n\tid,\n\tsub,\n}: {\n\tid: string;\n\tsub: unknown;\n}) => boolean | undefined;\n\nexport class Web3SubscriptionManager<\n\tAPI extends Web3APISpec = Web3APISpec,\n\tRegisteredSubs extends { [key: string]: Web3SubscriptionConstructor<API> } = {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t},\n> {\n\tprivate readonly _subscriptions: Map<\n\t\tstring,\n\t\tInstanceType<RegisteredSubs[keyof RegisteredSubs]>\n\t> = new Map();\n\n\t/**\n\t *\n\t * @param - requestManager\n\t * @param - registeredSubscriptions\n\t *\n\t * @example\n\t * ```ts\n\t * const requestManager = new Web3RequestManager(\"ws://localhost:8545\");\n\t * const subscriptionManager = new Web3SubscriptionManager(requestManager, {});\n\t * ```\n\t */\n\tpublic constructor(\n\t\trequestManager: Web3RequestManager<API>,\n\t\tregisteredSubscriptions: RegisteredSubs,\n\t);\n\t/**\n\t * @deprecated This constructor overloading should not be used\n\t */\n\tpublic constructor(\n\t\trequestManager: Web3RequestManager<API>,\n\t\tregisteredSubscriptions: RegisteredSubs,\n\t\ttolerateUnlinkedSubscription: boolean,\n\t);\n\tpublic constructor(\n\t\tpublic readonly requestManager: Web3RequestManager<API>,\n\t\tpublic readonly registeredSubscriptions: RegisteredSubs,\n\t\tprivate readonly tolerateUnlinkedSubscription: boolean = false,\n\t) {\n\t\tthis.requestManager.on(Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, async () => {\n\t\t\tawait this.unsubscribe();\n\t\t});\n\n\t\tthis.requestManager.on(Web3RequestManagerEvent.PROVIDER_CHANGED, () => {\n\t\t\tthis.clear();\n\t\t\tthis.listenToProviderEvents();\n\t\t});\n\n\t\tthis.listenToProviderEvents();\n\t}\n\n\tprivate listenToProviderEvents() {\n\t\tconst providerAsWebProvider = this.requestManager.provider as Web3BaseProvider;\n\t\tif (\n\t\t\t!this.requestManager.provider ||\n\t\t\t(typeof providerAsWebProvider?.supportsSubscriptions === 'function' &&\n\t\t\t\t!providerAsWebProvider?.supportsSubscriptions())\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof (this.requestManager.provider as EIP1193Provider<API>).on === 'function') {\n\t\t\tif (\n\t\t\t\ttypeof (this.requestManager.provider as EIP1193Provider<API>).request === 'function'\n\t\t\t) {\n\t\t\t\t// Listen to provider messages and data\n\t\t\t\t(this.requestManager.provider as EIP1193Provider<API>).on(\n\t\t\t\t\t'message',\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n\t\t\t\t\t(message: any) => this.messageListener(message),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n\t\t\t\tproviderAsWebProvider.on<Log>('data', (data: any) => this.messageListener(data));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected messageListener(\n\t\tdata?:\n\t\t\t| JsonRpcSubscriptionResult\n\t\t\t| JsonRpcSubscriptionResultOld<Log>\n\t\t\t| JsonRpcNotification<Log>,\n\t) {\n\t\tif (!data) {\n\t\t\tthrow new SubscriptionError('Should not call messageListener with no data. Type was');\n\t\t}\n\t\tconst subscriptionId =\n\t\t\t(data as JsonRpcNotification).params?.subscription ||\n\t\t\t(data as JsonRpcSubscriptionResultOld).data?.subscription ||\n\t\t\t(data as JsonRpcSubscriptionResult).id?.toString(16);\n\n\t\t// Process if the received data is related to a subscription\n\t\tif (subscriptionId) {\n\t\t\tconst sub = this._subscriptions.get(subscriptionId);\n\t\t\tsub?.processSubscriptionData(data);\n\t\t}\n\t}\n\t/**\n\t * Will create a new subscription\n\t *\n\t * @param name - The subscription you want to subscribe to\n\t * @param args - Optional additional parameters, depending on the subscription type\n\t * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t *\n\t * Will subscribe to a specific topic (note: name)\n\t * @returns The subscription object\n\t */\n\tpublic async subscribe<T extends keyof RegisteredSubs>(\n\t\tname: T,\n\t\targs?: ConstructorParameters<RegisteredSubs[T]>[0],\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t): Promise<InstanceType<RegisteredSubs[T]>> {\n\t\tconst Klass: RegisteredSubs[T] = this.registeredSubscriptions[name];\n\t\tif (!Klass) {\n\t\t\tthrow new SubscriptionError('Invalid subscription type');\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tconst subscription = new Klass(args ?? undefined, {\n\t\t\tsubscriptionManager: this as Web3SubscriptionManager<API, RegisteredSubs>,\n\t\t\treturnFormat,\n\t\t} as any) as InstanceType<RegisteredSubs[T]>;\n\n\t\tawait this.addSubscription(subscription);\n\n\t\treturn subscription;\n\t}\n\n\t/**\n\t * Will returns all subscriptions.\n\t */\n\tpublic get subscriptions() {\n\t\treturn this._subscriptions;\n\t}\n\n\t/**\n\t *\n\t * Adds an instance of {@link Web3Subscription} and subscribes to it\n\t *\n\t * @param sub - A {@link Web3Subscription} object\n\t */\n\tpublic async addSubscription(sub: InstanceType<RegisteredSubs[keyof RegisteredSubs]>) {\n\t\tif (!this.requestManager.provider) {\n\t\t\tthrow new ProviderError('Provider not available');\n\t\t}\n\n\t\tif (!this.supportsSubscriptions()) {\n\t\t\tthrow new SubscriptionError('The current provider does not support subscriptions');\n\t\t}\n\n\t\tif (sub.id && this._subscriptions.has(sub.id)) {\n\t\t\tthrow new SubscriptionError(`Subscription with id \"${sub.id}\" already exists`);\n\t\t}\n\n\t\tawait sub.sendSubscriptionRequest();\n\n\t\tif (isNullish(sub.id)) {\n\t\t\tthrow new SubscriptionError('Subscription is not subscribed yet.');\n\t\t}\n\n\t\tthis._subscriptions.set(sub.id, sub);\n\n\t\treturn sub.id;\n\t}\n\n\t/**\n\t * Will clear a subscription\n\t *\n\t * @param id - The subscription of type {@link Web3Subscription}  to remove\n\t */\n\tpublic async removeSubscription(sub: InstanceType<RegisteredSubs[keyof RegisteredSubs]>) {\n\t\tconst { id } = sub;\n\n\t\tif (isNullish(id)) {\n\t\t\tthrow new SubscriptionError(\n\t\t\t\t'Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.',\n\t\t\t);\n\t\t}\n\n\t\tif (!this._subscriptions.has(id) && !this.tolerateUnlinkedSubscription) {\n\t\t\tthrow new SubscriptionError(`Subscription with id \"${id.toString()}\" does not exists`);\n\t\t}\n\n\t\tawait sub.sendUnsubscribeRequest();\n\t\tthis._subscriptions.delete(id);\n\t\treturn id;\n\t}\n\t/**\n\t * Will unsubscribe all subscriptions that fulfill the condition\n\t *\n\t * @param condition - A function that access and `id` and a `subscription` and return `true` or `false`\n\t * @returns An array of all the un-subscribed subscriptions\n\t */\n\tpublic async unsubscribe(condition?: ShouldUnsubscribeCondition) {\n\t\tconst result = [];\n\t\tfor (const [id, sub] of this.subscriptions.entries()) {\n\t\t\tif (!condition || (typeof condition === 'function' && condition({ id, sub }))) {\n\t\t\t\tresult.push(this.removeSubscription(sub));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(result);\n\t}\n\n\t/**\n\t * Clears all subscriptions\n\t */\n\tpublic clear() {\n\t\tthis._subscriptions.clear();\n\t}\n\n\t/**\n\t * Check whether the current provider supports subscriptions.\n\t *\n\t * @returns `true` or `false` depending on if the current provider supports subscriptions\n\t */\n\tpublic supportsSubscriptions(): boolean {\n\t\treturn isNullish(this.requestManager.provider)\n\t\t\t? false\n\t\t\t: isSupportSubscriptions(this.requestManager.provider);\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tBlockOutput,\n\tDEFAULT_RETURN_FORMAT,\n\tDataFormat,\n\tEthExecutionAPI,\n\tJsonRpcSubscriptionResult,\n\tJsonRpcSubscriptionResultOld,\n\tJsonRpcNotification,\n\tLog,\n\tHexString,\n\tWeb3APIParams,\n\tWeb3APISpec,\n} from 'web3-types';\nimport { jsonRpc } from 'web3-utils';\nimport { SubscriptionError } from 'web3-errors';\n\n// eslint-disable-next-line import/no-cycle\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3EventEmitter, Web3EventMap } from './web3_event_emitter.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\n\ntype CommonSubscriptionEvents = {\n\tdata: unknown; // Fires on each incoming block header.\n\terror: Error; // Fires when an error in the subscription occurs.\n\tconnected: string; // Fires once after the subscription successfully connected. Returns the subscription id.\n};\n\nexport abstract class Web3Subscription<\n\tEventMap extends Web3EventMap,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tArgsType = any,\n\tAPI extends Web3APISpec = EthExecutionAPI,\n\t// The following generic type is just to define the type `CombinedEventMap` and use it inside the class\n\t// \tit combines the user passed `EventMap` with the `CommonSubscriptionEvents`\n\t//\tHowever, this type definition could be refactored depending on the closure of\n\t//\t[Permit type alias declarations inside a class](https://github.com/microsoft/TypeScript/issues/7061)\n\tCombinedEventMap extends CommonSubscriptionEvents = EventMap & CommonSubscriptionEvents,\n> extends Web3EventEmitter<CombinedEventMap> {\n\tprivate readonly _subscriptionManager: Web3SubscriptionManager<API>;\n\tprivate readonly _lastBlock?: BlockOutput;\n\tprivate readonly _returnFormat: DataFormat;\n\tprotected _id?: HexString;\n\n\tpublic constructor(\n\t\targs: ArgsType,\n\t\toptions: { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\n\t);\n\t/**\n\t * @deprecated This constructor overloading should not be used\n\t */\n\tpublic constructor(\n\t\targs: ArgsType,\n\t\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t);\n\tpublic constructor(\n\t\tpublic readonly args: ArgsType,\n\t\toptions: (\n\t\t\t| { subscriptionManager: Web3SubscriptionManager }\n\t\t\t| { requestManager: Web3RequestManager<API> }\n\t\t) & {\n\t\t\treturnFormat?: DataFormat;\n\t\t},\n\t) {\n\t\tsuper();\n\t\tconst { requestManager } = options as { requestManager: Web3RequestManager<API> };\n\t\tconst { subscriptionManager } = options as { subscriptionManager: Web3SubscriptionManager };\n\t\tif (requestManager && subscriptionManager) {\n\t\t\tthrow new SubscriptionError(\n\t\t\t\t'Only requestManager or subscriptionManager should be provided at Subscription constructor',\n\t\t\t);\n\t\t}\n\t\tif (!requestManager && !subscriptionManager) {\n\t\t\tthrow new SubscriptionError(\n\t\t\t\t'Either requestManager or subscriptionManager should be provided at Subscription constructor',\n\t\t\t);\n\t\t}\n\t\tif (requestManager) {\n\t\t\t// eslint-disable-next-line deprecation/deprecation\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(requestManager, {}, true);\n\t\t} else {\n\t\t\tthis._subscriptionManager = subscriptionManager;\n\t\t}\n\n\t\tthis._returnFormat = options?.returnFormat ?? (DEFAULT_RETURN_FORMAT as DataFormat);\n\t}\n\n\tpublic get id() {\n\t\treturn this._id;\n\t}\n\n\tpublic get lastBlock() {\n\t\treturn this._lastBlock;\n\t}\n\n\tpublic async subscribe(): Promise<string> {\n\t\treturn this._subscriptionManager.addSubscription(this);\n\t}\n\n\tpublic processSubscriptionData(\n\t\tdata:\n\t\t\t| JsonRpcSubscriptionResult\n\t\t\t| JsonRpcSubscriptionResultOld<Log>\n\t\t\t| JsonRpcNotification<Log>,\n\t) {\n\t\tif (data?.data) {\n\t\t\t// for EIP-1193 provider\n\t\t\tthis._processSubscriptionResult(data?.data?.result ?? data?.data);\n\t\t} else if (\n\t\t\tdata &&\n\t\t\tjsonRpc.isResponseWithNotification(\n\t\t\t\tdata as unknown as JsonRpcSubscriptionResult | JsonRpcNotification<Log>,\n\t\t\t)\n\t\t) {\n\t\t\tthis._processSubscriptionResult(data?.params.result);\n\t\t}\n\t}\n\n\tpublic async sendSubscriptionRequest(): Promise<string> {\n\t\tthis._id = await this._subscriptionManager.requestManager.send({\n\t\t\tmethod: 'eth_subscribe',\n\t\t\tparams: this._buildSubscriptionParams(),\n\t\t});\n\n\t\tthis.emit('connected', this._id);\n\t\treturn this._id;\n\t}\n\n\tprotected get returnFormat() {\n\t\treturn this._returnFormat;\n\t}\n\n\tprotected get subscriptionManager() {\n\t\treturn this._subscriptionManager;\n\t}\n\n\tpublic async resubscribe() {\n\t\tawait this.unsubscribe();\n\t\tawait this.subscribe();\n\t}\n\n\tpublic async unsubscribe() {\n\t\tif (!this.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._subscriptionManager.removeSubscription(this);\n\t}\n\n\tpublic async sendUnsubscribeRequest() {\n\t\tawait this._subscriptionManager.requestManager.send({\n\t\t\tmethod: 'eth_unsubscribe',\n\t\t\tparams: [this.id] as Web3APIParams<API, 'eth_unsubscribe'>,\n\t\t});\n\t\tthis._id = undefined;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected formatSubscriptionResult(data: CombinedEventMap['data']) {\n\t\treturn data;\n\t}\n\n\tpublic _processSubscriptionResult(data: CombinedEventMap['data'] | unknown) {\n\t\tthis.emit('data', this.formatSubscriptionResult(data));\n\t}\n\n\tpublic _processSubscriptionError(error: Error) {\n\t\tthis.emit('error', error);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _buildSubscriptionParams(): Web3APIParams<API, 'eth_subscribe'> {\n\t\t// This should be overridden in the subclass\n\t\tthrow new Error('Implement in the child class');\n\t}\n}\n\nexport type Web3SubscriptionConstructor<\n\tAPI extends Web3APISpec,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tSubscriptionType extends Web3Subscription<any, any, API> = Web3Subscription<any, any, API>,\n> =\n\t| (new (\n\t\t\t// We accept any type of arguments here and don't deal with this type internally\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\targs: any,\n\t\t\toptions:\n\t\t\t\t| { subscriptionManager: Web3SubscriptionManager<API>; returnFormat?: DataFormat }\n\t\t\t\t| { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t  ) => SubscriptionType)\n\t| (new (\n\t\t\targs: any,\n\t\t\toptions: {\n\t\t\t\tsubscriptionManager: Web3SubscriptionManager<API>;\n\t\t\t\treturnFormat?: DataFormat;\n\t\t\t},\n\t  ) => SubscriptionType)\n\t| (new (\n\t\t\targs: any,\n\t\t\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t  ) => SubscriptionType);\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nexport const encodeErrorSignature = (functionName: string | AbiErrorFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeErrorSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiEventFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiEventFragment } from '../utils.js';\n\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */\nexport const encodeEventSignature = (functionName: string | AbiEventFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiEventFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeEventSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport { sha3Raw } from 'web3-utils';\nimport { AbiFunctionFragment } from 'web3-types';\nimport { isAbiFunctionFragment, jsonInterfaceMethodToString } from '../utils.js';\nimport { encodeParameters } from './parameters_api.js';\n\n// todo Add link to JSON interface documentation\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */\nexport const encodeFunctionSignature = (functionName: string | AbiFunctionFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiFunctionFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name).slice(0, 10);\n};\n\n// todo Add link to JSON interface documentation\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */\nexport const encodeFunctionCall = (\n\tjsonInterface: AbiFunctionFragment,\n\tparams: unknown[],\n): string => {\n\tif (!isAbiFunctionFragment(jsonInterface)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionCall');\n\t}\n\n\treturn `${encodeFunctionSignature(jsonInterface)}${encodeParameters(\n\t\tjsonInterface.inputs ?? [],\n\t\tparams ?? [],\n\t).replace('0x', '')}`;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { HexString, AbiParameter, DecodedParams } from 'web3-types';\nimport { decodeParameter, decodeParametersWith } from './parameters_api.js';\n\nconst STATIC_TYPES = ['bool', 'string', 'int', 'uint', 'address', 'fixed', 'ufixed'];\n\nconst _decodeParameter = (inputType: string, clonedTopic: string) =>\n\tinputType === 'string' ? clonedTopic : decodeParameter(inputType, clonedTopic);\n\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */\nexport const decodeLog = <ReturnType extends DecodedParams>(\n\tinputs: Array<AbiParameter>,\n\tdata: HexString,\n\ttopics: string | string[],\n) => {\n\tconst clonedTopics = Array.isArray(topics) ? topics : [topics];\n\n\tconst indexedInputs: Record<number, AbiParameter> = {};\n\tconst nonIndexedInputs: Record<number, AbiParameter> = {};\n\n\tfor (const [i, input] of inputs.entries()) {\n\t\tif (input.indexed) {\n\t\t\tindexedInputs[i] = input;\n\t\t} else {\n\t\t\tnonIndexedInputs[i] = input;\n\t\t}\n\t}\n\n\tconst decodedNonIndexedInputs: DecodedParams = data\n\t\t? decodeParametersWith(Object.values(nonIndexedInputs), data, true)\n\t\t: { __length__: 0 };\n\n\t// If topics are more than indexed inputs, that means first topic is the event signature\n\tconst offset = clonedTopics.length - Object.keys(indexedInputs).length;\n\n\tconst decodedIndexedInputs = Object.values(indexedInputs).map((input, index) =>\n\t\tSTATIC_TYPES.some(s => input.type.startsWith(s))\n\t\t\t? _decodeParameter(input.type, clonedTopics[index + offset])\n\t\t\t: clonedTopics[index + offset],\n\t);\n\n\tconst returnValues: DecodedParams = { __length__: 0 };\n\n\tlet indexedCounter = 0;\n\tlet nonIndexedCounter = 0;\n\n\tfor (const [i, res] of inputs.entries()) {\n\t\treturnValues[i] = res.type === 'string' ? '' : undefined;\n\n\t\tif (indexedInputs[i]) {\n\t\t\treturnValues[i] = decodedIndexedInputs[indexedCounter];\n\t\t\tindexedCounter += 1;\n\t\t}\n\n\t\tif (nonIndexedInputs[i]) {\n\t\t\treturnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n\t\t\tnonIndexedCounter += 1;\n\t\t}\n\n\t\tif (res.name) {\n\t\t\treturnValues[res.name] = returnValues[i];\n\t\t}\n\n\t\treturnValues.__length__ += 1;\n\t}\n\n\treturn returnValues as ReturnType;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, HexString } from 'web3-types';\nimport { decodeParameters as decodeParametersInternal } from '../coders/decode.js';\nimport { encodeParameters as encodeParametersInternal } from '../coders/encode.js';\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport const encodeParameters = (abi: ReadonlyArray<AbiInput>, params: unknown[]): string =>\n\tencodeParametersInternal(abi, params);\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */\nexport const encodeParameter = (abi: AbiInput, param: unknown): string =>\n\tencodeParameters([abi], [param]);\n/**\n * Should be used to decode list of params\n */\nexport const decodeParametersWith = (\n\tabis: AbiInput[],\n\tbytes: HexString,\n\tloose: boolean,\n): { [key: string]: unknown; __length__: number } => {\n\ttry {\n\t\tif (abis.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {\n\t\t\tthrow new AbiError(\n\t\t\t\t\"Returned values aren't valid, did it run Out of Gas? \" +\n\t\t\t\t\t'You might also see this error if you are not using the ' +\n\t\t\t\t\t'correct ABI for the contract you are retrieving data from, ' +\n\t\t\t\t\t'requesting data from a block number that does not exist, ' +\n\t\t\t\t\t'or querying a node which is not fully synced.',\n\t\t\t);\n\t\t}\n\t\treturn decodeParametersInternal(abis, `0x${bytes.replace(/0x/i, '')}`, loose);\n\t} catch (err) {\n\t\tthrow new AbiError(`Parameter decoding error: ${(err as Error).message}`, {\n\t\t\tinternalErr: err,\n\t\t});\n\t}\n};\n\n/**\n * Should be used to decode list of params\n */\n/**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */\nexport const decodeParameters = (\n\tabi: AbiInput[],\n\tbytes: HexString,\n): { [key: string]: unknown; __length__: number } => decodeParametersWith(abi, bytes, false);\n\n/**\n * Should be used to decode bytes to plain param\n */\n/**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */\nexport const decodeParameter = (abi: AbiInput, bytes: HexString): unknown =>\n\tdecodeParameters([abi], bytes)['0'];\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toChecksumAddress } from 'web3-utils';\nimport { isAddress, utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\n\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = WORD_SIZE - ADDRESS_BYTES_COUNT;\n\nexport function encodeAddress(param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('address type expects string as input type', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\tlet address = input.toLowerCase();\n\tif (!address.startsWith('0x')) {\n\t\taddress = `0x${address}`;\n\t}\n\tif (!isAddress(address)) {\n\t\tthrow new AbiError('provided input is not valid address', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\t// for better performance, we could convert hex to destination bytes directly (encoded var)\n\tconst addressBytes = utils.hexToUint8Array(address);\n\t// expand address to WORD_SIZE\n\tconst encoded = alloc(WORD_SIZE);\n\tencoded.set(addressBytes, ADDRESS_OFFSET);\n\treturn {\n\t\tdynamic: false,\n\t\tencoded,\n\t};\n}\n\nexport function decodeAddress(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst addressBytes = bytes.subarray(ADDRESS_OFFSET, WORD_SIZE);\n\tif (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n\t\tthrow new AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });\n\t}\n\tconst result = utils.uint8ArrayToHexString(addressBytes);\n\n\t// should we check is decoded value is valid address?\n\t// if(!isAddress(result)) {\n\t//     throw new AbiError(\"encoded data is not valid address\", {\n\t//         address: result,\n\t//     });\n\t// }\n\treturn {\n\t\tresult: toChecksumAddress(result),\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from '.';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\n\nexport function encodeArray(param: AbiParameter, values: unknown): EncoderResult {\n\tif (!Array.isArray(values)) {\n\t\tthrow new AbiError('Expected value to be array', { abi: param, values });\n\t}\n\tconst { size, param: arrayItemParam } = extractArrayType(param);\n\tconst encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n\tconst dynamic = size === -1;\n\tconst dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n\tif (!dynamic && values.length !== size) {\n\t\tthrow new AbiError(\"Given arguments count doesn't match array length\", {\n\t\t\tarrayLength: size,\n\t\t\targumentsLength: values.length,\n\t\t});\n\t}\n\tif (dynamic || dynamicItems) {\n\t\tconst encodingResult = encodeDynamicParams(encodedParams);\n\t\tif (dynamic) {\n\t\t\tconst encodedLength = encodeNumber(\n\t\t\t\t{ type: 'uint256', name: '' },\n\t\t\t\tencodedParams.length,\n\t\t\t).encoded;\n\t\t\treturn {\n\t\t\t\tdynamic: true,\n\t\t\t\tencoded:\n\t\t\t\t\tencodedParams.length > 0\n\t\t\t\t\t\t? uint8ArrayConcat(encodedLength, encodingResult)\n\t\t\t\t\t\t: encodedLength,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodingResult,\n\t\t};\n\t}\n\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n\t};\n}\n\nexport function decodeArray(param: AbiParameter, bytes: Uint8Array): DecoderResult<unknown[]> {\n\t// eslint-disable-next-line prefer-const\n\tlet { size, param: arrayItemParam } = extractArrayType(param);\n\tconst dynamic = size === -1;\n\n\tlet consumed = 0;\n\tconst result: unknown[] = [];\n\tlet remaining = bytes;\n\t// dynamic array, we need to decode length\n\tif (dynamic) {\n\t\tconst lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n\t\tsize = Number(lengthResult.result);\n\t\tconsumed = lengthResult.consumed;\n\t\tremaining = lengthResult.encoded;\n\t}\n\tconst hasDynamicChild = isDynamic(arrayItemParam);\n\tif (hasDynamicChild) {\n\t\t// known length but dynamic child, each child is actually head element with encoded offset\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tremaining.subarray(i * WORD_SIZE),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\t\tarrayItemParam,\n\t\t\t\tremaining.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += decodedChildResult.consumed;\n\t\t\tresult.push(decodedChildResult.result);\n\t\t}\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: remaining.subarray(consumed),\n\t\t\tconsumed,\n\t\t};\n\t}\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\t// decode static params\n\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\tarrayItemParam,\n\t\t\tbytes.subarray(consumed),\n\t\t);\n\t\tconsumed += decodedChildResult.consumed;\n\t\tresult.push(decodedChildResult.result);\n\t}\n\treturn {\n\t\tresult,\n\t\tencoded: bytes.subarray(consumed),\n\t\tconsumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError, InvalidBooleanError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toBool } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nexport function encodeBoolean(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBool(input);\n\t} catch (e) {\n\t\tif (e instanceof InvalidBooleanError) {\n\t\t\tthrow new AbiError('provided input is not valid boolean value', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn encodeNumber({ type: 'uint8', name: '' }, Number(value));\n}\n\nexport function decodeBool(_param: AbiParameter, bytes: Uint8Array): DecoderResult<boolean> {\n\tconst numberResult = decodeNumber({ type: 'uint8', name: '' }, bytes);\n\tif (numberResult.result > 1 || numberResult.result < 0) {\n\t\tthrow new AbiError('Invalid boolean value encoded', {\n\t\t\tboolBytes: bytes.subarray(0, WORD_SIZE),\n\t\t\tnumberResult,\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult.result === BigInt(1),\n\t\tencoded: numberResult.encoded,\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter, Bytes } from 'web3-types';\nimport { bytesToHex, bytesToUint8Array } from 'web3-utils';\nimport { isBytes, ValidInputTypes } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nconst MAX_STATIC_BYTES_COUNT = 32;\n\nexport function encodeBytes(param: AbiParameter, input: unknown): EncoderResult {\n\t// hack for odd length hex strings\n\tif (typeof input === 'string' && input.length % 2 !== 0) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tinput += '0';\n\t}\n\tif (!isBytes(input as ValidInputTypes)) {\n\t\tthrow new AbiError('provided input is not valid bytes value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst bytes = bytesToUint8Array(input as Bytes);\n\tconst [, size] = param.type.split('bytes');\n\t// fixed size\n\tif (size) {\n\t\tif (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n\t\t\tthrow new AbiError(\n\t\t\t\t'invalid bytes type. Static byte type can have between 1 and 32 bytes',\n\t\t\t\t{\n\t\t\t\t\ttype: param.type,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tif (Number(size) < bytes.length) {\n\t\t\tthrow new AbiError('provided input size is different than type size', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t\tconst encoded = alloc(WORD_SIZE);\n\t\tencoded.set(bytes);\n\t\treturn {\n\t\t\tdynamic: false,\n\t\t\tencoded,\n\t\t};\n\t}\n\n\tconst partsLength = Math.ceil(bytes.length / WORD_SIZE);\n\t// one word for length of data + WORD for each part of actual data\n\tconst encoded = alloc(WORD_SIZE + partsLength * WORD_SIZE);\n\n\tencoded.set(encodeNumber({ type: 'uint32', name: '' }, bytes.length).encoded);\n\tencoded.set(bytes, WORD_SIZE);\n\treturn {\n\t\tdynamic: true,\n\t\tencoded,\n\t};\n}\n\nexport function decodeBytes(param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst [, sizeString] = param.type.split('bytes');\n\tlet size = Number(sizeString);\n\tlet remainingBytes = bytes;\n\tlet partsCount = 1;\n\tlet consumed = 0;\n\tif (!size) {\n\t\t// dynamic bytes\n\t\tconst result = decodeNumber({ type: 'uint32', name: '' }, remainingBytes);\n\t\tsize = Number(result.result);\n\t\tconsumed += result.consumed;\n\t\tremainingBytes = result.encoded;\n\t\tpartsCount = Math.ceil(size / WORD_SIZE);\n\t}\n\tif (size > bytes.length) {\n\t\tthrow new AbiError('there is not enough data to decode', {\n\t\t\ttype: param.type,\n\t\t\tencoded: bytes,\n\t\t\tsize,\n\t\t});\n\t}\n\n\treturn {\n\t\tresult: bytesToHex(remainingBytes.subarray(0, size)),\n\t\tencoded: remainingBytes.subarray(partsCount * WORD_SIZE),\n\t\tconsumed: consumed + partsCount * WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\nimport { EncoderResult, DecoderResult } from '../types.js';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\n\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\n\nexport function encodeParamFromAbiParameter(param: AbiParameter, value: unknown): EncoderResult {\n\tif (param.type === 'string') {\n\t\treturn encodeString(param, value);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn encodeBoolean(param, value);\n\t}\n\tif (param.type === 'address') {\n\t\treturn encodeAddress(param, value);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn encodeTuple(param, value);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn encodeArray(param, value);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn encodeBytes(param, value);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn encodeNumber(param, value);\n\t}\n\tthrow new Error('Unsupported');\n}\n\nexport function decodeParamFromAbiParameter(param: AbiParameter, bytes: Uint8Array): DecoderResult {\n\tif (param.type === 'string') {\n\t\treturn decodeString(param, bytes);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn decodeBool(param, bytes);\n\t}\n\tif (param.type === 'address') {\n\t\treturn decodeAddress(param, bytes);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn decodeTuple(param, bytes);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn decodeArray(param, bytes);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn decodeBytes(param, bytes);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn decodeNumber(param, bytes);\n\t}\n\tthrow new Error('Unsupported');\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport type { AbiParameter } from 'web3-types';\nimport { padLeft, toBigInt } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { numberLimits } from './numbersLimits.js';\n\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\n\nfunction bigIntToUint8Array(value: bigint, byteLength = WORD_SIZE): Uint8Array {\n\tlet hexValue;\n\tif (value < 0) {\n\t\thexValue = (mask + value).toString(16);\n\t} else {\n\t\thexValue = value.toString(16);\n\t}\n\thexValue = padLeft(hexValue, byteLength * 2);\n\treturn utils.hexToUint8Array(hexValue);\n}\n\nfunction uint8ArrayToBigInt(value: Uint8Array, max: bigint): bigint {\n\tconst hexValue = utils.uint8ArrayToHexString(value);\n\tconst result = BigInt(hexValue);\n\tif (result <= max) return result;\n\treturn result - mask;\n}\n\nexport function encodeNumber(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBigInt(input);\n\t} catch (e) {\n\t\tthrow new AbiError('provided input is not number value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tif (value < limit.min) {\n\t\tthrow new AbiError('provided input is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (value > limit.max) {\n\t\tthrow new AbiError('provided input is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: bigIntToUint8Array(value),\n\t};\n}\n\nexport function decodeNumber(param: AbiParameter, bytes: Uint8Array): DecoderResult<bigint> {\n\tif (bytes.length < WORD_SIZE) {\n\t\tthrow new AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });\n\t}\n\tconst boolBytes = bytes.subarray(0, WORD_SIZE);\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tconst numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n\n\tif (numberResult < limit.min) {\n\t\tthrow new AbiError('decoded value is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (numberResult > limit.max) {\n\t\tthrow new AbiError('decoded value is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult,\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* \n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexport const numberLimits = new Map<string, { min: bigint; max: bigint }>();\n\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n\tnumberLimits.set(`uint${i}`, {\n\t\tmin: BigInt(0),\n\t\tmax: base - BigInt(1),\n\t});\n\tnumberLimits.set(`int${i}`, {\n\t\tmin: -base / BigInt(2),\n\t\tmax: base / BigInt(2) - BigInt(1),\n\t});\n\tbase *= BigInt(256);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256')!);\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256')!);\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\n\nexport function encodeString(_param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('invalid input, should be string', { input });\n\t}\n\tconst bytes = utf8ToBytes(input);\n\treturn encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\n\nexport function decodeString(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n\treturn {\n\t\tresult: hexToUtf8(r.result),\n\t\tencoded: r.encoded,\n\t\tconsumed: r.consumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from '.';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\n\nexport function encodeTuple(param: AbiParameter, input: unknown): EncoderResult {\n\tlet dynamic = false;\n\tif (!Array.isArray(input) && typeof input !== 'object') {\n\t\tthrow new AbiError('param must be either Array or Object', {\n\t\t\tparam,\n\t\t\tinput,\n\t\t});\n\t}\n\tconst narrowedInput = input as Array<unknown> | Record<string, unknown>;\n\tconst encoded: Array<EncoderResult> = [];\n\tfor (let i = 0; i < (param.components?.length ?? 0); i += 1) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst paramComponent = param.components![i];\n\t\tlet result: EncoderResult;\n\t\tif (Array.isArray(narrowedInput)) {\n\t\t\tif (i >= narrowedInput.length) {\n\t\t\t\tthrow new AbiError('input param length missmatch', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n\t\t} else {\n\t\t\tconst paramInput = narrowedInput[paramComponent.name ?? ''];\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (paramInput === undefined || paramInput === null) {\n\t\t\t\tthrow new AbiError('missing input defined in abi', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t\tparamName: paramComponent.name,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, paramInput);\n\t\t}\n\t\tif (result.dynamic) {\n\t\t\tdynamic = true;\n\t\t}\n\t\tencoded.push(result);\n\t}\n\n\tif (dynamic) {\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodeDynamicParams(encoded),\n\t\t};\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encoded.map(e => e.encoded)),\n\t};\n}\n\nexport function decodeTuple(\n\tparam: AbiParameter,\n\tbytes: Uint8Array,\n): DecoderResult<{ [key: string]: unknown; __length__: number }> {\n\tconst result: { [key: string]: unknown; __length__: number } = {\n\t\t__length__: 0,\n\t};\n\n\t// tracks how much static params consumed bytes\n\tlet consumed = 0;\n\n\tif (!param.components) {\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: bytes,\n\t\t\tconsumed,\n\t\t};\n\t}\n\t// track how much dynamic params consumed bytes\n\tlet dynamicConsumed = 0;\n\tfor (const [index, childParam] of param.components.entries()) {\n\t\tlet decodedResult: DecoderResult;\n\t\tif (isDynamic(childParam)) {\n\t\t\t// if dynamic, we will have offset encoded\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tbytes.subarray(consumed),\n\t\t\t);\n\t\t\t// offset counts from start of original byte sequence\n\t\t\tdecodedResult = decodeParamFromAbiParameter(\n\t\t\t\tchildParam,\n\t\t\t\tbytes.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tdynamicConsumed += decodedResult.consumed;\n\t\t} else {\n\t\t\t// static param, just decode\n\t\t\tdecodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n\t\t\tconsumed += decodedResult.consumed;\n\t\t}\n\t\tresult.__length__ += 1;\n\t\tresult[index] = decodedResult.result;\n\t\tif (childParam.name && childParam.name !== '') {\n\t\t\tresult[childParam.name] = decodedResult.result;\n\t\t}\n\t}\n\treturn {\n\t\tencoded: bytes.subarray(consumed + dynamicConsumed),\n\t\tresult,\n\t\tconsumed: consumed + dynamicConsumed,\n\t};\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\n\nexport function encodeDynamicParams(encodedParams: ReadonlyArray<EncoderResult>): Uint8Array {\n\tlet staticSize = 0;\n\tlet dynamicSize = 0;\n\tconst staticParams: EncoderResult[] = [];\n\tconst dynamicParams: EncoderResult[] = [];\n\t// figure out static size\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticSize += WORD_SIZE;\n\t\t} else {\n\t\t\tstaticSize += encodedParam.encoded.length;\n\t\t}\n\t}\n\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticParams.push(\n\t\t\t\tencodeNumber({ type: 'uint256', name: '' }, staticSize + dynamicSize),\n\t\t\t);\n\t\t\tdynamicParams.push(encodedParam);\n\t\t\tdynamicSize += encodedParam.encoded.length;\n\t\t} else {\n\t\t\tstaticParams.push(encodedParam);\n\t\t}\n\t}\n\treturn uint8ArrayConcat(\n\t\t...staticParams.map(p => p.encoded),\n\t\t...dynamicParams.map(p => p.encoded),\n\t);\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiInput, HexString } from 'web3-types';\nimport { utils } from 'web3-validator';\nimport { decodeTuple } from './base/tuple.js';\nimport { toAbiParams } from './utils.js';\n\nexport function decodeParameters(\n\tabis: AbiInput[],\n\tbytes: HexString,\n\t_loose: boolean,\n): { [key: string]: unknown; __length__: number } {\n\tconst abiParams = toAbiParams(abis);\n\tconst bytesArray = utils.hexToUint8Array(bytes);\n\n\treturn decodeTuple({ type: 'tuple', name: '', components: abiParams }, bytesArray).result;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput } from 'web3-types';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base';\nimport { toAbiParams } from './utils.js';\n\nexport function encodeParameters(abi: ReadonlyArray<AbiInput>, params: unknown[]): string {\n\tif (abi.length !== params.length) {\n\t\tthrow new AbiError('Invalid number of values received for given ABI', {\n\t\t\texpected: abi.length,\n\t\t\treceived: params.length,\n\t\t});\n\t}\n\tconst abiParams = toAbiParams(abi);\n\treturn utils.uint8ArrayToHexString(\n\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t);\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter as ExternalAbiParameter, parseAbiParameter } from 'abitype';\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, AbiParameter, AbiStruct } from 'web3-types';\nimport { isNullish } from 'web3-utils';\nimport {\n\tisSimplifiedStructFormat,\n\tmapStructNameAndType,\n\tmapStructToCoderFormat,\n} from '../utils.js';\n\nexport const WORD_SIZE = 32;\n\nexport function alloc(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.alloc !== undefined) {\n\t\tconst buf = globalThis.Buffer.alloc(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.allocUnsafe !== undefined) {\n\t\tconst buf = globalThis.Buffer.allocUnsafe(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\nexport function convertExternalAbiParameter(abiParam: ExternalAbiParameter): AbiParameter {\n\treturn {\n\t\t...abiParam,\n\t\tname: abiParam.name ?? '',\n\t\tcomponents: (abiParam as { components: readonly AbiParameter[] }).components?.map(c =>\n\t\t\tconvertExternalAbiParameter(c),\n\t\t),\n\t};\n}\n\nexport function isAbiParameter(param: unknown): param is AbiParameter {\n\treturn (\n\t\t!isNullish(param) &&\n\t\ttypeof param === 'object' &&\n\t\t!isNullish((param as { type: unknown }).type) &&\n\t\ttypeof (param as { type: unknown }).type === 'string'\n\t);\n}\n\nexport function toAbiParams(abi: ReadonlyArray<AbiInput>): ReadonlyArray<AbiParameter> {\n\treturn abi.map(input => {\n\t\tif (isAbiParameter(input)) {\n\t\t\treturn input;\n\t\t}\n\t\tif (typeof input === 'string') {\n\t\t\treturn convertExternalAbiParameter(parseAbiParameter(input.replace(/tuple/, '')));\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(input)) {\n\t\t\tconst structName = Object.keys(input)[0];\n\t\t\tconst structInfo = mapStructNameAndType(structName);\n\t\t\tstructInfo.name = structInfo.name ?? '';\n\t\t\treturn {\n\t\t\t\t...structInfo,\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tinput[structName as keyof typeof input] as unknown as AbiStruct,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tthrow new AbiError('Invalid abi');\n\t});\n}\n\nexport function extractArrayType(param: AbiParameter): { size: number; param: AbiParameter } {\n\tconst arrayParenthesisStart = param.type.lastIndexOf('[');\n\tconst arrayParamType = param.type.substring(0, arrayParenthesisStart);\n\tconst sizeString = param.type.substring(arrayParenthesisStart);\n\tlet size = -1;\n\tif (sizeString !== '[]') {\n\t\tsize = Number(sizeString.slice(1, -1));\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tif (isNaN(size)) {\n\t\t\tthrow new AbiError('Invalid fixed array size', { size: sizeString });\n\t\t}\n\t}\n\treturn {\n\t\tparam: { type: arrayParamType, name: '', components: param.components },\n\t\tsize,\n\t};\n}\n\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */\nexport function isDynamic(param: AbiParameter): boolean {\n\tif (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]')) return true;\n\tif (param.type === 'tuple') {\n\t\treturn param.components?.some(isDynamic) ?? false;\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn isDynamic(extractArrayType(param).param);\n\t}\n\treturn false;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Eip838ExecutionError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\n\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\n\nexport const decodeContractErrorData = (\n\terrorsAbi: AbiErrorFragment[],\n\terror: Eip838ExecutionError,\n) => {\n\tif (error?.data) {\n\t\tlet errorName: string | undefined;\n\t\tlet errorSignature: string | undefined;\n\t\tlet errorArgs: { [K in string]: unknown } | undefined;\n\t\ttry {\n\t\t\tconst errorSha = error.data.slice(0, 10);\n\t\t\tconst errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n\n\t\t\tif (errorAbi?.inputs) {\n\t\t\t\terrorName = errorAbi.name;\n\t\t\t\terrorSignature = jsonInterfaceMethodToString(errorAbi);\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorName) {\n\t\t\terror.setDecodedProperties(errorName, errorSignature, errorArgs);\n\t\t}\n\t}\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @note This code was taken from: https://github.com/Mrtenz/eip-712/tree/master\n */\n\nimport { Eip712TypedData } from 'web3-types';\nimport { isNullish, keccak256 } from 'web3-utils';\nimport { encodeParameters } from './coders/encode.js';\n\nconst TYPE_REGEX = /^\\w+/;\nconst ARRAY_REGEX = /^(.*)\\[([0-9]*?)]$/;\n\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n */\nconst getDependencies = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdependencies: string[] = [],\n): string[] => {\n\tconst match = type.match(TYPE_REGEX)!;\n\tconst actualType = match[0];\n\tif (dependencies.includes(actualType)) {\n\t\treturn dependencies;\n\t}\n\n\tif (!typedData.types[actualType]) {\n\t\treturn dependencies;\n\t}\n\n\treturn [\n\t\tactualType,\n\t\t...typedData.types[actualType].reduce<string[]>(\n\t\t\t(previous, _type) => [\n\t\t\t\t...previous,\n\t\t\t\t...getDependencies(typedData, _type.type, previous).filter(\n\t\t\t\t\tdependency => !previous.includes(dependency),\n\t\t\t\t),\n\t\t\t],\n\t\t\t[],\n\t\t),\n\t];\n};\n\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Options} [options]\n * @return {string}\n */\nconst encodeType = (typedData: Eip712TypedData, type: string): string => {\n\tconst [primary, ...dependencies] = getDependencies(typedData, type);\n\t// eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n\tconst types = [primary, ...dependencies.sort()];\n\n\treturn types\n\t\t.map(\n\t\t\tdependency =>\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t`${dependency}(${typedData.types[dependency].map(\n\t\t\t\t\t_type => `${_type.type} ${_type.name}`,\n\t\t\t\t)})`,\n\t\t)\n\t\t.join('');\n};\n\n/**\n * Get a type string as hash.\n */\nconst getTypeHash = (typedData: Eip712TypedData, type: string) =>\n\tkeccak256(encodeType(typedData, type));\n\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n */\nconst getStructHash = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: Record<string, unknown>,\n\t// eslint-disable-next-line  no-use-before-define\n): string => keccak256(encodeData(typedData, type, data));\n\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n */\nexport const getMessage = (typedData: Eip712TypedData, hash?: boolean): string => {\n\tconst EIP_191_PREFIX = '1901';\n\tconst message = `0x${EIP_191_PREFIX}${getStructHash(\n\t\ttypedData,\n\t\t'EIP712Domain',\n\t\ttypedData.domain as Record<string, unknown>,\n\t).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(\n\t\t2,\n\t)}`;\n\n\tif (hash) {\n\t\treturn keccak256(message);\n\t}\n\n\treturn message;\n};\n\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n */\nconst encodeValue = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: unknown,\n): [string, string | Uint8Array | number] => {\n\tconst match = type.match(ARRAY_REGEX);\n\n\t// Checks for array types\n\tif (match) {\n\t\tconst arrayType = match[1];\n\t\tconst length = Number(match[2]) || undefined;\n\n\t\tif (!Array.isArray(data)) {\n\t\t\tthrow new Error('Cannot encode data: value is not of array type');\n\t\t}\n\n\t\tif (length && data.length !== length) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot encode data: expected length of ${length}, but got ${data.length}`,\n\t\t\t);\n\t\t}\n\n\t\tconst encodedData = data.map(item => encodeValue(typedData, arrayType, item));\n\t\tconst types = encodedData.map(item => item[0]);\n\t\tconst values = encodedData.map(item => item[1]);\n\n\t\treturn ['bytes32', keccak256(encodeParameters(types, values))];\n\t}\n\n\tif (typedData.types[type]) {\n\t\treturn ['bytes32', getStructHash(typedData, type, data as Record<string, unknown>)];\n\t}\n\n\t// Strings and arbitrary byte arrays are hashed to bytes32\n\tif (type === 'string') {\n\t\treturn ['bytes32', keccak256(data as string)];\n\t}\n\n\tif (type === 'bytes') {\n\t\treturn ['bytes32', keccak256(data as string)];\n\t}\n\n\treturn [type, data as string];\n};\n\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n */\nconst encodeData = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: Record<string, unknown>,\n): string => {\n\tconst [types, values] = typedData.types[type].reduce<[string[], unknown[]]>(\n\t\t([_types, _values], field) => {\n\t\t\tif (isNullish(data[field.name]) || isNullish(data[field.name])) {\n\t\t\t\tthrow new Error(`Cannot encode data: missing data for '${field.name}'`);\n\t\t\t}\n\n\t\t\tconst value = data[field.name];\n\t\t\tconst [_type, encodedValue] = encodeValue(typedData, field.type, value);\n\n\t\t\treturn [\n\t\t\t\t[..._types, _type],\n\t\t\t\t[..._values, encodedValue],\n\t\t\t];\n\t\t},\n\t\t[['bytes32'], [getTypeHash(typedData, type)]],\n\t);\n\n\treturn encodeParameters(types, values);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3.eth.abi functions let you encode and decode parameters to ABI (Application Binary Interface) for function calls to the EVM (Ethereum Virtual Machine).\n */\nexport * from './api/errors_api.js';\nexport * from './api/events_api.js';\nexport * from './api/functions_api.js';\nexport * from './api/logs_api.js';\nexport * from './api/parameters_api.js';\nexport * from './utils.js';\nexport * from './decode_contract_error_data.js';\nexport { getMessage as getEncodedEip712Data } from './eip_712.js';\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport { isNullish, leftPad, rightPad, toHex } from 'web3-utils';\nimport {\n\tAbiInput,\n\tAbiCoderStruct,\n\tAbiFragment,\n\tAbiParameter,\n\tAbiStruct,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tAbiConstructorFragment,\n} from 'web3-types';\n\nexport const isAbiFragment = (item: unknown): item is AbiFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t['function', 'event', 'constructor', 'error'].includes((item as { type: string }).type);\n\nexport const isAbiErrorFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'error';\n\nexport const isAbiEventFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'event';\n\nexport const isAbiFunctionFragment = (item: unknown): item is AbiFunctionFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'function';\n\nexport const isAbiConstructorFragment = (item: unknown): item is AbiConstructorFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'constructor';\n\n/**\n * Check if type is simplified struct format\n */\nexport const isSimplifiedStructFormat = (\n\ttype: string | Partial<AbiParameter> | Partial<AbiInput>,\n): type is Omit<AbiParameter, 'components' | 'name'> =>\n\ttypeof type === 'object' &&\n\ttypeof (type as { components: unknown }).components === 'undefined' &&\n\ttypeof (type as { name: unknown }).name === 'undefined';\n\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */\nexport const mapStructNameAndType = (structName: string): AbiStruct =>\n\tstructName.includes('[]')\n\t\t? { type: 'tuple[]', name: structName.slice(0, -2) }\n\t\t: { type: 'tuple', name: structName };\n\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */\nexport const mapStructToCoderFormat = (struct: AbiStruct): Array<AbiCoderStruct> => {\n\tconst components: Array<AbiCoderStruct> = [];\n\n\tfor (const key of Object.keys(struct)) {\n\t\tconst item = struct[key];\n\n\t\tif (typeof item === 'object') {\n\t\t\tcomponents.push({\n\t\t\t\t...mapStructNameAndType(key),\n\t\t\t\tcomponents: mapStructToCoderFormat(item as unknown as AbiStruct),\n\t\t\t});\n\t\t} else {\n\t\t\tcomponents.push({\n\t\t\t\tname: key,\n\t\t\t\ttype: struct[key] as string,\n\t\t\t});\n\t\t}\n\t}\n\treturn components;\n};\n\n/**\n * Map types if simplified format is used\n */\nexport const mapTypes = (\n\ttypes: AbiInput[],\n): Array<string | AbiParameter | Record<string, unknown>> => {\n\tconst mappedTypes: Array<string | AbiParameter | Record<string, unknown>> = [];\n\n\tfor (const type of types) {\n\t\tlet modifiedType = type;\n\n\t\t// Clone object\n\t\tif (typeof type === 'object') {\n\t\t\tmodifiedType = { ...type };\n\t\t}\n\n\t\t// Remap `function` type params to bytes24 since Ethers does not\n\t\t// recognize former type. Solidity docs say `Function` is a bytes24\n\t\t// encoding the contract address followed by the function selector hash.\n\t\tif (typeof type === 'object' && type.type === 'function') {\n\t\t\tmodifiedType = { ...type, type: 'bytes24' };\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(modifiedType)) {\n\t\t\tconst structName = Object.keys(modifiedType)[0] as unknown as keyof typeof modifiedType;\n\n\t\t\tmappedTypes.push({\n\t\t\t\t...mapStructNameAndType(structName),\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tmodifiedType[structName] as unknown as AbiStruct,\n\t\t\t\t) as unknown as AbiParameter[],\n\t\t\t});\n\t\t} else {\n\t\t\tmappedTypes.push(modifiedType);\n\t\t}\n\t}\n\n\treturn mappedTypes;\n};\n\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */\nexport const isOddHexstring = (param: unknown): boolean =>\n\ttypeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n\n/**\n * format odd-length bytes to even-length\n */\nexport const formatOddHexstrings = (param: string): string =>\n\tisOddHexstring(param) ? `0x0${param.substring(2)}` : param;\n\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */\nexport const formatParam = (type: string, _param: unknown): unknown => {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\t// clone if _param is an object\n\tconst param = typeof _param === 'object' && !Array.isArray(_param) ? { ..._param } : _param;\n\tconst paramTypeBytes = /^bytes([0-9]*)$/;\n\tconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\n\tconst paramTypeNumber = /^(u?int)([0-9]*)$/;\n\tconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n\n\t// Format BN to string\n\tif (param instanceof BigInt) {\n\t\treturn param.toString(10);\n\t}\n\n\tif (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\tconst paramClone = [...(param as Array<unknown>)];\n\t\treturn paramClone.map(p => formatParam(type.replace('[]', ''), p));\n\t}\n\n\t// Format correct width for u?int[0-9]*\n\tlet match = paramTypeNumber.exec(type);\n\tif (match) {\n\t\tconst size = parseInt(match[2] ?? '256', 10);\n\t\tif (size / 8 < (param as { length: number }).length) {\n\t\t\t// pad to correct bit width\n\t\t\treturn leftPad(param as string, size);\n\t\t}\n\t}\n\n\t// Format correct length for bytes[0-9]+\n\tmatch = paramTypeBytes.exec(type);\n\tif (match) {\n\t\tconst hexParam = param instanceof Uint8Array ? toHex(param) : param;\n\n\t\t// format to correct length\n\t\tconst size = parseInt(match[1], 10);\n\t\tif (size) {\n\t\t\tlet maxSize = size * 2;\n\n\t\t\tif ((param as string).startsWith('0x')) {\n\t\t\t\tmaxSize += 2;\n\t\t\t}\n\t\t\t// pad to correct length\n\t\t\tconst paddedParam =\n\t\t\t\t(hexParam as string).length < maxSize\n\t\t\t\t\t? rightPad(param as string, size * 2)\n\t\t\t\t\t: hexParam;\n\t\t\treturn formatOddHexstrings(paddedParam as string);\n\t\t}\n\n\t\treturn formatOddHexstrings(hexParam as string);\n\t}\n\treturn param;\n};\n\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */\n\nexport const flattenTypes = (\n\tincludeTuple: boolean,\n\tputs: ReadonlyArray<AbiParameter>,\n): string[] => {\n\tconst types: string[] = [];\n\n\tputs.forEach(param => {\n\t\tif (typeof param.components === 'object') {\n\t\t\tif (!param.type.startsWith('tuple')) {\n\t\t\t\tthrow new AbiError(\n\t\t\t\t\t`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst arrayBracket = param.type.indexOf('[');\n\t\t\tconst suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';\n\t\t\tconst result = flattenTypes(includeTuple, param.components);\n\n\t\t\tif (Array.isArray(result) && includeTuple) {\n\t\t\t\ttypes.push(`tuple(${result.join(',')})${suffix}`);\n\t\t\t} else if (!includeTuple) {\n\t\t\t\ttypes.push(`(${result.join(',')})${suffix}`);\n\t\t\t} else {\n\t\t\t\ttypes.push(`(${result.join()})`);\n\t\t\t}\n\t\t} else {\n\t\t\ttypes.push(param.type);\n\t\t}\n\t});\n\n\treturn types;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */\nexport const jsonInterfaceMethodToString = (json: AbiFragment): string => {\n\tif (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n\t\tif (json.name?.includes('(')) {\n\t\t\treturn json.name;\n\t\t}\n\n\t\treturn `${json.name ?? ''}(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n\t}\n\n\t// Constructor fragment\n\treturn `(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tdecrypt as createDecipheriv,\n\tencrypt as createCipheriv,\n} from 'ethereum-cryptography/aes.js';\nimport { pbkdf2Sync } from 'ethereum-cryptography/pbkdf2.js';\nimport { scryptSync } from 'ethereum-cryptography/scrypt.js';\nimport {\n\tInvalidKdfError,\n\tInvalidPasswordError,\n\tInvalidPrivateKeyError,\n\tInvalidSignatureError,\n\tIVLengthError,\n\tKeyDerivationError,\n\tKeyStoreVersionError,\n\tPBKDF2IterationsError,\n\tPrivateKeyLengthError,\n\tTransactionSigningError,\n\tUndefinedRawTransactionError,\n} from 'web3-errors';\nimport {\n\tAddress,\n\tBytes,\n\tCipherOptions,\n\tHexString,\n\tKeyStore,\n\tPBKDF2SHA256Params,\n\tScryptParams,\n\tTransaction,\n} from 'web3-types';\nimport {\n\tbytesToUint8Array,\n\tbytesToHex,\n\tfromUtf8,\n\thexToBytes,\n\tnumberToHex,\n\trandomBytes,\n\tsha3Raw,\n\ttoChecksumAddress,\n\tuint8ArrayConcat,\n\tutf8ToHex,\n\tuuidV4,\n} from 'web3-utils';\n\nimport { isHexStrict, isNullish, isString, validator } from 'web3-validator';\nimport { secp256k1 } from './tx/constants.js';\nimport { keyStoreSchema } from './schemas.js';\nimport { TransactionFactory } from './tx/transactionFactory.js';\nimport type {\n\tSignatureObject,\n\tSignTransactionResult,\n\tTypedTransaction,\n\tWeb3Account,\n\tSignResult,\n} from './types.js';\n\n/**\n * Get the private key Uint8Array after the validation\n */\nexport const parseAndValidatePrivateKey = (data: Bytes, ignoreLength?: boolean): Uint8Array => {\n\tlet privateKeyUint8Array: Uint8Array;\n\n\t// To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'\n\tif (!ignoreLength && typeof data === 'string' && isHexStrict(data) && data.length !== 66) {\n\t\tthrow new PrivateKeyLengthError();\n\t}\n\n\ttry {\n\t\tprivateKeyUint8Array = data instanceof Uint8Array ? data : bytesToUint8Array(data);\n\t} catch {\n\t\tthrow new InvalidPrivateKeyError();\n\t}\n\n\tif (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {\n\t\tthrow new PrivateKeyLengthError();\n\t}\n\n\treturn privateKeyUint8Array;\n};\n\n/**\n *\n * Hashes the given message. The data will be UTF-8 HEX decoded and enveloped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message and hashed using keccak256.\n *\n * @param message - A message to hash, if its HEX it will be UTF8 decoded.\n * @returns The hashed message\n *\n * ```ts\n * hashMessage(\"Hello world\")\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n * hashMessage(utf8ToHex(\"Hello world\")) // Will be hex decoded in hashMessage\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n * ```\n */\nexport const hashMessage = (message: string): string => {\n\tconst messageHex = isHexStrict(message) ? message : utf8ToHex(message);\n\n\tconst messageBytes = hexToBytes(messageHex);\n\n\tconst preamble = hexToBytes(\n\t\tfromUtf8(`\\x19Ethereum Signed Message:\\n${messageBytes.byteLength}`),\n\t);\n\n\tconst ethMessage = uint8ArrayConcat(preamble, messageBytes);\n\n\treturn sha3Raw(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n};\n\n/**\n * Signs arbitrary data with a given private key.\n * **_NOTE:_** The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message\n *\n * @param data - The data to sign\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1c',\n * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',\n * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',\n * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'\n * }\n * ```\n */\nexport const sign = (data: string, privateKey: Bytes): SignResult => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\tconst hash = hashMessage(data);\n\n\tconst signature = secp256k1.sign(hash.substring(2), privateKeyUint8Array);\n\tconst signatureBytes = signature.toCompactRawBytes();\n\tconst r = signature.r.toString(16).padStart(64, '0');\n\tconst s = signature.s.toString(16).padStart(64, '0');\n\tconst v = signature.recovery! + 27;\n\n\treturn {\n\t\tmessage: data,\n\t\tmessageHash: hash,\n\t\tv: numberToHex(v),\n\t\tr: `0x${r}`,\n\t\ts: `0x${s}`,\n\t\tsignature: `${bytesToHex(signatureBytes)}${v.toString(16)}`,\n\t};\n};\n\n/**\n * Signs an Ethereum transaction with a given private key.\n *\n * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type\n * @param privateKey -  The private key to import. This is 32 bytes of random data.\n * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.\n *\n * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object\n * Use {@link Web3.eth.accounts.sign} instead.\n *\n * Signing a legacy transaction\n * ```ts\n * signTransaction({\n *\tto: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',\n *\tvalue: '0x186A0',\n *\tgasLimit: '0x520812',\n *\tgasPrice: '0x09184e72a000',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0,\n * }, '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318'))\n * }\n * > {\n * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',\n * v: '0x25',\n * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',\n * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * ```\n * Signing an eip 1559 transaction\n * ```ts\n * signTransaction({\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tmaxPriorityFeePerGas: '0x3B9ACA00',\n *\tmaxFeePerGas: '0xB2D05E00',\n *\tgasLimit: '0x6A4012',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0,\n * },\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',\n * v: '0x25',\n * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',\n * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n * Signing an eip 2930 transaction\n * ```ts\n * signTransaction({\n *\tchainId: 1,\n *\tnonce: 0,\n *\tgasPrice: '0x09184e72a000',\n *\tgasLimit: '0x2710321',\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\taccessList: [\n *\t\t{\n *\t\t\taddress: '0x0000000000000000000000000000000000000101',\n *\t\t\tstorageKeys: [\n *\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n *\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000060a7',\n *\t\t\t],\n *\t\t},\n *\t],\n * },\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',\n * v: '0x26',\n * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',\n * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n */\nexport const signTransaction = async (\n\ttransaction: TypedTransaction,\n\tprivateKey: HexString,\n\t// To make it compatible with rest of the API, have to keep it async\n\t// eslint-disable-next-line @typescript-eslint/require-await\n): Promise<SignTransactionResult> => {\n\tconst signedTx = transaction.sign(hexToBytes(privateKey));\n\tif (isNullish(signedTx.v) || isNullish(signedTx.r) || isNullish(signedTx.s))\n\t\tthrow new TransactionSigningError('Signer Error');\n\n\tconst validationErrors = signedTx.validate(true);\n\n\tif (validationErrors.length > 0) {\n\t\tlet errorString = 'Signer Error ';\n\t\tfor (const validationError of validationErrors) {\n\t\t\terrorString += `${errorString} ${validationError}.`;\n\t\t}\n\t\tthrow new TransactionSigningError(errorString);\n\t}\n\n\tconst rawTx = bytesToHex(signedTx.serialize());\n\tconst txHash = sha3Raw(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n\n\treturn {\n\t\tmessageHash: bytesToHex(signedTx.getMessageToSign(true)),\n\t\tv: `0x${signedTx.v.toString(16)}`,\n\t\tr: `0x${signedTx.r.toString(16).padStart(64, '0')}`,\n\t\ts: `0x${signedTx.s.toString(16).padStart(64, '0')}`,\n\t\trawTransaction: rawTx,\n\t\ttransactionHash: bytesToHex(txHash),\n\t};\n};\n\n/**\n * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.\n *\n * @param rawTransaction - The hex string having RLP encoded transaction\n * @returns The Ethereum address used to sign this transaction\n * ```ts\n * recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');\n * > \"0x2c7536E3605D9C16a7a3D7b1898e529396a65c23\"\n * ```\n */\nexport const recoverTransaction = (rawTransaction: HexString): Address => {\n\tif (isNullish(rawTransaction)) throw new UndefinedRawTransactionError();\n\n\tconst tx = TransactionFactory.fromSerializedData(hexToBytes(rawTransaction));\n\n\treturn toChecksumAddress(tx.getSenderAddress().toString());\n};\n\n/**\n * Recovers the Ethereum address which was used to sign the given data\n *\n * @param data - Either a signed message, hash, or the {@link signatureObject}\n * @param signature - The raw RLP encoded signature\n * @param signatureOrV - signatureOrV\n * @param prefixedOrR - prefixedOrR\n * @param s - s\n * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message, and assumed to be already prefixed.\n * @returns The Ethereum address used to sign this data\n * ```ts\n * sign('Some data', '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728');\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1b',\n * r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',\n * s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',\n * signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'\n * }\n * recover('0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b');\n * > '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0'\n * ```\n */\nexport const recover = (\n\tdata: string | SignatureObject,\n\tsignatureOrV?: string,\n\tprefixedOrR?: boolean | string,\n\ts?: string,\n\tprefixed?: boolean,\n): Address => {\n\tif (typeof data === 'object') {\n\t\tconst signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;\n\t\treturn recover(data.messageHash, signatureStr, prefixedOrR);\n\t}\n\tif (typeof signatureOrV === 'string' && typeof prefixedOrR === 'string' && !isNullish(s)) {\n\t\tconst signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;\n\t\treturn recover(data, signatureStr, prefixed);\n\t}\n\n\tif (isNullish(signatureOrV)) throw new InvalidSignatureError('signature string undefined');\n\n\tconst V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature\n\tconst hashedMessage = prefixedOrR ? data : hashMessage(data);\n\n\tlet v = parseInt(signatureOrV.substring(V_INDEX),16); // 0x + r + s + v\n\tif (v > 26) {\n\t\tv -= 27;\n\t}\n\n\tconst ecPublicKey = secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX))\n\t\t.addRecoveryBit(v)\n\t\t.recoverPublicKey(hashedMessage.replace('0x', ''))\n\t\t.toRawBytes(false);\n\n\tconst publicHash = sha3Raw(ecPublicKey.subarray(1));\n\n\tconst address = toChecksumAddress(`0x${publicHash.slice(-40)}`);\n\n\treturn address;\n};\n\n/**\n * Get the ethereum Address from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns The Ethereum address\n * @example\n * ```ts\n * privateKeyToAddress(\"0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728\")\n * > \"0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\"\n * ```\n */\nexport const privateKeyToAddress = (privateKey: Bytes): string => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// Get public key from private key in compressed format\n\tconst publicKey = secp256k1.getPublicKey(privateKeyUint8Array, false);\n\n\t// Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key\n\tconst publicKeyHash = sha3Raw(publicKey.slice(1));\n\n\t// The hash is returned as 256 bits (32 bytes) or 64 hex characters\n\t// To get the address, take the last 20 bytes of the public hash\n\tconst address = publicKeyHash.slice(-40);\n\n\treturn toChecksumAddress(`0x${address}`);\n};\n\n/**\n * Get the public key from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key \n * @returns The public key\n * @example\n * ```ts\n * privateKeyToAddress(\"0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f\", true)\n * > \"0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a\" // uncompressed public key\n * ```\n */\n export const privateKeyToPublicKey = (privateKey: Bytes, isCompressed: boolean): string => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// Get public key from private key in compressed format\n\treturn `0x${bytesToHex(secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte\n};\n\n/**\n * encrypt a private key with a password, returns a V3 JSON Keystore\n *\n * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n *\n * @param privateKey - The private key to encrypt, 32 bytes.\n * @param password - The password used for encryption.\n * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2\n * @returns Returns a V3 JSON Keystore\n *\n *\n * Encrypt using scrypt options\n * ```ts\n * encrypt('0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * '123',\n * {\n *   n: 8192,\n *\t iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),\n *\t salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),\n *\t),\n * }).then(console.log)\n * > {\n * version: 3,\n * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n * crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *   cipher: 'aes-128-ctr',\n *   kdf: 'scrypt',\n *   kdfparams: {\n *     n: 8192,\n *     r: 8,\n *     p: 1,\n *     dklen: 32,\n *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *   },\n *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n * }\n *}\n *```\n * Encrypting using pbkdf2 options\n * ```ts\n * encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n *'123',\n *{\n *\tiv: 'bfb43120ae00e9de110f8325143a2709',\n *\tsalt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *\tc: 262144,\n *\tkdf: 'pbkdf2',\n *}).then(console.log)\n * >\n * {\n *   version: 3,\n *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',\n *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',\n *   crypto: {\n *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',\n *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *     cipher: 'aes-128-ctr',\n *     kdf: 'pbkdf2',\n *     kdfparams: {\n *       dklen: 32,\n *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *       c: 262144,\n *       prf: 'hmac-sha256'\n *     },\n *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'\n *   }\n * }\n *```\n */\nexport const encrypt = async (\n\tprivateKey: Bytes,\n\tpassword: string | Uint8Array,\n\toptions?: CipherOptions,\n): Promise<KeyStore> => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// if given salt or iv is a string, convert it to a Uint8Array\n\tlet salt;\n\tif (options?.salt) {\n\t\tsalt = typeof options.salt === 'string' ? hexToBytes(options.salt) : options.salt;\n\t} else {\n\t\tsalt = randomBytes(32);\n\t}\n\n\tif (!(isString(password) || password instanceof Uint8Array)) {\n\t\tthrow new InvalidPasswordError();\n\t}\n\n\tconst uint8ArrayPassword =\n\t\ttypeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n\n\tlet initializationVector;\n\tif (options?.iv) {\n\t\tinitializationVector = typeof options.iv === 'string' ? hexToBytes(options.iv) : options.iv;\n\t\tif (initializationVector.length !== 16) {\n\t\t\tthrow new IVLengthError();\n\t\t}\n\t} else {\n\t\tinitializationVector = randomBytes(16);\n\t}\n\n\tconst kdf = options?.kdf ?? 'scrypt';\n\n\tlet derivedKey;\n\tlet kdfparams: ScryptParams | PBKDF2SHA256Params;\n\n\t// derive key from key derivation function\n\tif (kdf === 'pbkdf2') {\n\t\tkdfparams = {\n\t\t\tdklen: options?.dklen ?? 32,\n\t\t\tsalt: bytesToHex(salt).replace('0x', ''),\n\t\t\tc: options?.c ?? 262144,\n\t\t\tprf: 'hmac-sha256',\n\t\t};\n\n\t\tif (kdfparams.c < 1000) {\n\t\t\t// error when c < 1000, pbkdf2 is less secure with less iterations\n\t\t\tthrow new PBKDF2IterationsError();\n\t\t}\n\t\tderivedKey = pbkdf2Sync(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, 'sha256');\n\t} else if (kdf === 'scrypt') {\n\t\tkdfparams = {\n\t\t\tn: options?.n ?? 8192,\n\t\t\tr: options?.r ?? 8,\n\t\t\tp: options?.p ?? 1,\n\t\t\tdklen: options?.dklen ?? 32,\n\t\t\tsalt: bytesToHex(salt).replace('0x', ''),\n\t\t};\n\t\tderivedKey = scryptSync(\n\t\t\tuint8ArrayPassword,\n\t\t\tsalt,\n\t\t\tkdfparams.n,\n\t\t\tkdfparams.p,\n\t\t\tkdfparams.r,\n\t\t\tkdfparams.dklen,\n\t\t);\n\t} else {\n\t\tthrow new InvalidKdfError();\n\t}\n\n\tconst cipher = await createCipheriv(\n\t\tprivateKeyUint8Array,\n\t\tderivedKey.slice(0, 16),\n\t\tinitializationVector,\n\t\t'aes-128-ctr',\n\t);\n\n\tconst ciphertext = bytesToHex(cipher).slice(2);\n\n\tconst mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), cipher)).replace('0x', '');\n\treturn {\n\t\tversion: 3,\n\t\tid: uuidV4(),\n\t\taddress: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace('0x', ''),\n\t\tcrypto: {\n\t\t\tciphertext,\n\t\t\tcipherparams: {\n\t\t\t\tiv: bytesToHex(initializationVector).replace('0x', ''),\n\t\t\t},\n\t\t\tcipher: 'aes-128-ctr',\n\t\t\tkdf,\n\t\t\tkdfparams,\n\t\t\tmac,\n\t\t},\n\t};\n};\n\n/**\n * Get an Account object from the privateKey\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns A Web3Account object\n *\n * The `Web3Account.signTransaction` is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * Use {@link Web3.eth.accounts.signTransaction} instead.\n *\n * ```ts\n * privateKeyToAccount(\"0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709\");\n * >    {\n * \t\t\taddress: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',\n * \t\t\tprivateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n * \t\t\tsign,\n * \t\t\tsignTransaction,\n * \t\t\tencrypt,\n * \t}\n * ```\n */\nexport const privateKeyToAccount = (privateKey: Bytes, ignoreLength?: boolean): Web3Account => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);\n\n\treturn {\n\t\taddress: privateKeyToAddress(privateKeyUint8Array),\n\t\tprivateKey: bytesToHex(privateKeyUint8Array),\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tsignTransaction: (_tx: Transaction) => {\n\t\t\tthrow new TransactionSigningError('Do not have network access to sign the transaction');\n\t\t},\n\t\tsign: (data: Record<string, unknown> | string) =>\n\t\t\tsign(typeof data === 'string' ? data : JSON.stringify(data), privateKeyUint8Array),\n\t\tencrypt: async (password: string, options?: Record<string, unknown>) =>\n\t\t\tencrypt(privateKeyUint8Array, password, options),\n\t};\n};\n\n/**\n *\n * Generates and returns a Web3Account object that includes the private and public key\n * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1\n * that is cryptographically secure random number with certain characteristics.\n * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve\n *\n * @returns A Web3Account object\n * ```ts\n * web3.eth.accounts.create();\n * {\n * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',\n * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const create = (): Web3Account => {\n\tconst privateKey = secp256k1.utils.randomPrivateKey();\n\n\treturn privateKeyToAccount(`${bytesToHex(privateKey)}`);\n};\n\n/**\n * Decrypts a v3 keystore JSON, and creates the account.\n *\n * @param keystore - the encrypted Keystore object or string to decrypt\n * @param password - The password that was used for encryption\n * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.\n * @returns Returns the decrypted Web3Account object\n * Decrypting scrypt\n *\n * ```ts\n * decrypt({\n *   version: 3,\n *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n *   crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *      cipher: 'aes-128-ctr',\n *      kdf: 'scrypt',\n *      kdfparams: {\n *        n: 8192,\n *        r: 8,\n *        p: 1,\n *        dklen: 32,\n *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *      },\n *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n *    }\n *   }, '123').then(console.log)\n * > {\n * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',\n * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const decrypt = async (\n\tkeystore: KeyStore | string,\n\tpassword: string | Uint8Array,\n\tnonStrict?: boolean,\n): Promise<Web3Account> => {\n\tconst json =\n\t\ttypeof keystore === 'object'\n\t\t\t? keystore\n\t\t\t: (JSON.parse(nonStrict ? keystore.toLowerCase() : keystore) as KeyStore);\n\n\tvalidator.validateJSONSchema(keyStoreSchema, json);\n\n\tif (json.version !== 3) throw new KeyStoreVersionError();\n\n\tconst uint8ArrayPassword =\n\t\ttypeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n\n\tvalidator.validate(['bytes'], [uint8ArrayPassword]);\n\n\tlet derivedKey;\n\tif (json.crypto.kdf === 'scrypt') {\n\t\tconst kdfparams = json.crypto.kdfparams as ScryptParams;\n\t\tconst uint8ArraySalt =\n\t\t\ttypeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n\t\tderivedKey = scryptSync(\n\t\t\tuint8ArrayPassword,\n\t\t\tuint8ArraySalt,\n\t\t\tkdfparams.n,\n\t\t\tkdfparams.p,\n\t\t\tkdfparams.r,\n\t\t\tkdfparams.dklen,\n\t\t);\n\t} else if (json.crypto.kdf === 'pbkdf2') {\n\t\tconst kdfparams: PBKDF2SHA256Params = json.crypto.kdfparams as PBKDF2SHA256Params;\n\n\t\tconst uint8ArraySalt =\n\t\t\ttypeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n\n\t\tderivedKey = pbkdf2Sync(\n\t\t\tuint8ArrayPassword,\n\t\t\tuint8ArraySalt,\n\t\t\tkdfparams.c,\n\t\t\tkdfparams.dklen,\n\t\t\t'sha256',\n\t\t);\n\t} else {\n\t\tthrow new InvalidKdfError();\n\t}\n\n\tconst ciphertext = hexToBytes(json.crypto.ciphertext);\n\tconst mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), ciphertext)).replace('0x', '');\n\n\tif (mac !== json.crypto.mac) {\n\t\tthrow new KeyDerivationError();\n\t}\n\n\tconst seed = await createDecipheriv(\n\t\thexToBytes(json.crypto.ciphertext),\n\t\tderivedKey.slice(0, 16),\n\t\thexToBytes(json.crypto.cipherparams.iv),\n\t);\n\n\treturn privateKeyToAccount(seed);\n};\n","export default {\n\t\"name\": \"goerli\",\n\t\"chainId\": 5,\n\t\"networkId\": 5,\n\t\"defaultHardfork\": \"merge\",\n\t\"consensus\": {\n\t\t\"type\": \"poa\",\n\t\t\"algorithm\": \"clique\",\n\t\t\"clique\": {\n\t\t\t\"period\": 15,\n\t\t\t\"epoch\": 30000\n\t\t}\n\t},\n\t\"comment\": \"Cross-client PoA test network\",\n\t\"url\": \"https://github.com/goerli/testnet\",\n\t\"genesis\": {\n\t\t\"timestamp\": \"0x5c51a607\",\n\t\t\"gasLimit\": 10485760,\n\t\t\"difficulty\": 1,\n\t\t\"nonce\": \"0x0000000000000000\",\n\t\t\"extraData\": \"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n\t},\n\t\"hardforks\": [\n\t\t{\n\t\t\t\"name\": \"chainstart\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"homestead\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"tangerineWhistle\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"spuriousDragon\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"byzantium\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constantinople\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"petersburg\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xa3f5ab08\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"istanbul\",\n\t\t\t\"block\": 1561651,\n\t\t\t\"forkHash\": \"0xc25efa5c\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"berlin\",\n\t\t\t\"block\": 4460644,\n\t\t\t\"forkHash\": \"0x757a1c47\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"london\",\n\t\t\t\"block\": 5062605,\n\t\t\t\"forkHash\": \"0xb8c6299d\"\n\t\t},\n\t\t{\n\t\t\t\"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818\",\n\t\t\t\"name\": \"merge\",\n\t\t\t\"ttd\": \"10790000\",\n\t\t\t\"block\": 7382819,\n\t\t\t\"forkHash\": \"0xb8c6299d\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"mergeForkIdTransition\",\n\t\t\t\"block\": null,\n\t\t\t\"forkHash\": null\n\t\t},\n\t\t{\n\t\t\t\"name\": \"shanghai\",\n\t\t\t\"block\": null,\n\t\t\t\"forkHash\": null\n\t\t}\n\t],\n\t\"bootstrapNodes\": [],\n\t\"dnsNetworks\": [\n\t\t\"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net\"\n\t]\n}\n ;","export default {\n\t\"name\": \"mainnet\",\n\t\"chainId\": 1,\n\t\"networkId\": 1,\n\t\"defaultHardfork\": \"merge\",\n\t\"consensus\": {\n\t\t\"type\": \"pow\",\n\t\t\"algorithm\": \"ethash\",\n\t\t\"ethash\": {}\n\t},\n\t\"comment\": \"The Ethereum main chain\",\n\t\"url\": \"https://ethstats.net/\",\n\t\"genesis\": {\n\t\t\"gasLimit\": 5000,\n\t\t\"difficulty\": 17179869184,\n\t\t\"nonce\": \"0x0000000000000042\",\n\t\t\"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\"\n\t},\n\t\"hardforks\": [\n\t\t{\n\t\t\t\"name\": \"chainstart\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfc64ec04\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"homestead\",\n\t\t\t\"block\": 1150000,\n\t\t\t\"forkHash\": \"0x97c2c34c\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"dao\",\n\t\t\t\"block\": 1920000,\n\t\t\t\"forkHash\": \"0x91d1f948\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"tangerineWhistle\",\n\t\t\t\"block\": 2463000,\n\t\t\t\"forkHash\": \"0x7a64da13\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"spuriousDragon\",\n\t\t\t\"block\": 2675000,\n\t\t\t\"forkHash\": \"0x3edd5b10\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"byzantium\",\n\t\t\t\"block\": 4370000,\n\t\t\t\"forkHash\": \"0xa00bc324\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constantinople\",\n\t\t\t\"block\": 7280000,\n\t\t\t\"forkHash\": \"0x668db0af\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"petersburg\",\n\t\t\t\"block\": 7280000,\n\t\t\t\"forkHash\": \"0x668db0af\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"istanbul\",\n\t\t\t\"block\": 9069000,\n\t\t\t\"forkHash\": \"0x879d6e30\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"muirGlacier\",\n\t\t\t\"block\": 9200000,\n\t\t\t\"forkHash\": \"0xe029e991\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"berlin\",\n\t\t\t\"block\": 12244000,\n\t\t\t\"forkHash\": \"0x0eb440f6\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"london\",\n\t\t\t\"block\": 12965000,\n\t\t\t\"forkHash\": \"0xb715077d\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"arrowGlacier\",\n\t\t\t\"block\": 13773000,\n\t\t\t\"forkHash\": \"0x20c327fc\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"grayGlacier\",\n\t\t\t\"block\": 15050000,\n\t\t\t\"forkHash\": \"0xf0afd0e3\"\n\t\t},\n\t\t{\n\t\t\t\"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393\",\n\t\t\t\"name\": \"merge\",\n\t\t\t\"ttd\": \"58750000000000000000000\",\n\t\t\t\"block\": 15537394,\n\t\t\t\"forkHash\": \"0xf0afd0e3\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"mergeForkIdTransition\",\n\t\t\t\"block\": null,\n\t\t\t\"forkHash\": null\n\t\t},\n\t\t{\n\t\t\t\"name\": \"shanghai\",\n\t\t\t\"block\": null,\n\t\t\t\"forkHash\": null\n\t\t}\n\t],\n\t\"bootstrapNodes\": [],\n\t\"dnsNetworks\": [\n\t\t\"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net\"\n\t]\n}\n ;","export default {\n\t\"name\": \"sepolia\",\n\t\"chainId\": 11155111,\n\t\"networkId\": 11155111,\n\t\"defaultHardfork\": \"merge\",\n\t\"consensus\": {\n\t\t\"type\": \"pow\",\n\t\t\"algorithm\": \"ethash\",\n\t\t\"ethash\": {}\n\t},\n\t\"comment\": \"PoW test network to replace Ropsten\",\n\t\"url\": \"https://github.com/ethereum/go-ethereum/pull/23730\",\n\t\"genesis\": {\n\t\t\"timestamp\": \"0x6159af19\",\n\t\t\"gasLimit\": 30000000,\n\t\t\"difficulty\": 131072,\n\t\t\"nonce\": \"0x0000000000000000\",\n\t\t\"extraData\": \"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521\"\n\t},\n\t\"hardforks\": [\n\t\t{\n\t\t\t\"name\": \"chainstart\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"homestead\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"tangerineWhistle\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"spuriousDragon\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"byzantium\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constantinople\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"petersburg\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"istanbul\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"muirGlacier\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"berlin\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"london\",\n\t\t\t\"block\": 0,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408\",\n\t\t\t\"name\": \"merge\",\n\t\t\t\"ttd\": \"17000000000000000\",\n\t\t\t\"block\": 1450409,\n\t\t\t\"forkHash\": \"0xfe3366e7\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"mergeForkIdTransition\",\n\t\t\t\"block\": 1735371,\n\t\t\t\"forkHash\": \"0xb96cbd13\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"shanghai\",\n\t\t\t\"block\": null,\n\t\t\t\"timestamp\": \"1677557088\",\n\t\t\t\"forkHash\": \"0xf7f9bc08\"\n\t\t}\n\t],\n\t\"bootstrapNodes\": [],\n\t\"dnsNetworks\": [\n\t\t\"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net\"\n\t]\n}\n ;","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport pkg from 'crc-32';\nimport { EventEmitter, bytesToHex, hexToBytes, uint8ArrayConcat } from 'web3-utils';\nimport type { Numbers } from 'web3-types';\nimport { TypeOutput } from './types.js';\nimport { intToUint8Array, toType, parseGethGenesis } from './utils.js';\nimport goerli from './chains/goerli.js';\nimport mainnet from './chains/mainnet.js';\nimport sepolia from './chains/sepolia.js';\nimport { EIPs } from './eips/index.js';\nimport type { ConsensusAlgorithm, ConsensusType } from './enums.js';\nimport { Chain, CustomChain, Hardfork } from './enums.js';\nimport { hardforks as HARDFORK_SPECS } from './hardforks/index.js';\n\nimport type {\n\tBootstrapNodeConfig,\n\tCasperConfig,\n\tChainConfig,\n\tChainName,\n\tChainsConfig,\n\tCliqueConfig,\n\tCommonOpts,\n\tCustomCommonOpts,\n\tEthashConfig,\n\tGenesisBlockConfig,\n\tGethConfigOpts,\n\tHardforkConfig,\n} from './types.js';\n\nconst { buf: crc32Uint8Array } = pkg;\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS;\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys];\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n\tpublic readonly DEFAULT_HARDFORK: string | Hardfork;\n\n\tprivate _chainParams: ChainConfig;\n\tprivate _hardfork: string | Hardfork;\n\tprivate _eips: number[] = [];\n\tprivate readonly _customChains: ChainConfig[];\n\n\tprivate readonly HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][];\n\n\t/**\n\t * Creates a {@link Common} object for a custom chain, based on a standard one.\n\t *\n\t * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n\t * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n\t *\n\t * ```javascript\n\t * Common.custom({chainId: 123})\n\t * ```\n\t *\n\t * There are also selected supported custom chains which can be initialized by using one of the\n\t * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n\t *\n\t * ```javascript\n\t * Common.custom(CustomChains.MaticMumbai)\n\t * ```\n\t *\n\t * Note that these supported custom chains only provide some base parameters (usually the chain and\n\t * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n\t * the `web3-utils/tx` library to a Layer-2 chain).\n\t *\n\t * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n\t * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n\t */\n\tpublic static custom(\n\t\tchainParamsOrName: Partial<ChainConfig> | CustomChain,\n\t\topts: CustomCommonOpts = {},\n\t): Common {\n\t\tconst baseChain = opts.baseChain ?? 'mainnet';\n\t\tconst standardChainParams = { ...Common._getChainParams(baseChain) };\n\t\tstandardChainParams.name = 'custom-chain';\n\n\t\tif (typeof chainParamsOrName !== 'string') {\n\t\t\treturn new Common({\n\t\t\t\tchain: {\n\t\t\t\t\t...standardChainParams,\n\t\t\t\t\t...chainParamsOrName,\n\t\t\t\t},\n\t\t\t\t...opts,\n\t\t\t});\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.PolygonMainnet) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.PolygonMainnet,\n\t\t\t\t\tchainId: 137,\n\t\t\t\t\tnetworkId: 137,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.PolygonMumbai) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.PolygonMumbai,\n\t\t\t\t\tchainId: 80001,\n\t\t\t\t\tnetworkId: 80001,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.ArbitrumRinkebyTestnet,\n\t\t\t\t\tchainId: 421611,\n\t\t\t\t\tnetworkId: 421611,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.ArbitrumOne) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.ArbitrumOne,\n\t\t\t\t\tchainId: 42161,\n\t\t\t\t\tnetworkId: 42161,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.xDaiChain) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.xDaiChain,\n\t\t\t\t\tchainId: 100,\n\t\t\t\t\tnetworkId: 100,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\n\t\tif (chainParamsOrName === CustomChain.OptimisticKovan) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.OptimisticKovan,\n\t\t\t\t\tchainId: 69,\n\t\t\t\t\tnetworkId: 69,\n\t\t\t\t},\n\t\t\t\t// Optimism has not implemented the London hardfork yet (targeting Q1.22)\n\t\t\t\t{ hardfork: Hardfork.Berlin, ...opts },\n\t\t\t);\n\t\t}\n\n\t\tif (chainParamsOrName === CustomChain.OptimisticEthereum) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.OptimisticEthereum,\n\t\t\t\t\tchainId: 10,\n\t\t\t\t\tnetworkId: 10,\n\t\t\t\t},\n\t\t\t\t// Optimism has not implemented the London hardfork yet (targeting Q1.22)\n\t\t\t\t{ hardfork: Hardfork.Berlin, ...opts },\n\t\t\t);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\tthrow new Error(`Custom chain ${chainParamsOrName} not supported`);\n\t}\n\n\t/**\n\t * Static method to load and set common from a geth genesis json\n\t * @param genesisJson json of geth configuration\n\t * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n\t * @returns Common\n\t */\n\tpublic static fromGethGenesis(\n\t\tgenesisJson: any,\n\t\t{ chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts,\n\t): Common {\n\t\tconst genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge);\n\t\tconst common = new Common({\n\t\t\tchain: genesisParams.name ?? 'custom',\n\t\t\tcustomChains: [genesisParams],\n\t\t\teips,\n\t\t\thardfork: hardfork ?? genesisParams.hardfork,\n\t\t});\n\t\tif (genesisHash !== undefined) {\n\t\t\tcommon.setForkHashes(genesisHash);\n\t\t}\n\t\treturn common;\n\t}\n\n\t/**\n\t * Static method to determine if a {@link chainId} is supported as a standard chain\n\t * @param chainId bigint id (`1`) of a standard chain\n\t * @returns boolean\n\t */\n\tpublic static isSupportedChainId(chainId: bigint): boolean {\n\t\tconst initializedChains = this._getInitializedChains();\n\t\treturn Boolean((initializedChains.names as ChainName)[chainId.toString()]);\n\t}\n\n\tprivate static _getChainParams(\n\t\t_chain: string | number | Chain | bigint,\n\t\tcustomChains?: ChainConfig[],\n\t): ChainConfig {\n\t\tlet chain = _chain;\n\t\tconst initializedChains = this._getInitializedChains(customChains);\n\t\tif (typeof chain === 'number' || typeof chain === 'bigint') {\n\t\t\tchain = chain.toString();\n\n\t\t\tif ((initializedChains.names as ChainName)[chain]) {\n\t\t\t\tconst name: string = (initializedChains.names as ChainName)[chain];\n\t\t\t\treturn initializedChains[name] as ChainConfig;\n\t\t\t}\n\n\t\t\tthrow new Error(`Chain with ID ${chain} not supported`);\n\t\t}\n\n\t\tif (initializedChains[chain] !== undefined) {\n\t\t\treturn initializedChains[chain] as ChainConfig;\n\t\t}\n\n\t\tthrow new Error(`Chain with name ${chain} not supported`);\n\t}\n\n\tpublic constructor(opts: CommonOpts) {\n\t\tsuper();\n\t\tthis._customChains = opts.customChains ?? [];\n\t\tthis._chainParams = this.setChain(opts.chain);\n\t\tthis.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge;\n\t\t// Assign hardfork changes in the sequence of the applied hardforks\n\t\tthis.HARDFORK_CHANGES = this.hardforks().map(hf => [\n\t\t\thf.name as HardforkSpecKeys,\n\t\t\tHARDFORK_SPECS[hf.name as HardforkSpecKeys],\n\t\t]);\n\t\tthis._hardfork = this.DEFAULT_HARDFORK;\n\t\tif (opts.hardfork !== undefined) {\n\t\t\tthis.setHardfork(opts.hardfork);\n\t\t}\n\t\tif (opts.eips) {\n\t\t\tthis.setEIPs(opts.eips);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the chain\n\t * @param chain String ('mainnet') or Number (1) chain representation.\n\t *              Or, a Dictionary of chain parameters for a private network.\n\t * @returns The dictionary with parameters set as chain\n\t */\n\tpublic setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n\t\tif (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n\t\t\tthis._chainParams = Common._getChainParams(chain, this._customChains);\n\t\t} else if (typeof chain === 'object') {\n\t\t\tif (this._customChains.length > 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Chain must be a string, number, or bigint when initialized with customChains passed in',\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\t\t\tfor (const param of required) {\n\t\t\t\tif (!(param in chain)) {\n\t\t\t\t\tthrow new Error(`Missing required chain parameter: ${param}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._chainParams = chain as ChainConfig;\n\t\t} else {\n\t\t\tthrow new Error('Wrong input format');\n\t\t}\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tif (hf.block === undefined) {\n\t\t\t\tthrow new Error(`Hardfork cannot have undefined block number`);\n\t\t\t}\n\t\t}\n\t\treturn this._chainParams;\n\t}\n\n\t/**\n\t * Sets the hardfork to get params for\n\t * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n\t */\n\tpublic setHardfork(hardfork: string | Hardfork): void {\n\t\tlet existing = false;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif (hfChanges[0] === hardfork) {\n\t\t\t\tif (this._hardfork !== hardfork) {\n\t\t\t\t\tthis._hardfork = hardfork;\n\t\t\t\t\tthis.emit('hardforkChanged', hardfork);\n\t\t\t\t}\n\t\t\t\texisting = true;\n\t\t\t}\n\t\t}\n\t\tif (!existing) {\n\t\t\tthrow new Error(`Hardfork with name ${hardfork} not supported`);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the hardfork based on the block number or an optional\n\t * total difficulty (Merge HF) provided.\n\t *\n\t * An optional TD takes precedence in case the corresponding HF block\n\t * is set to `null` or otherwise needs to match (if not an error\n\t * will be thrown).\n\t *\n\t * @param blockNumber\n\t * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n\t * @param timestamp: timestamp in seconds at which block was/is to be minted\n\t * @returns The name of the HF\n\t */\n\tpublic getHardforkByBlockNumber(\n\t\t_blockNumber: Numbers,\n\t\t_td?: Numbers,\n\t\t_timestamp?: Numbers,\n\t): string {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst td = toType(_td, TypeOutput.BigInt);\n\t\tconst timestamp = toType(_timestamp, TypeOutput.Number);\n\n\t\t// Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n\t\tconst hfs = this.hardforks().filter(\n\t\t\thf =>\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thf.block !== null ||\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.ttd !== null && hf.ttd !== undefined) ||\n\t\t\t\thf.timestamp !== undefined,\n\t\t);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tconst mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\tconst doubleTTDHF = hfs\n\t\t\t.slice(mergeIndex + 1)\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\tif (doubleTTDHF >= 0) {\n\t\t\tthrow Error(`More than one merge hardforks found with ttd specified`);\n\t\t}\n\n\t\t// Find the first hardfork that has a block number greater than `blockNumber`\n\t\t// (skips the merge hardfork since it cannot have a block number specified).\n\t\t// If timestamp is not provided, it also skips timestamps hardforks to continue\n\t\t// discovering/checking number hardforks.\n\t\tlet hfIndex = hfs.findIndex(\n\t\t\thf =>\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.block !== null && hf.block > blockNumber) ||\n\t\t\t\t(timestamp !== undefined && Number(hf.timestamp) > timestamp),\n\t\t);\n\n\t\tif (hfIndex === -1) {\n\t\t\t// all hardforks apply, set hfIndex to the last one as that's the candidate\n\t\t\thfIndex = hfs.length;\n\t\t} else if (hfIndex === 0) {\n\t\t\t// cannot have a case where a block number is before all applied hardforks\n\t\t\t// since the chain has to start with a hardfork\n\t\t\tthrow Error('Must have at least one hardfork at block 0');\n\t\t}\n\n\t\t// If timestamp is not provided, we need to rollback to the last hf with block or ttd\n\t\tif (timestamp === undefined) {\n\t\t\tconst stepBack = hfs\n\t\t\t\t.slice(0, hfIndex)\n\t\t\t\t.reverse()\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t.findIndex(hf => hf.block !== null || hf.ttd !== undefined);\n\t\t\thfIndex -= stepBack;\n\t\t}\n\t\t// Move hfIndex one back to arrive at candidate hardfork\n\t\thfIndex -= 1;\n\n\t\t// If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n\t\t// hardforks. so it will now be needed to rollback\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n\t\t\t// We're on the merge hardfork.  Let's check the TTD\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n\t\t\t\t// Merge ttd greater than current td so we're on hardfork before merge\n\t\t\t\thfIndex -= 1;\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t} else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n\t\t\tif (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Maximum HF determined by total difficulty is lower than the block number HF',\n\t\t\t\t);\n\t\t\t} else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'HF determined by block number is lower than the minimum total difficulty HF',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst hfStartIndex = hfIndex;\n\t\t// Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n\t\t// This won't anyway be the case with Merge hfs\n\t\tfor (; hfIndex < hfs.length - 1; hfIndex += 1) {\n\t\t\t// break out if hfIndex + 1 is not scheduled at hfIndex\n\t\t\tif (\n\t\t\t\thfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n\t\t\t\thfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (timestamp) {\n\t\t\tconst minTimeStamp = hfs\n\t\t\t\t.slice(0, hfStartIndex)\n\t\t\t\t.reduce(\n\t\t\t\t\t(acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc),\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\tif (minTimeStamp > timestamp) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t`Maximum HF determined by timestamp is lower than the block number/ttd HF`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst maxTimeStamp = hfs\n\t\t\t\t.slice(hfIndex + 1)\n\t\t\t\t.reduce(\n\t\t\t\t\t(acc: number, hf: HardforkConfig) =>\n\t\t\t\t\t\tMath.min(Number(hf.timestamp ?? timestamp), acc),\n\t\t\t\t\ttimestamp,\n\t\t\t\t);\n\t\t\tif (maxTimeStamp < timestamp) {\n\t\t\t\tthrow Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n\t\t\t}\n\t\t}\n\t\tconst hardfork = hfs[hfIndex];\n\t\treturn hardfork.name;\n\t}\n\n\t/**\n\t * Sets a new hardfork based on the block number or an optional\n\t * total difficulty (Merge HF) provided.\n\t *\n\t * An optional TD takes precedence in case the corresponding HF block\n\t * is set to `null` or otherwise needs to match (if not an error\n\t * will be thrown).\n\t *\n\t * @param blockNumber\n\t * @param td\n\t * @param timestamp\n\t * @returns The name of the HF set\n\t */\n\tpublic setHardforkByBlockNumber(\n\t\tblockNumber: Numbers,\n\t\ttd?: Numbers,\n\t\ttimestamp?: Numbers,\n\t): string {\n\t\tconst hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n\t\tthis.setHardfork(hardfork);\n\t\treturn hardfork;\n\t}\n\n\t/**\n\t * Internal helper function, returns the params for the given hardfork for the chain set\n\t * @param hardfork Hardfork name\n\t * @returns Dictionary with hardfork params or null if hardfork not on chain\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n\t\tconst hfs = this.hardforks();\n\t\tfor (const hf of hfs) {\n\t\t\tif (hf.name === hardfork) return hf;\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the active EIPs\n\t * @param eips\n\t */\n\tpublic setEIPs(eips: number[] = []) {\n\t\tfor (const eip of eips) {\n\t\t\tif (!(eip in EIPs)) {\n\t\t\t\tthrow new Error(`${eip} not supported`);\n\t\t\t}\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n\t\t\tconst minHF = this.gteHardfork(EIPs[eip].minimumHardfork);\n\t\t\tif (!minHF) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t`${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tif (EIPs[eip].requiredEIPs !== undefined) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tfor (const elem of EIPs[eip].requiredEIPs) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t\t\tif (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t\t\t`${eip} requires EIP ${elem}, but is not included in the EIP list`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._eips = eips;\n\t}\n\n\t/**\n\t * Returns a parameter for the current chain setup\n\t *\n\t * If the parameter is present in an EIP, the EIP always takes precedence.\n\t * Otherwise the parameter if taken from the latest applied HF with\n\t * a change on the respective parameter.\n\t *\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic param(topic: string, name: string): bigint {\n\t\t// TODO: consider the case that different active EIPs\n\t\t// can change the same parameter\n\t\tlet value;\n\t\tfor (const eip of this._eips) {\n\t\t\tvalue = this.paramByEIP(topic, name, eip);\n\t\t\tif (value !== undefined) return value;\n\t\t}\n\t\treturn this.paramByHardfork(topic, name, this._hardfork);\n\t}\n\n\t/**\n\t * Returns the parameter corresponding to a hardfork\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @param hardfork Hardfork name\n\t * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tlet value = null;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// EIP-referencing HF file (e.g. berlin.json)\n\t\t\tif ('eips' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tconst hfEIPs = hfChanges[1].eips;\n\t\t\t\tfor (const eip of hfEIPs) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t\t\tconst valueEIP = this.paramByEIP(topic, name, eip);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tvalue = typeof valueEIP === 'bigint' ? valueEIP : value;\n\t\t\t\t}\n\t\t\t\t// Parameter-inlining HF file (e.g. istanbul.json)\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif (hfChanges[1][topic] === undefined) {\n\t\t\t\t\tthrow new Error(`Topic ${topic} not defined`);\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif (hfChanges[1][topic][name] !== undefined) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tvalue = hfChanges[1][topic][name].v;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn BigInt(value ?? 0);\n\t}\n\n\t/**\n\t * Returns a parameter corresponding to an EIP\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @param eip Number of the EIP\n\t * @returns The value requested or `undefined` if not found\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n\t\tif (!(eip in EIPs)) {\n\t\t\tthrow new Error(`${eip} not supported`);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst eipParams = EIPs[eip];\n\t\tif (!(topic in eipParams)) {\n\t\t\tthrow new Error(`Topic ${topic} not defined`);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tif (eipParams[topic][name] === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\tconst value = eipParams[topic][name].v;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn BigInt(value);\n\t}\n\n\t/**\n\t * Returns a parameter for the hardfork active on block number or\n\t * optional provided total difficulty (Merge HF)\n\t * @param topic Parameter topic\n\t * @param name Parameter name\n\t * @param blockNumber Block number\n\t * @param td Total difficulty\n\t *    * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic paramByBlock(\n\t\ttopic: string,\n\t\tname: string,\n\t\tblockNumber: Numbers,\n\t\ttd?: Numbers,\n\t\ttimestamp?: Numbers,\n\t): bigint {\n\t\tconst hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n\t\treturn this.paramByHardfork(topic, name, hardfork);\n\t}\n\n\t/**\n\t * Checks if an EIP is activated by either being included in the EIPs\n\t * manually passed in with the {@link CommonOpts.eips} or in a\n\t * hardfork currently being active\n\t *\n\t * Note: this method only works for EIPs being supported\n\t * by the {@link CommonOpts.eips} constructor option\n\t * @param eip\n\t */\n\tpublic isActivatedEIP(eip: number): boolean {\n\t\tif (this.eips().includes(eip)) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tconst hf = hfChanges[1];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n\t\t\tif (this.gteHardfork(hf.name) && 'eips' in hf) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif ((hf.eips as number[]).includes(eip)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if set or provided hardfork is active on block number\n\t * @param hardfork Hardfork name or null (for HF set)\n\t * @param blockNumber\n\t * @returns True if HF is active on block number\n\t */\n\tpublic hardforkIsActiveOnBlock(\n\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t_hardfork: string | Hardfork | null,\n\t\t_blockNumber: Numbers,\n\t): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst hfBlock = this.hardforkBlock(hardfork);\n\t\tif (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Alias to hardforkIsActiveOnBlock when hardfork is set\n\t * @param blockNumber\n\t * @returns True if HF is active on block number\n\t */\n\tpublic activeOnBlock(blockNumber: Numbers): boolean {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn this.hardforkIsActiveOnBlock(null, blockNumber);\n\t}\n\n\t/**\n\t * Sequence based check if given or set HF1 is greater than or equal HF2\n\t * @param hardfork1 Hardfork name or null (if set)\n\t * @param hardfork2 Hardfork name\n\t * @param opts Hardfork options\n\t * @returns True if HF1 gte HF2\n\t */\n\tpublic hardforkGteHardfork(\n\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t_hardfork1: string | Hardfork | null,\n\t\thardfork2: string | Hardfork,\n\t): boolean {\n\t\tconst hardfork1 = _hardfork1 ?? this._hardfork;\n\t\tconst hardforks = this.hardforks();\n\n\t\tlet posHf1 = -1;\n\t\tlet posHf2 = -1;\n\t\tlet index = 0;\n\t\tfor (const hf of hardforks) {\n\t\t\tif (hf.name === hardfork1) posHf1 = index;\n\t\t\tif (hf.name === hardfork2) posHf2 = index;\n\t\t\tindex += 1;\n\t\t}\n\t\treturn posHf1 >= posHf2 && posHf2 !== -1;\n\t}\n\n\t/**\n\t * Alias to hardforkGteHardfork when hardfork is set\n\t * @param hardfork Hardfork name\n\t * @returns True if hardfork set is greater than hardfork provided\n\t */\n\tpublic gteHardfork(hardfork: string | Hardfork): boolean {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn this.hardforkGteHardfork(null, hardfork);\n\t}\n\n\t/**\n\t * Returns the hardfork change block for hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block number or null if unscheduled\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkBlock(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst block = this._getHardfork(hardfork)?.block;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (block === undefined || block === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(block);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkTimestamp(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst timestamp = this._getHardfork(hardfork)?.timestamp;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (timestamp === undefined || timestamp === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(timestamp);\n\t}\n\n\t/**\n\t * Returns the hardfork change block for eip\n\t * @param eip EIP number\n\t * @returns Block number or null if unscheduled\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic eipBlock(eip: number): bigint | null {\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tconst hf = hfChanges[1];\n\t\t\tif ('eips' in hf) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\t\t\t\tif (hf.eips.includes(eip)) {\n\t\t\t\t\treturn this.hardforkBlock(\n\t\t\t\t\t\ttypeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Total difficulty or null if no set\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkTTD(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst ttd = this._getHardfork(hardfork)?.ttd;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (ttd === undefined || ttd === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(ttd);\n\t}\n\n\t/**\n\t * True if block number provided is the hardfork (given or set) change block\n\t * @param blockNumber Number of the block to check\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns True if blockNumber is HF block\n\t * @deprecated\n\t */\n\tpublic isHardforkBlock(_blockNumber: Numbers, _hardfork?: string | Hardfork): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst block = this.hardforkBlock(hardfork);\n\t\treturn typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;\n\t}\n\n\t/**\n\t * Returns the change block for the next hardfork after the hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block timestamp, number or null if not available\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic nextHardforkBlockOrTimestamp(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst hfs = this.hardforks();\n\t\tlet hfIndex = hfs.findIndex(hf => hf.name === hardfork);\n\t\t// If the current hardfork is merge, go one behind as merge hf is not part of these\n\t\t// calcs even if the merge hf block is set\n\t\tif (hardfork === Hardfork.Merge) {\n\t\t\thfIndex -= 1;\n\t\t}\n\t\t// Hardfork not found\n\t\tif (hfIndex < 0) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\tlet currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block;\n\t\tcurrHfTimeOrBlock =\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tcurrHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n\t\t\t\t? Number(currHfTimeOrBlock)\n\t\t\t\t: // eslint-disable-next-line no-null/no-null\n\t\t\t\t  null;\n\n\t\tconst nextHf = hfs.slice(hfIndex + 1).find(hf => {\n\t\t\tlet hfTimeOrBlock = hf.timestamp ?? hf.block;\n\t\t\thfTimeOrBlock =\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thfTimeOrBlock !== null && hfTimeOrBlock !== undefined\n\t\t\t\t\t? Number(hfTimeOrBlock)\n\t\t\t\t\t: // eslint-disable-next-line no-null/no-null\n\t\t\t\t\t  null;\n\t\t\treturn (\n\t\t\t\thf.name !== Hardfork.Merge &&\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thfTimeOrBlock !== null &&\n\t\t\t\thfTimeOrBlock !== undefined &&\n\t\t\t\thfTimeOrBlock !== currHfTimeOrBlock\n\t\t\t);\n\t\t});\n\t\t// If no next hf found with valid block or timestamp return null\n\t\tif (nextHf === undefined) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextHfBlock = nextHf.timestamp ?? nextHf.block;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (nextHfBlock === null || nextHfBlock === undefined) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\treturn BigInt(nextHfBlock);\n\t}\n\n\t/**\n\t * Returns the change block for the next hardfork after the hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block number or null if not available\n\t * @deprecated\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic nextHardforkBlock(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tlet hfBlock = this.hardforkBlock(hardfork);\n\t\t// If this is a merge hardfork with block not set, then we fallback to previous hardfork\n\t\t// to find the nextHardforkBlock\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfBlock === null && hardfork === Hardfork.Merge) {\n\t\t\tconst hfs = this.hardforks();\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tconst mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\t\tif (mergeIndex < 0) {\n\t\t\t\tthrow Error(`Merge hardfork should have been found`);\n\t\t\t}\n\t\t\thfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfBlock === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\t// Next fork block number or null if none available\n\t\t// Logic: if accumulator is still null and on the first occurrence of\n\t\t// a block greater than the current hfBlock set the accumulator,\n\t\t// pass on the accumulator as the final result from this time on\n\t\t// eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n\t\tconst nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n\t\t\t// We need to ignore the merge block in our next hardfork calc\n\t\t\tconst block = BigInt(\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block,\n\t\t\t);\n\t\t\t// Typescript can't seem to follow that the hfBlock is not null at this point\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn block > hfBlock! && acc === null ? block : acc;\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t}, null);\n\t\treturn nextHfBlock;\n\t}\n\n\t/**\n\t * True if block number provided is the hardfork change block following the hardfork given or set\n\t * @param blockNumber Number of the block to check\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns True if blockNumber is HF block\n\t * @deprecated\n\t */\n\tpublic isNextHardforkBlock(_blockNumber: Numbers, _hardfork?: string | Hardfork): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\t// eslint-disable-next-line deprecation/deprecation\n\t\tconst nextHardforkBlock = this.nextHardforkBlock(hardfork);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n\t}\n\n\t/**\n\t * Internal helper function to calculate a fork hash\n\t * @param hardfork Hardfork name\n\t * @param genesisHash Genesis block hash of the chain\n\t * @returns Fork hash as hex string\n\t */\n\tpublic _calcForkHash(hardfork: string | Hardfork, genesisHash: Uint8Array) {\n\t\tlet hfUint8Array = new Uint8Array();\n\t\tlet prevBlockOrTime = 0;\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tconst { block, timestamp, name } = hf;\n\t\t\t// Timestamp to be used for timestamp based hfs even if we may bundle\n\t\t\t// block number with them retrospectively\n\t\t\tlet blockOrTime = timestamp ?? block;\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tblockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n\n\t\t\t// Skip for chainstart (0), not applied HFs (null) and\n\t\t\t// when already applied on same blockOrTime HFs\n\t\t\t// and on the merge since forkhash doesn't change on merge hf\n\t\t\tif (\n\t\t\t\ttypeof blockOrTime === 'number' &&\n\t\t\t\tblockOrTime !== 0 &&\n\t\t\t\tblockOrTime !== prevBlockOrTime &&\n\t\t\t\tname !== Hardfork.Merge\n\t\t\t) {\n\t\t\t\tconst hfBlockUint8Array = hexToBytes(blockOrTime.toString(16).padStart(16, '0'));\n\t\t\t\thfUint8Array = uint8ArrayConcat(hfUint8Array, hfBlockUint8Array);\n\t\t\t\tprevBlockOrTime = blockOrTime;\n\t\t\t}\n\n\t\t\tif (hf.name === hardfork) break;\n\t\t}\n\t\tconst inputUint8Array = uint8ArrayConcat(genesisHash, hfUint8Array);\n\n\t\t// CRC32 delivers result as signed (negative) 32-bit integer,\n\t\t// convert to hex string\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst forkhash = bytesToHex(intToUint8Array(crc32Uint8Array(inputUint8Array) >>> 0));\n\t\treturn forkhash;\n\t}\n\n\t/**\n\t * Returns an eth/64 compliant fork hash (EIP-2124)\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n\t */\n\tpublic forkHash(_hardfork?: string | Hardfork, genesisHash?: Uint8Array): string {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst data = this._getHardfork(hardfork);\n\t\tif (\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tdata === null ||\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t(data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n\t\t) {\n\t\t\tconst msg = 'No fork hash calculation possible for future hardfork';\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (data?.forkHash !== null && data?.forkHash !== undefined) {\n\t\t\treturn data.forkHash;\n\t\t}\n\t\tif (!genesisHash) throw new Error('genesisHash required for forkHash calculation');\n\t\treturn this._calcForkHash(hardfork, genesisHash);\n\t}\n\n\t/**\n\t *\n\t * @param forkHash Fork hash as a hex string\n\t * @returns Array with hardfork data (name, block, forkHash)\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkForForkHash(forkHash: string): HardforkConfig | null {\n\t\tconst resArray = this.hardforks().filter((hf: HardforkConfig) => hf.forkHash === forkHash);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n\t}\n\n\t/**\n\t * Sets any missing forkHashes on the passed-in {@link Common} instance\n\t * @param common The {@link Common} to set the forkHashes for\n\t * @param genesisHash The genesis block hash\n\t */\n\tpublic setForkHashes(genesisHash: Uint8Array) {\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tconst blockOrTime = hf.timestamp ?? hf.block;\n\t\t\tif (\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.forkHash === null || hf.forkHash === undefined) &&\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t((blockOrTime !== null && blockOrTime !== undefined) ||\n\t\t\t\t\ttypeof hf.ttd !== 'undefined')\n\t\t\t) {\n\t\t\t\thf.forkHash = this.forkHash(hf.name, genesisHash);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Genesis parameters of the current chain\n\t * @returns Genesis dictionary\n\t */\n\tpublic genesis(): GenesisBlockConfig {\n\t\treturn this._chainParams.genesis;\n\t}\n\n\t/**\n\t * Returns the hardforks for current chain\n\t * @returns {Array} Array with arrays of hardforks\n\t */\n\tpublic hardforks(): HardforkConfig[] {\n\t\treturn this._chainParams.hardforks;\n\t}\n\n\t/**\n\t * Returns bootstrap nodes for the current chain\n\t * @returns {Dictionary} Dict with bootstrap nodes\n\t */\n\tpublic bootstrapNodes(): BootstrapNodeConfig[] | undefined {\n\t\treturn this._chainParams.bootstrapNodes;\n\t}\n\n\t/**\n\t * Returns DNS networks for the current chain\n\t * @returns {String[]} Array of DNS ENR urls\n\t */\n\tpublic dnsNetworks(): string[] {\n\t\treturn this._chainParams.dnsNetworks!;\n\t}\n\n\t/**\n\t * Returns the hardfork set\n\t * @returns Hardfork name\n\t */\n\tpublic hardfork(): string | Hardfork {\n\t\treturn this._hardfork;\n\t}\n\n\t/**\n\t * Returns the Id of current chain\n\t * @returns chain Id\n\t */\n\tpublic chainId(): bigint {\n\t\treturn BigInt(this._chainParams.chainId);\n\t}\n\n\t/**\n\t * Returns the name of current chain\n\t * @returns chain name (lower case)\n\t */\n\tpublic chainName(): string {\n\t\treturn this._chainParams.name;\n\t}\n\n\t/**\n\t * Returns the Id of current network\n\t * @returns network Id\n\t */\n\tpublic networkId(): bigint {\n\t\treturn BigInt(this._chainParams.networkId);\n\t}\n\n\t/**\n\t * Returns the active EIPs\n\t * @returns List of EIPs\n\t */\n\tpublic eips(): number[] {\n\t\treturn this._eips;\n\t}\n\n\t/**\n\t * Returns the consensus type of the network\n\t * Possible values: \"pow\"|\"poa\"|\"pos\"\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusType(): string | ConsensusType {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus.type;\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value ?? this._chainParams.consensus.type;\n\t}\n\n\t/**\n\t * Returns the concrete consensus implementation\n\t * algorithm or protocol for the network\n\t * e.g. \"ethash\" for \"pow\" consensus type,\n\t * \"clique\" for \"poa\" consensus type or\n\t * \"casper\" for \"pos\" consensus type.\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusAlgorithm(): string | ConsensusAlgorithm {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus.algorithm;\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value ?? (this._chainParams.consensus.algorithm as ConsensusAlgorithm);\n\t}\n\n\t/**\n\t * Returns a dictionary with consensus configuration\n\t * parameters based on the consensus algorithm\n\t *\n\t * Expected returns (parameters must be present in\n\t * the respective chain json files):\n\t *\n\t * ethash: empty object\n\t * clique: period, epoch\n\t * casper: empty object\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// The config parameter is named after the respective consensus algorithm\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn (\n\t\t\tvalue ??\n\t\t\tthis._chainParams.consensus[this.consensusAlgorithm() as ConsensusAlgorithm] ??\n\t\t\t{}\n\t\t);\n\t}\n\n\t/**\n\t * Returns a deep copy of this {@link Common} instance.\n\t */\n\tpublic copy(): Common {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n\t\tconst copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\t\tcopy.removeAllListeners();\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn copy;\n\t}\n\n\tpublic static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n\t\tconst names: ChainName = {};\n\t\tfor (const [name, id] of Object.entries(Chain)) {\n\t\t\tnames[id] = name.toLowerCase();\n\t\t}\n\t\tconst chains = { mainnet, goerli, sepolia } as ChainsConfig;\n\t\tif (customChains) {\n\t\t\tfor (const chain of customChains) {\n\t\t\t\tconst { name } = chain;\n\t\t\t\tnames[chain.chainId.toString()] = name;\n\t\t\t\tchains[name] = chain;\n\t\t\t}\n\t\t}\n\t\tchains.names = names;\n\t\treturn chains;\n\t}\n}\n","export default {\n\t\"name\": \"EIP-1153\",\n\t\"number\": 1153,\n\t\"comment\": \"Transient Storage\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-1153\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"tstore\": {\n\t\t\t\"v\": 100,\n\t\t\t\"d\": \"Base fee of the TSTORE opcode\"\n\t\t},\n\t\t\"tload\": {\n\t\t\t\"v\": 100,\n\t\t\t\"d\": \"Base fee of the TLOAD opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-1559\",\n\t\"number\": 1559,\n\t\"comment\": \"Fee market change for ETH 1.0 chain\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-1559\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"berlin\",\n\t\"requiredEIPs\": [2930],\n\t\"gasConfig\": {\n\t\t\"baseFeeMaxChangeDenominator\": {\n\t\t\t\"v\": 8,\n\t\t\t\"d\": \"Maximum base fee change denominator\"\n\t\t},\n\t\t\"elasticityMultiplier\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Maximum block gas target elasticity\"\n\t\t},\n\t\t\"initialBaseFee\": {\n\t\t\t\"v\": 1000000000,\n\t\t\t\"d\": \"Initial base fee on first EIP1559 block\"\n\t\t}\n\t},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2315\",\n\t\"number\": 2315,\n\t\"comment\": \"Simple subroutines for the EVM\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2315\",\n\t\"status\": \"Draft\",\n\t\"minimumHardfork\": \"istanbul\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"beginsub\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the BEGINSUB opcode\"\n\t\t},\n\t\t\"returnsub\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the RETURNSUB opcode\"\n\t\t},\n\t\t\"jumpsub\": {\n\t\t\t\"v\": 10,\n\t\t\t\"d\": \"Base fee of the JUMPSUB opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2537\",\n\t\"number\": 2537,\n\t\"comment\": \"BLS12-381 precompiles\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2537\",\n\t\"status\": \"Draft\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"Bls12381G1AddGas\": {\n\t\t\t\"v\": 600,\n\t\t\t\"d\": \"Gas cost of a single BLS12-381 G1 addition precompile-call\"\n\t\t},\n\t\t\"Bls12381G1MulGas\": {\n\t\t\t\"v\": 12000,\n\t\t\t\"d\": \"Gas cost of a single BLS12-381 G1 multiplication precompile-call\"\n\t\t},\n\t\t\"Bls12381G2AddGas\": {\n\t\t\t\"v\": 4500,\n\t\t\t\"d\": \"Gas cost of a single BLS12-381 G2 addition precompile-call\"\n\t\t},\n\t\t\"Bls12381G2MulGas\": {\n\t\t\t\"v\": 55000,\n\t\t\t\"d\": \"Gas cost of a single BLS12-381 G2 multiplication precompile-call\"\n\t\t},\n\t\t\"Bls12381PairingBaseGas\": {\n\t\t\t\"v\": 115000,\n\t\t\t\"d\": \"Base gas cost of BLS12-381 pairing check\"\n\t\t},\n\t\t\"Bls12381PairingPerPairGas\": {\n\t\t\t\"v\": 23000,\n\t\t\t\"d\": \"Per-pair gas cost of BLS12-381 pairing check\"\n\t\t},\n\t\t\"Bls12381MapG1Gas\": {\n\t\t\t\"v\": 5500,\n\t\t\t\"d\": \"Gas cost of BLS12-381 map field element to G1\"\n\t\t},\n\t\t\"Bls12381MapG2Gas\": {\n\t\t\t\"v\": 110000,\n\t\t\t\"d\": \"Gas cost of BLS12-381 map field element to G2\"\n\t\t},\n\t\t\"Bls12381MultiExpGasDiscount\": {\n\t\t\t\"v\": [\n\t\t\t\t[1, 1200],\n\t\t\t\t[2, 888],\n\t\t\t\t[3, 764],\n\t\t\t\t[4, 641],\n\t\t\t\t[5, 594],\n\t\t\t\t[6, 547],\n\t\t\t\t[7, 500],\n\t\t\t\t[8, 453],\n\t\t\t\t[9, 438],\n\t\t\t\t[10, 423],\n\t\t\t\t[11, 408],\n\t\t\t\t[12, 394],\n\t\t\t\t[13, 379],\n\t\t\t\t[14, 364],\n\t\t\t\t[15, 349],\n\t\t\t\t[16, 334],\n\t\t\t\t[17, 330],\n\t\t\t\t[18, 326],\n\t\t\t\t[19, 322],\n\t\t\t\t[20, 318],\n\t\t\t\t[21, 314],\n\t\t\t\t[22, 310],\n\t\t\t\t[23, 306],\n\t\t\t\t[24, 302],\n\t\t\t\t[25, 298],\n\t\t\t\t[26, 294],\n\t\t\t\t[27, 289],\n\t\t\t\t[28, 285],\n\t\t\t\t[29, 281],\n\t\t\t\t[30, 277],\n\t\t\t\t[31, 273],\n\t\t\t\t[32, 269],\n\t\t\t\t[33, 268],\n\t\t\t\t[34, 266],\n\t\t\t\t[35, 265],\n\t\t\t\t[36, 263],\n\t\t\t\t[37, 262],\n\t\t\t\t[38, 260],\n\t\t\t\t[39, 259],\n\t\t\t\t[40, 257],\n\t\t\t\t[41, 256],\n\t\t\t\t[42, 254],\n\t\t\t\t[43, 253],\n\t\t\t\t[44, 251],\n\t\t\t\t[45, 250],\n\t\t\t\t[46, 248],\n\t\t\t\t[47, 247],\n\t\t\t\t[48, 245],\n\t\t\t\t[49, 244],\n\t\t\t\t[50, 242],\n\t\t\t\t[51, 241],\n\t\t\t\t[52, 239],\n\t\t\t\t[53, 238],\n\t\t\t\t[54, 236],\n\t\t\t\t[55, 235],\n\t\t\t\t[56, 233],\n\t\t\t\t[57, 232],\n\t\t\t\t[58, 231],\n\t\t\t\t[59, 229],\n\t\t\t\t[60, 228],\n\t\t\t\t[61, 226],\n\t\t\t\t[62, 225],\n\t\t\t\t[63, 223],\n\t\t\t\t[64, 222],\n\t\t\t\t[65, 221],\n\t\t\t\t[66, 220],\n\t\t\t\t[67, 219],\n\t\t\t\t[68, 219],\n\t\t\t\t[69, 218],\n\t\t\t\t[70, 217],\n\t\t\t\t[71, 216],\n\t\t\t\t[72, 216],\n\t\t\t\t[73, 215],\n\t\t\t\t[74, 214],\n\t\t\t\t[75, 213],\n\t\t\t\t[76, 213],\n\t\t\t\t[77, 212],\n\t\t\t\t[78, 211],\n\t\t\t\t[79, 211],\n\t\t\t\t[80, 210],\n\t\t\t\t[81, 209],\n\t\t\t\t[82, 208],\n\t\t\t\t[83, 208],\n\t\t\t\t[84, 207],\n\t\t\t\t[85, 206],\n\t\t\t\t[86, 205],\n\t\t\t\t[87, 205],\n\t\t\t\t[88, 204],\n\t\t\t\t[89, 203],\n\t\t\t\t[90, 202],\n\t\t\t\t[91, 202],\n\t\t\t\t[92, 201],\n\t\t\t\t[93, 200],\n\t\t\t\t[94, 199],\n\t\t\t\t[95, 199],\n\t\t\t\t[96, 198],\n\t\t\t\t[97, 197],\n\t\t\t\t[98, 196],\n\t\t\t\t[99, 196],\n\t\t\t\t[100, 195],\n\t\t\t\t[101, 194],\n\t\t\t\t[102, 193],\n\t\t\t\t[103, 193],\n\t\t\t\t[104, 192],\n\t\t\t\t[105, 191],\n\t\t\t\t[106, 191],\n\t\t\t\t[107, 190],\n\t\t\t\t[108, 189],\n\t\t\t\t[109, 188],\n\t\t\t\t[110, 188],\n\t\t\t\t[111, 187],\n\t\t\t\t[112, 186],\n\t\t\t\t[113, 185],\n\t\t\t\t[114, 185],\n\t\t\t\t[115, 184],\n\t\t\t\t[116, 183],\n\t\t\t\t[117, 182],\n\t\t\t\t[118, 182],\n\t\t\t\t[119, 181],\n\t\t\t\t[120, 180],\n\t\t\t\t[121, 179],\n\t\t\t\t[122, 179],\n\t\t\t\t[123, 178],\n\t\t\t\t[124, 177],\n\t\t\t\t[125, 176],\n\t\t\t\t[126, 176],\n\t\t\t\t[127, 175],\n\t\t\t\t[128, 174]\n\t\t\t],\n\t\t\t\"d\": \"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2565\",\n\t\"number\": 2565,\n\t\"comment\": \"ModExp gas cost\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2565\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"byzantium\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"modexpGquaddivisor\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2718\",\n\t\"comment\": \"Typed Transaction Envelope\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2718\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2929\",\n\t\"comment\": \"Gas cost increases for state access opcodes\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2929\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"coldsload\": {\n\t\t\t\"v\": 2100,\n\t\t\t\"d\": \"Gas cost of the first read of storage from a given location (per transaction)\"\n\t\t},\n\t\t\"coldaccountaccess\": {\n\t\t\t\"v\": 2600,\n\t\t\t\"d\": \"Gas cost of the first read of a given address (per transaction)\"\n\t\t},\n\t\t\"warmstorageread\": {\n\t\t\t\"v\": 100,\n\t\t\t\"d\": \"Gas cost of reading storage locations which have already loaded 'cold'\"\n\t\t},\n\t\t\"sstoreCleanGasEIP2200\": {\n\t\t\t\"v\": 2900,\n\t\t\t\"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n\t\t},\n\t\t\"sstoreNoopGasEIP2200\": {\n\t\t\t\"v\": 100,\n\t\t\t\"d\": \"Once per SSTORE operation if the value doesn't change\"\n\t\t},\n\t\t\"sstoreDirtyGasEIP2200\": {\n\t\t\t\"v\": 100,\n\t\t\t\"d\": \"Once per SSTORE operation if a dirty value is changed\"\n\t\t},\n\t\t\"sstoreInitRefundEIP2200\": {\n\t\t\t\"v\": 19900,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n\t\t},\n\t\t\"sstoreCleanRefundEIP2200\": {\n\t\t\t\"v\": 4900,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n\t\t},\n\t\t\"call\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the CALL opcode\"\n\t\t},\n\t\t\"callcode\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the CALLCODE opcode\"\n\t\t},\n\t\t\"delegatecall\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the DELEGATECALL opcode\"\n\t\t},\n\t\t\"staticcall\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the STATICCALL opcode\"\n\t\t},\n\t\t\"balance\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the BALANCE opcode\"\n\t\t},\n\t\t\"extcodesize\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the EXTCODESIZE opcode\"\n\t\t},\n\t\t\"extcodecopy\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the EXTCODECOPY opcode\"\n\t\t},\n\t\t\"extcodehash\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the EXTCODEHASH opcode\"\n\t\t},\n\t\t\"sload\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the SLOAD opcode\"\n\t\t},\n\t\t\"sstore\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the SSTORE opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-2930\",\n\t\"comment\": \"Optional access lists\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2930\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"istanbul\",\n\t\"requiredEIPs\": [2718, 2929],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"accessListStorageKeyCost\": {\n\t\t\t\"v\": 1900,\n\t\t\t\"d\": \"Gas cost per storage key in an Access List transaction\"\n\t\t},\n\t\t\"accessListAddressCost\": {\n\t\t\t\"v\": 2400,\n\t\t\t\"d\": \"Gas cost per storage key in an Access List transaction\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3198\",\n\t\"number\": 3198,\n\t\"comment\": \"BASEFEE opcode\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3198\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"london\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"basefee\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Gas cost of the BASEFEE opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3529\",\n\t\"comment\": \"Reduction in refunds\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3529\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"berlin\",\n\t\"requiredEIPs\": [2929],\n\t\"gasConfig\": {\n\t\t\"maxRefundQuotient\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n\t\t}\n\t},\n\t\"gasPrices\": {\n\t\t\"selfdestructRefund\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Refunded following a selfdestruct operation\"\n\t\t},\n\t\t\"sstoreClearRefundEIP2200\": {\n\t\t\t\"v\": 4800,\n\t\t\t\"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3540\",\n\t\"number\": 3540,\n\t\"comment\": \"EVM Object Format (EOF) v1\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3540\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"london\",\n\t\"requiredEIPs\": [3541],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3541\",\n\t\"comment\": \"Reject new contracts starting with the 0xEF byte\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3541\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"berlin\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3554\",\n\t\"comment\": \"Reduction in refunds\",\n\t\"url\": \"Difficulty Bomb Delay to December 1st 2021\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"muirGlacier\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 9500000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"EIP-3607\",\n\t\"number\": 3607,\n\t\"comment\": \"Reject transactions from senders with deployed code\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3607\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3651\",\n\t\"number\": 3198,\n\t\"comment\": \"Warm COINBASE\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3651\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"london\",\n\t\"requiredEIPs\": [2929],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3670\",\n\t\"number\": 3670,\n\t\"comment\": \"EOF - Code Validation\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3670\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"london\",\n\t\"requiredEIPs\": [3540],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3675\",\n\t\"number\": 3675,\n\t\"comment\": \"Upgrade consensus to Proof-of-Stake\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"london\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3855\",\n\t\"number\": 3855,\n\t\"comment\": \"PUSH0 instruction\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3855\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"chainstart\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"push0\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the PUSH0 opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-3860\",\n\t\"number\": 3860,\n\t\"comment\": \"Limit and meter initcode\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3860\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"spuriousDragon\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"initCodeWordCost\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Gas to pay for each word (32 bytes) of initcode when creating a contract\"\n\t\t}\n\t},\n\t\"vm\": {\n\t\t\"maxInitCodeSize\": {\n\t\t\t\"v\": 49152,\n\t\t\t\"d\": \"Maximum length of initialization code when creating a contract\"\n\t\t}\n\t},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-4345\",\n\t\"number\": 4345,\n\t\"comment\": \"Difficulty Bomb Delay to June 2022\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-4345\",\n\t\"status\": \"Final\",\n\t\"minimumHardfork\": \"london\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 10700000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"EIP-4399\",\n\t\"number\": 4399,\n\t\"comment\": \"Supplant DIFFICULTY opcode with PREVRANDAO\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-4399\",\n\t\"status\": \"Review\",\n\t\"minimumHardfork\": \"london\",\n\t\"requiredEIPs\": [],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"EIP-5133\",\n\t\"number\": 5133,\n\t\"comment\": \"Delaying Difficulty Bomb to mid-September 2022\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-5133\",\n\t\"status\": \"Draft\",\n\t\"minimumHardfork\": \"grayGlacier\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 11400000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport e1153 from './1153.js';\nimport e1559 from './1559.js';\nimport e2315 from './2315.js';\nimport e2537 from './2537.js';\nimport e2565 from './2565.js';\nimport e2718 from './2718.js';\nimport e2929 from './2929.js';\nimport e2930 from './2930.js';\nimport e3198 from './3198.js';\nimport e3529 from './3529.js';\nimport e3540 from './3540.js';\nimport e3541 from './3541.js';\nimport e3554 from './3554.js';\nimport e3607 from './3607.js';\nimport e3651 from './3651.js';\nimport e3670 from './3670.js';\nimport e3675 from './3675.js';\nimport e3855 from './3855.js';\nimport e3860 from './3860.js';\nimport e4345 from './4345.js';\nimport e4399 from './4399.js';\nimport e5133 from './5133.js';\n\nexport const EIPs: { [key: number]: any } = {\n\t1153: e1153,\n\t1559: e1559,\n\t2315: e2315,\n\t2537: e2537,\n\t2565: e2565,\n\t2718: e2718,\n\t2929: e2929,\n\t2930: e2930,\n\t3198: e3198,\n\t3529: e3529,\n\t3540: e3540,\n\t3541: e3541,\n\t3554: e3554,\n\t3607: e3607,\n\t3651: e3651,\n\t3670: e3670,\n\t3675: e3675,\n\t3855: e3855,\n\t3860: e3860,\n\t4345: e4345,\n\t4399: e4399,\n\t5133: e5133,\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport enum Chain {\n\tMainnet = 1,\n\tGoerli = 5,\n\tSepolia = 11155111,\n}\n\nexport enum Hardfork {\n\tChainstart = 'chainstart',\n\tHomestead = 'homestead',\n\tDao = 'dao',\n\tTangerineWhistle = 'tangerineWhistle',\n\tSpuriousDragon = 'spuriousDragon',\n\tByzantium = 'byzantium',\n\tConstantinople = 'constantinople',\n\tPetersburg = 'petersburg',\n\tIstanbul = 'istanbul',\n\tMuirGlacier = 'muirGlacier',\n\tBerlin = 'berlin',\n\tLondon = 'london',\n\tArrowGlacier = 'arrowGlacier',\n\tGrayGlacier = 'grayGlacier',\n\tMergeForkIdTransition = 'mergeForkIdTransition',\n\tMerge = 'merge',\n\tShanghai = 'shanghai',\n\tShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n\tProofOfStake = 'pos',\n\tProofOfWork = 'pow',\n\tProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n\tEthash = 'ethash',\n\tClique = 'clique',\n\tCasper = 'casper',\n}\n\nexport enum CustomChain {\n\t/**\n\t * Polygon (Matic) Mainnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMainnet = 'polygon-mainnet',\n\n\t/**\n\t * Polygon (Matic) Mumbai Testnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMumbai = 'polygon-mumbai',\n\n\t/**\n\t * Arbitrum Rinkeby Testnet\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n\t */\n\tArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n\t/**\n\t * Arbitrum One - mainnet for Arbitrum roll-up\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/public-chains)\n\t */\n\tArbitrumOne = 'arbitrum-one',\n\n\t/**\n\t * xDai EVM sidechain with a native stable token\n\t *\n\t * - [Documentation](https://www.xdaichain.com/)\n\t */\n\txDaiChain = 'x-dai-chain',\n\n\t/**\n\t * Optimistic Kovan - testnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticKovan = 'optimistic-kovan',\n\n\t/**\n\t * Optimistic Ethereum - mainnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticEthereum = 'optimistic-ethereum',\n}\n","export default {\n\t\"name\": \"arrowGlacier\",\n\t\"comment\": \"HF to delay the difficulty bomb\",\n\t\"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md\",\n\t\"status\": \"Final\",\n\t\"eips\": [4345],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"berlin\",\n\t\"comment\": \"HF targeted for July 2020 following the Muir Glacier HF\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2070\",\n\t\"status\": \"Final\",\n\t\"eips\": [2565, 2929, 2718, 2930]\n}\n ;","export default {\n\t\"name\": \"byzantium\",\n\t\"comment\": \"Hardfork with new precompiles, instructions and other protocol changes\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-609\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"modexpGquaddivisor\": {\n\t\t\t\"v\": 20,\n\t\t\t\"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n\t\t},\n\t\t\"ecAdd\": {\n\t\t\t\"v\": 500,\n\t\t\t\"d\": \"Gas costs for curve addition precompile\"\n\t\t},\n\t\t\"ecMul\": {\n\t\t\t\"v\": 40000,\n\t\t\t\"d\": \"Gas costs for curve multiplication precompile\"\n\t\t},\n\t\t\"ecPairing\": {\n\t\t\t\"v\": 100000,\n\t\t\t\"d\": \"Base gas costs for curve pairing precompile\"\n\t\t},\n\t\t\"ecPairingWord\": {\n\t\t\t\"v\": 80000,\n\t\t\t\"d\": \"Gas costs regarding curve pairing precompile input length\"\n\t\t},\n\t\t\"revert\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the REVERT opcode\"\n\t\t},\n\t\t\"staticcall\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the STATICCALL opcode\"\n\t\t},\n\t\t\"returndatasize\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the RETURNDATASIZE opcode\"\n\t\t},\n\t\t\"returndatacopy\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the RETURNDATACOPY opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"minerReward\": {\n\t\t\t\"v\": \"3000000000000000000\",\n\t\t\t\"d\": \"the amount a miner get rewarded for mining a block\"\n\t\t},\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 3000000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"chainstart\",\n\t\"comment\": \"Start of the Ethereum main chain\",\n\t\"url\": \"\",\n\t\"status\": \"\",\n\t\"gasConfig\": {\n\t\t\"minGasLimit\": {\n\t\t\t\"v\": 5000,\n\t\t\t\"d\": \"Minimum the gas limit may ever be\"\n\t\t},\n\t\t\"gasLimitBoundDivisor\": {\n\t\t\t\"v\": 1024,\n\t\t\t\"d\": \"The bound divisor of the gas limit, used in update calculations\"\n\t\t},\n\t\t\"maxRefundQuotient\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n\t\t}\n\t},\n\t\"gasPrices\": {\n\t\t\"base\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Gas base cost, used e.g. for ChainID opcode (Istanbul)\"\n\t\t},\n\t\t\"tierStep\": {\n\t\t\t\"v\": [0, 2, 3, 5, 8, 10, 20],\n\t\t\t\"d\": \"Once per operation, for a selection of them\"\n\t\t},\n\t\t\"exp\": {\n\t\t\t\"v\": 10,\n\t\t\t\"d\": \"Base fee of the EXP opcode\"\n\t\t},\n\t\t\"expByte\": {\n\t\t\t\"v\": 10,\n\t\t\t\"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n\t\t},\n\t\t\"sha3\": {\n\t\t\t\"v\": 30,\n\t\t\t\"d\": \"Base fee of the SHA3 opcode\"\n\t\t},\n\t\t\"sha3Word\": {\n\t\t\t\"v\": 6,\n\t\t\t\"d\": \"Once per word of the SHA3 operation's data\"\n\t\t},\n\t\t\"sload\": {\n\t\t\t\"v\": 50,\n\t\t\t\"d\": \"Base fee of the SLOAD opcode\"\n\t\t},\n\t\t\"sstoreSet\": {\n\t\t\t\"v\": 20000,\n\t\t\t\"d\": \"Once per SSTORE operation if the zeroness changes from zero\"\n\t\t},\n\t\t\"sstoreReset\": {\n\t\t\t\"v\": 5000,\n\t\t\t\"d\": \"Once per SSTORE operation if the zeroness does not change from zero\"\n\t\t},\n\t\t\"sstoreRefund\": {\n\t\t\t\"v\": 15000,\n\t\t\t\"d\": \"Once per SSTORE operation if the zeroness changes to zero\"\n\t\t},\n\t\t\"jumpdest\": {\n\t\t\t\"v\": 1,\n\t\t\t\"d\": \"Base fee of the JUMPDEST opcode\"\n\t\t},\n\t\t\"log\": {\n\t\t\t\"v\": 375,\n\t\t\t\"d\": \"Base fee of the LOG opcode\"\n\t\t},\n\t\t\"logData\": {\n\t\t\t\"v\": 8,\n\t\t\t\"d\": \"Per byte in a LOG* operation's data\"\n\t\t},\n\t\t\"logTopic\": {\n\t\t\t\"v\": 375,\n\t\t\t\"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas\"\n\t\t},\n\t\t\"create\": {\n\t\t\t\"v\": 32000,\n\t\t\t\"d\": \"Base fee of the CREATE opcode\"\n\t\t},\n\t\t\"call\": {\n\t\t\t\"v\": 40,\n\t\t\t\"d\": \"Base fee of the CALL opcode\"\n\t\t},\n\t\t\"callStipend\": {\n\t\t\t\"v\": 2300,\n\t\t\t\"d\": \"Free gas given at beginning of call\"\n\t\t},\n\t\t\"callValueTransfer\": {\n\t\t\t\"v\": 9000,\n\t\t\t\"d\": \"Paid for CALL when the value transfor is non-zero\"\n\t\t},\n\t\t\"callNewAccount\": {\n\t\t\t\"v\": 25000,\n\t\t\t\"d\": \"Paid for CALL when the destination address didn't exist prior\"\n\t\t},\n\t\t\"selfdestructRefund\": {\n\t\t\t\"v\": 24000,\n\t\t\t\"d\": \"Refunded following a selfdestruct operation\"\n\t\t},\n\t\t\"memory\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL\"\n\t\t},\n\t\t\"quadCoeffDiv\": {\n\t\t\t\"v\": 512,\n\t\t\t\"d\": \"Divisor for the quadratic particle of the memory cost equation\"\n\t\t},\n\t\t\"createData\": {\n\t\t\t\"v\": 200,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"tx\": {\n\t\t\t\"v\": 21000,\n\t\t\t\"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions\"\n\t\t},\n\t\t\"txCreation\": {\n\t\t\t\"v\": 32000,\n\t\t\t\"d\": \"The cost of creating a contract via tx\"\n\t\t},\n\t\t\"txDataZero\": {\n\t\t\t\"v\": 4,\n\t\t\t\"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions\"\n\t\t},\n\t\t\"txDataNonZero\": {\n\t\t\t\"v\": 68,\n\t\t\t\"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n\t\t},\n\t\t\"copy\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added\"\n\t\t},\n\t\t\"ecRecover\": {\n\t\t\t\"v\": 3000,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"sha256\": {\n\t\t\t\"v\": 60,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"sha256Word\": {\n\t\t\t\"v\": 12,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"ripemd160\": {\n\t\t\t\"v\": 600,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"ripemd160Word\": {\n\t\t\t\"v\": 120,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"identity\": {\n\t\t\t\"v\": 15,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"identityWord\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"\"\n\t\t},\n\t\t\"stop\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the STOP opcode\"\n\t\t},\n\t\t\"add\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the ADD opcode\"\n\t\t},\n\t\t\"mul\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the MUL opcode\"\n\t\t},\n\t\t\"sub\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SUB opcode\"\n\t\t},\n\t\t\"div\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the DIV opcode\"\n\t\t},\n\t\t\"sdiv\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the SDIV opcode\"\n\t\t},\n\t\t\"mod\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the MOD opcode\"\n\t\t},\n\t\t\"smod\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the SMOD opcode\"\n\t\t},\n\t\t\"addmod\": {\n\t\t\t\"v\": 8,\n\t\t\t\"d\": \"Base fee of the ADDMOD opcode\"\n\t\t},\n\t\t\"mulmod\": {\n\t\t\t\"v\": 8,\n\t\t\t\"d\": \"Base fee of the MULMOD opcode\"\n\t\t},\n\t\t\"signextend\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the SIGNEXTEND opcode\"\n\t\t},\n\t\t\"lt\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the LT opcode\"\n\t\t},\n\t\t\"gt\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the GT opcode\"\n\t\t},\n\t\t\"slt\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SLT opcode\"\n\t\t},\n\t\t\"sgt\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SGT opcode\"\n\t\t},\n\t\t\"eq\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the EQ opcode\"\n\t\t},\n\t\t\"iszero\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the ISZERO opcode\"\n\t\t},\n\t\t\"and\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the AND opcode\"\n\t\t},\n\t\t\"or\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the OR opcode\"\n\t\t},\n\t\t\"xor\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the XOR opcode\"\n\t\t},\n\t\t\"not\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the NOT opcode\"\n\t\t},\n\t\t\"byte\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the BYTE opcode\"\n\t\t},\n\t\t\"address\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the ADDRESS opcode\"\n\t\t},\n\t\t\"balance\": {\n\t\t\t\"v\": 20,\n\t\t\t\"d\": \"Base fee of the BALANCE opcode\"\n\t\t},\n\t\t\"origin\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the ORIGIN opcode\"\n\t\t},\n\t\t\"caller\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the CALLER opcode\"\n\t\t},\n\t\t\"callvalue\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the CALLVALUE opcode\"\n\t\t},\n\t\t\"calldataload\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the CALLDATALOAD opcode\"\n\t\t},\n\t\t\"calldatasize\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the CALLDATASIZE opcode\"\n\t\t},\n\t\t\"calldatacopy\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the CALLDATACOPY opcode\"\n\t\t},\n\t\t\"codesize\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the CODESIZE opcode\"\n\t\t},\n\t\t\"codecopy\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the CODECOPY opcode\"\n\t\t},\n\t\t\"gasprice\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the GASPRICE opcode\"\n\t\t},\n\t\t\"extcodesize\": {\n\t\t\t\"v\": 20,\n\t\t\t\"d\": \"Base fee of the EXTCODESIZE opcode\"\n\t\t},\n\t\t\"extcodecopy\": {\n\t\t\t\"v\": 20,\n\t\t\t\"d\": \"Base fee of the EXTCODECOPY opcode\"\n\t\t},\n\t\t\"blockhash\": {\n\t\t\t\"v\": 20,\n\t\t\t\"d\": \"Base fee of the BLOCKHASH opcode\"\n\t\t},\n\t\t\"coinbase\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the COINBASE opcode\"\n\t\t},\n\t\t\"timestamp\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the TIMESTAMP opcode\"\n\t\t},\n\t\t\"number\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the NUMBER opcode\"\n\t\t},\n\t\t\"difficulty\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the DIFFICULTY opcode\"\n\t\t},\n\t\t\"gaslimit\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the GASLIMIT opcode\"\n\t\t},\n\t\t\"pop\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the POP opcode\"\n\t\t},\n\t\t\"mload\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the MLOAD opcode\"\n\t\t},\n\t\t\"mstore\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the MSTORE opcode\"\n\t\t},\n\t\t\"mstore8\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the MSTORE8 opcode\"\n\t\t},\n\t\t\"sstore\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the SSTORE opcode\"\n\t\t},\n\t\t\"jump\": {\n\t\t\t\"v\": 8,\n\t\t\t\"d\": \"Base fee of the JUMP opcode\"\n\t\t},\n\t\t\"jumpi\": {\n\t\t\t\"v\": 10,\n\t\t\t\"d\": \"Base fee of the JUMPI opcode\"\n\t\t},\n\t\t\"pc\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the PC opcode\"\n\t\t},\n\t\t\"msize\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the MSIZE opcode\"\n\t\t},\n\t\t\"gas\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the GAS opcode\"\n\t\t},\n\t\t\"push\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the PUSH opcode\"\n\t\t},\n\t\t\"dup\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the DUP opcode\"\n\t\t},\n\t\t\"swap\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SWAP opcode\"\n\t\t},\n\t\t\"callcode\": {\n\t\t\t\"v\": 40,\n\t\t\t\"d\": \"Base fee of the CALLCODE opcode\"\n\t\t},\n\t\t\"return\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the RETURN opcode\"\n\t\t},\n\t\t\"invalid\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the INVALID opcode\"\n\t\t},\n\t\t\"selfdestruct\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"Base fee of the SELFDESTRUCT opcode\"\n\t\t}\n\t},\n\t\"vm\": {\n\t\t\"stackLimit\": {\n\t\t\t\"v\": 1024,\n\t\t\t\"d\": \"Maximum size of VM stack allowed\"\n\t\t},\n\t\t\"callCreateDepth\": {\n\t\t\t\"v\": 1024,\n\t\t\t\"d\": \"Maximum depth of call/create stack\"\n\t\t},\n\t\t\"maxExtraDataSize\": {\n\t\t\t\"v\": 32,\n\t\t\t\"d\": \"Maximum size extra data may be after Genesis\"\n\t\t}\n\t},\n\t\"pow\": {\n\t\t\"minimumDifficulty\": {\n\t\t\t\"v\": 131072,\n\t\t\t\"d\": \"The minimum that the difficulty may ever be\"\n\t\t},\n\t\t\"difficultyBoundDivisor\": {\n\t\t\t\"v\": 2048,\n\t\t\t\"d\": \"The bound divisor of the difficulty, used in the update calculations\"\n\t\t},\n\t\t\"durationLimit\": {\n\t\t\t\"v\": 13,\n\t\t\t\"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not\"\n\t\t},\n\t\t\"epochDuration\": {\n\t\t\t\"v\": 30000,\n\t\t\t\"d\": \"Duration between proof-of-work epochs\"\n\t\t},\n\t\t\"timebombPeriod\": {\n\t\t\t\"v\": 100000,\n\t\t\t\"d\": \"Exponential difficulty timebomb period\"\n\t\t},\n\t\t\"minerReward\": {\n\t\t\t\"v\": \"5000000000000000000\",\n\t\t\t\"d\": \"the amount a miner get rewarded for mining a block\"\n\t\t},\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 0,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"constantinople\",\n\t\"comment\": \"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-1013\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"netSstoreNoopGas\": {\n\t\t\t\"v\": 200,\n\t\t\t\"d\": \"Once per SSTORE operation if the value doesn't change\"\n\t\t},\n\t\t\"netSstoreInitGas\": {\n\t\t\t\"v\": 20000,\n\t\t\t\"d\": \"Once per SSTORE operation from clean zero\"\n\t\t},\n\t\t\"netSstoreCleanGas\": {\n\t\t\t\"v\": 5000,\n\t\t\t\"d\": \"Once per SSTORE operation from clean non-zero\"\n\t\t},\n\t\t\"netSstoreDirtyGas\": {\n\t\t\t\"v\": 200,\n\t\t\t\"d\": \"Once per SSTORE operation from dirty\"\n\t\t},\n\t\t\"netSstoreClearRefund\": {\n\t\t\t\"v\": 15000,\n\t\t\t\"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n\t\t},\n\t\t\"netSstoreResetRefund\": {\n\t\t\t\"v\": 4800,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n\t\t},\n\t\t\"netSstoreResetClearRefund\": {\n\t\t\t\"v\": 19800,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n\t\t},\n\t\t\"shl\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SHL opcode\"\n\t\t},\n\t\t\"shr\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SHR opcode\"\n\t\t},\n\t\t\"sar\": {\n\t\t\t\"v\": 3,\n\t\t\t\"d\": \"Base fee of the SAR opcode\"\n\t\t},\n\t\t\"extcodehash\": {\n\t\t\t\"v\": 400,\n\t\t\t\"d\": \"Base fee of the EXTCODEHASH opcode\"\n\t\t},\n\t\t\"create2\": {\n\t\t\t\"v\": 32000,\n\t\t\t\"d\": \"Base fee of the CREATE2 opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"minerReward\": {\n\t\t\t\"v\": \"2000000000000000000\",\n\t\t\t\"d\": \"The amount a miner gets rewarded for mining a block\"\n\t\t},\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 5000000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"dao\",\n\t\"comment\": \"DAO rescue hardfork\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-779\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"grayGlacier\",\n\t\"comment\": \"Delaying the difficulty bomb to Mid September 2022\",\n\t\"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md\",\n\t\"status\": \"Draft\",\n\t\"eips\": [5133],\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"homestead\",\n\t\"comment\": \"Homestead hardfork with protocol and network changes\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-606\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"delegatecall\": {\n\t\t\t\"v\": 40,\n\t\t\t\"d\": \"Base fee of the DELEGATECALL opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport chainstart from './chainstart.js';\nimport dao from './dao.js';\nimport homestead from './homestead.js';\nimport tangerineWhistle from './tangerineWhistle.js';\nimport spuriousDragon from './spuriousDragon.js';\nimport byzantium from './byzantium.js';\nimport constantinople from './constantinople.js';\nimport petersburg from './petersburg.js';\nimport istanbul from './istanbul.js';\nimport muirGlacier from './muirGlacier.js';\nimport berlin from './berlin.js';\nimport london from './london.js';\nimport shanghai from './shanghai.js';\nimport arrowGlacier from './arrowGlacier.js';\nimport grayGlacier from './grayGlacier.js';\nimport mergeForkIdTransition from './mergeForkIdTransition.js';\nimport merge from './merge.js';\n\nexport const hardforks: { [key: string]: any } = {\n\tchainstart,\n\thomestead,\n\tdao,\n\ttangerineWhistle,\n\tspuriousDragon,\n\tbyzantium,\n\tconstantinople,\n\tpetersburg,\n\tistanbul,\n\tmuirGlacier,\n\tberlin,\n\tlondon,\n\tshanghai,\n\tarrowGlacier,\n\tgrayGlacier,\n\tmergeForkIdTransition,\n\tmerge,\n};\n","export default {\n\t\"name\": \"istanbul\",\n\t\"comment\": \"HF targeted for December 2019 following the Constantinople/Petersburg HF\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-1679\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"blake2Round\": {\n\t\t\t\"v\": 1,\n\t\t\t\"d\": \"Gas cost per round for the Blake2 F precompile\"\n\t\t},\n\t\t\"ecAdd\": {\n\t\t\t\"v\": 150,\n\t\t\t\"d\": \"Gas costs for curve addition precompile\"\n\t\t},\n\t\t\"ecMul\": {\n\t\t\t\"v\": 6000,\n\t\t\t\"d\": \"Gas costs for curve multiplication precompile\"\n\t\t},\n\t\t\"ecPairing\": {\n\t\t\t\"v\": 45000,\n\t\t\t\"d\": \"Base gas costs for curve pairing precompile\"\n\t\t},\n\t\t\"ecPairingWord\": {\n\t\t\t\"v\": 34000,\n\t\t\t\"d\": \"Gas costs regarding curve pairing precompile input length\"\n\t\t},\n\t\t\"txDataNonZero\": {\n\t\t\t\"v\": 16,\n\t\t\t\"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n\t\t},\n\t\t\"sstoreSentryGasEIP2200\": {\n\t\t\t\"v\": 2300,\n\t\t\t\"d\": \"Minimum gas required to be present for an SSTORE call, not consumed\"\n\t\t},\n\t\t\"sstoreNoopGasEIP2200\": {\n\t\t\t\"v\": 800,\n\t\t\t\"d\": \"Once per SSTORE operation if the value doesn't change\"\n\t\t},\n\t\t\"sstoreDirtyGasEIP2200\": {\n\t\t\t\"v\": 800,\n\t\t\t\"d\": \"Once per SSTORE operation if a dirty value is changed\"\n\t\t},\n\t\t\"sstoreInitGasEIP2200\": {\n\t\t\t\"v\": 20000,\n\t\t\t\"d\": \"Once per SSTORE operation from clean zero to non-zero\"\n\t\t},\n\t\t\"sstoreInitRefundEIP2200\": {\n\t\t\t\"v\": 19200,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n\t\t},\n\t\t\"sstoreCleanGasEIP2200\": {\n\t\t\t\"v\": 5000,\n\t\t\t\"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n\t\t},\n\t\t\"sstoreCleanRefundEIP2200\": {\n\t\t\t\"v\": 4200,\n\t\t\t\"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n\t\t},\n\t\t\"sstoreClearRefundEIP2200\": {\n\t\t\t\"v\": 15000,\n\t\t\t\"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n\t\t},\n\t\t\"balance\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the BALANCE opcode\"\n\t\t},\n\t\t\"extcodehash\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the EXTCODEHASH opcode\"\n\t\t},\n\t\t\"chainid\": {\n\t\t\t\"v\": 2,\n\t\t\t\"d\": \"Base fee of the CHAINID opcode\"\n\t\t},\n\t\t\"selfbalance\": {\n\t\t\t\"v\": 5,\n\t\t\t\"d\": \"Base fee of the SELFBALANCE opcode\"\n\t\t},\n\t\t\"sload\": {\n\t\t\t\"v\": 800,\n\t\t\t\"d\": \"Base fee of the SLOAD opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"london\",\n\t\"comment\": \"HF targeted for July 2021 following the Berlin fork\",\n\t\"url\": \"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md\",\n\t\"status\": \"Final\",\n\t\"eips\": [1559, 3198, 3529, 3541]\n}\n ;","export default {\n\t\"name\": \"merge\",\n\t\"comment\": \"Hardfork to upgrade the consensus mechanism to Proof-of-Stake\",\n\t\"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md\",\n\t\"status\": \"Final\",\n\t\"consensus\": {\n\t\t\"type\": \"pos\",\n\t\t\"algorithm\": \"casper\",\n\t\t\"casper\": {}\n\t},\n\t\"eips\": [3675, 4399]\n}\n ;","export default {\n\t\"name\": \"mergeForkIdTransition\",\n\t\"comment\": \"Pre-merge hardfork to fork off non-upgraded clients\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n\t\"status\": \"Draft\",\n\t\"eips\": []\n}\n ;","export default {\n\t\"name\": \"muirGlacier\",\n\t\"comment\": \"HF to delay the difficulty bomb\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-2384\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {},\n\t\"vm\": {},\n\t\"pow\": {\n\t\t\"difficultyBombDelay\": {\n\t\t\t\"v\": 9000000,\n\t\t\t\"d\": \"the amount of blocks to delay the difficulty bomb with\"\n\t\t}\n\t}\n}\n ;","export default {\n\t\"name\": \"petersburg\",\n\t\"comment\": \"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-1716\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"netSstoreNoopGas\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreInitGas\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreCleanGas\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreDirtyGas\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreClearRefund\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreResetRefund\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t},\n\t\t\"netSstoreResetClearRefund\": {\n\t\t\t\"v\": null,\n\t\t\t\"d\": \"Removed along EIP-1283\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"shanghai\",\n\t\"comment\": \"Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode\",\n\t\"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md\",\n\t\"status\": \"Final\",\n\t\"eips\": [3651, 3855, 3860, 4895]\n}\n ;","export default {\n\t\"name\": \"spuriousDragon\",\n\t\"comment\": \"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-607\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"expByte\": {\n\t\t\t\"v\": 50,\n\t\t\t\"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n\t\t}\n\t},\n\t\"vm\": {\n\t\t\"maxCodeSize\": {\n\t\t\t\"v\": 24576,\n\t\t\t\"d\": \"Maximum length of contract code\"\n\t\t}\n\t},\n\t\"pow\": {}\n}\n ;","export default {\n\t\"name\": \"tangerineWhistle\",\n\t\"comment\": \"Hardfork with gas cost changes for IO-heavy operations\",\n\t\"url\": \"https://eips.ethereum.org/EIPS/eip-608\",\n\t\"status\": \"Final\",\n\t\"gasConfig\": {},\n\t\"gasPrices\": {\n\t\t\"sload\": {\n\t\t\t\"v\": 200,\n\t\t\t\"d\": \"Once per SLOAD operation\"\n\t\t},\n\t\t\"call\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Once per CALL operation & message call transaction\"\n\t\t},\n\t\t\"extcodesize\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the EXTCODESIZE opcode\"\n\t\t},\n\t\t\"extcodecopy\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the EXTCODECOPY opcode\"\n\t\t},\n\t\t\"balance\": {\n\t\t\t\"v\": 400,\n\t\t\t\"d\": \"Base fee of the BALANCE opcode\"\n\t\t},\n\t\t\"delegatecall\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the DELEGATECALL opcode\"\n\t\t},\n\t\t\"callcode\": {\n\t\t\t\"v\": 700,\n\t\t\t\"d\": \"Base fee of the CALLCODE opcode\"\n\t\t},\n\t\t\"selfdestruct\": {\n\t\t\t\"v\": 5000,\n\t\t\t\"d\": \"Base fee of the SELFDESTRUCT opcode\"\n\t\t}\n\t},\n\t\"vm\": {},\n\t\"pow\": {}\n}\n ;","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// @ethereumjs/common version 3.1.1\nexport * from './common.js';\nexport * from './enums.js';\nexport * from './types.js';\nexport * from './utils.js';\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport type { Chain, ConsensusAlgorithm, ConsensusType, Hardfork } from './enums.js';\n\nexport interface ChainName {\n\t[chainId: string]: string;\n}\n\nexport type CliqueConfig = {\n\tperiod: number;\n\tepoch: number;\n};\n\nexport type EthashConfig = Record<string, unknown>;\n\nexport type CasperConfig = Record<string, unknown>;\n\nexport interface GenesisBlockConfig {\n\ttimestamp?: string;\n\tgasLimit: number;\n\tdifficulty: number;\n\tnonce: string;\n\textraData: string;\n\tbaseFeePerGas?: string;\n}\n\nexport interface HardforkConfig {\n\tname: Hardfork | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tblock: number | null; // null is used for hardforks that should not be applied -- since `undefined` isn't a valid value in JSON\n\tttd?: bigint | string;\n\ttimestamp?: number | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tforkHash?: string | null;\n}\n\nexport interface BootstrapNodeConfig {\n\tip: string;\n\tport: number | string;\n\tnetwork?: string;\n\tchainId?: number;\n\tid: string;\n\tlocation: string;\n\tcomment: string;\n}\n\nexport interface ChainConfig {\n\tname: string;\n\tchainId: number | bigint;\n\tnetworkId: number | bigint;\n\tdefaultHardfork?: string;\n\tcomment?: string;\n\turl?: string;\n\tgenesis: GenesisBlockConfig;\n\thardforks: HardforkConfig[];\n\tbootstrapNodes?: BootstrapNodeConfig[];\n\tdnsNetworks?: string[];\n\tconsensus: {\n\t\ttype: ConsensusType | string;\n\t\talgorithm: ConsensusAlgorithm | string;\n\t\tclique?: CliqueConfig;\n\t\tethash?: EthashConfig;\n\t\tcasper?: CasperConfig;\n\t};\n}\nexport interface ChainsConfig {\n\t[key: string]: ChainConfig | ChainName;\n}\n\ninterface BaseOpts {\n\t/**\n\t * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n\t *\n\t * Default: Hardfork.London\n\t */\n\thardfork?: string | Hardfork;\n\t/**\n\t * Selected EIPs which can be activated, please use an array for instantiation\n\t * (e.g. `eips: [ 2537, ]`)\n\t *\n\t * Currently supported:\n\t *\n\t * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n\t */\n\teips?: number[];\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n\t/**\n\t * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n\t * either from a chain directly supported or a custom chain\n\t * passed in via {@link CommonOpts.customChains}.\n\t */\n\tchain: string | number | Chain | bigint | object;\n\t/**\n\t * Initialize (in addition to the supported chains) with the selected\n\t * custom chains. Custom genesis state should be passed to the Blockchain class if used.\n\t *\n\t * Usage (directly with the respective chain initialization via the {@link CommonOpts.chain} option):\n\t *\n\t * ```javascript\n\t * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n\t * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n\t * ```\n\t */\n\tcustomChains?: ChainConfig[];\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n\t/**\n\t * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n\t * a standard chain used to base the custom chain params on.\n\t */\n\tbaseChain?: string | number | Chain | bigint;\n}\n\nexport interface GethConfigOpts extends BaseOpts {\n\tchain?: string;\n\tgenesisHash?: Uint8Array;\n\tmergeForkIdPostMerge?: boolean;\n}\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string;\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type Uint8ArrayLike = Uint8Array | number[] | number | bigint | PrefixedHexString;\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Uint8Array;\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n\ttoArray(): Uint8Array;\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>;\n/**\n * Type output options\n */\nexport enum TypeOutput {\n\tNumber,\n\tBigInt,\n\tUint8Array,\n\tPrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n\t[TypeOutput.Number]: number;\n\t[TypeOutput.BigInt]: bigint;\n\t[TypeOutput.Uint8Array]: Uint8Array;\n\t[TypeOutput.PrefixedHexString]: PrefixedHexString;\n};\nexport type ToBytesInputTypes =\n\t| PrefixedHexString\n\t| number\n\t| bigint\n\t| Uint8Array\n\t| number[]\n\t| TransformableToArray\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t| null\n\t| undefined;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isHexPrefixed, isHexString } from 'web3-validator';\nimport { bytesToHex, hexToBytes, numberToHex } from 'web3-utils';\nimport { secp256k1 } from '../tx/constants.js';\nimport { Hardfork } from './enums.js';\nimport { ToBytesInputTypes, TypeOutput, TypeOutputReturnType } from './types.js';\n\ntype ConfigHardfork =\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t| { name: string; block: null; timestamp: number }\n\t| { name: string; block: number; timestamp?: number };\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n\tif (typeof str !== 'string')\n\t\tthrow new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n\n\treturn isHexPrefixed(str) ? str.slice(2) : str;\n};\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n\tif (!nonce || nonce === '0x0') {\n\t\treturn '0x0000000000000000';\n\t}\n\tif (isHexPrefixed(nonce)) {\n\t\treturn `0x${stripHexPrefix(nonce).padStart(16, '0')}`;\n\t}\n\treturn `0x${nonce.padStart(16, '0')}`;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i: number) {\n\tif (!Number.isSafeInteger(i) || i < 0) {\n\t\tthrow new Error(`Received an invalid integer type: ${i}`);\n\t}\n\treturn `0x${i.toString(16)}`;\n};\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge = true) {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tconst {\n\t\tname,\n\t\tconfig,\n\t\tdifficulty,\n\t\tmixHash,\n\t\tgasLimit,\n\t\tcoinbase,\n\t\tbaseFeePerGas,\n\t}: {\n\t\tname: string;\n\t\tconfig: any;\n\t\tdifficulty: string;\n\t\tmixHash: string;\n\t\tgasLimit: string;\n\t\tcoinbase: string;\n\t\tbaseFeePerGas: string;\n\t} = json;\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tlet { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n\t\tjson;\n\tconst genesisTimestamp = Number(timestamp);\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tconst { chainId }: { chainId: number } = config;\n\n\t// geth is not strictly putting empty fields with a 0x prefix\n\tif (extraData === '') {\n\t\textraData = '0x';\n\t}\n\t// geth may use number for timestamp\n\tif (!isHexPrefixed(timestamp)) {\n\t\t// eslint-disable-next-line radix\n\t\ttimestamp = intToHex(parseInt(timestamp));\n\t}\n\t// geth may not give us a nonce strictly formatted to an 8 byte hex string\n\tif (nonce.length !== 18) {\n\t\tnonce = formatNonce(nonce);\n\t}\n\n\t// EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n\t// but have different configuration parameters in geth genesis parameters\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\tif (config.eip155Block !== config.eip158Block) {\n\t\tthrow new Error(\n\t\t\t'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork',\n\t\t);\n\t}\n\n\tconst params = {\n\t\tname,\n\t\tchainId,\n\t\tnetworkId: chainId,\n\t\tgenesis: {\n\t\t\ttimestamp,\n\t\t\t// eslint-disable-next-line radix\n\t\t\tgasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n\t\t\t// eslint-disable-next-line radix\n\t\t\tdifficulty: parseInt(difficulty),\n\t\t\tnonce,\n\t\t\textraData,\n\t\t\tmixHash,\n\t\t\tcoinbase,\n\t\t\tbaseFeePerGas,\n\t\t},\n\t\thardfork: undefined as string | undefined,\n\t\thardforks: [] as ConfigHardfork[],\n\t\tbootstrapNodes: [],\n\t\tconsensus:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tconfig.clique !== undefined\n\t\t\t\t? {\n\t\t\t\t\t\ttype: 'poa',\n\t\t\t\t\t\talgorithm: 'clique',\n\t\t\t\t\t\tclique: {\n\t\t\t\t\t\t\t// The recent geth genesis seems to be using blockperiodseconds\n\t\t\t\t\t\t\t// and epochlength for clique specification\n\t\t\t\t\t\t\t// see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\t\t\tperiod: config.clique.period ?? config.clique.blockperiodseconds,\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\t\t\tepoch: config.clique.epoch ?? config.clique.epochlength,\n\t\t\t\t\t\t},\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\ttype: 'pow',\n\t\t\t\t\t\talgorithm: 'ethash',\n\t\t\t\t\t\tethash: {},\n\t\t\t\t  },\n\t};\n\n\tconst forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } =\n\t\t{\n\t\t\t[Hardfork.Homestead]: { name: 'homesteadBlock' },\n\t\t\t[Hardfork.Dao]: { name: 'daoForkBlock' },\n\t\t\t[Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n\t\t\t[Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n\t\t\t[Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n\t\t\t[Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n\t\t\t[Hardfork.Petersburg]: { name: 'petersburgBlock' },\n\t\t\t[Hardfork.Istanbul]: { name: 'istanbulBlock' },\n\t\t\t[Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n\t\t\t[Hardfork.Berlin]: { name: 'berlinBlock' },\n\t\t\t[Hardfork.London]: { name: 'londonBlock' },\n\t\t\t[Hardfork.MergeForkIdTransition]: {\n\t\t\t\tname: 'mergeForkBlock',\n\t\t\t\tpostMerge: mergeForkIdPostMerge,\n\t\t\t},\n\t\t\t[Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n\t\t\t[Hardfork.ShardingForkDev]: {\n\t\t\t\tname: 'shardingForkTime',\n\t\t\t\tpostMerge: true,\n\t\t\t\tisTimestamp: true,\n\t\t\t},\n\t\t};\n\n\t// forkMapRev is the map from config field name to Hardfork\n\tconst forkMapRev = Object.keys(forkMap).reduce<{ [key: string]: string }>((acc, elem) => {\n\t\tacc[forkMap[elem].name] = elem;\n\t\treturn acc;\n\t}, {});\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\tconst configHardforkNames = Object.keys(config).filter(\n\t\t// eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access\n\t\tkey => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null,\n\t);\n\n\tparams.hardforks = configHardforkNames\n\t\t.map(nameBlock => ({\n\t\t\tname: forkMapRev[nameBlock],\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tblock:\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tforkMap[forkMapRev[nameBlock]].isTimestamp === true ||\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\ttypeof config[nameBlock] !== 'number'\n\t\t\t\t\t? // eslint-disable-next-line no-null/no-null\n\t\t\t\t\t  null\n\t\t\t\t\t: // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\t\t  config[nameBlock],\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\ttimestamp:\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tforkMap[forkMapRev[nameBlock]].isTimestamp === true &&\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\ttypeof config[nameBlock] === 'number'\n\t\t\t\t\t? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\t\t  config[nameBlock]\n\t\t\t\t\t: undefined,\n\t\t}))\n\t\t// eslint-disable-next-line no-null/no-null\n\t\t.filter(fork => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[];\n\n\tparams.hardforks.sort(\n\t\t(a: ConfigHardfork, b: ConfigHardfork) => (a.block ?? Infinity) - (b.block ?? Infinity),\n\t);\n\n\tparams.hardforks.sort(\n\t\t(a: ConfigHardfork, b: ConfigHardfork) =>\n\t\t\t(a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp),\n\t);\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\tif (config.terminalTotalDifficulty !== undefined) {\n\t\t// Following points need to be considered for placement of merge hf\n\t\t// - Merge hardfork can't be placed at genesis\n\t\t// - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n\t\t// - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n\t\t//   necessary for e.g. withdrawals\n\t\tconst mergeConfig = {\n\t\t\tname: Hardfork.Merge,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\tttd: config.terminalTotalDifficulty,\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tblock: null,\n\t\t};\n\n\t\t// Merge hardfork has to be placed before first hardfork that is dependent on merge\n\t\tconst postMergeIndex = params.hardforks.findIndex(\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t(hf: any) => forkMap[hf.name]?.postMerge === true,\n\t\t);\n\t\tif (postMergeIndex !== -1) {\n\t\t\tparams.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork);\n\t\t} else {\n\t\t\tparams.hardforks.push(mergeConfig as unknown as ConfigHardfork);\n\t\t}\n\t}\n\n\tconst latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n\tparams.hardfork = latestHardfork?.name;\n\tparams.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 });\n\n\treturn params;\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n\ttry {\n\t\tif (['config', 'difficulty', 'gasLimit', 'alloc'].some(field => !(field in json))) {\n\t\t\tthrow new Error('Invalid format, expected geth genesis fields missing');\n\t\t}\n\t\tif (name !== undefined) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n\t\t\tjson.name = name;\n\t\t}\n\t\treturn parseGethParams(json, mergeForkIdPostMerge);\n\t} catch (e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n\t\tthrow new Error(`Error parsing parameters file: ${e.message}`);\n\t}\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n\tlet a = value;\n\n\tif (typeof a !== 'string') {\n\t\tthrow new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n\t}\n\n\tif (a.length % 2) a = `0${a}`;\n\n\treturn a;\n}\n\n/**\n * Converts an `Number` to a `Uint8Array`\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToUint8Array = function (i: number) {\n\tconst hex = intToHex(i);\n\treturn hexToBytes(`0x${padToEven(hex.slice(2))}`);\n};\n\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toUint8Array()` method.\n * @param v the value\n */\nexport const toUint8Array = function (v: ToBytesInputTypes): Uint8Array {\n\t// eslint-disable-next-line no-null/no-null\n\tif (v === null || v === undefined) {\n\t\treturn new Uint8Array();\n\t}\n\n\tif (v instanceof Uint8Array) {\n\t\treturn v;\n\t}\n\n\tif (Array.isArray(v)) {\n\t\treturn Uint8Array.from(v);\n\t}\n\n\tif (typeof v === 'string') {\n\t\tif (!isHexString(v)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`,\n\t\t\t);\n\t\t}\n\t\treturn hexToBytes(padToEven(stripHexPrefix(v)));\n\t}\n\n\tif (typeof v === 'number') {\n\t\treturn toUint8Array(numberToHex(v));\n\t}\n\n\tif (typeof v === 'bigint') {\n\t\tif (v < BigInt(0)) {\n\t\t\tthrow new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n\t\t}\n\t\tlet n = v.toString(16);\n\t\tif (n.length % 2) n = `0${n}`;\n\t\treturn toUint8Array(`0x${n}`);\n\t}\n\n\tif (v.toArray) {\n\t\t// converts a BN to a Uint8Array\n\t\treturn Uint8Array.from(v.toArray());\n\t}\n\n\tthrow new Error('invalid type');\n};\n\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n */\nexport function uint8ArrayToBigInt(buf: Uint8Array) {\n\tconst hex = bytesToHex(buf);\n\tif (hex === '0x') {\n\t\treturn BigInt(0);\n\t}\n\treturn BigInt(hex);\n}\n\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n */\nexport function bigIntToUint8Array(num: bigint) {\n\treturn toUint8Array(`0x${num.toString(16)}`);\n}\n\n/**\n * Returns a Uint8Array filled with 0s.\n * @param bytes the number of bytes the Uint8Array should be\n */\nexport const zeros = function (bytes: number): Uint8Array {\n\treturn new Uint8Array(bytes).fill(0);\n};\n\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Uint8Array)\n */\nconst setLength = function (msg: Uint8Array, length: number, right: boolean) {\n\tconst buf = zeros(length);\n\tif (right) {\n\t\tif (msg.length < length) {\n\t\t\tbuf.set(msg);\n\t\t\treturn buf;\n\t\t}\n\t\treturn msg.subarray(0, length);\n\t}\n\tif (msg.length < length) {\n\t\tbuf.set(msg, length - msg.length);\n\t\treturn buf;\n\t}\n\treturn msg.subarray(-length);\n};\n\n/**\n * Throws if input is not a Uint8Array\n * @param {Uint8Array} input value to check\n */\nexport function assertIsUint8Array(input: unknown): asserts input is Uint8Array {\n\tif (!(input instanceof Uint8Array)) {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\tconst msg = `This method only supports Uint8Array but input was: ${input}`;\n\t\tthrow new Error(msg);\n\t}\n}\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @return (Uint8Array)\n */\nexport const setLengthLeft = function (msg: Uint8Array, length: number) {\n\tassertIsUint8Array(msg);\n\treturn setLength(msg, length, false);\n};\n\n/**\n * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.\n * @param a (Uint8Array|Array|String)\n * @return (Uint8Array|Array|String)\n */\nexport function stripZeros<T extends Uint8Array | number[] | string>(a: T): T {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\tlet first = a[0];\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\twhile (a.length > 0 && first.toString() === '0') {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign\n\t\ta = a.slice(1) as T;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access\n\t\tfirst = a[0];\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\treturn a;\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param a (Uint8Array)\n * @return (Uint8Array)\n */\nexport const unpadUint8Array = function (a: Uint8Array): Uint8Array {\n\tassertIsUint8Array(a);\n\treturn stripZeros(a);\n};\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => `0x${num.toString(16)}`;\n\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedUint8Array(value: bigint): Uint8Array {\n\treturn unpadUint8Array(bigIntToUint8Array(value));\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n\tif (v === BigInt(0) || v === BigInt(1)) return v;\n\n\tif (chainId === undefined) {\n\t\treturn v - BigInt(27);\n\t}\n\treturn v - (chainId * BigInt(2) + BigInt(35));\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n\treturn recovery === BigInt(0) || recovery === BigInt(1);\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n\tmsgHash: Uint8Array,\n\tv: bigint,\n\tr: Uint8Array,\n\ts: Uint8Array,\n\tchainId?: bigint,\n): Uint8Array {\n\tconst recovery = calculateSigRecovery(v, chainId);\n\tif (!isValidSigRecovery(recovery)) {\n\t\tthrow new Error('Invalid signature v value');\n\t}\n\n\tconst senderPubKey = new secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s))\n\t\t.addRecoveryBit(Number(recovery))\n\t\t.recoverPublicKey(msgHash)\n\t\t.toRawBytes(false);\n\treturn senderPubKey.slice(1);\n};\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null;\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined;\nexport function toType<T extends TypeOutput>(\n\tinput: ToBytesInputTypes,\n\toutputType: T,\n): TypeOutputReturnType[T];\nexport function toType<T extends TypeOutput>(\n\tinput: ToBytesInputTypes,\n\toutputType: T,\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n): TypeOutputReturnType[T] | undefined | null {\n\t// eslint-disable-next-line no-null/no-null\n\tif (input === null) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tif (input === undefined) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof input === 'string' && !isHexString(input)) {\n\t\tthrow new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n\t} else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n\t\tthrow new Error(\n\t\t\t'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)',\n\t\t);\n\t}\n\n\tconst output = toUint8Array(input);\n\n\tswitch (outputType) {\n\t\tcase TypeOutput.Uint8Array:\n\t\t\treturn output as TypeOutputReturnType[T];\n\t\tcase TypeOutput.BigInt:\n\t\t\treturn uint8ArrayToBigInt(output) as TypeOutputReturnType[T];\n\t\tcase TypeOutput.Number: {\n\t\t\tconst bigInt = uint8ArrayToBigInt(output);\n\t\t\tif (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)',\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Number(bigInt) as TypeOutputReturnType[T];\n\t\t}\n\t\tcase TypeOutput.PrefixedHexString:\n\t\t\treturn bytesToHex(output) as TypeOutputReturnType[T];\n\t\tdefault:\n\t\t\tthrow new Error('unknown outputType');\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data.\n *\n * **_NOTE:_** This package has NOT been audited and might potentially be unsafe. Take precautions to clear memory properly, store the private keys safely, and test transaction receiving and sending functionality properly before using in production!\n *\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { create, decrypt } from 'web3-eth-accounts'; // ....\n * ```\n *\n * To use this package within the web3 object use:\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * // now you have access to the accounts class\n * web3.eth.accounts.create();\n * ```\n */\n\nexport * from './wallet.js';\nexport * from './account.js';\nexport * from './types.js';\nexport * from './schemas.js';\nexport * from './common/index.js';\nexport * from './tx/index.js';\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport const keyStoreSchema = {\n\ttype: 'object',\n\trequired: ['crypto', 'id', 'version', 'address'],\n\tproperties: {\n\t\tcrypto: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['cipher', 'ciphertext', 'cipherparams', 'kdf', 'kdfparams', 'mac'],\n\t\t\tproperties: {\n\t\t\t\tcipher: { type: 'string' },\n\t\t\t\tciphertext: { type: 'string' },\n\t\t\t\tcipherparams: { type: 'object' },\n\t\t\t\tkdf: { type: 'string' },\n\t\t\t\tkdfparams: { type: 'object' },\n\t\t\t\tsalt: { type: 'string' },\n\t\t\t\tmac: { type: 'string' },\n\t\t\t},\n\t\t},\n\t\tid: { type: 'string' },\n\t\tversion: { type: 'number' },\n\t\taddress: { type: 'string' },\n\t},\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex, uint8ArrayEquals } from 'web3-utils';\nimport { secp256k1 } from './constants.js';\nimport { assertIsUint8Array, zeros } from '../common/utils.js';\n\nexport class Address {\n\tpublic readonly buf: Uint8Array;\n\n\tpublic constructor(buf: Uint8Array) {\n\t\tif (buf.length !== 20) {\n\t\t\tthrow new Error('Invalid address length');\n\t\t}\n\t\tthis.buf = buf;\n\t}\n\n\t/**\n\t * Returns the zero address.\n\t */\n\tpublic static zero(): Address {\n\t\treturn new Address(zeros(20));\n\t}\n\n\t/**\n\t * Is address equal to another.\n\t */\n\tpublic equals(address: Address): boolean {\n\t\treturn uint8ArrayEquals(this.buf, address.buf);\n\t}\n\n\t/**\n\t * Is address zero.\n\t */\n\tpublic isZero(): boolean {\n\t\treturn this.equals(Address.zero());\n\t}\n\n\t/**\n\t * Returns hex encoding of address.\n\t */\n\tpublic toString(): string {\n\t\treturn bytesToHex(this.buf);\n\t}\n\n\t/**\n\t * Returns Uint8Array representation of address.\n\t */\n\tpublic toArray(): Uint8Array {\n\t\treturn this.buf;\n\t}\n\n\t/**\n\t * Returns the ethereum address of a given public key.\n\t * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n\t * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n\t * @param sanitize Accept public keys in other formats\n\t */\n\tpublic static publicToAddress(_pubKey: Uint8Array, sanitize = false): Uint8Array {\n\t\tlet pubKey = _pubKey;\n\t\tassertIsUint8Array(pubKey);\n\t\tif (sanitize && pubKey.length !== 64) {\n\t\t\tpubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n\t\t}\n\t\tif (pubKey.length !== 64) {\n\t\t\tthrow new Error('Expected pubKey to be of length 64');\n\t\t}\n\t\t// Only take the lower 160bits of the hash\n\t\treturn keccak256(pubKey).slice(-20);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Numbers } from 'web3-types';\nimport { bytesToHex } from 'web3-utils';\nimport { MAX_INTEGER, MAX_UINT64, SECP256K1_ORDER_DIV_2, secp256k1 } from './constants.js';\nimport { toUint8Array, uint8ArrayToBigInt, unpadUint8Array } from '../common/utils.js';\nimport { Common } from '../common/common.js';\nimport { Hardfork, Chain } from '../common/enums.js';\nimport type {\n\tAccessListEIP2930TxData,\n\tAccessListEIP2930ValuesArray,\n\tFeeMarketEIP1559TxData,\n\tFeeMarketEIP1559ValuesArray,\n\tJsonTx,\n\tTxData,\n\tTxOptions,\n\tTxValuesArray,\n} from './types.js';\nimport { Capability, ECDSASignature } from './types.js';\nimport { Address } from './address.js';\nimport { checkMaxInitCodeSize } from './utils.js';\n\ninterface TransactionCache {\n\thash: Uint8Array | undefined;\n\tdataFee?: {\n\t\tvalue: bigint;\n\t\thardfork: string | Hardfork;\n\t};\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n\tprivate readonly _type: number;\n\n\tpublic readonly nonce: bigint;\n\tpublic readonly gasLimit: bigint;\n\tpublic readonly to?: Address;\n\tpublic readonly value: bigint;\n\tpublic readonly data: Uint8Array;\n\n\tpublic readonly v?: bigint;\n\tpublic readonly r?: bigint;\n\tpublic readonly s?: bigint;\n\n\tpublic readonly common!: Common;\n\n\tprotected cache: TransactionCache = {\n\t\thash: undefined,\n\t\tdataFee: undefined,\n\t};\n\n\tprotected readonly txOptions: TxOptions;\n\n\t/**\n\t * List of tx type defining EIPs,\n\t * e.g. 1559 (fee market) and 2930 (access lists)\n\t * for FeeMarketEIP1559Transaction objects\n\t */\n\tprotected activeCapabilities: number[] = [];\n\n\t/**\n\t * The default chain the tx falls back to if no Common\n\t * is provided and if the chain can't be derived from\n\t * a passed in chainId (only EIP-2718 typed txs) or\n\t * EIP-155 signature (legacy txs).\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_CHAIN = Chain.Mainnet;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge;\n\n\tpublic constructor(\n\t\ttxData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n\t\topts: TxOptions,\n\t) {\n\t\tconst { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n\t\tthis._type = Number(uint8ArrayToBigInt(toUint8Array(type)));\n\n\t\tthis.txOptions = opts;\n\n\t\tconst toB = toUint8Array(to === '' ? '0x' : to);\n\t\tconst vB = toUint8Array(v === '' ? '0x' : v);\n\t\tconst rB = toUint8Array(r === '' ? '0x' : r);\n\t\tconst sB = toUint8Array(s === '' ? '0x' : s);\n\n\t\tthis.nonce = uint8ArrayToBigInt(toUint8Array(nonce === '' ? '0x' : nonce));\n\t\tthis.gasLimit = uint8ArrayToBigInt(toUint8Array(gasLimit === '' ? '0x' : gasLimit));\n\t\tthis.to = toB.length > 0 ? new Address(toB) : undefined;\n\t\tthis.value = uint8ArrayToBigInt(toUint8Array(value === '' ? '0x' : value));\n\t\tthis.data = toUint8Array(data === '' ? '0x' : data);\n\n\t\tthis.v = vB.length > 0 ? uint8ArrayToBigInt(vB) : undefined;\n\t\tthis.r = rB.length > 0 ? uint8ArrayToBigInt(rB) : undefined;\n\t\tthis.s = sB.length > 0 ? uint8ArrayToBigInt(sB) : undefined;\n\n\t\tthis._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n\n\t\t// geth limits gasLimit to 2^64-1\n\t\tthis._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n\n\t\t// EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n\t\tthis._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tconst createContract = this.to === undefined || this.to === null;\n\t\tconst allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false;\n\t\tconst common = opts.common ?? this._getCommon();\n\t\tif (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {\n\t\t\tcheckMaxInitCodeSize(common, this.data.length);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the transaction type.\n\t *\n\t * Note: legacy txs will return tx type `0`.\n\t */\n\tpublic get type() {\n\t\treturn this._type;\n\t}\n\n\t/**\n\t * Checks if a tx type defining capability is active\n\t * on a tx, for example the EIP-1559 fee market mechanism\n\t * or the EIP-2930 access list feature.\n\t *\n\t * Note that this is different from the tx type itself,\n\t * so EIP-2930 access lists can very well be active\n\t * on an EIP-1559 tx for example.\n\t *\n\t * This method can be useful for feature checks if the\n\t * tx type is unknown (e.g. when instantiated with\n\t * the tx factory).\n\t *\n\t * See `Capabilites` in the `types` module for a reference\n\t * on all supported capabilities.\n\t */\n\tpublic supports(capability: Capability) {\n\t\treturn this.activeCapabilities.includes(capability);\n\t}\n\n\t/**\n\t * Checks if the transaction has the minimum amount of gas required\n\t * (DataFee + TxFee + Creation Fee).\n\t */\n\tpublic validate(): boolean;\n\tpublic validate(stringError: false): boolean;\n\tpublic validate(stringError: true): string[];\n\tpublic validate(stringError = false): boolean | string[] {\n\t\tconst errors = [];\n\n\t\tif (this.getBaseFee() > this.gasLimit) {\n\t\t\terrors.push(\n\t\t\t\t`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`,\n\t\t\t);\n\t\t}\n\n\t\tif (this.isSigned() && !this.verifySignature()) {\n\t\t\terrors.push('Invalid Signature');\n\t\t}\n\n\t\treturn stringError ? errors : errors.length === 0;\n\t}\n\n\tprotected _validateYParity() {\n\t\tconst { v } = this;\n\t\tif (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n\t\t\tconst msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n\t * Reasoning: https://ethereum.stackexchange.com/a/55728\n\t */\n\tprotected _validateHighS() {\n\t\tconst { s } = this;\n\t\tif (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n\t */\n\tpublic getBaseFee(): bigint {\n\t\tconst txFee = this.common.param('gasPrices', 'tx');\n\t\tlet fee = this.getDataFee();\n\t\tif (txFee) fee += txFee;\n\t\tif (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n\t\t\tconst txCreationFee = this.common.param('gasPrices', 'txCreation');\n\t\t\tif (txCreationFee) fee += txCreationFee;\n\t\t}\n\t\treturn fee;\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tconst txDataZero = this.common.param('gasPrices', 'txDataZero');\n\t\tconst txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n\n\t\tlet cost = BigInt(0);\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < this.data.length; i += 1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions\n\t\t\tthis.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n\t\t\tconst dataLength = BigInt(Math.ceil(this.data.length / 32));\n\t\t\tconst initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;\n\t\t\tcost += initCodeCost;\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic abstract getUpfrontCost(): bigint;\n\n\t/**\n\t * If the tx's `to` is to the creation address\n\t */\n\tpublic toCreationAddress(): boolean {\n\t\treturn this.to === undefined || this.to.buf.length === 0;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of this transaction, in order.\n\t *\n\t * Use {@link BaseTransaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n\t */\n\tpublic abstract raw():\n\t\t| TxValuesArray\n\t\t| AccessListEIP2930ValuesArray\n\t\t| FeeMarketEIP1559ValuesArray;\n\n\t/**\n\t * Returns the encoding of the transaction.\n\t */\n\tpublic abstract serialize(): Uint8Array;\n\n\t// Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n\t//\n\t// Note: do not use code docs here since VS Studio is then not able to detect the\n\t// comments from the inherited methods\n\tpublic abstract getMessageToSign(hashMessage: false): Uint8Array | Uint8Array[];\n\tpublic abstract getMessageToSign(hashMessage?: true): Uint8Array;\n\n\tpublic abstract hash(): Uint8Array;\n\n\tpublic abstract getMessageToVerifySignature(): Uint8Array;\n\n\tpublic isSigned(): boolean {\n\t\tconst { v, r, s } = this;\n\t\tif (v === undefined || r === undefined || s === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determines if the signature is valid\n\t */\n\tpublic verifySignature(): boolean {\n\t\ttry {\n\t\t\t// Main signature verification is done in `getSenderPublicKey()`\n\t\t\tconst publicKey = this.getSenderPublicKey();\n\t\t\treturn unpadUint8Array(publicKey).length !== 0;\n\t\t} catch (e: any) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the sender's address\n\t */\n\tpublic getSenderAddress(): Address {\n\t\treturn new Address(Address.publicToAddress(this.getSenderPublicKey()));\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic abstract getSenderPublicKey(): Uint8Array;\n\n\t/**\n\t * Signs a transaction.\n\t *\n\t * Note that the signed tx is returned as a new object,\n\t * use as follows:\n\t * ```javascript\n\t * const signedTx = tx.sign(privateKey)\n\t * ```\n\t */\n\tpublic sign(privateKey: Uint8Array): TransactionObject {\n\t\tif (privateKey.length !== 32) {\n\t\t\tconst msg = this._errorMsg('Private key must be 32 bytes in length.');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\t// Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n\t\t// and want to recreate a signature (where EIP155 should be applied)\n\t\t// Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n\t\t// 2021-06-23\n\t\tlet hackApplied = false;\n\t\tif (\n\t\t\tthis.type === 0 &&\n\t\t\tthis.common.gteHardfork('spuriousDragon') &&\n\t\t\t!this.supports(Capability.EIP155ReplayProtection)\n\t\t) {\n\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\thackApplied = true;\n\t\t}\n\n\t\tconst msgHash = this.getMessageToSign(true);\n\t\tconst { v, r, s } = this._ecsign(msgHash, privateKey);\n\t\tconst tx = this._processSignature(v, r, s);\n\n\t\t// Hack part 2\n\t\tif (hackApplied) {\n\t\t\tconst index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.activeCapabilities.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn tx;\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic abstract toJSON(): JsonTx;\n\n\t// Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n\tprotected abstract _processSignature(\n\t\tv: bigint,\n\t\tr: Uint8Array,\n\t\ts: Uint8Array,\n\t): TransactionObject;\n\n\t/**\n\t * Does chain ID checks on common and returns a common\n\t * to be used on instantiation\n\t * @hidden\n\t *\n\t * @param common - {@link Common} instance from tx options\n\t * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n\t */\n\tprotected _getCommon(common?: Common, chainId?: Numbers) {\n\t\t// Chain ID provided\n\t\tif (chainId !== undefined) {\n\t\t\tconst chainIdBigInt = uint8ArrayToBigInt(toUint8Array(chainId));\n\t\t\tif (common) {\n\t\t\t\tif (common.chainId() !== chainIdBigInt) {\n\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t'The chain ID does not match the chain ID of Common',\n\t\t\t\t\t);\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t\t// Common provided, chain ID does match\n\t\t\t\t// -> Return provided Common\n\t\t\t\treturn common.copy();\n\t\t\t}\n\t\t\tif (Common.isSupportedChainId(chainIdBigInt)) {\n\t\t\t\t// No Common, chain ID supported by Common\n\t\t\t\t// -> Instantiate Common with chain ID\n\t\t\t\treturn new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK });\n\t\t\t}\n\t\t\t// No Common, chain ID not supported by Common\n\t\t\t// -> Instantiate custom Common derived from DEFAULT_CHAIN\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: 'custom-chain',\n\t\t\t\t\tnetworkId: chainIdBigInt,\n\t\t\t\t\tchainId: chainIdBigInt,\n\t\t\t\t},\n\t\t\t\t{ baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK },\n\t\t\t);\n\t\t}\n\t\t// No chain ID provided\n\t\t// -> return Common provided or create new default Common\n\t\treturn (\n\t\t\tcommon?.copy() ??\n\t\t\tnew Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n\t\t);\n\t}\n\n\t/**\n\t * Validates that an object with BigInt values cannot exceed the specified bit limit.\n\t * @param values Object containing string keys and BigInt values\n\t * @param bits Number of bits to check (64 or 256)\n\t * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n\t */\n\tprotected _validateCannotExceedMaxInteger(\n\t\tvalues: { [key: string]: bigint | undefined },\n\t\tbits = 256,\n\t\tcannotEqual = false,\n\t) {\n\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\tswitch (bits) {\n\t\t\t\tcase 64:\n\t\t\t\t\tif (cannotEqual) {\n\t\t\t\t\t\tif (value !== undefined && value >= MAX_UINT64) {\n\t\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t\t`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== undefined && value > MAX_UINT64) {\n\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 256:\n\t\t\t\t\tif (cannotEqual) {\n\t\t\t\t\t\tif (value !== undefined && value >= MAX_INTEGER) {\n\t\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t\t`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== undefined && value > MAX_INTEGER) {\n\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: {\n\t\t\t\t\tconst msg = this._errorMsg('unimplemented bits value');\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected static _validateNotArray(values: { [key: string]: any }) {\n\t\tconst txDataKeys = [\n\t\t\t'nonce',\n\t\t\t'gasPrice',\n\t\t\t'gasLimit',\n\t\t\t'to',\n\t\t\t'value',\n\t\t\t'data',\n\t\t\t'v',\n\t\t\t'r',\n\t\t\t's',\n\t\t\t'type',\n\t\t\t'baseFee',\n\t\t\t'maxFeePerGas',\n\t\t\t'chainId',\n\t\t];\n\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\tif (txDataKeys.includes(key)) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthrow new Error(`${key} cannot be an array`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic abstract errorStr(): string;\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected abstract _errorMsg(msg: string): string;\n\n\t/**\n\t * Returns the shared error postfix part for _error() method\n\t * tx type implementations.\n\t */\n\tprotected _getSharedErrorPostfix() {\n\t\tlet hash = '';\n\t\ttry {\n\t\t\thash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)';\n\t\t} catch (e: any) {\n\t\t\thash = 'error';\n\t\t}\n\t\tlet isSigned = '';\n\t\ttry {\n\t\t\tisSigned = this.isSigned().toString();\n\t\t} catch (e: any) {\n\t\t\thash = 'error';\n\t\t}\n\t\tlet hf = '';\n\t\ttry {\n\t\t\thf = this.common.hardfork();\n\t\t} catch (e: any) {\n\t\t\thf = 'error';\n\t\t}\n\n\t\tlet postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n\t\tpostfix += `signed=${isSigned} hf=${hf}`;\n\n\t\treturn postfix;\n\t}\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _ecsign(msgHash: Uint8Array, privateKey: Uint8Array, chainId?: bigint): ECDSASignature {\n\t\tconst signature = secp256k1.sign(msgHash, privateKey);\n\t\tconst signatureBytes = signature.toCompactRawBytes();\n\n\t\tconst r = signatureBytes.subarray(0, 32);\n\t\tconst s = signatureBytes.subarray(32, 64);\n\n\t\tconst v =\n\t\t\tchainId === undefined\n\t\t\t\t? BigInt(signature.recovery! + 27)\n\t\t\t\t: BigInt(signature.recovery! + 35) + BigInt(chainId) * BigInt(2);\n\n\t\treturn { r, s, v };\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromSerializedTx(\n\t\t// @ts-expect-error unused variable\n\t\tserialized: Uint8Array,\n\t\t// @ts-expect-error unused variable\n\t\topts: TxOptions = {},\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t): any {}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromTxData(\n\t\t// @ts-expect-error unused variable\n\t\ttxData: any,\n\t\t// @ts-expect-error unused variable\n\t\topts: TxOptions = {},\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t): any {}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/extensions\nimport * as ethereumCryptography from 'ethereum-cryptography/secp256k1.js';\n\nexport const secp256k1 = ethereumCryptography.secp256k1 ?? ethereumCryptography;\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff');\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n\t'0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n);\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n;\nexport const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport {\n\tgetAccessListData,\n\tgetAccessListJSON,\n\tgetDataFeeEIP2930,\n\tverifyAccessList,\n} from './utils.js';\nimport {\n\tbigIntToHex,\n\ttoUint8Array,\n\tecrecover,\n\tuint8ArrayToBigInt,\n\tbigIntToUnpaddedUint8Array,\n} from '../common/utils.js';\nimport type {\n\tAccessList,\n\tAccessListUint8Array,\n\tFeeMarketEIP1559TxData,\n\tFeeMarketEIP1559ValuesArray,\n\tJsonTx,\n\tTxOptions,\n} from './types.js';\nimport type { Common } from '../common/common.js';\n\nconst TRANSACTION_TYPE = 2;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n// eslint-disable-next-line no-use-before-define\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n\tpublic readonly chainId: bigint;\n\tpublic readonly accessList: AccessListUint8Array;\n\tpublic readonly AccessListJSON: AccessList;\n\tpublic readonly maxPriorityFeePerGas: bigint;\n\tpublic readonly maxFeePerGas: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK = 'london';\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, v, r, s }\n\t *\n\t * Notes:\n\t * - `chainId` will be set automatically if not provided\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\treturn new FeeMarketEIP1559Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tif (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(\n\t\t\t\t\tserialized.subarray(0, 1),\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t\tconst values = RLP.decode(serialized.subarray(1));\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input: must be array');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t */\n\tpublic static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n\t\tif (values.length !== 9 && values.length !== 12) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [\n\t\t\tchainId,\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tto,\n\t\t\tvalue,\n\t\t\tdata,\n\t\t\taccessList,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t] = values;\n\n\t\tthis._validateNotArray({ chainId, v });\n\t\tvalidateNoLeadingZeroes({\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tvalue,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t});\n\n\t\treturn new FeeMarketEIP1559Transaction(\n\t\t\t{\n\t\t\t\tchainId: uint8ArrayToBigInt(chainId),\n\t\t\t\tnonce,\n\t\t\t\tmaxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\taccessList: accessList ?? [],\n\t\t\t\tv: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\t\tconst { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n\n\t\tthis.common = this._getCommon(opts.common, chainId);\n\t\tthis.chainId = this.common.chainId();\n\n\t\tif (!this.common.isActivatedEIP(1559)) {\n\t\t\tthrow new Error('EIP-1559 not enabled on Common');\n\t\t}\n\t\tthis.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n\n\t\t// Populate the access list fields\n\t\tconst accessListData = getAccessListData(accessList ?? []);\n\t\tthis.accessList = accessListData.accessList;\n\t\tthis.AccessListJSON = accessListData.AccessListJSON;\n\t\t// Verify the access list format.\n\t\tverifyAccessList(this.accessList);\n\n\t\tthis.maxFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxFeePerGas === '' ? '0x' : maxFeePerGas),\n\t\t);\n\t\tthis.maxPriorityFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas),\n\t\t);\n\n\t\tthis._validateCannotExceedMaxInteger({\n\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t});\n\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tthis._validateYParity();\n\t\tthis._validateHighS();\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tlet cost = super.getDataFee();\n\t\tcost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: cost,\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t * @param baseFee The base fee of the block (will be set to 0 if not provided)\n\t */\n\tpublic getUpfrontCost(baseFee = BigInt(0)): bigint {\n\t\tconst prio = this.maxPriorityFeePerGas;\n\t\tconst maxBase = this.maxFeePerGas - baseFee;\n\t\tconst inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n\t\tconst gasPrice = inclusionFeePerGas + baseFee;\n\t\treturn this.gasLimit * gasPrice + this.value;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t *\n\t * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): FeeMarketEIP1559ValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.chainId),\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxPriorityFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.accessList,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the EIP-1559 transaction.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t *\n\t * Note that in contrast to the legacy tx serialization format this is not\n\t * valid RLP any more due to the raw tx type preceding and concatenated to\n\t * the RLP encoding of the values.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\tconst base = this.raw();\n\t\treturn uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t}\n\n\t/**\n\t * Returns the serialized unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: in contrast to the legacy tx the raw message format is already\n\t * serialized and doesn't need to be RLP encoded any more.\n\t *\n\t * ```javascript\n\t * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage = true): Uint8Array {\n\t\tconst base = this.raw().slice(0, 9);\n\t\tconst message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(message);\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(this.serialize());\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(this.serialize());\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature(): Uint8Array {\n\t\treturn this.getMessageToSign();\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv! + BigInt(27), // Recover the 27 which was stripped from ecsign\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t);\n\t\t} catch (e: any) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\tpublic _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn FeeMarketEIP1559Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tchainId: this.chainId,\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\taccessList: this.accessList,\n\t\t\t\tv: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic toJSON(): JsonTx {\n\t\tconst accessListJSON = getAccessListJSON(this.accessList);\n\n\t\treturn {\n\t\t\tchainId: bigIntToHex(this.chainId),\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tmaxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n\t\t\tmaxFeePerGas: bigIntToHex(this.maxFeePerGas),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\taccessList: accessListJSON,\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\terrorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport {\n\tgetAccessListData,\n\tverifyAccessList,\n\tgetAccessListJSON,\n\tgetDataFeeEIP2930,\n} from './utils.js';\nimport {\n\tbigIntToHex,\n\ttoUint8Array,\n\tecrecover,\n\tuint8ArrayToBigInt,\n\tbigIntToUnpaddedUint8Array,\n} from '../common/utils.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport type {\n\tAccessList,\n\tAccessListUint8Array,\n\tAccessListEIP2930TxData,\n\tAccessListEIP2930ValuesArray,\n\tJsonTx,\n\tTxOptions,\n} from './types.js';\nimport type { Common } from '../common/common.js';\n\nconst TRANSACTION_TYPE = 1;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\n// eslint-disable-next-line no-use-before-define\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n\tpublic readonly chainId: bigint;\n\tpublic readonly accessList: AccessListUint8Array;\n\tpublic readonly AccessListJSON: AccessList;\n\tpublic readonly gasPrice: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK = 'berlin';\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * v, r, s }\n\t *\n\t * Notes:\n\t * - `chainId` will be set automatically if not provided\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n\t\treturn new AccessListEIP2930Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tif (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(\n\t\t\t\t\tserialized.subarray(0, 1),\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t\tconst values = RLP.decode(Uint8Array.from(serialized.subarray(1)));\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input: must be array');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn AccessListEIP2930Transaction.fromValuesArray(values as any, opts);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)]`\n\t */\n\tpublic static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n\t\tif (values.length !== 8 && values.length !== 11) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n\n\t\tthis._validateNotArray({ chainId, v });\n\t\tvalidateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n\n\t\tconst emptyAccessList: AccessList = [];\n\n\t\treturn new AccessListEIP2930Transaction(\n\t\t\t{\n\t\t\t\tchainId: uint8ArrayToBigInt(chainId),\n\t\t\t\tnonce,\n\t\t\t\tgasPrice,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\taccessList: accessList ?? emptyAccessList,\n\t\t\t\tv: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\t\tconst { chainId, accessList, gasPrice } = txData;\n\n\t\tthis.common = this._getCommon(opts.common, chainId);\n\t\tthis.chainId = this.common.chainId();\n\n\t\t// EIP-2718 check is done in Common\n\t\tif (!this.common.isActivatedEIP(2930)) {\n\t\t\tthrow new Error('EIP-2930 not enabled on Common');\n\t\t}\n\t\tthis.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);\n\n\t\t// Populate the access list fields\n\t\tconst accessListData = getAccessListData(accessList ?? []);\n\t\tthis.accessList = accessListData.accessList;\n\t\tthis.AccessListJSON = accessListData.AccessListJSON;\n\t\t// Verify the access list format.\n\t\tverifyAccessList(this.accessList);\n\n\t\tthis.gasPrice = uint8ArrayToBigInt(toUint8Array(gasPrice === '' ? '0x' : gasPrice));\n\n\t\tthis._validateCannotExceedMaxInteger({\n\t\t\tgasPrice: this.gasPrice,\n\t\t});\n\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tthis._validateYParity();\n\t\tthis._validateHighS();\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tlet cost = super.getDataFee();\n\t\tcost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: cost,\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic getUpfrontCost(): bigint {\n\t\treturn this.gasLimit * this.gasPrice + this.value;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.\n\t *\n\t * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)]`\n\t *\n\t * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty UINT8ARRAY values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): AccessListEIP2930ValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.chainId),\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.accessList,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the EIP-2930 transaction.\n\t *\n\t * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)])`\n\t *\n\t * Note that in contrast to the legacy tx serialization format this is not\n\t * valid RLP any more due to the raw tx type preceding and concatenated to\n\t * the RLP encoding of the values.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\tconst base = this.raw();\n\t\treturn uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t}\n\n\t/**\n\t * Returns the serialized unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: in contrast to the legacy tx the raw message format is already\n\t * serialized and doesn't need to be RLP encoded any more.\n\t *\n\t * ```javascript\n\t * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage = true): Uint8Array {\n\t\tconst base = this.raw().slice(0, 8);\n\t\tconst message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(message);\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(this.serialize());\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(this.serialize());\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature(): Uint8Array {\n\t\treturn this.getMessageToSign();\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv! + BigInt(27), // Recover the 27 which was stripped from ecsign\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t);\n\t\t} catch (e: any) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\tpublic _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn AccessListEIP2930Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tchainId: this.chainId,\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tgasPrice: this.gasPrice,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\taccessList: this.accessList,\n\t\t\t\tv: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic toJSON(): JsonTx {\n\t\tconst accessListJSON = getAccessListJSON(this.accessList);\n\n\t\treturn {\n\t\t\tchainId: bigIntToHex(this.chainId),\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tgasPrice: bigIntToHex(this.gasPrice),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\taccessList: accessListJSON,\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\t// Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n\t\terrorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// @ethereumjs/tx version 4.1.1\nexport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nexport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nexport { Transaction } from './legacyTransaction.js';\nexport { TransactionFactory } from './transactionFactory.js';\nexport { BaseTransaction } from './baseTransaction.js';\nexport * as txUtils from './utils.js';\nexport * from './types.js';\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { RLP } from '@ethereumjs/rlp';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex } from 'web3-utils';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport {\n\tbigIntToHex,\n\tbigIntToUnpaddedUint8Array,\n\tecrecover,\n\ttoUint8Array,\n\tuint8ArrayToBigInt,\n\tunpadUint8Array,\n} from '../common/utils.js';\nimport { MAX_INTEGER } from './constants.js';\n\nimport { BaseTransaction } from './baseTransaction.js';\n\nimport type { Common } from '../common/common.js';\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types.js';\nimport { Capability } from './types.js';\n\nconst TRANSACTION_TYPE = 0;\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n\tconst v = Number(_v);\n\tconst chainIdDoubled = Number(chainId) * 2;\n\treturn v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\n// eslint-disable-next-line no-use-before-define\nexport class Transaction extends BaseTransaction<Transaction> {\n\tpublic readonly gasPrice: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n\t *\n\t * Notes:\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: TxData, opts: TxOptions = {}) {\n\t\treturn new Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tconst values = RLP.decode(serialized);\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input. Must be array');\n\t\t}\n\n\t\treturn this.fromValuesArray(values as Uint8Array[], opts);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n\t */\n\tpublic static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n\t\t// If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction\n\t\t// This happens if you get the RLP data from `raw()`\n\t\tif (values.length !== 6 && values.length !== 9) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n\n\t\tvalidateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n\n\t\treturn new Transaction(\n\t\t\t{\n\t\t\t\tnonce,\n\t\t\t\tgasPrice,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\tv,\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\n\t\tthis.common = this._validateTxV(this.v, opts.common);\n\n\t\tthis.gasPrice = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(txData.gasPrice === '' ? '0x' : txData.gasPrice),\n\t\t);\n\n\t\tif (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\tthis._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.common.gteHardfork('spuriousDragon')) {\n\t\t\tif (!this.isSigned()) {\n\t\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\t} else {\n\t\t\t\t// EIP155 spec:\n\t\t\t\t// If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n\t\t\t\t// then when computing the hash of a transaction for purposes of signing or recovering\n\t\t\t\t// instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n\t\t\t\t// hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n\t\t\t\t// v and chain ID meet EIP-155 conditions\n\t\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\t\tif (meetsEIP155(this.v!, this.common.chainId())) {\n\t\t\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.\n\t *\n\t * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n\t *\n\t * For legacy txs this is also the correct format to add transactions\n\t * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n\t * for typed txs).\n\t *\n\t * For an unsigned tx this method returns the empty Uint8Array values\n\t * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n\t * representation have a look at {@link Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): TxValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the legacy transaction.\n\t *\n\t * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link Transaction.getMessageToSign}.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\treturn RLP.encode(this.raw());\n\t}\n\n\tprivate _getMessageToSign() {\n\t\tconst values = [\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t];\n\n\t\tif (this.supports(Capability.EIP155ReplayProtection)) {\n\t\t\tvalues.push(toUint8Array(this.common.chainId()));\n\t\t\tvalues.push(unpadUint8Array(toUint8Array(0)));\n\t\t\tvalues.push(unpadUint8Array(toUint8Array(0)));\n\t\t}\n\n\t\treturn values;\n\t}\n\n\t/**\n\t * Returns the unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: the raw message message format for the legacy tx is not RLP encoded\n\t * and you might need to do yourself with:\n\t *\n\t * ```javascript\n\t * import { bufArrToArr } from '../util'\n\t * import { RLP } from '../rlp'\n\t * const message = tx.getMessageToSign(false)\n\t * const serializedMessage = RLP.encode(message) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage: false): Uint8Array[];\n\tpublic getMessageToSign(hashMessage?: true): Uint8Array;\n\tpublic getMessageToSign(hashMessage = true) {\n\t\tconst message = this._getMessageToSign();\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(RLP.encode(message));\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: super.getDataFee(),\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn super.getDataFee();\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic getUpfrontCost(): bigint {\n\t\treturn this.gasLimit * this.gasPrice + this.value;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(RLP.encode(this.raw()));\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(RLP.encode(this.raw()));\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature() {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('This transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\tconst message = this._getMessageToSign();\n\t\treturn keccak256(RLP.encode(message));\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv!,\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t\tthis.supports(Capability.EIP155ReplayProtection)\n\t\t\t\t\t? this.common.chainId()\n\t\t\t\t\t: undefined,\n\t\t\t);\n\t\t} catch (e: any) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * Process the v, r, s values from the `sign` method of the base transaction.\n\t */\n\tprotected _processSignature(_v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tlet v = _v;\n\t\tif (this.supports(Capability.EIP155ReplayProtection)) {\n\t\t\tv += this.common.chainId() * BigInt(2) + BigInt(8);\n\t\t}\n\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tgasPrice: this.gasPrice,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\tv,\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction.\n\t */\n\tpublic toJSON(): JsonTx {\n\t\treturn {\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tgasPrice: bigIntToHex(this.gasPrice),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Validates tx's `v` value\n\t */\n\tprivate _validateTxV(_v?: bigint, common?: Common): Common {\n\t\tlet chainIdBigInt;\n\t\tconst v = _v !== undefined ? Number(_v) : undefined;\n\t\t// Check for valid v values in the scope of a signed legacy tx\n\t\tif (v !== undefined) {\n\t\t\t// v is 1. not matching the EIP-155 chainId included case and...\n\t\t\t// v is 2. not matching the classic v=27 or v=28 case\n\t\t\tif (v < 37 && v !== 27 && v !== 28) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// No unsigned tx and EIP-155 activated and chain ID included\n\t\tif (\n\t\t\tv !== undefined &&\n\t\t\tv !== 0 &&\n\t\t\t(!common || common.gteHardfork('spuriousDragon')) &&\n\t\t\tv !== 27 &&\n\t\t\tv !== 28\n\t\t) {\n\t\t\tif (common) {\n\t\t\t\tif (!meetsEIP155(BigInt(v), common.chainId())) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Derive the original chain ID\n\t\t\t\tlet numSub;\n\t\t\t\tif ((v - 35) % 2 === 0) {\n\t\t\t\t\tnumSub = 35;\n\t\t\t\t} else {\n\t\t\t\t\tnumSub = 36;\n\t\t\t\t}\n\t\t\t\t// Use derived chain ID to create a proper Common\n\t\t\t\tchainIdBigInt = BigInt(v - numSub) / BigInt(2);\n\t\t\t}\n\t\t}\n\t\treturn this._getCommon(common, chainIdBigInt);\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\terrorStr += ` gasPrice=${this.gasPrice}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Numbers } from 'web3-types';\nimport { toUint8Array, uint8ArrayToBigInt } from '../common/utils.js';\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nimport { Transaction } from './legacyTransaction.js';\nimport type { TypedTransaction } from '../types.js';\n\nimport type {\n\tAccessListEIP2930TxData,\n\tFeeMarketEIP1559TxData,\n\tTxData,\n\tTxOptions,\n} from './types.js';\nimport { BaseTransaction } from './baseTransaction.js';\n\nconst extraTxTypes: Map<Numbers, typeof BaseTransaction<unknown>> = new Map();\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class TransactionFactory {\n\t// It is not possible to instantiate a TransactionFactory object.\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function, no-useless-constructor\n\tprivate constructor() {}\n\n\tpublic static typeToInt(txType: Numbers) {\n\t\treturn Number(uint8ArrayToBigInt(toUint8Array(txType)));\n\t}\n\n\tpublic static registerTransactionType<NewTxTypeClass extends typeof BaseTransaction<unknown>>(\n\t\ttype: Numbers,\n\t\ttxClass: NewTxTypeClass,\n\t) {\n\t\tconst txType = TransactionFactory.typeToInt(type);\n\t\textraTxTypes.set(txType, txClass);\n\t}\n\n\t/**\n\t * Create a transaction from a `txData` object\n\t *\n\t * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n\t * @param txOptions - Options to pass on to the constructor of the transaction\n\t */\n\tpublic static fromTxData(\n\t\ttxData: TxData | TypedTransaction,\n\t\ttxOptions: TxOptions = {},\n\t): TypedTransaction {\n\t\tif (!('type' in txData) || txData.type === undefined) {\n\t\t\t// Assume legacy transaction\n\t\t\treturn Transaction.fromTxData(txData as TxData, txOptions);\n\t\t}\n\t\tconst txType = TransactionFactory.typeToInt(txData.type);\n\t\tif (txType === 0) {\n\t\t\treturn Transaction.fromTxData(txData as TxData, txOptions);\n\t\t}\n\t\tif (txType === 1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\treturn AccessListEIP2930Transaction.fromTxData(\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\t\t<AccessListEIP2930TxData>txData,\n\t\t\t\ttxOptions,\n\t\t\t);\n\t\t}\n\t\tif (txType === 2) {\n\t\t\treturn FeeMarketEIP1559Transaction.fromTxData(\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\t\t<FeeMarketEIP1559TxData>txData,\n\t\t\t\ttxOptions,\n\t\t\t);\n\t\t}\n\t\tconst ExtraTransaction = extraTxTypes.get(txType);\n\t\tif (ExtraTransaction?.fromTxData) {\n\t\t\treturn ExtraTransaction.fromTxData(txData, txOptions) as TypedTransaction;\n\t\t}\n\n\t\tthrow new Error(`Tx instantiation with type ${txType} not supported`);\n\t}\n\n\t/**\n\t * This method tries to decode serialized data.\n\t *\n\t * @param data - The data Uint8Array\n\t * @param txOptions - The transaction options\n\t */\n\tpublic static fromSerializedData(\n\t\tdata: Uint8Array,\n\t\ttxOptions: TxOptions = {},\n\t): TypedTransaction {\n\t\tif (data[0] <= 0x7f) {\n\t\t\t// Determine the type.\n\t\t\tswitch (data[0]) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n\t\t\t\tdefault: {\n\t\t\t\t\tconst ExtraTransaction = extraTxTypes.get(Number(data[0]));\n\t\t\t\t\tif (ExtraTransaction?.fromSerializedTx) {\n\t\t\t\t\t\treturn ExtraTransaction.fromSerializedTx(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\ttxOptions,\n\t\t\t\t\t\t) as TypedTransaction;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(`TypedTransaction with ID ${data[0]} unknown`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn Transaction.fromSerializedTx(data, txOptions);\n\t\t}\n\t}\n\n\t/**\n\t * When decoding a BlockBody, in the transactions field, a field is either:\n\t * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n\t * A Uint8Array[] (Legacy Transaction)\n\t * This method returns the right transaction.\n\t *\n\t * @param data - A Uint8Array or Uint8Array[]\n\t * @param txOptions - The transaction options\n\t */\n\tpublic static fromBlockBodyData(data: Uint8Array | Uint8Array[], txOptions: TxOptions = {}) {\n\t\tif (data instanceof Uint8Array) {\n\t\t\treturn this.fromSerializedData(data, txOptions);\n\t\t}\n\t\tif (Array.isArray(data)) {\n\t\t\t// It is a legacy transaction\n\t\t\treturn Transaction.fromValuesArray(data, txOptions);\n\t\t}\n\t\tthrow new Error('Cannot decode transaction: unknown type input');\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport type { HexString, Numbers } from 'web3-types';\n\nimport type { Common } from '../common/common.js';\n// eslint-disable-next-line require-extensions/require-extensions\nimport type { Uint8ArrayLike, PrefixedHexString } from '../common/types';\nimport { Address } from './address.js';\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n\t/**\n\t * Tx supports EIP-155 replay protection\n\t * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n\t */\n\tEIP155ReplayProtection = 155,\n\n\t/**\n\t * Tx supports EIP-1559 gas fee market mechanism\n\t * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n\t */\n\tEIP1559FeeMarket = 1559,\n\n\t/**\n\t * Tx is a typed transaction as defined in EIP-2718\n\t * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n\t */\n\tEIP2718TypedTransaction = 2718,\n\n\t/**\n\t * Tx supports access list generation as defined in EIP-2930\n\t * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n\t */\n\tEIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n\t/**\n\t * A {@link Common} object defining the chain and hardfork for the transaction.\n\t *\n\t * Object will be internally copied so that tx behavior don't incidentally\n\t * change on future HF changes.\n\t *\n\t * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n\t *\n\t * Current default hardfork: `istanbul`\n\t */\n\tcommon?: Common;\n\t/**\n\t * A transaction object by default gets frozen along initialization. This gives you\n\t * strong additional security guarantees on the consistency of the tx parameters.\n\t * It also enables tx hash caching when the `hash()` method is called multiple times.\n\t *\n\t * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n\t * add additional properties - it is strongly encouraged that you do the freeze yourself\n\t * within your code instead.\n\t *\n\t * Default: true\n\t */\n\tfreeze?: boolean;\n\n\t/**\n\t * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n\t * Gas cost for initcode size analysis will still be charged. Use with caution.\n\t */\n\tallowUnlimitedInitCodeSize?: boolean;\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n\taddress: PrefixedHexString;\n\tstorageKeys: PrefixedHexString[];\n};\n\n/*\n * An Access List as a tuple of [address: Uint8Array, storageKeys: Uint8Array[]]\n */\nexport type AccessListUint8ArrayItem = [Uint8Array, Uint8Array[]];\nexport type AccessListUint8Array = AccessListUint8ArrayItem[];\nexport type AccessList = AccessListItem[];\n\nexport function isAccessListUint8Array(\n\tinput: AccessListUint8Array | AccessList,\n): input is AccessListUint8Array {\n\tif (input.length === 0) {\n\t\treturn true;\n\t}\n\tconst firstItem = input[0];\n\tif (Array.isArray(firstItem)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isAccessList(input: AccessListUint8Array | AccessList): input is AccessList {\n\treturn !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.\n}\n\nexport interface ECDSASignature {\n\tv: bigint;\n\tr: Uint8Array;\n\ts: Uint8Array;\n}\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n\t/**\n\t * The transaction's nonce.\n\t */\n\tnonce?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction's gas price.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tgasPrice?: Numbers | Uint8Array | null;\n\n\t/**\n\t * The transaction's gas limit.\n\t */\n\tgasLimit?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction's the address is sent to.\n\t */\n\tto?: Address | Uint8Array | HexString;\n\n\t/**\n\t * The amount of Ether sent.\n\t */\n\tvalue?: Numbers | Uint8Array;\n\n\t/**\n\t * This will contain the data of the message or the init of a contract.\n\t */\n\tdata?: Uint8ArrayLike;\n\n\t/**\n\t * EC recovery ID.\n\t */\n\tv?: Numbers | Uint8Array;\n\n\t/**\n\t * EC signature parameter.\n\t */\n\tr?: Numbers | Uint8Array;\n\n\t/**\n\t * EC signature parameter.\n\t */\n\ts?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction type\n\t */\n\n\ttype?: Numbers;\n};\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n\t/**\n\t * The transaction's chain ID\n\t */\n\tchainId?: Numbers;\n\n\t/**\n\t * The access list which contains the addresses/storage slots which the transaction wishes to access\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\taccessList?: AccessListUint8Array | AccessList | null;\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n\t/**\n\t * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n\t * transactions and should always be undefined for this specific transaction type.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tgasPrice?: never | null;\n\t/**\n\t * The maximum inclusion fee per gas (this fee is given to the miner)\n\t */\n\tmaxPriorityFeePerGas?: Numbers | Uint8Array;\n\t/**\n\t * The maximum total fee\n\t */\n\tmaxFeePerGas?: Numbers | Uint8Array;\n}\n\n/**\n * Uint8Array values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Uint8Array[];\n\n/**\n * Uint8Array values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tAccessListUint8Array,\n\tUint8Array?,\n\tUint8Array?,\n\tUint8Array?,\n];\n\n/**\n * Uint8Array values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tAccessListUint8Array,\n\tUint8Array?,\n\tUint8Array?,\n\tUint8Array?,\n];\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] };\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n\tnonce?: string;\n\tgasPrice?: string;\n\tgasLimit?: string;\n\tto?: string;\n\tdata?: string;\n\tv?: string;\n\tr?: string;\n\ts?: string;\n\tvalue?: string;\n\tchainId?: string;\n\taccessList?: JsonAccessListItem[];\n\ttype?: string;\n\tmaxPriorityFeePerGas?: string;\n\tmaxFeePerGas?: string;\n\tmaxFeePerDataGas?: string;\n\tversionedHashes?: string[];\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { HexString } from 'web3-types';\nimport { bytesToHex } from 'web3-utils';\nimport { setLengthLeft, toUint8Array } from '../common/utils.js';\nimport type { AccessList, AccessListUint8Array, AccessListItem } from './types.js';\nimport { isAccessList } from './types.js';\n\nimport type { Common } from '../common/common.js';\n\nexport const checkMaxInitCodeSize = (common: Common, length: number) => {\n\tconst maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n\tif (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n\t\tthrow new Error(\n\t\t\t`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n\t\t\t\t'vm',\n\t\t\t\t'maxInitCodeSize',\n\t\t\t)}`,\n\t\t);\n\t}\n};\n\nexport const getAccessListData = (accessList: AccessListUint8Array | AccessList) => {\n\tlet AccessListJSON;\n\tlet uint8arrayAccessList;\n\tif (isAccessList(accessList)) {\n\t\tAccessListJSON = accessList;\n\t\tconst newAccessList: AccessListUint8Array = [];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < accessList.length; i += 1) {\n\t\t\tconst item: AccessListItem = accessList[i];\n\t\t\tconst addressBytes = toUint8Array(item.address);\n\t\t\tconst storageItems: Uint8Array[] = [];\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\t\tfor (let index = 0; index < item.storageKeys.length; index += 1) {\n\t\t\t\tstorageItems.push(toUint8Array(item.storageKeys[index]));\n\t\t\t}\n\t\t\tnewAccessList.push([addressBytes, storageItems]);\n\t\t}\n\t\tuint8arrayAccessList = newAccessList;\n\t} else {\n\t\tuint8arrayAccessList = accessList ?? [];\n\t\t// build the JSON\n\t\tconst json: AccessList = [];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < uint8arrayAccessList.length; i += 1) {\n\t\t\tconst data = uint8arrayAccessList[i];\n\t\t\tconst address = bytesToHex(data[0]);\n\t\t\tconst storageKeys: string[] = [];\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\t\tfor (let item = 0; item < data[1].length; item += 1) {\n\t\t\t\tstorageKeys.push(bytesToHex(data[1][item]));\n\t\t\t}\n\t\t\tconst jsonItem: AccessListItem = {\n\t\t\t\taddress,\n\t\t\t\tstorageKeys,\n\t\t\t};\n\t\t\tjson.push(jsonItem);\n\t\t}\n\t\tAccessListJSON = json;\n\t}\n\n\treturn {\n\t\tAccessListJSON,\n\t\taccessList: uint8arrayAccessList,\n\t};\n};\n\nexport const verifyAccessList = (accessList: AccessListUint8Array) => {\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let key = 0; key < accessList.length; key += 1) {\n\t\tconst accessListItem = accessList[key];\n\t\tconst address = accessListItem[0];\n\t\tconst storageSlots = accessListItem[1];\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n\t\tif ((<any>accessListItem)[2] !== undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.',\n\t\t\t);\n\t\t}\n\t\tif (address.length !== 20) {\n\t\t\tthrow new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {\n\t\t\tif (storageSlots[storageSlot].length !== 32) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Invalid EIP-2930 transaction: storage slot length should be 32 bytes',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const getAccessListJSON = (\n\taccessList: AccessListUint8Array,\n): {\n\taddress: HexString;\n\tstorageKeys: HexString[];\n}[] => {\n\tconst accessListJSON: { address: HexString; storageKeys: HexString[] }[] = [];\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let index = 0; index < accessList.length; index += 1) {\n\t\tconst item: any = accessList[index];\n\t\tconst JSONItem: { address: HexString; storageKeys: HexString[] } = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n\t\t\taddress: bytesToHex(setLengthLeft(<Uint8Array>item[0], 20)),\n\t\t\tstorageKeys: [],\n\t\t};\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/prefer-optional-chain\n\t\tconst storageSlots: Uint8Array[] = item && item[1];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let slot = 0; slot < storageSlots.length; slot += 1) {\n\t\t\tconst storageSlot = storageSlots[slot];\n\t\t\tJSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)));\n\t\t}\n\t\taccessListJSON.push(JSONItem);\n\t}\n\treturn accessListJSON;\n};\n\nexport const getDataFeeEIP2930 = (accessList: AccessListUint8Array, common: Common): number => {\n\tconst accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n\tconst accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n\n\tlet slots = 0;\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let index = 0; index < accessList.length; index += 1) {\n\t\tconst item = accessList[index];\n\t\tconst storageSlots = item[1];\n\t\tslots += storageSlots.length;\n\t}\n\n\tconst addresses = accessList.length;\n\treturn addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3BaseWallet, Web3BaseWalletAccount, KeyStore } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { WebStorage } from './types.js';\n\ntype BrowserError = { code: number; name: string };\n\n/**\n * Wallet is an in memory `wallet` that can hold multiple accounts.\n * These accounts can be used when using web3.eth.sendTransaction().\n *\n * ### Parameters\n *  Web3AccountProvider - AccountProvider for the wallet\n *\n * ```ts\n * import Web3 from 'web3';\n * const web3 = new Web3(\"https://localhost:8454\")\n * web3.eth.accounts.wallet\n * > Wallet(0) [\n *   _accountProvider: {\n *     create: [Function: create],\n *     privateKeyToAccount: [Function: privateKeyToAccount],\n *     decrypt: [Function: decrypt]\n *   },\n *   _addressMap: Map(0) {},\n *   _defaultKeyName: 'web3js_wallet'\n * ]\n * ```\n */\nexport class Wallet<\n\tT extends Web3BaseWalletAccount = Web3BaseWalletAccount,\n> extends Web3BaseWallet<T> {\n\tprivate readonly _addressMap = new Map<string, number>();\n\tprivate readonly _defaultKeyName = 'web3js_wallet';\n\n\t/**\n\t * Get the storage object of the browser\n\t *\n\t * @returns the storage\n\t */\n\tpublic static getStorage(): WebStorage | undefined {\n\t\tlet storage: WebStorage | undefined;\n\n\t\ttry {\n\t\t\tstorage = window.localStorage;\n\t\t\tconst x = '__storage_test__';\n\t\t\tstorage.setItem(x, x);\n\t\t\tstorage.removeItem(x);\n\n\t\t\treturn storage;\n\t\t} catch (e: unknown) {\n\t\t\treturn (e as BrowserError) &&\n\t\t\t\t// everything except Firefox\n\t\t\t\t((e as BrowserError).code === 22 ||\n\t\t\t\t\t// Firefox\n\t\t\t\t\t(e as BrowserError).code === 1014 ||\n\t\t\t\t\t// test name field too, because code might not be present\n\t\t\t\t\t// everything except Firefox\n\t\t\t\t\t(e as BrowserError).name === 'QuotaExceededError' ||\n\t\t\t\t\t// Firefox\n\t\t\t\t\t(e as BrowserError).name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\n\t\t\t\t!isNullish(storage) &&\n\t\t\t\tstorage.length !== 0\n\t\t\t\t? storage\n\t\t\t\t: undefined;\n\t\t}\n\t}\n\t/**\n\t * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.\n\t *\n\t * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.\n\t * @returns The wallet\n\t * ```ts\n\t * web3.eth.accounts.wallet.create(2)\n\t * > Wallet(2) [\n\t *   {\n\t *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',\n\t *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   {\n\t *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',\n\t *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _addressMap: Map(2) {\n\t *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,\n\t *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1\n\t *   },\n\t *   _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t *\n\t * ```\n\t */\n\n\tpublic create(numberOfAccounts: number) {\n\t\tfor (let i = 0; i < numberOfAccounts; i += 1) {\n\t\t\tthis.add(this._accountProvider.create());\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an account using a private key or account object to the wallet.\n\t *\n\t * @param account - A private key or account object\n\t * @returns The wallet\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n\t * > Wallet(1) [\n\t *   {\n\t *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n\t *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },\n\t *   _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic add(account: T | string): this {\n\t\tif (typeof account === 'string') {\n\t\t\treturn this.add(this._accountProvider.privateKeyToAccount(account));\n\t\t}\n\t\tlet index = this.length;\n\t\tconst existAccount = this.get(account.address);\n\t\tif (existAccount) {\n\t\t\tconsole.warn(`Account ${account.address.toLowerCase()} already exists.`);\n\t\t\tindex = this._addressMap.get(account.address.toLowerCase()) ?? index;\n\t\t}\n\t\tthis._addressMap.set(account.address.toLowerCase(), index);\n\t\tthis[index] = account;\n\n\t\treturn this;\n\t}\n\t/**\n\t * Get the account of the wallet with either the index or public address.\n\t *\n\t * @param addressOrIndex - A string of the address or number index within the wallet.\n\t * @returns The account object or undefined if the account doesn't exist\n\t */\n\n\tpublic get(addressOrIndex: string | number): T | undefined {\n\t\tif (typeof addressOrIndex === 'string') {\n\t\t\tconst index = this._addressMap.get(addressOrIndex.toLowerCase());\n\n\t\t\tif (!isNullish(index)) {\n\t\t\t\treturn this[index];\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this[addressOrIndex];\n\t}\n\n\t/**\n\t * Removes an account from the wallet.\n\t *\n\t * @param addressOrIndex - The account address, or index in the wallet.\n\t * @returns true if the wallet was removed. false if it couldn't be found.\n\t * ```ts\n\t * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n\t *\n\t * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');\n\t * > true\n\t * web3.eth.accounts.wallet\n\t * > Wallet(0) [\n\t * _accountProvider: {\n\t *   create: [Function: create],\n\t *   privateKeyToAccount: [Function: privateKeyToAccount],\n\t *   decrypt: [Function: decrypt]\n\t * },\n\t * _addressMap: Map(0) {},\n\t * _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic remove(addressOrIndex: string | number): boolean {\n\t\tif (typeof addressOrIndex === 'string') {\n\t\t\tconst index = this._addressMap.get(addressOrIndex.toLowerCase());\n\t\t\tif (isNullish(index)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._addressMap.delete(addressOrIndex.toLowerCase());\n\t\t\tthis.splice(index, 1);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this[addressOrIndex]) {\n\t\t\tthis.splice(addressOrIndex, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Securely empties the wallet and removes all its accounts.\n\t * Use this with *caution as it will remove all accounts stored in local wallet.\n\t *\n\t * @returns The wallet object\n\t * ```ts\n\t *\n\t * web3.eth.accounts.wallet.clear();\n\t * > Wallet(0) [\n\t * _accountProvider: {\n\t *   create: [Function: create],\n\t *   privateKeyToAccount: [Function: privateKeyToAccount],\n\t *   decrypt: [Function: decrypt]\n\t * },\n\t * _addressMap: Map(0) {},\n\t * _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic clear() {\n\t\tthis._addressMap.clear();\n\n\t\t// Setting length clears the Array in JS.\n\t\tthis.length = 0;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.\n\t *\n\t * @param password - The password which will be used for encryption\n\t * @param options - encryption options\n\t * @returns An array of the encrypted keystore v3.\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.create(1)\n\t * web3.eth.accounts.wallet.encrypt(\"abc\").then(console.log);\n\t * > [\n\t * '{\"version\":3,\"id\":\"fa46e213-a7c3-4844-b903-dd14d39cc7db\",\n\t * \"address\":\"fa3e41a401609103c241431cbdee8623ae2a321a\",\"crypto\":\n\t * {\"ciphertext\":\"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c\",\n\t * \"cipherparams\":{\"iv\":\"acc888c6cf4a19b86846cef0185a7164\"},\"cipher\":\"aes-128-ctr\",\n\t * \"kdf\":\"scrypt\",\"kdfparams\":{\"n\":8192,\"r\":8,\"p\":1,\"dklen\":32,\"salt\":\"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae\"},\n\t * \"mac\":\"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57\"}}'\n\t * ]\n\t * ```\n\t */\n\tpublic async encrypt(\n\t\tpassword: string,\n\t\toptions?: Record<string, unknown> | undefined,\n\t): Promise<KeyStore[]> {\n\t\treturn Promise.all(this.map(async (account: T) => account.encrypt(password, options)));\n\t}\n\n\t/**\n\t * Decrypts keystore v3 objects.\n\t *\n\t * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt\n\t * @param password - The password to encrypt with\n\t * @param options - decrypt options for the wallets\n\t * @returns The decrypted wallet object\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.decrypt([\n\t * { version: 3,\n\t * id: '83191a81-aaca-451f-b63d-0c5f3b849289',\n\t * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',\n\t * crypto:\n\t * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',\n\t *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },\n\t *   cipher: 'aes-128-ctr',\n\t *   kdf: 'scrypt',\n\t *   kdfparams:\n\t *    { dklen: 32,\n\t *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',\n\t *      n: 262144,\n\t *      r: 8,\n\t *      p: 1 },\n\t *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },\n\t * { version: 3,\n\t * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',\n\t * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',\n\t * crypto:\n\t * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',\n\t *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },\n\t *   cipher: 'aes-128-ctr',\n\t *   kdf: 'scrypt',\n\t *   kdfparams:\n\t *    { dklen: 32,\n\t *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',\n\t *      n: 262144,\n\t *      r: 8,\n\t *      p: 1 },\n\t *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }\n\t * ], 'test').then(console.log)\n\t * > Wallet {\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _defaultKeyName: 'web3js_wallet',\n\t *   _accounts: {\n\t *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {\n\t *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n\t *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     },\n\t *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {\n\t *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',\n\t *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     },\n\t *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {\n\t *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',\n\t *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     }\n\t *   }\n\t * }\n\t * ```\n\t */\n\tpublic async decrypt(\n\t\tencryptedWallets: KeyStore[],\n\t\tpassword: string,\n\t\toptions?: Record<string, unknown> | undefined,\n\t) {\n\t\tconst results = await Promise.all(\n\t\t\tencryptedWallets.map(async (wallet: KeyStore) =>\n\t\t\t\tthis._accountProvider.decrypt(wallet, password, options),\n\t\t\t),\n\t\t);\n\t\tfor (const res of results) {\n\t\t\tthis.add(res);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores the wallet encrypted and as string in local storage.\n\t * **__NOTE:__** Browser only\n\t *\n\t * @param password - The password to encrypt the wallet\n\t * @param keyName - (optional) The key used for the local storage position, defaults to `\"web3js_wallet\"`.\n\t * @returns Will return boolean value true if saved properly\n\t * ```ts\n\t * web3.eth.accounts.wallet.save('test#!$');\n\t * >true\n\t * ```\n\t */\n\tpublic async save(password: string, keyName?: string) {\n\t\tconst storage = Wallet.getStorage();\n\n\t\tif (!storage) {\n\t\t\tthrow new Error('Local storage not available.');\n\t\t}\n\n\t\tstorage.setItem(\n\t\t\tkeyName ?? this._defaultKeyName,\n\t\t\tJSON.stringify(await this.encrypt(password)),\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Loads a wallet from local storage and decrypts it.\n\t * **__NOTE:__** Browser only\n\t *\n\t * @param password - The password to decrypt the wallet.\n\t * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet\"`\n\t * @returns Returns the wallet object\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.save('test#!$');\n\t * > true\n\t * web3.eth.accounts.wallet.load('test#!$');\n\t * { defaultKeyName: \"web3js_wallet\",\n\t *   length: 0,\n\t *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {…}, _provider: WebsocketProvider, …},\n\t *   [[Prototype]]: Object\n\t * }\n\t * ```\n\t */\n\tpublic async load(password: string, keyName?: string) {\n\t\tconst storage = Wallet.getStorage();\n\n\t\tif (!storage) {\n\t\t\tthrow new Error('Local storage not available.');\n\t\t}\n\n\t\tconst keystore = storage.getItem(keyName ?? this._defaultKeyName);\n\n\t\tif (keystore) {\n\t\t\tawait this.decrypt((JSON.parse(keystore) as KeyStore[]) || [], password);\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import assert from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assert.number(N);\n  assert.number(r);\n  assert.number(p);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  assert.number(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, (i) => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, (i) => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructorWithOpts<Keccak, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst utils_1 = require(\"./utils\");\nconst crypto = { web: crypto_1.crypto };\nfunction validateOpt(key, iv, mode) {\n    if (!mode.startsWith(\"aes-\")) {\n        throw new Error(`AES submodule doesn't support mode ${mode}`);\n    }\n    if (iv.length !== 16) {\n        throw new Error(\"AES: wrong IV length\");\n    }\n    if ((mode.startsWith(\"aes-128\") && key.length !== 16) ||\n        (mode.startsWith(\"aes-256\") && key.length !== 32)) {\n        throw new Error(\"AES: wrong key length\");\n    }\n}\nasync function getBrowserKey(mode, key, iv) {\n    if (!crypto.web) {\n        throw new Error(\"Browser crypto not available.\");\n    }\n    let keyMode;\n    if ([\"aes-128-cbc\", \"aes-256-cbc\"].includes(mode)) {\n        keyMode = \"cbc\";\n    }\n    if ([\"aes-128-ctr\", \"aes-256-ctr\"].includes(mode)) {\n        keyMode = \"ctr\";\n    }\n    if (!keyMode) {\n        throw new Error(\"AES: unsupported mode\");\n    }\n    const wKey = await crypto.web.subtle.importKey(\"raw\", key, { name: `AES-${keyMode.toUpperCase()}`, length: key.length * 8 }, true, [\"encrypt\", \"decrypt\"]);\n    // node.js uses whole 128 bit as a counter, without nonce, instead of 64 bit\n    // recommended by NIST SP800-38A\n    return [wKey, { name: `aes-${keyMode}`, iv, counter: iv, length: 128 }];\n}\nasync function encrypt(msg, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        const cipher = await crypto.web.subtle.encrypt(wOpt, wKey, msg);\n        // Remove PKCS7 padding on cbc mode by stripping end of message\n        let res = new Uint8Array(cipher);\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\" && !(msg.length % 16)) {\n            res = res.slice(0, -16);\n        }\n        return res;\n    }\n    else if (crypto.node) {\n        const cipher = crypto.node.createCipheriv(mode, key, iv);\n        cipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0, utils_1.concatBytes)(cipher.update(msg), cipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\nexports.encrypt = encrypt;\nasync function getPadding(cypherText, key, iv, mode) {\n    const lastBlock = cypherText.slice(-16);\n    for (let i = 0; i < 16; i++) {\n        // Undo xor of iv and fill with lastBlock ^ padding (16)\n        lastBlock[i] ^= iv[i] ^ 16;\n    }\n    const res = await encrypt(lastBlock, key, iv, mode);\n    return res.slice(0, 16);\n}\nasync function decrypt(cypherText, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        // Add empty padding so Chrome will correctly decrypt message\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\") {\n            const padding = await getPadding(cypherText, key, iv, mode);\n            cypherText = (0, utils_1.concatBytes)(cypherText, padding);\n        }\n        const msg = await crypto.web.subtle.decrypt(wOpt, wKey, cypherText);\n        const msgBytes = new Uint8Array(msg);\n        // Safari always ignores padding (if no padding -> broken message)\n        if (wOpt.name === \"aes-cbc\") {\n            const encrypted = await encrypt(msgBytes, key, iv, mode);\n            if (!(0, utils_1.equalsBytes)(encrypted, cypherText)) {\n                throw new Error(\"AES: wrong padding\");\n            }\n        }\n        return msgBytes;\n    }\n    else if (crypto.node) {\n        const decipher = crypto.node.createDecipheriv(mode, key, iv);\n        decipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0, utils_1.concatBytes)(decipher.update(cypherText), decipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\nexports.decrypt = decrypt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Sync = exports.pbkdf2 = void 0;\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"./utils\");\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_1.assertBytes)(password);\n    (0, utils_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2Async)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2 = pbkdf2;\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_1.assertBytes)(password);\n    (0, utils_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2Sync = pbkdf2Sync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scryptSync = exports.scrypt = void 0;\nconst scrypt_1 = require(\"@noble/hashes/scrypt\");\nconst utils_1 = require(\"./utils\");\nasync function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_1.assertBytes)(password);\n    (0, utils_1.assertBytes)(salt);\n    return (0, scrypt_1.scryptAsync)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexports.scrypt = scrypt;\nfunction scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    (0, utils_1.assertBytes)(password);\n    (0, utils_1.assertBytes)(salt);\n    return (0, scrypt_1.scrypt)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexports.scryptSync = scryptSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tWeb3Context,\n\tWeb3EventEmitter,\n\tWeb3PromiEvent,\n\tWeb3ConfigEvent,\n\tWeb3SubscriptionManager,\n} from 'web3-core';\nimport {\n\tContractExecutionError,\n\tContractTransactionDataAndInputError,\n\tSubscriptionError,\n\tWeb3ContractError,\n} from 'web3-errors';\nimport {\n\tcreateAccessList,\n\tcall,\n\testimateGas,\n\tgetLogs,\n\tsendTransaction,\n\tdecodeEventABI,\n\tNewHeadsSubscription,\n\tALL_EVENTS,\n\tALL_EVENTS_ABI,\n\tSendTransactionEvents,\n} from 'web3-eth';\nimport {\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tdecodeContractErrorData,\n\tisAbiErrorFragment,\n\tisAbiEventFragment,\n\tisAbiFunctionFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\nimport {\n\tAbiConstructorFragment,\n\tAbiErrorFragment,\n\tAbiEventFragment,\n\tAbiFragment,\n\tAbiFunctionFragment,\n\tContractAbi,\n\tContractConstructorArgs,\n\tContractEvent,\n\tContractEvents,\n\tContractMethod,\n\tContractMethodInputParameters,\n\tContractMethodOutputParameters,\n\tAddress,\n\tBlockNumberOrTag,\n\tBlockTags,\n\tBytes,\n\tEthExecutionAPI,\n\tFilter,\n\tFilterAbis,\n\tHexString,\n\tLogsInput,\n\tMutable,\n\tContractInitOptions,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tNumbers,\n\tWeb3ValidationErrorObject,\n\tEventLog,\n\tContractAbiWithSignature,\n\tContractOptions,\n} from 'web3-types';\nimport { format, isDataFormat, keccak256, toChecksumAddress } from 'web3-utils';\nimport {\n\tisNullish,\n\tvalidator,\n\tutils as validatorUtils,\n\tValidationSchemaInput,\n\tWeb3ValidatorError,\n} from 'web3-validator';\nimport { decodeMethodReturn, encodeEventABI, encodeMethodABI } from './encoding.js';\nimport { LogsSubscription } from './log_subscription.js';\nimport {\n\tContractEventOptions,\n\tNonPayableMethodObject,\n\tNonPayableTxOptions,\n\tPayableMethodObject,\n\tPayableTxOptions,\n\tWeb3ContractContext,\n} from './types.js';\nimport {\n\tgetCreateAccessListParams,\n\tgetEstimateGasParams,\n\tgetEthTxCallParams,\n\tgetSendTxParams,\n\tisContractInitOptions,\n\tisWeb3ContractContext,\n} from './utils.js';\n\ntype ContractBoundMethod<\n\tAbi extends AbiFunctionFragment,\n\tMethod extends ContractMethod<Abi> = ContractMethod<Abi>,\n> = (\n\t...args: Method['Inputs']\n) => Method['Abi']['stateMutability'] extends 'payable' | 'pure'\n\t? PayableMethodObject<Method['Inputs'], Method['Outputs']>\n\t: NonPayableMethodObject<Method['Inputs'], Method['Outputs']>;\n\nexport type ContractOverloadedMethodInputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodInputParameters<A['inputs']> | ContractOverloadedMethodInputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\nexport type ContractOverloadedMethodOutputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodOutputParameters<A['outputs']> | ContractOverloadedMethodOutputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractMethodsInterface<Abi extends ContractAbi> = {\n\t[MethodAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'function' }\n\t> as MethodAbi['name']]: ContractBoundMethod<MethodAbi>;\n\t// To allow users to use method signatures\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & { [key: string]: ContractBoundMethod<any> };\n\n/**\n * The event object can be accessed from `myContract.events.myEvent`.\n *\n * \\> Remember: To subscribe to an event, your provider must have support for subscriptions.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent([options])\n * ```\n *\n * @param options - The options used to subscribe for the event\n * @returns - A Promise resolved with {@link LogsSubscription} object\n */\nexport type ContractBoundEvent = (options?: ContractEventOptions) => LogsSubscription;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventsInterface<\n\tAbi extends ContractAbi,\n\tEvents extends ContractEvents<Abi> = ContractEvents<Abi>,\n> = {\n\t[Name in keyof Events | 'allEvents']: ContractBoundEvent;\n} & {\n\t[key: string]: ContractBoundEvent;\n};\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventEmitterInterface<Abi extends ContractAbi> = {\n\t[EventAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'event' }\n\t> as EventAbi['name']]: ContractEvent<EventAbi>['Inputs'];\n};\n\ntype EventParameters = Parameters<typeof encodeEventABI>[2];\n\nconst contractSubscriptions = {\n\tlogs: LogsSubscription,\n\tnewHeads: NewHeadsSubscription,\n\tnewBlockHeaders: NewHeadsSubscription,\n};\n\n/**\n * The class designed to interact with smart contracts on the Ethereum blockchain.\n */\nexport class Contract<Abi extends ContractAbi>\n\textends Web3Context<EthExecutionAPI, typeof contractSubscriptions>\n\timplements Web3EventEmitter<ContractEventEmitterInterface<Abi>>\n{\n\t/**\n\t * The options `object` for the contract instance. `from`, `gas` and `gasPrice` are used as fallback values when sending transactions.\n\t *\n\t * ```ts\n\t * myContract.options;\n\t * > {\n\t *     address: '0x1234567890123456789012345678901234567891',\n\t *     jsonInterface: [...],\n\t *     from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe',\n\t *     gasPrice: '10000000000000',\n\t *     gas: 1000000\n\t * }\n\t *\n\t * myContract.options.from = '0x1234567890123456789012345678901234567891'; // default from address\n\t * myContract.options.gasPrice = '20000000000000'; // default gas price in wei\n\t * myContract.options.gas = 5000000; // provide as fallback always 5M gas\n\t * ```\n\t */\n\n\tpublic readonly options: ContractOptions;\n\n\t/**\n\t * Set to true if you want contracts' defaults to sync with global defaults.\n\t */\n\tpublic syncWithContext = false;\n\n\tprivate _errorsInterface!: AbiErrorFragment[];\n\tprivate _jsonInterface!: ContractAbiWithSignature;\n\tprivate _address?: Address;\n\tprivate _functions: Record<\n\t\tstring,\n\t\t{\n\t\t\tsignature: string;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tmethod: ContractBoundMethod<any>;\n\t\t}\n\t> = {};\n\tprivate readonly _overloadedMethodAbis: Map<string, AbiFunctionFragment[]>;\n\tprivate _methods!: ContractMethodsInterface<Abi>;\n\tprivate _events!: ContractEventsInterface<Abi>;\n\t/**\n\t * Set property to `data`, `input`, or `both` to change the property of the contract being sent to the\n\t * RPC provider when using contract methods.\n\t * Default is `input`\n\t */\n\tprivate readonly _dataInputFill?: 'data' | 'input' | 'both';\n\n\tprivate context?: Web3Context;\n\t/**\n\t * Creates a new contract instance with all its methods and events defined in its {@doclink glossary/json_interface | json interface} object.\n\t *\n\t * ```ts\n\t * new web3.eth.Contract(jsonInterface[, address][, options])\n\t * ```\n\t *\n\t * @param jsonInterface - The JSON interface for the contract to instantiate.\n\t * @param address - The address of the smart contract to call.\n\t * @param options - The options of the contract. Some are used as fallbacks for calls and transactions.\n\t * @param context - The context of the contract used for customizing the behavior of the contract.\n\t * @returns - The contract instance with all its methods and events.\n\t *\n\t * ```ts title=\"Example\"\n\t * var myContract = new web3.eth.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n\t *   from: '0x1234567890123456789012345678901234567891', // default from address\n\t *   gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n\t * });\n\t * ```\n\t *\n\t * To use the type safe interface for these contracts you have to include the ABI definitions in your Typescript project and then declare these as `const`.\n\t *\n\t * ```ts title=\"Example\"\n\t * const myContractAbi = [....] as const; // ABI definitions\n\t * const myContract = new web3.eth.Contract(myContractAbi, '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe');\n\t * ```\n\t */\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\tcontext?: Web3ContractContext | Web3Context,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress?: Address,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\toptions?: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress: Address | undefined,\n\t\toptions: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddressOrOptionsOrContext?:\n\t\t\t| Address\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context,\n\t\toptionsOrContextOrReturnFormat?:\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context\n\t\t\t| DataFormat,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst options = isContractInitOptions(addressOrOptionsOrContext)\n\t\t\t? addressOrOptionsOrContext\n\t\t\t: isContractInitOptions(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: undefined;\n\n\t\tlet contractContext;\n\t\tif (isWeb3ContractContext(addressOrOptionsOrContext)) {\n\t\t\tcontractContext = addressOrOptionsOrContext;\n\t\t} else if (isWeb3ContractContext(optionsOrContextOrReturnFormat)) {\n\t\t\tcontractContext = optionsOrContextOrReturnFormat;\n\t\t} else {\n\t\t\tcontractContext = contextOrReturnFormat;\n\t\t}\n\n\t\tlet provider;\n\t\tif (\n\t\t\ttypeof addressOrOptionsOrContext === 'object' &&\n\t\t\t'provider' in addressOrOptionsOrContext\n\t\t) {\n\t\t\tprovider = addressOrOptionsOrContext.provider;\n\t\t} else if (\n\t\t\ttypeof optionsOrContextOrReturnFormat === 'object' &&\n\t\t\t'provider' in optionsOrContextOrReturnFormat\n\t\t) {\n\t\t\tprovider = optionsOrContextOrReturnFormat.provider;\n\t\t} else if (\n\t\t\ttypeof contextOrReturnFormat === 'object' &&\n\t\t\t'provider' in contextOrReturnFormat\n\t\t) {\n\t\t\tprovider = contextOrReturnFormat.provider;\n\t\t} else {\n\t\t\tprovider = Contract.givenProvider;\n\t\t}\n\n\t\tsuper({\n\t\t\t...contractContext,\n\t\t\tprovider,\n\t\t\tregisteredSubscriptions: contractSubscriptions,\n\t\t});\n\t\tif (\n\t\t\t!isNullish(options) &&\n\t\t\t!isNullish(options.data) &&\n\t\t\t!isNullish(options.input) &&\n\t\t\tthis.config.contractDataInputFill !== 'both'\n\t\t)\n\t\t\tthrow new ContractTransactionDataAndInputError({\n\t\t\t\tdata: options.data as HexString,\n\t\t\t\tinput: options.input as HexString,\n\t\t\t});\n\t\tthis._overloadedMethodAbis = new Map<string, AbiFunctionFragment[]>();\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnDataFormat = isDataFormat(contextOrReturnFormat)\n\t\t\t? contextOrReturnFormat\n\t\t\t: isDataFormat(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: returnFormat ?? DEFAULT_RETURN_FORMAT;\n\n\t\tconst address =\n\t\t\ttypeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n\n\t\tif (this.config.contractDataInputFill === 'both') {\n\t\t\tthis._dataInputFill = this.config.contractDataInputFill;\n\t\t} else {\n\t\t\tthis._dataInputFill =\n\t\t\t\t(options as ContractInitOptions)?.dataInputFill ??\n\t\t\t\tthis.config.contractDataInputFill;\n\t\t}\n\t\tthis._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n\n\t\tif (!isNullish(address)) {\n\t\t\tthis._parseAndSetAddress(address, returnDataFormat);\n\t\t}\n\n\t\tthis.options = {\n\t\t\taddress,\n\t\t\tjsonInterface: this._jsonInterface,\n\t\t\tgas: options?.gas ?? options?.gasLimit,\n\t\t\tgasPrice: options?.gasPrice,\n\t\t\tfrom: options?.from,\n\t\t\tinput: options?.input,\n\t\t\tdata: options?.data,\n\t\t};\n\n\t\tthis.syncWithContext = (options as ContractInitOptions)?.syncWithContext ?? false;\n\t\tif (contractContext instanceof Web3Context) {\n\t\t\tthis.subscribeToContextEvents(contractContext);\n\t\t}\n\t\tObject.defineProperty(this.options, 'address', {\n\t\t\tset: (value: Address) => this._parseAndSetAddress(value, returnDataFormat),\n\t\t\tget: () => this._address,\n\t\t});\n\n\t\tObject.defineProperty(this.options, 'jsonInterface', {\n\t\t\tset: (value: ContractAbi) => this._parseAndSetJsonInterface(value, returnDataFormat),\n\t\t\tget: () => this._jsonInterface,\n\t\t});\n\t}\n\n\t/**\n\t * Subscribe to an event.\n\t *\n\t * ```ts\n\t * await myContract.events.MyEvent([options])\n\t * ```\n\t *\n\t * There is a special event `allEvents` that can be used to subscribe all events.\n\t *\n\t * ```ts\n\t * await myContract.events.allEvents([options])\n\t * ```\n\t *\n\t * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n\t */\n\tpublic get events() {\n\t\treturn this._events;\n\t}\n\n\t/**\n\t * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n\t *\n\t * The methods of this smart contract are available through:\n\t *\n\t * The name: `myContract.methods.myMethod(123)`\n\t * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n\t * The signature `myContract.methods['0x58cf5f10'](123)`\n\t *\n\t * This allows calling functions with same name but different parameters from the JavaScript contract object.\n\t *\n\t * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n\t *\n\t * ```ts\n\t * // calling a method\n\t * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using a promise\n\t * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using the events\n\t * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t * sendObject.on('transactionHash', function(hash){\n\t *   ...\n\t * });\n\t * sendObject.on('receipt', function(receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('confirmation', function(confirmationNumber, receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('error', function(error, receipt) {\n\t *   ...\n\t * });\n\t * ```\n\t *\n\t * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the {@doclink glossary/json_interface | json interface} of that contract.\n\t */\n\tpublic get methods() {\n\t\treturn this._methods;\n\t}\n\n\t/**\n\t * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n\t *\n\t * @returns - The new contract instance.\n\t *\n\t * ```ts\n\t * const contract1 = new eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n\t *\n\t * const contract2 = contract1.clone();\n\t * contract2.options.address = address2;\n\t *\n\t * (contract1.options.address !== contract2.options.address);\n\t * > true\n\t * ```\n\t */\n\tpublic clone() {\n\t\tlet newContract: Contract<any>;\n\t\tif (this.options.address) {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\tthis.options.address,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tdata: this.options.data,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t\tdataInputFill: this._dataInputFill,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t} else {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tdata: this.options.data,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t\tdataInputFill: this._dataInputFill,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t}\n\t\tif (this.context) newContract.subscribeToContextEvents(this.context);\n\n\t\treturn newContract;\n\t}\n\n\t/**\n\t * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n\t *\n\t * ```ts\n\t * myContract.deploy({\n\t *   input: '0x12345...', // data keyword can be used, too. If input is used, data will be ignored.\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * }, function(error, transactionHash){ ... })\n\t * .on('error', function(error){ ... })\n\t * .on('transactionHash', function(transactionHash){ ... })\n\t * .on('receipt', function(receipt){\n\t *  console.log(receipt.contractAddress) // contains the new contract address\n\t * })\n\t * .on('confirmation', function(confirmationNumber, receipt){ ... })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // When the data is already set as an option to the contract itself\n\t * myContract.options.data = '0x12345...';\n\t *\n\t * myContract.deploy({\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // Simply encoding\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .encodeABI();\n\t * > '0x12345...0000012345678765432'\n\t *\n\t *\n\t * // Gas estimation\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .estimateGas(function(err, gas){\n\t *   console.log(gas);\n\t * });\n\t * ```\n\t *\n\t * @returns - The transaction object\n\t */\n\tpublic deploy(deployOptions?: {\n\t\t/**\n\t\t * The byte code of the contract.\n\t\t */\n\t\tdata?: HexString;\n\t\tinput?: HexString;\n\t\t/**\n\t\t * The arguments which get passed to the constructor on deployment.\n\t\t */\n\t\targuments?: ContractConstructorArgs<Abi>;\n\t}) {\n\t\tlet abi = this._jsonInterface.find(j => j.type === 'constructor') as AbiConstructorFragment;\n\t\tif (!abi) {\n\t\t\tabi = {\n\t\t\t\ttype: 'constructor',\n\t\t\t\tinputs: [],\n\t\t\t\tstateMutability: '',\n\t\t\t} as AbiConstructorFragment;\n\t\t}\n\n\t\tconst _input = format(\n\t\t\t{ format: 'bytes' },\n\t\t\tdeployOptions?.input ?? this.options.input,\n\t\t\tDEFAULT_RETURN_FORMAT,\n\t\t);\n\n\t\tconst _data = format(\n\t\t\t{ format: 'bytes' },\n\t\t\tdeployOptions?.data ?? this.options.data,\n\t\t\tDEFAULT_RETURN_FORMAT,\n\t\t);\n\n\t\tif ((!_input || _input.trim() === '0x') && (!_data || _data.trim() === '0x')) {\n\t\t\tthrow new Web3ContractError('contract creation without any data provided.');\n\t\t}\n\n\t\tconst args = deployOptions?.arguments ?? [];\n\n\t\tconst contractOptions: ContractOptions = { ...this.options, input: _input, data: _data };\n\t\tconst deployData = _input ?? _data;\n\t\treturn {\n\t\t\targuments: args,\n\t\t\tsend: (\n\t\t\t\toptions?: PayableTxOptions,\n\t\t\t): Web3PromiEvent<\n\t\t\t\tContract<Abi>,\n\t\t\t\tSendTransactionEvents<typeof DEFAULT_RETURN_FORMAT>\n\t\t\t> => {\n\t\t\t\tconst modifiedOptions = { ...options };\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\treturn this._contractMethodDeploySend(\n\t\t\t\t\tabi as AbiFunctionFragment,\n\t\t\t\t\targs as unknown[],\n\t\t\t\t\tmodifiedOptions,\n\t\t\t\t\tcontractOptions,\n\t\t\t\t);\n\t\t\t},\n\t\t\testimateGas: async <ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\t\t\toptions?: PayableCallOptions,\n\t\t\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\t\t) => {\n\t\t\t\tconst modifiedOptions = { ...options };\n\t\t\t\treturn this._contractMethodEstimateGas({\n\t\t\t\t\tabi: abi as AbiFunctionFragment,\n\t\t\t\t\tparams: args as unknown[],\n\t\t\t\t\treturnFormat,\n\t\t\t\t\toptions: modifiedOptions,\n\t\t\t\t\tcontractOptions,\n\t\t\t\t});\n\t\t\t},\n\t\t\tencodeABI: () =>\n\t\t\t\tencodeMethodABI(\n\t\t\t\t\tabi as AbiFunctionFragment,\n\t\t\t\t\targs as unknown[],\n\t\t\t\t\tformat({ format: 'bytes' }, deployData as Bytes, DEFAULT_RETURN_FORMAT),\n\t\t\t\t),\n\t\t};\n\t}\n\n\t/**\n\t * Gets past events for this contract.\n\t *\n\t * ```ts\n\t * const events = await myContract.getPastEvents('MyEvent', {\n\t *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n\t *   fromBlock: 0,\n\t *   toBlock: 'latest'\n\t * });\n\t *\n\t * > [{\n\t *   returnValues: {\n\t *       myIndexedParam: 20,\n\t *       myOtherIndexedParam: '0x123456789...',\n\t *       myNonIndexParam: 'My String'\n\t *   },\n\t *   raw: {\n\t *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *   },\n\t *   event: 'MyEvent',\n\t *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   logIndex: 0,\n\t *   transactionIndex: 0,\n\t *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   blockNumber: 1234,\n\t *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t * },{\n\t *   ...\n\t * }]\n\t * ```\n\t *\n\t * @param eventName - The name of the event in the contract, or `allEvents` to get all events.\n\t * @param filter - The filter options used to get events.\n\t * @param returnFormat - Return format\n\t * @returns - An array with the past event `Objects`, matching the given event name and filter.\n\t */\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents' | 'ALLEVENTS',\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents' | 'ALLEVENTS',\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tparam1?:\n\t\t\t| keyof ContractEvents<Abi>\n\t\t\t| 'allEvents'\n\t\t\t| 'ALLEVENTS'\n\t\t\t| Omit<Filter, 'address'>\n\t\t\t| ReturnFormat,\n\t\tparam2?: Omit<Filter, 'address'> | ReturnFormat,\n\t\tparam3?: ReturnFormat,\n\t): Promise<(string | EventLog)[]> {\n\t\tconst eventName = typeof param1 === 'string' ? param1 : ALL_EVENTS;\n\n\t\tconst options =\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\ttypeof param1 !== 'string' && !isDataFormat(param1)\n\t\t\t\t? param1\n\t\t\t\t: !isDataFormat(param2)\n\t\t\t\t? param2\n\t\t\t\t: {};\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnFormat = isDataFormat(param1)\n\t\t\t? param1\n\t\t\t: isDataFormat(param2)\n\t\t\t? param2\n\t\t\t: param3 ?? DEFAULT_RETURN_FORMAT;\n\n\t\tconst abi =\n\t\t\teventName === 'allEvents' || eventName === ALL_EVENTS\n\t\t\t\t? ALL_EVENTS_ABI\n\t\t\t\t: (this._jsonInterface.find(\n\t\t\t\t\t\tj => 'name' in j && j.name === eventName,\n\t\t\t\t  ) as AbiEventFragment & { signature: string });\n\n\t\tif (!abi) {\n\t\t\tthrow new Web3ContractError(`Event ${eventName} not found.`);\n\t\t}\n\n\t\tconst { fromBlock, toBlock, topics, address } = encodeEventABI(\n\t\t\tthis.options,\n\t\t\tabi,\n\t\t\toptions ?? {},\n\t\t);\n\n\t\tconst logs = await getLogs(this, { fromBlock, toBlock, topics, address }, returnFormat);\n\t\tconst decodedLogs = logs.map(log =>\n\t\t\ttypeof log === 'string'\n\t\t\t\t? log\n\t\t\t\t: decodeEventABI(abi, log as LogsInput, this._jsonInterface, returnFormat),\n\t\t);\n\n\t\tconst filter = options?.filter ?? {};\n\t\tconst filterKeys = Object.keys(filter);\n\n\t\tif (filterKeys.length > 0) {\n\t\t\treturn decodedLogs.filter(log => {\n\t\t\t\tif (typeof log === 'string') return true;\n\n\t\t\t\treturn filterKeys.every((key: string) => {\n\t\t\t\t\tif (Array.isArray(filter[key])) {\n\t\t\t\t\t\treturn (filter[key] as Numbers[]).some(\n\t\t\t\t\t\t\t(v: Numbers) =>\n\t\t\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\t\t\tString(v).toUpperCase(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst inputAbi = abi.inputs?.filter(input => input.name === key)[0];\n\t\t\t\t\tif (inputAbi?.indexed && inputAbi.type === 'string') {\n\t\t\t\t\t\tconst hashedIndexedString = keccak256(filter[key] as string);\n\t\t\t\t\t\tif (hashedIndexedString === String(log.returnValues[key])) return true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\tString(filter[key]).toUpperCase()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn decodedLogs;\n\t}\n\n\tprivate _parseAndSetAddress(value?: Address, returnFormat: DataFormat = DEFAULT_RETURN_FORMAT) {\n\t\tthis._address = value\n\t\t\t? toChecksumAddress(format({ format: 'address' }, value, returnFormat))\n\t\t\t: value;\n\t}\n\n\tprivate _parseAndSetJsonInterface(\n\t\tabis: ContractAbi,\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t) {\n\t\tthis._functions = {};\n\t\tthis._methods = {} as ContractMethodsInterface<Abi>;\n\t\tthis._events = {} as ContractEventsInterface<Abi>;\n\n\t\tlet result: ContractAbi = [];\n\n\t\tconst functionsAbi = abis.filter(abi => abi.type !== 'error');\n\t\tconst errorsAbi = abis.filter(abi =>\n\t\t\tisAbiErrorFragment(abi),\n\t\t) as unknown as AbiErrorFragment[];\n\n\t\tfor (const a of functionsAbi) {\n\t\t\tconst abi: Mutable<AbiFragment & { signature: HexString }> = {\n\t\t\t\t...a,\n\t\t\t\tsignature: '',\n\t\t\t};\n\n\t\t\tif (isAbiFunctionFragment(abi)) {\n\t\t\t\tconst methodName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst methodSignature = encodeFunctionSignature(methodName);\n\t\t\t\tabi.signature = methodSignature;\n\n\t\t\t\t// make constant and payable backwards compatible\n\t\t\t\tabi.constant =\n\t\t\t\t\tabi.stateMutability === 'view' ??\n\t\t\t\t\tabi.stateMutability === 'pure' ??\n\t\t\t\t\tabi.constant;\n\n\t\t\t\tabi.payable = abi.stateMutability === 'payable' ?? abi.payable;\n\t\t\t\tthis._overloadedMethodAbis.set(abi.name, [\n\t\t\t\t\t...(this._overloadedMethodAbis.get(abi.name) ?? []),\n\t\t\t\t\tabi,\n\t\t\t\t]);\n\t\t\t\tconst abiFragment = this._overloadedMethodAbis.get(abi.name) ?? [];\n\t\t\t\tconst contractMethod = this._createContractMethod<\n\t\t\t\t\ttypeof abiFragment,\n\t\t\t\t\tAbiErrorFragment\n\t\t\t\t>(abiFragment, errorsAbi);\n\n\t\t\t\tthis._functions[methodName] = {\n\t\t\t\t\tsignature: methodSignature,\n\t\t\t\t\tmethod: contractMethod,\n\t\t\t\t};\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[abi.name as keyof ContractMethodsInterface<Abi>] = this._functions[\n\t\t\t\t\tmethodName\n\t\t\t\t].method as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodName as keyof ContractMethodsInterface<Abi>] = this._functions[\n\t\t\t\t\tmethodName\n\t\t\t\t].method as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodSignature as keyof ContractMethodsInterface<Abi>] = this\n\t\t\t\t\t._functions[methodName].method as never;\n\t\t\t} else if (isAbiEventFragment(abi)) {\n\t\t\t\tconst eventName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst eventSignature = encodeEventSignature(eventName);\n\t\t\t\tconst event = this._createContractEvent(abi, returnFormat);\n\t\t\t\tabi.signature = eventSignature;\n\n\t\t\t\tif (!(eventName in this._events) || abi.name === 'bound') {\n\t\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\t\tthis._events[eventName as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t}\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[abi.name as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[eventSignature as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t}\n\n\t\t\tresult = [...result, abi];\n\t\t}\n\n\t\tthis._events.allEvents = this._createContractEvent(ALL_EVENTS_ABI, returnFormat);\n\t\tthis._jsonInterface = [...result] as unknown as ContractAbiWithSignature;\n\t\tthis._errorsInterface = errorsAbi;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _getAbiParams(abi: AbiFunctionFragment, params: unknown[]): Array<unknown> {\n\t\ttry {\n\t\t\treturn validatorUtils.transformJsonDataToAbiFormat(abi.inputs ?? [], params);\n\t\t} catch (error) {\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t`Invalid parameters for method ${abi.name}: ${(error as Error).message}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _createContractMethod<T extends AbiFunctionFragment[], E extends AbiErrorFragment>(\n\t\tabiArr: T,\n\t\terrorsAbis: E[],\n\t): ContractBoundMethod<T[0]> {\n\t\tconst abi = abiArr[abiArr.length - 1];\n\t\treturn (...params: unknown[]) => {\n\t\t\tlet abiParams!: Array<unknown>;\n\t\t\tconst abis = this._overloadedMethodAbis.get(abi.name) ?? [];\n\t\t\tlet methodAbi: AbiFunctionFragment = abis[0];\n\t\t\tconst internalErrorsAbis = errorsAbis;\n\n\t\t\tconst arrayOfAbis: AbiFunctionFragment[] = abis.filter(\n\t\t\t\t_abi => (_abi.inputs ?? []).length === params.length,\n\t\t\t);\n\n\t\t\tif (abis.length === 1 || arrayOfAbis.length === 0) {\n\t\t\t\tabiParams = this._getAbiParams(methodAbi, params);\n\t\t\t\tvalidator.validate(abi.inputs ?? [], abiParams);\n\t\t\t} else {\n\t\t\t\tconst errors: Web3ValidationErrorObject[] = [];\n\n\t\t\t\tfor (const _abi of arrayOfAbis) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tabiParams = this._getAbiParams(_abi, params);\n\t\t\t\t\t\tvalidator.validate(\n\t\t\t\t\t\t\t_abi.inputs as unknown as ValidationSchemaInput,\n\t\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmethodAbi = _abi;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\terrors.push(e as Web3ValidationErrorObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (errors.length === arrayOfAbis.length) {\n\t\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst methods = {\n\t\t\t\targuments: abiParams,\n\n\t\t\t\tcall: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCall(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\n\t\t\t\tsend: (options?: PayableTxOptions | NonPayableTxOptions) =>\n\t\t\t\t\tthis._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),\n\n\t\t\t\testimateGas: async <ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodEstimateGas({\n\t\t\t\t\t\tabi: methodAbi,\n\t\t\t\t\t\tparams: abiParams,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t}),\n\n\t\t\t\tencodeABI: () => encodeMethodABI(methodAbi, abiParams),\n\n\t\t\t\tcreateAccessList: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCreateAccessList(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\t\t\t};\n\n\t\t\tif (methodAbi.stateMutability === 'payable') {\n\t\t\t\treturn methods as PayableMethodObject<\n\t\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t\t>;\n\t\t\t}\n\t\t\treturn methods as NonPayableMethodObject<\n\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t>;\n\t\t};\n\t}\n\n\tprivate async _contractMethodCall<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getEthTxCallParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: {\n\t\t\t\t...options,\n\t\t\t\tdataInputFill: this._dataInputFill,\n\t\t\t},\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\t\ttry {\n\t\t\tconst result = await call(this, tx, block, DEFAULT_RETURN_FORMAT);\n\t\t\treturn decodeMethodReturn(abi, result);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async _contractMethodCreateAccessList<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getCreateAccessListParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\n\t\ttry {\n\t\t\treturn createAccessList(this, tx, block, DEFAULT_RETURN_FORMAT);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate _contractMethodSend<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tcontractOptions?: ContractOptions,\n\t) {\n\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\tmodifiedContractOptions = {\n\t\t\t...modifiedContractOptions,\n\t\t\tinput: undefined,\n\t\t\tfrom: modifiedContractOptions.from ?? this.defaultAccount ?? undefined,\n\t\t};\n\t\tconst tx = getSendTxParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\t\tconst transactionToSend = sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n\t\t\t// TODO Should make this configurable by the user\n\t\t\tcheckRevertBeforeSending: false,\n\t\t\tcontractAbi: this._jsonInterface,\n\t\t});\n\n\t\t// eslint-disable-next-line no-void\n\t\tvoid transactionToSend.on('error', (error: unknown) => {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t});\n\t\treturn transactionToSend;\n\t}\n\n\tprivate _contractMethodDeploySend<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\toptions?: Options,\n\t\tcontractOptions?: ContractOptions,\n\t) {\n\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\tmodifiedContractOptions = {\n\t\t\t...modifiedContractOptions,\n\t\t\tfrom: modifiedContractOptions.from ?? this.defaultAccount ?? undefined,\n\t\t};\n\t\tconst tx = getSendTxParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\t\treturn sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n\t\t\ttransactionResolver: receipt => {\n\t\t\t\tif (receipt.status === BigInt(0)) {\n\t\t\t\t\tthrow new Web3ContractError(\"code couldn't be stored\", receipt);\n\t\t\t\t}\n\n\t\t\t\tconst newContract = this.clone();\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tnewContract.options.address = receipt.contractAddress;\n\t\t\t\treturn newContract;\n\t\t\t},\n\t\t\tcontractAbi: this._jsonInterface,\n\t\t\t// TODO Should make this configurable by the user\n\t\t\tcheckRevertBeforeSending: false,\n\t\t});\n\t}\n\n\tprivate async _contractMethodEstimateGas<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t\tReturnFormat extends DataFormat,\n\t>({\n\t\tabi,\n\t\tparams,\n\t\treturnFormat,\n\t\toptions,\n\t\tcontractOptions,\n\t}: {\n\t\tabi: AbiFunctionFragment;\n\t\tparams: unknown[];\n\t\treturnFormat: ReturnFormat;\n\t\toptions?: Options;\n\t\tcontractOptions?: ContractOptions;\n\t}) {\n\t\tconst tx = getEstimateGasParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: contractOptions ?? this.options,\n\t\t});\n\t\treturn estimateGas(this, tx, BlockTags.LATEST, returnFormat);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _createContractEvent(\n\t\tabi: AbiEventFragment & { signature: HexString },\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t): ContractBoundEvent {\n\t\treturn (...params: unknown[]) => {\n\t\t\tconst { topics, fromBlock } = encodeEventABI(\n\t\t\t\tthis.options,\n\t\t\t\tabi,\n\t\t\t\tparams[0] as EventParameters,\n\t\t\t);\n\t\t\tconst sub = new LogsSubscription(\n\t\t\t\t{\n\t\t\t\t\taddress: this.options.address,\n\t\t\t\t\ttopics,\n\t\t\t\t\tabi,\n\t\t\t\t\tjsonInterface: this._jsonInterface,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tsubscriptionManager: this.subscriptionManager as Web3SubscriptionManager<\n\t\t\t\t\t\tunknown,\n\t\t\t\t\t\tany\n\t\t\t\t\t>,\n\t\t\t\t\treturnFormat,\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (!isNullish(fromBlock)) {\n\t\t\t\t// emit past events when fromBlock is defined\n\t\t\t\tthis.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)\n\t\t\t\t\t.then(logs => {\n\t\t\t\t\t\tlogs.forEach(log => sub.emit('data', log as EventLog));\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\tsub.emit(\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\tnew SubscriptionError('Failed to get past events.', error),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tthis.subscriptionManager?.addSubscription(sub).catch((error: Error) => {\n\t\t\t\tsub.emit('error', new SubscriptionError('Failed to subscribe.', error));\n\t\t\t});\n\n\t\t\treturn sub;\n\t\t};\n\t}\n\n\tprotected subscribeToContextEvents<T extends Web3Context>(context: T): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst contractThis = this;\n\t\tthis.context = context;\n\n\t\tif (contractThis.syncWithContext) {\n\t\t\tcontext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t\tcontractThis.setConfig({ [event.name]: event.newValue });\n\t\t\t});\n\t\t}\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, isNullish, keccak256 } from 'web3-utils';\n\nimport {\n\tAbiConstructorFragment,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tFilter,\n\tHexString,\n\tTopic,\n\tFMT_NUMBER,\n\tFMT_BYTES,\n\tContractOptions,\n} from 'web3-types';\n\nimport {\n\tdecodeParameters,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tisAbiConstructorFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\n\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\n\nexport { decodeEventABI } from 'web3-eth';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nexport const encodeEventABI = (\n\t{ address }: ContractOptions,\n\tevent: AbiEventFragment & { signature: string },\n\toptions?: Filter,\n) => {\n\tconst topics = options?.topics;\n\tconst filter = options?.filter ?? {};\n\tconst opts: Writeable<Filter> = {};\n\n\tif (!isNullish(options?.fromBlock)) {\n\t\topts.fromBlock = format(blockSchema.properties.number, options?.fromBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\tif (!isNullish(options?.toBlock)) {\n\t\topts.toBlock = format(blockSchema.properties.number, options?.toBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\n\tif (topics && Array.isArray(topics)) {\n\t\topts.topics = [...topics] as Topic[];\n\t} else {\n\t\topts.topics = [];\n\t\t// add event signature\n\t\tif (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n\t\t\topts.topics.push(\n\t\t\t\tevent.signature ?? encodeEventSignature(jsonInterfaceMethodToString(event)),\n\t\t\t);\n\t\t}\n\n\t\t// add event topics (indexed arguments)\n\t\tif (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n\t\t\tfor (const input of event.inputs) {\n\t\t\t\tif (!input.indexed) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst value = filter[input.name];\n\t\t\t\tif (!value) {\n\t\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t\topts.topics.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: https://github.com/ethereum/web3.js/issues/344\n\t\t\t\t// TODO: deal properly with components\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\topts.topics.push(value.map(v => encodeParameter(input.type, v)));\n\t\t\t\t} else if (input.type === 'string') {\n\t\t\t\t\topts.topics.push(keccak256(value as string));\n\t\t\t\t} else {\n\t\t\t\t\topts.topics.push(encodeParameter(input.type, value));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!opts.topics.length) delete opts.topics;\n\n\tif (address) {\n\t\topts.address = address.toLowerCase();\n\t}\n\n\treturn opts;\n};\n\nexport const encodeMethodABI = (\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\targs: unknown[],\n\tdeployData?: HexString,\n) => {\n\tconst inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\tif (inputLength !== args.length) {\n\t\tthrow new Web3ContractError(\n\t\t\t`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`,\n\t\t);\n\t}\n\n\tconst params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace(\n\t\t'0x',\n\t\t'',\n\t);\n\n\tif (isAbiConstructorFragment(abi)) {\n\t\tif (!deployData)\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n\t\t\t);\n\n\t\tif (!deployData.startsWith('0x')) {\n\t\t\treturn `0x${deployData}${params}`;\n\t\t}\n\n\t\treturn `${deployData}${params}`;\n\t}\n\n\treturn `${encodeFunctionSignature(abi)}${params}`;\n};\n\nexport const decodeMethodReturn = (abi: AbiFunctionFragment, returnValues?: HexString) => {\n\t// If it was constructor then we need to return contract address\n\tif (abi.type === 'constructor') {\n\t\treturn returnValues;\n\t}\n\n\tif (!returnValues) {\n\t\t// Using \"null\" value intentionally to match legacy behavior\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\tconst value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\tif (!abi.outputs) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tconst result = decodeParameters([...abi.outputs], value);\n\n\tif (result.__length__ === 1) {\n\t\treturn result[0];\n\t}\n\n\treturn result;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3.eth.Contract` object makes it easy to interact with smart contracts on the Ethereum blockchain.\n * When you create a new contract object you give it the JSON interface of the respective smart contract and\n * web3 will auto convert all calls into low level ABI calls over RPC for you.\n * This allows you to interact with smart contracts as if they were JavaScript objects.\n *\n * To use it standalone:\n *\n * ```ts\n * const Contract = require('web3-eth-contract');\n *\n * // set provider for all later instances to use\n * Contract.setProvider('ws://localhost:8546');\n *\n * const contract = new Contract(jsonInterface, address);\n *\n * contract.methods.somFunc().send({from: ....})\n * .on('receipt', function(){\n *    ...\n * });\n * ```\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { Contract } from './contract.js';\n\nexport * from './encoding.js';\n\nexport * from './contract.js';\nexport * from './log_subscription.js';\nexport * from './types.js';\n\nexport default Contract;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tAbiEventFragment,\n\tLogsInput,\n\tHexString,\n\tTopic,\n\tDataFormat,\n\tEventLog,\n\tContractAbiWithSignature,\n} from 'web3-types';\nimport { Web3RequestManager, Web3Subscription, Web3SubscriptionManager } from 'web3-core';\nimport { decodeEventABI } from 'web3-eth';\n\n/**\n * LogSubscription to be used to subscribe to events logs.\n *\n * Following events are supported and can be accessed with either {@link LogsSubscription.once} or ${@link LogsSubscription.on} methods.\n *\n * - **connected**: Emitted when the subscription is connected.\n * - **data**: Fires on each incoming event with the event object as argument.\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\n * - **error**: Fires on each error.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent({\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n *   fromBlock: 0\n * });\n *\n * subscription.on(\"connected\", function(subscriptionId){\n *   console.log(subscriptionId);\n * });\n *\n * subscription.on('data', function(event){\n *   console.log(event); // same results as the optional callback above\n * });\n *\n * subscription.on('changed', function(event){\n *   // remove event from local database\n * })\n *\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n *   ...\n * });\n *\n * // event output example\n * > {\n *   returnValues: {\n *       myIndexedParam: 20,\n *       myOtherIndexedParam: '0x123456789...',\n *       myNonIndexParam: 'My String'\n *   },\n *   raw: {\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n *   },\n *   event: 'MyEvent',\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   logIndex: 0,\n *   transactionIndex: 0,\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   blockNumber: 1234,\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n * }\n * ```\n */\nexport class LogsSubscription extends Web3Subscription<\n\t{\n\t\tdata: EventLog;\n\t\tchanged: EventLog & { removed: true };\n\t},\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t{ address?: HexString; topics?: (Topic | Topic[] | null)[]; abi: AbiEventFragment }\n> {\n\t/**\n\t * Address of tye contract\n\t */\n\tpublic readonly address?: HexString;\n\n\t/**\n\t * The list of topics subscribed\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic readonly topics?: (Topic | Topic[] | null)[];\n\n\t/**\n\t * The {@doclink glossary/json_interface | JSON Interface} of the event.\n\t */\n\tpublic readonly abi: AbiEventFragment & { signature: HexString };\n\n\tpublic readonly jsonInterface: ContractAbiWithSignature;\n\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\n\t);\n\t/**\n\t * @deprecated This constructor overloading should not be used\n\t */\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: { requestManager: Web3RequestManager; returnFormat?: DataFormat },\n\t);\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: (\n\t\t\t| { subscriptionManager: Web3SubscriptionManager }\n\t\t\t| { requestManager: Web3RequestManager }\n\t\t) & {\n\t\t\treturnFormat?: DataFormat;\n\t\t},\n\t) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tsuper(args, options as any);\n\n\t\tthis.address = args.address;\n\t\tthis.topics = args.topics;\n\t\tthis.abi = args.abi;\n\t\tthis.jsonInterface = args.jsonInterface;\n\t}\n\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['logs', { address: this.address, topics: this.topics }];\n\t}\n\n\tprotected formatSubscriptionResult(data: EventLog) {\n\t\treturn decodeEventABI(this.abi, data as LogsInput, this.jsonInterface, super.returnFormat);\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3ContractError } from 'web3-errors';\nimport {\n\tTransactionForAccessList,\n\tAbiFunctionFragment,\n\tTransactionWithSenderAPI,\n\tTransactionCall,\n\tHexString,\n\tAddress,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tContractInitOptions,\n\tContractOptions,\n} from 'web3-types';\nimport { isNullish, mergeDeep } from 'web3-utils';\nimport { encodeMethodABI } from './encoding.js';\nimport { Web3ContractContext } from './types.js';\n\nconst dataInputEncodeMethodHelper = (\n\ttxParams: TransactionCall | TransactionForAccessList,\n\tabi: AbiFunctionFragment,\n\tparams: unknown[],\n\tdataInputFill?: 'data' | 'input' | 'both',\n): { data?: HexString; input?: HexString } => {\n\tconst tx: { data?: HexString; input?: HexString } = {};\n\tif (!isNullish(txParams.data) || dataInputFill === 'both') {\n\t\ttx.data = encodeMethodABI(abi, params, (txParams.data ?? txParams.input) as HexString);\n\t}\n\tif (!isNullish(txParams.input) || dataInputFill === 'both') {\n\t\ttx.input = encodeMethodABI(abi, params, (txParams.input ?? txParams.data) as HexString);\n\t}\n\t// if input and data is empty, use web3config default\n\tif (isNullish(tx.input) && isNullish(tx.data)) {\n\t\ttx[dataInputFill as 'data' | 'input'] = encodeMethodABI(abi, params);\n\t}\n\n\treturn { data: tx.data as HexString, input: tx.input as HexString };\n};\n\nexport const getSendTxParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tinput?: HexString;\n\t\tdata?: HexString;\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionCall => {\n\tconst deploymentCall =\n\t\toptions?.input ?? options?.data ?? contractOptions.input ?? contractOptions.data;\n\tif (!deploymentCall && !options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\n\tif (!options?.from && !contractOptions.from) {\n\t\tthrow new Web3ContractError('Contract \"from\" address not specified');\n\t}\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n\nexport const getEthTxCallParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionCall => {\n\tif (!options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n\nexport const getEstimateGasParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): Partial<TransactionWithSenderAPI> => {\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams as TransactionWithSenderAPI;\n};\n\nexport const isContractInitOptions = (options: unknown): options is ContractInitOptions =>\n\ttypeof options === 'object' &&\n\t!isNullish(options) &&\n\t[\n\t\t'input',\n\t\t'data',\n\t\t'from',\n\t\t'gas',\n\t\t'gasPrice',\n\t\t'gasLimit',\n\t\t'address',\n\t\t'jsonInterface',\n\t\t'syncWithContext',\n\t\t'dataInputFill',\n\t].some(key => key in options);\n\nexport const isWeb3ContractContext = (options: unknown): options is Web3ContractContext =>\n\ttypeof options === 'object' && !isNullish(options) && !isContractInitOptions(options);\n\nexport const getCreateAccessListParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionForAccessList => {\n\tif (!options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\n\tif (!options?.from && !contractOptions.from) {\n\t\tthrow new Web3ContractError('Contract \"from\" address not specified');\n\t}\n\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionForAccessList;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// https://github.com/ensdomains/ens-contracts/blob/master/contracts/registry/ENSRegistry.sol\nexport const ENSRegistryAbi = [\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'label',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'NewOwner',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'resolver',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'NewResolver',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'Transfer',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'operator',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'isApprovedForAll',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'owner',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'recordExists',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'resolver',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'ttl',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'uint64',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'uint64',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n] as const;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// https://github.com/ensdomains/ens-contracts/blob/master/contracts/resolvers/PublicResolver.sol\nexport const PublicResolverAbi = [\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'a',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'AddrChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'uint256',\n\t\t\t\tname: 'coinType',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'newAddress',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tname: 'AddressChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'owner',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'operator',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: 'approved',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tname: 'ApprovalForAll',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'hash',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tname: 'ContenthashChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'uint16',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'uint16',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'record',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tname: 'DNSRecordChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'uint16',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'uint16',\n\t\t\t},\n\t\t],\n\t\tname: 'DNSRecordDeleted',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'DNSZoneCleared',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'lastzonehash',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: 'zonehash',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tname: 'DNSZonehashChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes4',\n\t\t\t\tname: 'interfaceID',\n\t\t\t\ttype: 'bytes4',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'implementer',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'InterfaceChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tname: 'NameChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'x',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'y',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'PubkeyChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tanonymous: false,\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: true,\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: 'indexedKey',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t\t{\n\t\t\t\tindexed: false,\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: 'key',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tname: 'TextChanged',\n\t\ttype: 'event',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'uint256',\n\t\t\t\tname: 'contentTypes',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'ABI',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'uint256',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'addr',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address payable',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'uint256',\n\t\t\t\tname: 'coinType',\n\t\t\t\ttype: 'uint256',\n\t\t\t},\n\t\t],\n\t\tname: 'addr',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'contenthash',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'uint16',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'uint16',\n\t\t\t},\n\t\t],\n\t\tname: 'dnsRecord',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'name',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'hasDNSRecords',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'bytes4',\n\t\t\t\tname: 'interfaceID',\n\t\t\t\ttype: 'bytes4',\n\t\t\t},\n\t\t],\n\t\tname: 'interfaceImplementer',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'account',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'operator',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'isApprovedForAll',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'name',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'pubkey',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'x',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'y',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes4',\n\t\t\t\tname: 'interfaceID',\n\t\t\t\ttype: 'bytes4',\n\t\t\t},\n\t\t],\n\t\tname: 'supportsInterface',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bool',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bool',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t\t{\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: 'key',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tname: 'text',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes32',\n\t\t\t\tname: 'node',\n\t\t\t\ttype: 'bytes32',\n\t\t\t},\n\t\t],\n\t\tname: 'zonehash',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'bytes',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'bytes',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n] as const;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//\n/**\n * An object holding the interface Ids of the ENS resolver contracts. Please see [how to write a resolver](https://docs.ens.domains/contract-developer-guide/writing-a-resolver).\n */\nexport const interfaceIds: { [T: string]: string } = {\n\taddr: '0x3b3b57de',\n\tname: '0x691f3431',\n\tabi: '0x2203ab56',\n\tpubkey: '0xc8690233',\n\ttext: '0x59d1d43c',\n\tcontenthash: '0xbc1c58d1',\n};\n\n/**\n * An object holding the functionsthat are supported by the ENS resolver contracts/interfaces.\n */\nexport const methodsInInterface: { [T: string]: string } = {\n\tsetAddr: 'addr',\n\taddr: 'addr',\n\tsetPubkey: 'pubkey',\n\tpubkey: 'pubkey',\n\tsetContenthash: 'contenthash',\n\tcontenthash: 'contenthash',\n};\n\n/**\n * An object holding the addressed of the ENS registries on the different networks (mainnet, goerli).\n */\nexport const registryAddresses: { [T: string]: string } = {\n\tmain: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n\tgoerli: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n};\n\nexport const networkIds: { [T: string]: string } = {\n\t'0x1': 'main',\n\t'0x5': 'goerli',\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context, Web3ContextObject } from 'web3-core';\nimport { ENSNetworkNotSyncedError, ENSUnsupportedNetworkError } from 'web3-errors';\nimport { isSyncing } from 'web3-eth';\nimport { Contract } from 'web3-eth-contract';\nimport { getId } from 'web3-net';\nimport {\n\tDEFAULT_RETURN_FORMAT,\n\tEthExecutionAPI,\n\tFMT_NUMBER,\n\tSupportedProviders,\n\tWeb3NetAPI,\n} from 'web3-types';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { networkIds, registryAddresses } from './config.js';\nimport { Registry } from './registry.js';\nimport { Resolver } from './resolver.js';\n\n/**\n * This class is designed to interact with the ENS system on the Ethereum blockchain.\n *\n */\nexport class ENS extends Web3Context<EthExecutionAPI & Web3NetAPI> {\n\t/**\n\t * The registryAddress property can be used to define a custom registry address when you are connected to an unknown chain. It defaults to the main registry address.\n\t */\n\tpublic registryAddress: string;\n\tprivate readonly _registry: Registry;\n\tprivate readonly _resolver: Resolver;\n\tprivate _detectedAddress?: string;\n\tprivate _lastSyncCheck?: number;\n\n\t/**\n\t * Use to create an instance of ENS\n\t * @param registryAddr - (Optional) The address of the ENS registry (default: mainnet registry address)\n\t * @param provider - (Optional) The provider to use for the ENS instance\n\t * @example\n\t * ```ts\n\t * const ens = new ENS(\n\t * \t\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n\t * \t\"http://localhost:8545\"\n\t * );\n\t *\n\t * console.log( ens.defaultChain);\n\t * > mainnet\n\t * ```\n\t */\n\tpublic constructor(\n\t\tregistryAddr?: string,\n\t\tprovider?:\n\t\t\t| SupportedProviders<EthExecutionAPI & Web3NetAPI>\n\t\t\t| Web3ContextObject<EthExecutionAPI & Web3NetAPI>\n\t\t\t| string,\n\t) {\n\t\tsuper(provider ?? '');\n\t\tthis.registryAddress = registryAddr ?? registryAddresses.main; // will default to main registry address\n\t\tthis._registry = new Registry(this.getContextObject(), registryAddr);\n\t\tthis._resolver = new Resolver(this._registry);\n\t}\n\n\t/**\n\t * Returns the Resolver by the given address\n\t * @param name - The name of the ENS domain\n\t * @returns - An contract instance of the resolver\n\t *\n\t * @example\n\t * ```ts\n\t * const resolver = await ens.getResolver('resolver');\n\t *\n\t * console.log(resolver.options.address);\n\t * > '0x1234567890123456789012345678901234567890'\n\t * ```\n\t */\n\tpublic async getResolver(name: string): Promise<Contract<typeof PublicResolverAbi>> {\n\t\treturn this._registry.getResolver(name);\n\t}\n\n\t/**\n\t * Returns true if the record exists\n\t * @param name - The ENS name\n\t * @returns - Returns `true` if node exists in this ENS registry. This will return `false` for records that are in the legacy ENS registry but have not yet been migrated to the new one.\n\t * @example\n\t * ```ts\n\t * const exists = await web3.eth.ens.recordExists('ethereum.eth');\n\t * ```\n\t */\n\tpublic async recordExists(name: string): Promise<unknown> {\n\t\treturn this._registry.recordExists(name);\n\t}\n\n\t/**\n\t * Returns the caching TTL (time-to-live) of an ENS name.\n\t * @param name - The ENS name\n\t * @returns - Returns the caching TTL (time-to-live) of a name.\n\t * @example\n\t * ```ts\n\t * const owner = await web3.eth.ens.getTTL('ethereum.eth');\n\t * ```\n\t */\n\tpublic async getTTL(name: string): Promise<unknown> {\n\t\treturn this._registry.getTTL(name);\n\t}\n\n\t/**\n\t * Returns the owner by the given name and current configured or detected Registry\n\t * @param name - The ENS name\n\t * @returns - Returns the address of the owner of the name.\n\t * @example\n\t * ```ts\n\t * const owner = await web3.eth.ens.getOwner('ethereum.eth');\n\t * ```\n\t */\n\tpublic async getOwner(name: string): Promise<unknown> {\n\t\treturn this._registry.getOwner(name);\n\t}\n\n\t/**\n\t * Resolves an ENS name to an Ethereum address.\n\t * @param ENSName - The ENS name to resolve\n\t * @param coinType - (Optional) The coin type, defaults to 60 (ETH)\n\t * @returns - The Ethereum address of the given name\n\t * ```ts\n\t * const address = await web3.eth.ens.getAddress('ethereum.eth');\n\t * console.log(address);\n\t * > '0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359'\n\t * ```\n\t */\n\tpublic async getAddress(ENSName: string, coinType = 60) {\n\t\treturn this._resolver.getAddress(ENSName, coinType);\n\t}\n\n\t/**\n\t * Returns the X and Y coordinates of the curve point for the public key.\n\t * @param ENSName - The ENS name\n\t * @returns - The X and Y coordinates of the curve point for the public key\n\t * @example\n\t * ```ts\n\t * const key = await web3.eth.ens.getPubkey('ethereum.eth');\n\t * console.log(key);\n\t * > {\n\t * \"0\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n\t * \"1\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n\t * \"x\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n\t * \"y\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n\t * }\n\t * ```\n\t */\n\tpublic async getPubkey(ENSName: string) {\n\t\treturn this._resolver.getPubkey(ENSName);\n\t}\n\n\t/**\n\t * Returns the content hash object associated with an ENS node.\n\t * @param ENSName - The ENS name\n\t * @returns - The content hash object associated with an ENS node\n\t * @example\n\t * ```ts\n\t * const hash = await web3.eth.ens.getContenthash('ethereum.eth');\n\t * console.log(hash);\n\t * > 'QmaEBknbGT4bTQiQoe2VNgBJbRfygQGktnaW5TbuKixjYL'\n\t * ```\n\t */\n\tpublic async getContenthash(ENSName: string) {\n\t\treturn this._resolver.getContenthash(ENSName);\n\t}\n\n\t/**\n\t * Checks if the current used network is synced and looks for ENS support there.\n\t * Throws an error if not.\n\t * @returns - The address of the ENS registry if the network has been detected successfully\n\t * @example\n\t * ```ts\n\t * console.log(await web3.eth.ens.checkNetwork());\n\t * > '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\t * ```\n\t */\n\tpublic async checkNetwork() {\n\t\tconst now = Date.now() / 1000;\n\t\tif (!this._lastSyncCheck || now - this._lastSyncCheck > 3600) {\n\t\t\tconst syncInfo = await isSyncing(this);\n\n\t\t\tif (!(typeof syncInfo === 'boolean' && !syncInfo)) {\n\t\t\t\tthrow new ENSNetworkNotSyncedError();\n\t\t\t}\n\n\t\t\tthis._lastSyncCheck = now;\n\t\t}\n\n\t\tif (this._detectedAddress) {\n\t\t\treturn this._detectedAddress;\n\t\t}\n\t\tconst networkType = await getId(this, {\n\t\t\t...DEFAULT_RETURN_FORMAT,\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t}); // get the network from provider\n\t\tconst addr = registryAddresses[networkIds[networkType]];\n\n\t\tif (typeof addr === 'undefined') {\n\t\t\tthrow new ENSUnsupportedNetworkError(networkType);\n\t\t}\n\n\t\tthis._detectedAddress = addr;\n\t\treturn this._detectedAddress;\n\t}\n\n\t/**\n\t * Returns true if the related Resolver does support the given signature or interfaceId.\n\t * @param ENSName - The ENS name\n\t * @param interfaceId - The signature of the function or the interfaceId as described in the ENS documentation\n\t * @returns - `true` if the related Resolver does support the given signature or interfaceId.\n\t * @example\n\t * ```ts\n\t * const supports = await web3.eth.ens.supportsInterface('ethereum.eth', 'addr(bytes32');\n\t * console.log(supports);\n\t * > true\n\t * ```\n\t */\n\tpublic async supportsInterface(ENSName: string, interfaceId: string) {\n\t\treturn this._resolver.supportsInterface(ENSName, interfaceId);\n\t}\n\n\t/**\n\t * @returns - Returns all events that can be emitted by the ENS registry.\n\t */\n\tpublic get events() {\n\t\treturn this._registry.events;\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3.eth.ens` functions let you interact with ENS. We recommend reading the [ENS documentation](https://docs.ens.domains/) to get deeper insights about the internals of the name service.\n *\n * ## Breaking Changes\n *\n * -   All the API level interfaces returning or accepting `null` in 1.x, use `undefined` in 4.x.\n * -   Functions don't accept a callback anymore.\n * -   Functions that accepted an optional `TransactionConfig` as the last argument, now accept an optional `NonPayableCallOptions`. See `web3-eth-contract` package for more details.\n * -   Removed all non-read methods. If you need modifing resolver or registry, please use https://www.npmjs.com/package/@ensdomains/ensjs\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { registryAddresses } from './config.js';\n\nexport * from './ens.js';\nexport { registryAddresses };\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3ContextObject } from 'web3-core';\nimport { Contract } from 'web3-eth-contract';\nimport { Address } from 'web3-types';\nimport { ENSRegistryAbi } from './abi/ens/ENSRegistry.js';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { registryAddresses } from './config.js';\nimport { namehash } from './utils.js';\n\nexport class Registry {\n\tprivate readonly contract: Contract<typeof ENSRegistryAbi>;\n\tprivate readonly context: Web3ContextObject;\n\n\tpublic constructor(context: Web3ContextObject, customRegistryAddress?: Address) {\n\t\tthis.contract = new Contract(\n\t\t\tENSRegistryAbi,\n\t\t\tcustomRegistryAddress ?? registryAddresses.main,\n\t\t\tcontext,\n\t\t);\n\n\t\tthis.context = context;\n\t}\n\n\tpublic async getOwner(name: string) {\n\t\ttry {\n\t\t\tconst result = this.contract.methods.owner(namehash(name)).call();\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n\t\t}\n\t}\n\n\tpublic async getTTL(name: string) {\n\t\ttry {\n\t\t\treturn this.contract.methods.ttl(namehash(name)).call();\n\t\t} catch (error) {\n\t\t\tthrow new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n\t\t}\n\t}\n\n\tpublic async recordExists(name: string) {\n\t\ttry {\n\t\t\tconst promise = this.contract.methods.recordExists(namehash(name)).call();\n\n\t\t\treturn promise;\n\t\t} catch (error) {\n\t\t\tthrow new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n\t\t}\n\t}\n\n\tpublic async getResolver(name: string) {\n\t\ttry {\n\t\t\treturn this.contract.methods\n\t\t\t\t.resolver(namehash(name))\n\t\t\t\t.call()\n\t\t\t\t.then(address => {\n\t\t\t\t\t// address type is unknown, not sure why\n\t\t\t\t\tif (typeof address === 'string') {\n\t\t\t\t\t\tconst contract = new Contract(PublicResolverAbi, address, this.context);\n\t\t\t\t\t\t// TODO: set contract provider needs to be added when ens current provider\n\t\t\t\t\t\treturn contract;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error();\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Error(); // TODO: TransactionRevertInstructionError Needs to be added after web3-eth call method is implemented\n\t\t}\n\t}\n\n\tpublic get events() {\n\t\treturn this.contract.events;\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ResolverMethodMissingError } from 'web3-errors';\nimport { Contract } from 'web3-eth-contract';\nimport { isNullish, sha3 } from 'web3-utils';\nimport { isHexStrict } from 'web3-validator';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { interfaceIds, methodsInInterface } from './config.js';\nimport { Registry } from './registry.js';\nimport { namehash } from './utils.js';\n\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\n\nexport class Resolver {\n\tprivate readonly registry: Registry;\n\n\tpublic constructor(registry: Registry) {\n\t\tthis.registry = registry;\n\t}\n\n\tprivate async getResolverContractAdapter(ENSName: string) {\n\t\t//  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag\n\t\treturn this.registry.getResolver(ENSName);\n\t}\n\n\t//  https://eips.ethereum.org/EIPS/eip-165\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic async checkInterfaceSupport(\n\t\tresolverContract: Contract<typeof PublicResolverAbi>,\n\t\tmethodName: string,\n\t) {\n\t\tif (isNullish(interfaceIds[methodName]))\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\n\t\tconst supported = await resolverContract.methods\n\t\t\t.supportsInterface(interfaceIds[methodName])\n\t\t\t.call();\n\n\t\tif (!supported)\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\t}\n\n\tpublic async supportsInterface(ENSName: string, interfaceId: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tlet interfaceIdParam = interfaceId;\n\n\t\tif (!isHexStrict(interfaceIdParam)) {\n\t\t\tinterfaceIdParam = sha3(interfaceId) ?? '';\n\n\t\t\tif (interfaceId === '') throw new Error('Invalid interface Id');\n\n\t\t\tinterfaceIdParam = interfaceIdParam.slice(0, 10);\n\t\t}\n\n\t\treturn resolverContract.methods.supportsInterface(interfaceIdParam).call();\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-inferrable-types\n\tpublic async getAddress(ENSName: string, coinType: number = 60) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.addr);\n\n\t\treturn resolverContract.methods.addr(namehash(ENSName), coinType).call();\n\t}\n\n\tpublic async getPubkey(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.pubkey);\n\n\t\treturn resolverContract.methods.pubkey(namehash(ENSName)).call();\n\t}\n\n\tpublic async getContenthash(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.contenthash);\n\n\t\treturn resolverContract.methods.contenthash(namehash(ENSName)).call();\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { sha3Raw } from 'web3-utils';\n// eslint-disable-next-line camelcase\nimport { ens_normalize } from '@adraffy/ens-normalize';\n\nexport const normalize = (name: string) => ens_normalize(name);\n\nexport const namehash = (inputName: string) => {\n\t// Reject empty names:\n\tlet node = '';\n\tfor (let i = 0; i < 32; i += 1) {\n\t\tnode += '00';\n\t}\n\n\tif (inputName) {\n\t\tconst name = normalize(inputName);\n\t\tconst labels = name.split('.');\n\n\t\tfor (let i = labels.length - 1; i >= 0; i -= 1) {\n\t\t\tconst labelSha = sha3Raw(labels[i]).slice(2);\n\t\t\tnode = sha3Raw(`0x${node}${labelSha}`).slice(2);\n\t\t}\n\t}\n\n\treturn `0x${node}`;\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { HexString } from 'web3-types';\nimport { toChecksumAddress, leftPad, hexToNumber } from 'web3-utils';\nimport { isAddress } from 'web3-validator';\nimport { InvalidAddressError } from 'web3-errors';\nimport { IbanOptions } from './types.js';\n\n/**\n * Converts Ethereum addresses to IBAN or BBAN addresses and vice versa.\n */\nexport class Iban {\n\tprivate readonly _iban: string;\n\n\t/**\n\t * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n\t * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n\t */\n\tprivate static readonly _iso13616Prepare = (iban: string): string => {\n\t\tconst A = 'A'.charCodeAt(0);\n\t\tconst Z = 'Z'.charCodeAt(0);\n\n\t\tconst upperIban = iban.toUpperCase();\n\t\tconst modifiedIban = `${upperIban.slice(4)}${upperIban.slice(0, 4)}`;\n\n\t\treturn modifiedIban\n\t\t\t.split('')\n\t\t\t.map(n => {\n\t\t\t\tconst code = n.charCodeAt(0);\n\t\t\t\tif (code >= A && code <= Z) {\n\t\t\t\t\t// A = 10, B = 11, ... Z = 35\n\t\t\t\t\treturn code - A + 10;\n\t\t\t\t}\n\t\t\t\treturn n;\n\t\t\t})\n\t\t\t.join('');\n\t};\n\n\t/**\n\t * return the bigint of the given string with the specified base\n\t */\n\tprivate static readonly _parseInt = (str: string, base: number): bigint =>\n\t\t[...str].reduce(\n\t\t\t(acc, curr) => BigInt(parseInt(curr, base)) + BigInt(base) * acc,\n\t\t\tBigInt(0),\n\t\t);\n\n\t/**\n\t * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n\t */\n\tprivate static readonly _mod9710 = (iban: string): number => {\n\t\tlet remainder = iban;\n\t\tlet block;\n\n\t\twhile (remainder.length > 2) {\n\t\t\tblock = remainder.slice(0, 9);\n\t\t\tremainder = `${(parseInt(block, 10) % 97).toString()}${remainder.slice(block.length)}`;\n\t\t}\n\n\t\treturn parseInt(remainder, 10) % 97;\n\t};\n\n\t/**\n\t * A static method that checks if an IBAN is Direct.\n\t * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n\t * Note: this is also available as a method at an Iban instance.\n\t * @param iban - an IBAN to be checked\n\t * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.isDirect(\"XE81ETHXREGGAVOFYORK\");\n\t * > false\n\t * ```\n\t */\n\tpublic static isDirect(iban: string): boolean {\n\t\treturn iban.length === 34 || iban.length === 35;\n\t}\n\n\t/**\n\t * An instance method that checks if iban number is Direct.\n\t * It actually check the length of the provided variable and, only if it is 34 or 35, it returns true.\n\t * Note: this is also available as a static method.\n\t * @param iban - an IBAN to be checked\n\t * @returns - `true` if the provided `iban` is a Direct IBAN, and `false` otherwise.\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.isDirect();\n\t * > false\n\t * ```\n\t */\n\tpublic isDirect(): boolean {\n\t\treturn Iban.isDirect(this._iban);\n\t}\n\n\t/**\n\t * A static method that checks if an IBAN is Indirect.\n\t * It actually check the length of the provided variable and, only if it is 20, it returns true.\n\t * Note: this is also available as a method at an Iban instance.\n\t * @param iban - an IBAN to be checked\n\t * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.isIndirect(\"XE81ETHXREGGAVOFYORK\");\n\t * > true\n\t * ```\n\t */\n\tpublic static isIndirect(iban: string): boolean {\n\t\treturn iban.length === 20;\n\t}\n\n\t/**\n\t * check if iban number if indirect\n\t * It actually check the length of the provided variable and, only if it is 20, it returns true.\n\t * Note: this is also available as a static method.\n\t * @param iban - an IBAN to be checked\n\t * @returns - `true` if the provided `iban` is an Indirect IBAN, and `false` otherwise.\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.isIndirect();\n\t * > true\n\t * ```\n\t */\n\tpublic isIndirect(): boolean {\n\t\treturn Iban.isIndirect(this._iban);\n\t}\n\n\t/**\n\t * This method could be used to check if a given string is valid IBAN object.\n\t * Note: this is also available as a method at an Iban instance.\n\t *\n\t * @param iban - a string to be checked if it is in IBAN\n\t * @returns - true if it is valid IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.isValid(\"XE81ETHXREGGAVOFYORK\");\n\t * > true\n\t *\n\t * web3.eth.Iban.isValid(\"XE82ETHXREGGAVOFYORK\");\n\t * > false // because the checksum is incorrect\n\t * ```\n\t */\n\tpublic static isValid(iban: string) {\n\t\treturn (\n\t\t\t/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(iban) &&\n\t\t\tIban._mod9710(Iban._iso13616Prepare(iban)) === 1\n\t\t);\n\t}\n\n\t/**\n\t * Should be called to check if the early provided IBAN is correct.\n\t * Note: this is also available as a static method.\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.isValid();\n\t * > true\n\t *\n\t * const iban = new web3.eth.Iban(\"XE82ETHXREGGAVOFYORK\");\n\t * iban.isValid();\n\t * > false // because the checksum is incorrect\n\t * ```\n\t */\n\tpublic isValid(): boolean {\n\t\treturn Iban.isValid(this._iban);\n\t}\n\n\t/**\n\t * Construct a direct or indirect IBAN that has conversion methods and validity checks.\n\t * If the provided string was not of either the length of a direct IBAN (34 or 35),\n\t * nor the length of an indirect IBAN (20), an Error will be thrown ('Invalid IBAN was provided').\n\t *\n\t * @param iban - a Direct or an Indirect IBAN\n\t * @returns - Iban instance\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n\t * > Iban { _iban: 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS' }\n\t * ```\n\t */\n\tpublic constructor(iban: string) {\n\t\tif (Iban.isIndirect(iban) || Iban.isDirect(iban)) {\n\t\t\tthis._iban = iban;\n\t\t} else {\n\t\t\tthrow new Error('Invalid IBAN was provided');\n\t\t}\n\t}\n\n\t/**\n\t * Convert the passed BBAN to an IBAN for this country specification.\n\t * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n\t * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n\t *\n\t * @param bban - the BBAN to convert to IBAN\n\t * @returns an Iban class instance that holds the equivalent IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.fromBban('ETHXREGGAVOFYORK');\n\t * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n\t * ```\n\t */\n\tpublic static fromBban(bban: string): Iban {\n\t\tconst countryCode = 'XE';\n\n\t\tconst remainder = this._mod9710(this._iso13616Prepare(`${countryCode}00${bban}`));\n\t\tconst checkDigit = `0${(98 - remainder).toString()}`.slice(-2);\n\n\t\treturn new Iban(`${countryCode}${checkDigit}${bban}`);\n\t}\n\n\t/**\n\t * Should be used to create IBAN object for given institution and identifier\n\t *\n\t * @param options - an object holds the `institution` and the `identifier` which will be composed to create an `Iban` object from.\n\t * @returns an Iban class instance that holds the equivalent IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.createIndirect({\n\t *     institution: \"XREG\",\n\t *     identifier: \"GAVOFYORK\"\n\t * });\n\t * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n\t * ```\n\t */\n\tpublic static createIndirect(options: IbanOptions): Iban {\n\t\treturn Iban.fromBban(`ETH${options.institution}${options.identifier}`);\n\t}\n\n\t/**\n\t * This method should be used to create iban object from an Ethereum address.\n\t *\n\t * @param address - an Ethereum address\n\t * @returns an Iban class instance that holds the equivalent IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.fromAddress(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n\t * > Iban {_iban: \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"}\n\t * ```\n\t */\n\tpublic static fromAddress(address: HexString): Iban {\n\t\tif (!isAddress(address)) {\n\t\t\tthrow new InvalidAddressError(address);\n\t\t}\n\n\t\tconst num = BigInt(hexToNumber(address));\n\t\tconst base36 = num.toString(36);\n\t\tconst padded = leftPad(base36, 15);\n\t\treturn Iban.fromBban(padded.toUpperCase());\n\t}\n\n\t/**\n\t * This method should be used to create an ethereum address from a Direct IBAN address.\n\t * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n\t * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n\t * Note: this is also available as a method at an Iban instance.\n\t *\n\t * @param iban - a Direct IBAN address\n\t * @return the equivalent ethereum address\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.toAddress(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n\t * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n\t * ```\n\t */\n\tpublic static toAddress = (iban: string): HexString => {\n\t\tconst ibanObject = new Iban(iban);\n\t\treturn ibanObject.toAddress();\n\t};\n\n\t/**\n\t * This method should be used to create the equivalent ethereum address for the early provided Direct IBAN address.\n\t * If the provided string was not a direct IBAN (has the length of 34 or 35), an Error will be thrown:\n\t * ('Iban is indirect and cannot be converted. Must be length of 34 or 35').\n\t * Note: this is also available as a static method.\n\t *\n\t * @return the equivalent ethereum address\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\");\n\t * iban.toAddress();\n\t * > \"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\"\n\t * ```\n\t */\n\tpublic toAddress = (): HexString => {\n\t\tif (this.isDirect()) {\n\t\t\t// check if Iban can be converted to an address\n\t\t\tconst base36 = this._iban.slice(4);\n\t\t\tconst parsedBigInt = Iban._parseInt(base36, 36); // convert the base36 string to a bigint\n\t\t\tconst paddedBigInt = leftPad(parsedBigInt, 40);\n\t\t\treturn toChecksumAddress(paddedBigInt);\n\t\t}\n\t\tthrow new Error('Iban is indirect and cannot be converted. Must be length of 34 or 35');\n\t};\n\n\t/**\n\t * This method should be used to create IBAN address from an Ethereum address\n\t *\n\t * @param address - an Ethereum address\n\t * @return the equivalent IBAN address\n\t *\n\t * @example\n\t * ```ts\n\t * web3.eth.Iban.toIban(\"0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8\");\n\t * > \"XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS\"\n\t * ```\n\t */\n\tpublic static toIban(address: HexString): string {\n\t\treturn Iban.fromAddress(address).toString();\n\t}\n\n\t/**\n\t * Should be called to get client identifier within institution\n\t *\n\t * @return the client of the IBAN instance.\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.client();\n\t * > 'GAVOFYORK'\n\t * ```\n\t */\n\tpublic client(): string {\n\t\treturn this.isIndirect() ? this._iban.slice(11) : '';\n\t}\n\n\t/**\n\t * Returns the IBAN checksum of the early provided IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.checksum();\n\t * > \"81\"\n\t * ```\n\t *\n\t */\n\tpublic checksum(): string {\n\t\treturn this._iban.slice(2, 4);\n\t}\n\n\t/**\n\t * Returns institution identifier from the early provided  IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban(\"XE81ETHXREGGAVOFYORK\");\n\t * iban.institution();\n\t * > 'XREG'\n\t * ```\n\t */\n\tpublic institution(): string {\n\t\treturn this.isIndirect() ? this._iban.slice(7, 11) : '';\n\t}\n\n\t/**\n\t * Simply returns the early provided IBAN\n\t *\n\t * @example\n\t * ```ts\n\t * const iban = new web3.eth.Iban('XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS');\n\t * iban.toString();\n\t * > 'XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS'\n\t * ```\n\t */\n\tpublic toString(): string {\n\t\treturn this._iban;\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Iban } from './iban.js';\n\nexport * from './iban.js';\nexport * from './types.js';\n\nexport default Iban;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3-eth-personal` package allows you to interact with the Ethereum node’s accounts.\n *\n * **_NOTE:_**  Many of these functions send sensitive information like passwords. Never call these functions over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!\n *\n * import Personal from 'web3-eth-personal';\n *\n * const personal = new Personal('http://localhost:8545');\n *\n * or using the web3 umbrella package\n *\n * import Personal from 'web3-eth-personal';\n * const web3 = new Web3('http://localhost:8545');\n * // web3.eth.personal\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { Personal } from './personal.js';\n\nexport * from './personal.js';\n\nexport default Personal;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport { Address, EthPersonalAPI, HexString, Transaction } from 'web3-types';\n\nimport * as rpcWrappers from './rpc_method_wrappers.js';\n\nexport class Personal extends Web3Context<EthPersonalAPI> {\n\t/**\n\t *Returns a list of accounts the node controls by using the provider and calling the RPC method personal_listAccounts. Using `web3.eth.accounts.create()` will not add accounts into this list. For that use `web3.eth.personal.newAccount()`.\n\t * @returns - An array of addresses controlled by the node.\n\t * @example\n\t * ```ts\n\t *  const accounts = await personal.getAccounts();\n\t * console.log(accounts);\n\t * >\n\t * [\n\t * \t'0x79D7BbaC53C9aF700d0B250e9AE789E503Fcd6AE',\n\t * \t'0xe2597eB05CF9a87eB1309e86750C903EC38E527e',\n\t * \t'0x7eD0e85B8E1E925600B4373e6d108F34AB38a401',\n\t * \t'0xE4bEEf667408b99053dC147Ed19592aDa0d77F59',\n\t * \t'0x7AB80aeB6bb488B7f6c41c58e83Ef248eB39c882',\n\t * \t'0x12B1D9d74d73b1C3A245B19C1C5501c653aF1af9',\n\t * \t'0x1a6075A263Ee140e00Dbf8E374Fc5A443d097894',\n\t * \t'0x4FEC0A51024B13030D26E70904B066C6d41157A5',\n\t * \t'0x03095dc4857BB26f3a4550c5651Df8b7f6b6B1Ef',\n\t * \t'0xac0B9b6e8A17991cb172B2ABAF45Fb5eb769E540'\n\t * ]\n\t * ```\n\t */\n\tpublic async getAccounts() {\n\t\treturn rpcWrappers.getAccounts(this.requestManager);\n\t}\n\n\t/**\n\t * Creates a new account and returns its address.\n\t * **_NOTE:_**  This function sends a sensitive information like password. Never call this function over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!\n\t * @param password - The password to encrypt the account with.\n\t * @returns - The address of the new account.\n\t * @example\n\t * ```ts\n\t * const addr = await web3.eth.personal.newAccount('password');\n\t * console.log(addr);\n\t * > '0x1234567891011121314151617181920212223456'\n\t * ```\n\t */\n\tpublic async newAccount(password: string) {\n\t\treturn rpcWrappers.newAccount(this.requestManager, password);\n\t}\n\n\t/**\n\t * Unlocks an account for a given duration.\n\t * @param address - The address of the account to unlock.\n\t * @param password - The password of the account to unlock.\n\t * @param unlockDuration - The duration in seconds to unlock the account for.\n\t * @example\n\t * ```ts\n\t * await personal.unlockAccount(\n\t * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n\t * \t\"123456\",\n\t * \t600\n\t * );\n\t * ```\n\t */\n\tpublic async unlockAccount(address: Address, password: string, unlockDuration: number) {\n\t\treturn rpcWrappers.unlockAccount(this.requestManager, address, password, unlockDuration);\n\t}\n\t/**\n\t * Locks the given account\n\t * @param address - The address of the account to lock.\n\t * @returns - `true` if the account was locked, otherwise `false`.\n\t * @example\n\t * ```ts\n\t * await personal.lockAccount(\n\t * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\"\n\t * );\n\t */\n\tpublic async lockAccount(address: Address) {\n\t\treturn rpcWrappers.lockAccount(this.requestManager, address);\n\t}\n\t/**\n\t * Imports the given private key into the key store, encrypting it with the passphrase.\n\t * @param keyData - An unencrypted private key (hex string).\n\t * @param passphrase  - The password of the account\n\t * @returns - The address of the new account.\n\t * @example\n\t * ```ts\n\t * const accountAddress = await personal.importRawKey(\n\t * \t\"abe40cb08850da918ee951b237fa87946499b2d8643e4aa12b0610b050c731f6\",\n\t * \t\"123456\"\n\t * );\n\t *\n\t * console.log(unlockTx);\n\t * > 0x8727a8b34ec833154b72b62cac05d69f86eb6556\n\t * ```\n\t */\n\tpublic async importRawKey(keyData: HexString, passphrase: string) {\n\t\treturn rpcWrappers.importRawKey(this.requestManager, keyData, passphrase);\n\t}\n\n\t/**\n\t * This method sends a transaction over the management API.\n\t * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n\t * @param tx - The transaction options\n\t * @param passphrase - The passphrase of the current account\n\t * @returns - The transaction hash\n\t * @example\n\t * ```ts\n\t * const txHash = personal\n\t * .sendTransaction({\n\t *  \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n\t * \tgasPrice: \"20000000000\",\n\t * \tgas: \"21000\",\n\t * \tto: \"0x3535353535353535353535353535353535353535\",\n\t * \tvalue: \"1000000\",\n\t * \tdata: \"\",\n\t * \tnonce: 0,\n\t * },\n\t * \"123456\");\n\t *\n\t * console.log(txHash);\n\t * > 0x9445325c3c5638c9fe425b003b8c32f03e9f99d409555a650a6838ba712bb51b\n\t * ```\n\t */\n\tpublic async sendTransaction(tx: Transaction, passphrase: string) {\n\t\treturn rpcWrappers.sendTransaction(this.requestManager, tx, passphrase);\n\t}\n\t/**\n\t * Signs a transaction. This account needs to be unlocked.\n\t * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n\t * @param tx - The transaction data to sign. See {@link sendTransaction}  for more information.\n\t * @param passphrase - The password of the `from` account, to sign the transaction with.\n\t * @returns - The RLP encoded transaction. The `raw` property can be used to send the transaction using {@link sendSignedTransaction}.\n\t * @example\n\t * ```ts\n\t * const tx = personal\n\t * .signTransaction({\n\t * \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n\t * \tgasPrice: \"20000000000\",\n\t * \tgas: \"21000\",\n\t * \tto: \"0x3535353535353535353535353535353535353535\",\n\t * \tvalue: \"1000000000000000000\",\n\t * \tdata: \"\",\n\t * \tnonce: 0,\n\t * },\n\t * \"123456\");\n\t *\n\t * console.log(tx);\n\t *\n\t * > {\n\t * \traw: '0xf86e808504a817c800825208943535353535353535353535353535353535353535880de0b6b3a764000080820a95a0c951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526a038b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n\t * \ttx: {\n\t * \ttype: '0x0',\n\t * \tnonce: '0x0',\n\t * \tgasPrice: '0x4a817c800',\n\t * \tmaxPriorityFeePerGas: null,\n\t * \tmaxFeePerGas: null,\n\t * \tgas: '0x5208',\n\t * \tvalue: '0xde0b6b3a7640000',\n\t * \tinput: '0x',\n\t * \tv: '0xa95',\n\t * \tr: '0xc951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526',\n\t * \ts: '0x38b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n\t * \tto: '0x3535353535353535353535353535353535353535',\n\t * \thash: '0x65e3df790ab2a32068b13cff970b26445b8995229ae4abbed61bd996f09fce69'\n\t * \t}\n\t * }\n\t * ```\n\t */\n\tpublic async signTransaction(tx: Transaction, passphrase: string) {\n\t\treturn rpcWrappers.signTransaction(this.requestManager, tx, passphrase);\n\t}\n\t/**\n\t * Calculates an Ethereum specific signature with:\n\t * sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + dataToSign.length + dataToSign)))\n\t * Adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature.\n\t *\n\t * If you have the original message and the signed message, you can discover the signing account address using web3.eth.personal.ecRecover\n\t * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n\t * @param data - The data to sign.\n\t * @param address - The address to sign with.\n\t * @param passphrase - The passphrase to decrypt the account with.\n\t * @returns - The signature.\n\t * @example\n\t * ```ts\n\t * const sig = await personal .sign(\"Hello world\", \"0x0D4Aa485ECbC499c70860fEb7e5AaeAf5fd8172E\", \"123456\")\n\t * console.log(sig)\n\t * > 0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\n\t * ```\n\t */\n\tpublic async sign(data: HexString, address: Address, passphrase: string) {\n\t\treturn rpcWrappers.sign(this.requestManager, data, address, passphrase);\n\t}\n\n\t/**\n\t * Recovers the account that signed the data.\n\t * @param signedData - Data that was signed. If String it will be converted using {@link utf8ToHex}\n\t * @param signature - The signature\n\t * @returns - The address of the account that signed the data.\n\t * @example\n\t * ```ts\n\t *  const address = await personal.ecRecover(\n\t * \t\"Hello world\",\n\t * \t\"0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\"\n\t * );\n\t * console.log(address);\n\t * > 0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\n\t * ```\n\t */\n\tpublic async ecRecover(signedData: HexString, signature: string) {\n\t\treturn rpcWrappers.ecRecover(this.requestManager, signedData, signature);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { toChecksumAddress, utf8ToHex } from 'web3-utils';\nimport { formatTransaction } from 'web3-eth';\nimport { Address, EthPersonalAPI, ETH_DATA_FORMAT, HexString, Transaction } from 'web3-types';\nimport { validator, isHexStrict } from 'web3-validator';\nimport { personalRpcMethods } from 'web3-rpc-methods';\n\nexport const getAccounts = async (requestManager: Web3RequestManager<EthPersonalAPI>) => {\n\tconst result = await personalRpcMethods.getAccounts(requestManager);\n\n\treturn result.map(toChecksumAddress);\n};\n\nexport const newAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tpassword: string,\n) => {\n\tvalidator.validate(['string'], [password]);\n\n\tconst result = await personalRpcMethods.newAccount(requestManager, password);\n\n\treturn toChecksumAddress(result);\n};\n\nexport const unlockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n\tpassword: string,\n\tunlockDuration: number,\n) => {\n\tvalidator.validate(['address', 'string', 'uint'], [address, password, unlockDuration]);\n\n\treturn personalRpcMethods.unlockAccount(requestManager, address, password, unlockDuration);\n};\n\nexport const lockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n) => {\n\tvalidator.validate(['address'], [address]);\n\n\treturn personalRpcMethods.lockAccount(requestManager, address);\n};\n\nexport const importRawKey = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tkeyData: HexString,\n\tpassphrase: string,\n) => {\n\tvalidator.validate(['string', 'string'], [keyData, passphrase]);\n\n\treturn personalRpcMethods.importRawKey(requestManager, keyData, passphrase);\n};\n\nexport const sendTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) => {\n\tconst formattedTx = formatTransaction(tx, ETH_DATA_FORMAT);\n\n\treturn personalRpcMethods.sendTransaction(requestManager, formattedTx, passphrase);\n};\n\nexport const signTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) => {\n\tconst formattedTx = formatTransaction(tx, ETH_DATA_FORMAT);\n\n\treturn personalRpcMethods.signTransaction(requestManager, formattedTx, passphrase);\n};\n\nexport const sign = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tdata: HexString,\n\taddress: Address,\n\tpassphrase: string,\n) => {\n\tvalidator.validate(['string', 'address', 'string'], [data, address, passphrase]);\n\n\tconst dataToSign = isHexStrict(data) ? data : utf8ToHex(data);\n\n\treturn personalRpcMethods.sign(requestManager, dataToSign, address, passphrase);\n};\n\nexport const ecRecover = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tsignedData: HexString,\n\tsignature: string,\n) => {\n\tvalidator.validate(['string', 'string'], [signedData, signature]);\n\n\tconst signedDataString = isHexStrict(signedData) ? signedData : utf8ToHex(signedData);\n\n\treturn personalRpcMethods.ecRecover(requestManager, signedDataString, signature);\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiEventFragment, FMT_BYTES, FMT_NUMBER } from 'web3-types';\n\nexport const ALL_EVENTS = 'ALLEVENTS';\nexport const ALL_EVENTS_ABI = {\n\tname: ALL_EVENTS,\n\tsignature: '',\n\ttype: 'event',\n\tinputs: [],\n} as AbiEventFragment & { signature: string };\n\nexport const NUMBER_DATA_FORMAT = { bytes: FMT_BYTES.HEX, number: FMT_NUMBER.NUMBER } as const;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3-eth` package allows you to interact with an Ethereum blockchain and Ethereum smart contracts.\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { Web3Context } from 'web3-core';\n * import { BlockTags } from 'web3-types';\n * import { DEFAULT_RETURN_FORMAT } from 'web3-types';\n * import { getBalance} from 'web3-eth';\n *\n * getBalance(\n *      new Web3Context('http://127.0.0.1:8545'),\n *      '0x407d73d8a49eeb85d32cf465507dd71d507100c1',\n *      BlockTags.LATEST,\n *      DEFAULT_RETURN_FORMAT\n * ).then(console.log);\n * > 1000000000000n\n * ```\n *\n * To use this package within the `web3` object use:\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * web3.eth.getBalance('0x407d73d8a49eeb85d32cf465507dd71d507100c1').then(console.log);\n * > 1000000000000n\n *```\n *\n * With `web3-eth` you can also subscribe (if supported by provider) to events in the Ethereum Blockchain, using the `subscribe` function. See more at the {@link Web3Eth.subscribe} function.\n */\n/**\n *\n */\nimport 'setimmediate';\n\nimport { Web3Eth } from './web3_eth.js';\n\nexport * from './web3_eth.js';\nexport * from './utils/decoding.js';\nexport * from './schemas.js';\nexport * from './constants.js';\nexport * from './types.js';\nexport * from './validation.js';\nexport * from './rpc_method_wrappers.js';\nexport * from './utils/format_transaction.js';\nexport * from './utils/prepare_transaction_for_signing.js';\nexport * from './web3_subscriptions.js';\nexport { detectTransactionType } from './utils/detect_transaction_type.js';\nexport { transactionBuilder } from './utils/transaction_builder.js';\n\nexport default Web3Eth;\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\nimport {\n\tETH_DATA_FORMAT,\n\tFormatType,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEthExecutionAPI,\n\tSignedTransactionInfoAPI,\n\tWeb3BaseWalletAccount,\n\tAddress,\n\tBlockTag,\n\tBlockNumberOrTag,\n\tBytes,\n\tFilter,\n\tHexString,\n\tNumbers,\n\tHexStringBytes,\n\tAccountObject,\n\tBlock,\n\tFeeHistory,\n\tLog,\n\tTransactionReceipt,\n\tTransaction,\n\tTransactionCall,\n\tWeb3EthExecutionAPI,\n\tTransactionWithFromLocalWalletIndex,\n\tTransactionWithToLocalWalletIndex,\n\tTransactionWithFromAndToLocalWalletIndex,\n\tTransactionForAccessList,\n\tAccessListResult,\n\tEip712TypedData,\n} from 'web3-types';\nimport { Web3Context, Web3PromiEvent } from 'web3-core';\nimport { format, hexToBytes, bytesToUint8Array, numberToHex } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { isBlockTag, isBytes, isNullish, isString } from 'web3-validator';\nimport { SignatureError } from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n\nimport { decodeSignedTransaction } from './utils/decode_signed_transaction.js';\nimport {\n\taccountSchema,\n\tblockSchema,\n\tfeeHistorySchema,\n\tlogSchema,\n\ttransactionReceiptSchema,\n\taccessListResultSchema,\n\tSignatureObjectSchema,\n} from './schemas.js';\nimport {\n\tSendSignedTransactionEvents,\n\tSendSignedTransactionOptions,\n\tSendTransactionEvents,\n\tSendTransactionOptions,\n} from './types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionFromOrToAttr } from './utils/transaction_builder.js';\nimport { formatTransaction } from './utils/format_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './utils/try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { waitForTransactionReceipt } from './utils/wait_for_transaction_receipt.js';\nimport { NUMBER_DATA_FORMAT } from './constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { SendTxHelper } from './utils/send_tx_helper.js';\n\n/**\n * View additional documentations here: {@link Web3Eth.getProtocolVersion}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const getProtocolVersion = async (web3Context: Web3Context<EthExecutionAPI>) =>\n\tethRpcMethods.getProtocolVersion(web3Context.requestManager);\n\n// TODO Add returnFormat parameter\n/**\n * View additional documentations here: {@link Web3Eth.isSyncing}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const isSyncing = async (web3Context: Web3Context<EthExecutionAPI>) =>\n\tethRpcMethods.getSyncing(web3Context.requestManager);\n\n// TODO consider adding returnFormat parameter (to format address as bytes)\n/**\n * View additional documentations here: {@link Web3Eth.getCoinbase}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const getCoinbase = async (web3Context: Web3Context<EthExecutionAPI>) =>\n\tethRpcMethods.getCoinbase(web3Context.requestManager);\n\n/**\n * View additional documentations here: {@link Web3Eth.isMining}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport const isMining = async (web3Context: Web3Context<EthExecutionAPI>) =>\n\tethRpcMethods.getMining(web3Context.requestManager);\n\n/**\n * View additional documentations here: {@link Web3Eth.getHashRate}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getHashRate<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.getHashRate(web3Context.requestManager);\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getGasPrice}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getGasPrice<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.getGasPrice(web3Context.requestManager);\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getBlockNumber}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getBlockNumber<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.getBlockNumber(web3Context.requestManager);\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getBalance}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getBalance<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\tconst response = await ethRpcMethods.getBalance(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\tblockNumberFormatted,\n\t);\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getStorageAt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getStorageAt<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress: Address,\n\tstorageSlot: Numbers,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst storageSlotFormatted = format({ format: 'uint' }, storageSlot, ETH_DATA_FORMAT);\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\tconst response = await ethRpcMethods.getStorageAt(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\tstorageSlotFormatted,\n\t\tblockNumberFormatted,\n\t);\n\treturn format({ format: 'bytes' }, response as Bytes, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getCode}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getCode<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\tconst response = await ethRpcMethods.getCode(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\tblockNumberFormatted,\n\t);\n\treturn format({ format: 'bytes' }, response as Bytes, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getBlock<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblock: Bytes | BlockNumberOrTag = web3Context.defaultBlock,\n\thydrated = false,\n\treturnFormat: ReturnFormat,\n) {\n\tlet response;\n\tif (isBytes(block)) {\n\t\tconst blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getBlockByHash(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockHashFormatted as HexString,\n\t\t\thydrated,\n\t\t);\n\t} else {\n\t\tconst blockNumberFormatted = isBlockTag(block as string)\n\t\t\t? (block as BlockTag)\n\t\t\t: format({ format: 'uint' }, block as Numbers, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getBlockByNumber(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockNumberFormatted,\n\t\t\thydrated,\n\t\t);\n\t}\n\treturn format(blockSchema, response as unknown as Block, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getBlockTransactionCount<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblock: Bytes | BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tlet response;\n\tif (isBytes(block)) {\n\t\tconst blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getBlockTransactionCountByHash(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockHashFormatted as HexString,\n\t\t);\n\t} else {\n\t\tconst blockNumberFormatted = isBlockTag(block as string)\n\t\t\t? (block as BlockTag)\n\t\t\t: format({ format: 'uint' }, block as Numbers, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getBlockTransactionCountByNumber(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockNumberFormatted,\n\t\t);\n\t}\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getBlockUncleCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getBlockUncleCount<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblock: Bytes | BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tlet response;\n\tif (isBytes(block)) {\n\t\tconst blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getUncleCountByBlockHash(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockHashFormatted as HexString,\n\t\t);\n\t} else {\n\t\tconst blockNumberFormatted = isBlockTag(block as string)\n\t\t\t? (block as BlockTag)\n\t\t\t: format({ format: 'uint' }, block as Numbers, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getUncleCountByBlockNumber(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockNumberFormatted,\n\t\t);\n\t}\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getUncle}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getUncle<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblock: Bytes | BlockNumberOrTag = web3Context.defaultBlock,\n\tuncleIndex: Numbers,\n\treturnFormat: ReturnFormat,\n) {\n\tconst uncleIndexFormatted = format({ format: 'uint' }, uncleIndex, ETH_DATA_FORMAT);\n\n\tlet response;\n\tif (isBytes(block)) {\n\t\tconst blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getUncleByBlockHashAndIndex(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockHashFormatted as HexString,\n\t\t\tuncleIndexFormatted,\n\t\t);\n\t} else {\n\t\tconst blockNumberFormatted = isBlockTag(block as string)\n\t\t\t? (block as BlockTag)\n\t\t\t: format({ format: 'uint' }, block as Numbers, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getUncleByBlockNumberAndIndex(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockNumberFormatted,\n\t\t\tuncleIndexFormatted,\n\t\t);\n\t}\n\n\treturn format(blockSchema, response as unknown as Block, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getTransaction<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionHash: Bytes,\n\treturnFormat: ReturnFormat,\n) {\n\tconst transactionHashFormatted = format(\n\t\t{ format: 'bytes32' },\n\t\ttransactionHash,\n\t\tDEFAULT_RETURN_FORMAT,\n\t);\n\tconst response = await ethRpcMethods.getTransactionByHash(\n\t\tweb3Context.requestManager,\n\t\ttransactionHashFormatted,\n\t);\n\n\treturn isNullish(response)\n\t\t? response\n\t\t: formatTransaction(response, returnFormat, { fillInputAndData: true });\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getPendingTransactions}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getPendingTransactions<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.getPendingTransactions(web3Context.requestManager);\n\n\treturn response.map(transaction =>\n\t\tformatTransaction(transaction as unknown as Transaction, returnFormat, {\n\t\t\tfillInputAndData: true,\n\t\t}),\n\t);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getTransactionFromBlock<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblock: Bytes | BlockNumberOrTag = web3Context.defaultBlock,\n\ttransactionIndex: Numbers,\n\treturnFormat: ReturnFormat,\n) {\n\tconst transactionIndexFormatted = format({ format: 'uint' }, transactionIndex, ETH_DATA_FORMAT);\n\n\tlet response;\n\tif (isBytes(block)) {\n\t\tconst blockHashFormatted = format({ format: 'bytes32' }, block, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getTransactionByBlockHashAndIndex(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockHashFormatted as HexString,\n\t\t\ttransactionIndexFormatted,\n\t\t);\n\t} else {\n\t\tconst blockNumberFormatted = isBlockTag(block as string)\n\t\t\t? (block as BlockTag)\n\t\t\t: format({ format: 'uint' }, block as Numbers, ETH_DATA_FORMAT);\n\t\tresponse = await ethRpcMethods.getTransactionByBlockNumberAndIndex(\n\t\t\tweb3Context.requestManager,\n\t\t\tblockNumberFormatted,\n\t\t\ttransactionIndexFormatted,\n\t\t);\n\t}\n\n\treturn isNullish(response)\n\t\t? response\n\t\t: formatTransaction(response, returnFormat, { fillInputAndData: true });\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionReceipt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getTransactionReceipt<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionHash: Bytes,\n\treturnFormat: ReturnFormat,\n) {\n\tconst transactionHashFormatted = format(\n\t\t{ format: 'bytes32' },\n\t\ttransactionHash,\n\t\tDEFAULT_RETURN_FORMAT,\n\t);\n\tconst response = await ethRpcMethods.getTransactionReceipt(\n\t\tweb3Context.requestManager,\n\t\ttransactionHashFormatted,\n\t);\n\n\treturn isNullish(response)\n\t\t? response\n\t\t: (format(\n\t\t\t\ttransactionReceiptSchema,\n\t\t\t\tresponse as unknown as TransactionReceipt,\n\t\t\t\treturnFormat,\n\t\t  ) as TransactionReceipt);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getTransactionCount<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\tconst response = await ethRpcMethods.getTransactionCount(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\tblockNumberFormatted,\n\t);\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.sendTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function sendTransaction<\n\tReturnFormat extends DataFormat,\n\tResolveType = FormatType<TransactionReceipt, ReturnFormat>,\n>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction:\n\t\t| Transaction\n\t\t| TransactionWithFromLocalWalletIndex\n\t\t| TransactionWithToLocalWalletIndex\n\t\t| TransactionWithFromAndToLocalWalletIndex,\n\treturnFormat: ReturnFormat,\n\toptions: SendTransactionOptions<ResolveType> = { checkRevertBeforeSending: true },\n): Web3PromiEvent<ResolveType, SendTransactionEvents<ReturnFormat>> {\n\tconst promiEvent = new Web3PromiEvent<ResolveType, SendTransactionEvents<ReturnFormat>>(\n\t\t(resolve, reject) => {\n\t\t\tsetImmediate(() => {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst sendTxHelper = new SendTxHelper<ReturnFormat, ResolveType>({\n\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\tpromiEvent,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t});\n\n\t\t\t\t\tlet transactionFormatted:\n\t\t\t\t\t\t| Transaction\n\t\t\t\t\t\t| TransactionWithFromLocalWalletIndex\n\t\t\t\t\t\t| TransactionWithToLocalWalletIndex\n\t\t\t\t\t\t| TransactionWithFromAndToLocalWalletIndex = formatTransaction(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...transaction,\n\t\t\t\t\t\t\tfrom: getTransactionFromOrToAttr('from', web3Context, transaction),\n\t\t\t\t\t\t\tto: getTransactionFromOrToAttr('to', web3Context, transaction),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tETH_DATA_FORMAT,\n\t\t\t\t\t);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttransactionFormatted = await sendTxHelper.populateGasPrice({\n\t\t\t\t\t\t\ttransaction,\n\t\t\t\t\t\t\ttransactionFormatted,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tawait sendTxHelper.checkRevertBeforeSending(\n\t\t\t\t\t\t\ttransactionFormatted as TransactionCall,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitSending(transactionFormatted);\n\n\t\t\t\t\t\tlet wallet: Web3BaseWalletAccount | undefined;\n\n\t\t\t\t\t\tif (web3Context.wallet && !isNullish(transactionFormatted.from)) {\n\t\t\t\t\t\t\twallet = web3Context.wallet.get(\n\t\t\t\t\t\t\t\t(transactionFormatted as Transaction).from as string,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst transactionHash: HexString = await sendTxHelper.signAndSend({\n\t\t\t\t\t\t\twallet,\n\t\t\t\t\t\t\ttx: transactionFormatted,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst transactionHashFormatted = format(\n\t\t\t\t\t\t\t{ format: 'bytes32' },\n\t\t\t\t\t\t\ttransactionHash as Bytes,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsendTxHelper.emitSent(transactionFormatted);\n\t\t\t\t\t\tsendTxHelper.emitTransactionHash(\n\t\t\t\t\t\t\ttransactionHashFormatted as string & Uint8Array,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst transactionReceipt = await waitForTransactionReceipt(\n\t\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\t\ttransactionHash,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents(\n\t\t\t\t\t\t\tformat(transactionReceiptSchema, transactionReceipt, returnFormat),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitReceipt(transactionReceiptFormatted);\n\n\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\tawait sendTxHelper.handleResolve({\n\t\t\t\t\t\t\t\treceipt: transactionReceiptFormatted,\n\t\t\t\t\t\t\t\ttx: transactionFormatted as TransactionCall,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitConfirmation({\n\t\t\t\t\t\t\treceipt: transactionReceiptFormatted,\n\t\t\t\t\t\t\ttransactionHash,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tawait sendTxHelper.handleError({\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\ttx: transactionFormatted as TransactionCall,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})() as unknown;\n\t\t\t});\n\t\t},\n\t);\n\n\treturn promiEvent;\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.sendSignedTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport function sendSignedTransaction<\n\tReturnFormat extends DataFormat,\n\tResolveType = FormatType<TransactionReceipt, ReturnFormat>,\n>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tsignedTransaction: Bytes,\n\treturnFormat: ReturnFormat,\n\toptions: SendSignedTransactionOptions<ResolveType> = { checkRevertBeforeSending: true },\n): Web3PromiEvent<ResolveType, SendSignedTransactionEvents<ReturnFormat>> {\n\t// TODO - Promise returned in function argument where a void return was expected\n\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\tconst promiEvent = new Web3PromiEvent<ResolveType, SendSignedTransactionEvents<ReturnFormat>>(\n\t\t(resolve, reject) => {\n\t\t\tsetImmediate(() => {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst sendTxHelper = new SendTxHelper<ReturnFormat, ResolveType>({\n\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\tpromiEvent,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t});\n\t\t\t\t\t// Formatting signedTransaction to be send to RPC endpoint\n\t\t\t\t\tconst signedTransactionFormattedHex = format(\n\t\t\t\t\t\t{ format: 'bytes' },\n\t\t\t\t\t\tsignedTransaction,\n\t\t\t\t\t\tETH_DATA_FORMAT,\n\t\t\t\t\t);\n\t\t\t\t\tconst unSerializedTransaction = TransactionFactory.fromSerializedData(\n\t\t\t\t\t\tbytesToUint8Array(hexToBytes(signedTransactionFormattedHex)),\n\t\t\t\t\t);\n\t\t\t\t\tconst unSerializedTransactionWithFrom = {\n\t\t\t\t\t\t...unSerializedTransaction.toJSON(),\n\t\t\t\t\t\t// Some providers will default `from` to address(0) causing the error\n\t\t\t\t\t\t// reported from `eth_call` to not be the reason the user's tx failed\n\t\t\t\t\t\t// e.g. `eth_call` will return an Out of Gas error for a failed\n\t\t\t\t\t\t// smart contract execution contract, because the sender, address(0),\n\t\t\t\t\t\t// has no balance to pay for the gas of the transaction execution\n\t\t\t\t\t\tfrom: unSerializedTransaction.getSenderAddress().toString(),\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst { v , r , s, \n\t\t\t\t\t\t\t\t...txWithoutSigParams} = unSerializedTransactionWithFrom;\n\t\t\t\t\t\t\n\t\t\t\t\t\tawait sendTxHelper.checkRevertBeforeSending(\n\t\t\t\t\t\t\ttxWithoutSigParams as TransactionCall,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitSending(signedTransactionFormattedHex);\n\n\t\t\t\t\t\tconst transactionHash = await trySendTransaction(\n\t\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\t\tasync (): Promise<string> =>\n\t\t\t\t\t\t\t\tethRpcMethods.sendRawTransaction(\n\t\t\t\t\t\t\t\t\tweb3Context.requestManager,\n\t\t\t\t\t\t\t\t\tsignedTransactionFormattedHex,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitSent(signedTransactionFormattedHex);\n\n\t\t\t\t\t\tconst transactionHashFormatted = format(\n\t\t\t\t\t\t\t{ format: 'bytes32' },\n\t\t\t\t\t\t\ttransactionHash as Bytes,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitTransactionHash(\n\t\t\t\t\t\t\ttransactionHashFormatted as string & Uint8Array,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst transactionReceipt = await waitForTransactionReceipt(\n\t\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\t\ttransactionHash,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents(\n\t\t\t\t\t\t\tformat(transactionReceiptSchema, transactionReceipt, returnFormat),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitReceipt(transactionReceiptFormatted);\n\n\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\tawait sendTxHelper.handleResolve({\n\t\t\t\t\t\t\t\treceipt: transactionReceiptFormatted,\n\t\t\t\t\t\t\t\ttx: unSerializedTransactionWithFrom as TransactionCall,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tsendTxHelper.emitConfirmation({\n\t\t\t\t\t\t\treceipt: transactionReceiptFormatted,\n\t\t\t\t\t\t\ttransactionHash,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tawait sendTxHelper.handleError({\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\ttx: unSerializedTransactionWithFrom as TransactionCall,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})() as unknown;\n\t\t\t});\n\t\t},\n\t);\n\n\treturn promiEvent;\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.sign}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function sign<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tmessage: Bytes,\n\taddressOrIndex: Address | number,\n\treturnFormat: ReturnFormat,\n) {\n\tconst messageFormatted = format({ format: 'bytes' }, message, DEFAULT_RETURN_FORMAT);\n\tif (web3Context.wallet?.get(addressOrIndex)) {\n\t\tconst wallet = web3Context.wallet.get(addressOrIndex) as Web3BaseWalletAccount;\n\t\tconst signed = wallet.sign(messageFormatted);\n\t\treturn format(SignatureObjectSchema, signed, returnFormat);\n\t}\n\n\tif (typeof addressOrIndex === 'number') {\n\t\tthrow new SignatureError(\n\t\t\tmessage,\n\t\t\t'RPC method \"eth_sign\" does not support index signatures',\n\t\t);\n\t}\n\n\tconst response = await ethRpcMethods.sign(\n\t\tweb3Context.requestManager,\n\t\taddressOrIndex,\n\t\tmessageFormatted,\n\t);\n\n\treturn format({ format: 'bytes' }, response as Bytes, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.signTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function signTransaction<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: Transaction,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.signTransaction(\n\t\tweb3Context.requestManager,\n\t\tformatTransaction(transaction, ETH_DATA_FORMAT),\n\t);\n\t// Some clients only return the encoded signed transaction (e.g. Ganache)\n\t// while clients such as Geth return the desired SignedTransactionInfoAPI object\n\treturn isString(response as HexStringBytes)\n\t\t? decodeSignedTransaction(response as HexStringBytes, returnFormat, {\n\t\t\t\tfillInputAndData: true,\n\t\t  })\n\t\t: {\n\t\t\t\traw: format(\n\t\t\t\t\t{ format: 'bytes' },\n\t\t\t\t\t(response as SignedTransactionInfoAPI).raw,\n\t\t\t\t\treturnFormat,\n\t\t\t\t),\n\t\t\t\ttx: formatTransaction((response as SignedTransactionInfoAPI).tx, returnFormat, {\n\t\t\t\t\tfillInputAndData: true,\n\t\t\t\t}),\n\t\t  };\n}\n\n// TODO Decide what to do with transaction.to\n// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n/**\n * View additional documentations here: {@link Web3Eth.call}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function call<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: TransactionCall,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\n\tconst response = await ethRpcMethods.call(\n\t\tweb3Context.requestManager,\n\t\tformatTransaction(transaction, ETH_DATA_FORMAT),\n\t\tblockNumberFormatted,\n\t);\n\n\treturn format({ format: 'bytes' }, response as Bytes, returnFormat);\n}\n\n// TODO - Investigate whether response is padded as 1.x docs suggest\n/**\n * View additional documentations here: {@link Web3Eth.estimateGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function estimateGas<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: Transaction,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst transactionFormatted = formatTransaction(transaction, ETH_DATA_FORMAT);\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\n\tconst response = await ethRpcMethods.estimateGas(\n\t\tweb3Context.requestManager,\n\t\ttransactionFormatted,\n\t\tblockNumberFormatted,\n\t);\n\n\treturn format({ format: 'uint' }, response as Numbers, returnFormat);\n}\n\n// TODO - Add input formatting to filter\n/**\n * View additional documentations here: {@link Web3Eth.getPastLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getLogs<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3EthExecutionAPI>,\n\tfilter: Filter,\n\treturnFormat: ReturnFormat,\n) {\n\t// format type bigint or number toBlock and fromBlock to hexstring.\n\tlet { toBlock, fromBlock } = filter;\n\tif (!isNullish(toBlock)) {\n\t\tif (typeof toBlock === 'number' || typeof toBlock === 'bigint') {\n\t\t\ttoBlock = numberToHex(toBlock);\n\t\t}\n\t}\n\tif (!isNullish(fromBlock)) {\n\t\tif (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {\n\t\t\tfromBlock = numberToHex(fromBlock);\n\t\t}\n\t}\n\n\tconst formattedFilter = { ...filter, fromBlock, toBlock };\n\n\tconst response = await ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);\n\n\tconst result = response.map(res => {\n\t\tif (typeof res === 'string') {\n\t\t\treturn res;\n\t\t}\n\n\t\treturn format(logSchema, res as unknown as Log, returnFormat);\n\t});\n\n\treturn result;\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getChainId}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getChainId<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.getChainId(web3Context.requestManager);\n\n\treturn format(\n\t\t{ format: 'uint' },\n\t\t// Response is number in hex formatted string\n\t\tresponse as unknown as number,\n\t\treturnFormat,\n\t);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.getProof}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getProof<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3EthExecutionAPI>,\n\taddress: Address,\n\tstorageKeys: Bytes[],\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst storageKeysFormatted = storageKeys.map(storageKey =>\n\t\tformat({ format: 'bytes' }, storageKey, ETH_DATA_FORMAT),\n\t);\n\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\n\tconst response = await ethRpcMethods.getProof(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\tstorageKeysFormatted,\n\t\tblockNumberFormatted,\n\t);\n\n\treturn format(accountSchema, response as unknown as AccountObject, returnFormat);\n}\n\n// TODO Throwing an error with Geth, but not Infura\n// TODO gasUsedRatio and reward not formatting\n/**\n * View additional documentations here: {@link Web3Eth.getFeeHistory}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function getFeeHistory<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tblockCount: Numbers,\n\tnewestBlock: BlockNumberOrTag = web3Context.defaultBlock,\n\trewardPercentiles: Numbers[],\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockCountFormatted = format({ format: 'uint' }, blockCount, ETH_DATA_FORMAT);\n\n\tconst newestBlockFormatted = isBlockTag(newestBlock as string)\n\t\t? (newestBlock as BlockTag)\n\t\t: format({ format: 'uint' }, newestBlock as Numbers, ETH_DATA_FORMAT);\n\n\tconst rewardPercentilesFormatted = format(\n\t\t{\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'uint',\n\t\t\t},\n\t\t},\n\t\trewardPercentiles,\n\t\tNUMBER_DATA_FORMAT,\n\t);\n\n\tconst response = await ethRpcMethods.getFeeHistory(\n\t\tweb3Context.requestManager,\n\t\tblockCountFormatted,\n\t\tnewestBlockFormatted,\n\t\trewardPercentilesFormatted,\n\t);\n\n\treturn format(feeHistorySchema, response as unknown as FeeHistory, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.createAccessList}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function createAccessList<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: TransactionForAccessList,\n\tblockNumber: BlockNumberOrTag = web3Context.defaultBlock,\n\treturnFormat: ReturnFormat,\n) {\n\tconst blockNumberFormatted = isBlockTag(blockNumber as string)\n\t\t? (blockNumber as BlockTag)\n\t\t: format({ format: 'uint' }, blockNumber as Numbers, ETH_DATA_FORMAT);\n\n\tconst response = (await ethRpcMethods.createAccessList(\n\t\tweb3Context.requestManager,\n\t\tformatTransaction(transaction, ETH_DATA_FORMAT),\n\t\tblockNumberFormatted,\n\t)) as unknown as AccessListResult;\n\n\treturn format(accessListResultSchema, response, returnFormat);\n}\n\n/**\n * View additional documentations here: {@link Web3Eth.signTypedData}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nexport async function signTypedData<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress: Address,\n\ttypedData: Eip712TypedData,\n\tuseLegacy: boolean,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await ethRpcMethods.signTypedData(\n\t\tweb3Context.requestManager,\n\t\taddress,\n\t\ttypedData,\n\t\tuseLegacy,\n\t);\n\n\treturn format({ format: 'bytes' }, response, returnFormat);\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const accessListItemSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tstorageKeys: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accessListSchema = {\n\ttype: 'array',\n\titems: {\n\t\t...accessListItemSchema,\n\t},\n};\n\nexport const accessListResultSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tgasUsed: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n};\n\nexport const chainSchema = {\n\ttype: 'string',\n\tenum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],\n};\n\nexport const hardforkSchema = {\n\ttype: 'string',\n\tenum: [\n\t\t'arrowGlacier',\n\t\t'berlin',\n\t\t'byzantium',\n\t\t'chainstart',\n\t\t'constantinople',\n\t\t'dao',\n\t\t'homestead',\n\t\t'istanbul',\n\t\t'london',\n\t\t'merge',\n\t\t'muirGlacier',\n\t\t'petersburg',\n\t\t'shanghai',\n\t\t'spuriousDragon',\n\t\t'tangerineWhistle',\n\t],\n};\n\nexport const customChainSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tname: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const transactionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchain: { ...chainSchema },\n\t\thardfork: { ...hardforkSchema },\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcommon: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcustomChain: { ...customChainSchema },\n\t\t\t\tbaseChain: {\n\t\t\t\t\t...chainSchema,\n\t\t\t\t},\n\t\t\t\thardfork: {\n\t\t\t\t\t...hardforkSchema,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const transactionInfoSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t...transactionSchema.properties,\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const blockSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmixHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttotalDifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsize: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactions: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\t...transactionInfoSchema,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\tformat: 'bytes32',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tuncles: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const withdrawalsSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tindex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tvalidatorIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tamount: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const blockHeaderSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tauthor: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\twithdrawalsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttotalDifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tsize: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\texcessDataGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmixHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactions: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\tuncles: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\twithdrawals: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...withdrawalsSchema,\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const logSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tremoved: {\n\t\t\tformat: 'bool',\n\t\t},\n\t\tlogIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\ttopics: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\nexport const syncSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tstartingBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tcurrentBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\thighestBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tknownStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tpulledStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t},\n};\n\nexport const transactionReceiptSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tcumulativeGasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcontractAddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tlogs: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...logSchema,\n\t\t\t},\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\troot: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstatus: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const SignatureObjectSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tmessageHash: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmessage: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tsignature: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t},\n};\nexport const feeHistorySchema = {\n\ttype: 'object',\n\tproperties: {\n\t\toldestBlock: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'uint',\n\t\t\t},\n\t\t},\n\t\treward: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\tformat: 'uint',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasUsedRatio: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const storageProofSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tkey: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tproof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accountSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tbalance: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcodeHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tstorageHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\taccountProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\tstorageProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...storageProofSchema,\n\t\t\t},\n\t\t},\n\t},\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport {\n\tDataFormat,\n\tHexStringBytes,\n\tSignedTransactionInfoAPI,\n\tTransactionSignedAPI,\n} from 'web3-types';\nimport { bytesToHex, format, hexToBytes, keccak256 } from 'web3-utils';\nimport { TransactionFactory } from 'web3-eth-accounts';\nimport { detectRawTransactionType } from './detect_transaction_type.js';\nimport { formatTransaction } from './format_transaction.js';\n\n/**\n * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.\n *\n * @param encodedSignedTransaction The RLP encoded transaction.\n * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.\n * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n */\nexport function decodeSignedTransaction<ReturnFormat extends DataFormat>(\n\tencodedSignedTransaction: HexStringBytes,\n\treturnFormat: ReturnFormat,\n\toptions: { fillInputAndData?: boolean } = { fillInputAndData: false },\n): SignedTransactionInfoAPI {\n\treturn {\n\t\traw: format({ format: 'bytes' }, encodedSignedTransaction, returnFormat),\n\t\ttx: formatTransaction(\n\t\t\t{\n\t\t\t\t...TransactionFactory.fromSerializedData(\n\t\t\t\t\thexToBytes(encodedSignedTransaction),\n\t\t\t\t).toJSON(),\n\t\t\t\thash: bytesToHex(keccak256(hexToBytes(encodedSignedTransaction))),\n\t\t\t\ttype: detectRawTransactionType(hexToBytes(encodedSignedTransaction)),\n\t\t\t} as TransactionSignedAPI,\n\t\t\treturnFormat,\n\t\t\t{ fillInputAndData: options.fillInputAndData },\n\t\t),\n\t};\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format } from 'web3-utils';\n\nimport {\n\tAbiEventFragment,\n\tLogsInput,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEventLog,\n\tContractAbiWithSignature,\n} from 'web3-types';\n\nimport { decodeLog } from 'web3-eth-abi';\n\nimport { logSchema } from '../schemas.js';\nimport { ALL_EVENTS } from '../constants.js';\n\nexport const decodeEventABI = (\n\tevent: AbiEventFragment & { signature: string },\n\tdata: LogsInput,\n\tjsonInterface: ContractAbiWithSignature,\n\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n): EventLog => {\n\tlet modifiedEvent = { ...event };\n\n\tconst result = format(logSchema, data, returnFormat);\n\n\t// if allEvents get the right event\n\tif ([ALL_EVENTS, 'allEvents'].includes(modifiedEvent.name)) {\n\t\tconst matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);\n\t\tif (matchedEvent) {\n\t\t\tmodifiedEvent = matchedEvent as AbiEventFragment & { signature: string };\n\t\t} else {\n\t\t\tmodifiedEvent = { anonymous: true } as unknown as AbiEventFragment & {\n\t\t\t\tsignature: string;\n\t\t\t};\n\t\t}\n\t}\n\n\t// create empty inputs if none are present (e.g. anonymous events on allEvents)\n\tmodifiedEvent.inputs = modifiedEvent.inputs ?? event.inputs ?? [];\n\n\t// Handle case where an event signature shadows the current ABI with non-identical\n\t// arg indexing. If # of topics doesn't match, event is anon.\n\tif (!modifiedEvent.anonymous) {\n\t\tlet indexedInputs = 0;\n\t\t(modifiedEvent.inputs ?? []).forEach(input => {\n\t\t\tif (input.indexed) {\n\t\t\t\tindexedInputs += 1;\n\t\t\t}\n\t\t});\n\n\t\tif (indexedInputs > 0 && data?.topics && data?.topics.length !== indexedInputs + 1) {\n\t\t\t// checks if event is anonymous\n\t\t\tmodifiedEvent = {\n\t\t\t\t...modifiedEvent,\n\t\t\t\tanonymous: true,\n\t\t\t\tinputs: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tconst argTopics = modifiedEvent.anonymous ? data.topics : (data.topics ?? []).slice(1);\n\n\treturn {\n\t\t...result,\n\t\treturnValues: decodeLog([...(modifiedEvent.inputs ?? [])], data.data, argTopics),\n\t\tevent: modifiedEvent.name,\n\t\tsignature:\n\t\t\tmodifiedEvent.anonymous || !data.topics || data.topics.length === 0 || !data.topics[0]\n\t\t\t\t? undefined\n\t\t\t\t: data.topics[0],\n\n\t\traw: {\n\t\t\tdata: data.data,\n\t\t\ttopics: data.topics,\n\t\t},\n\t};\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, toHex } from 'web3-utils';\nimport { TransactionTypeParser, Web3Context } from 'web3-core';\nimport { EthExecutionAPI, HardforksOrdered, Transaction, ETH_DATA_FORMAT } from 'web3-types';\nimport { Web3ValidatorError, isNullish, validator } from 'web3-validator';\nimport { InvalidPropertiesForTransactionTypeError } from 'web3-errors';\n\nimport { InternalTransaction } from '../types.js';\n\n// undefined is treated as null for JSON schema validator\nconst transactionType0x0Schema = {\n\ttype: 'object',\n\tproperties: {\n\t\taccessList: {\n\t\t\ttype: 'null',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\ttype: 'null',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\ttype: 'null',\n\t\t},\n\t},\n};\nconst transactionType0x1Schema = {\n\ttype: 'object',\n\tproperties: {\n\t\tmaxFeePerGas: {\n\t\t\ttype: 'null',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\ttype: 'null',\n\t\t},\n\t},\n};\nconst transactionType0x2Schema = {\n\ttype: 'object',\n\tproperties: {\n\t\tgasPrice: {\n\t\t\ttype: 'null',\n\t\t},\n\t},\n};\n\nconst validateTxTypeAndHandleErrors = (\n\ttxSchema: object,\n\ttx: Transaction,\n\ttxType: '0x0' | '0x1' | '0x2',\n) => {\n\ttry {\n\t\tvalidator.validateJSONSchema(txSchema, tx);\n\t} catch (error) {\n\t\tif (error instanceof Web3ValidatorError)\n\t\t\t// Erroneously reported error\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\tthrow new InvalidPropertiesForTransactionTypeError(error.errors, txType);\n\n\t\tthrow error;\n\t}\n};\n\nexport const defaultTransactionTypeParser: TransactionTypeParser = (\n\ttransaction\n) => {\n\tconst tx = transaction as unknown as Transaction;\n\tif (!isNullish(tx.type)) {\n\t\tlet txSchema;\n\t\tswitch (tx.type) {\n\t\t\tcase '0x0':\n\t\t\t\ttxSchema = transactionType0x0Schema;\n\t\t\t\tbreak;\n\t\t\tcase '0x1':\n\t\t\t\ttxSchema = transactionType0x1Schema;\n\t\t\t\tbreak;\n\t\t\tcase '0x2':\n\t\t\t\ttxSchema = transactionType0x2Schema;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn format({ format: 'uint' }, tx.type, ETH_DATA_FORMAT);\n\t\t}\n\n\t\tvalidateTxTypeAndHandleErrors(txSchema, tx, tx.type);\n\n\t\treturn format({ format: 'uint' }, tx.type, ETH_DATA_FORMAT);\n\t}\n\n\tif (!isNullish(tx.maxFeePerGas) || !isNullish(tx.maxPriorityFeePerGas)) {\n\t\tvalidateTxTypeAndHandleErrors(transactionType0x2Schema, tx, '0x2');\n\t\treturn '0x2';\n\t}\n\n\tif (!isNullish(tx.accessList)) {\n\t\tvalidateTxTypeAndHandleErrors(transactionType0x1Schema, tx, '0x1');\n\t\treturn '0x1';\n\t}\n\n\tconst givenHardfork = tx.hardfork ?? tx.common?.hardfork;\n\n\tif (!isNullish(givenHardfork)) {\n\t\tconst hardforkIndex = Object.keys(HardforksOrdered).indexOf(givenHardfork);\n\n\t\t// givenHardfork is London or later, so EIP-2718 is supported\n\t\tif (hardforkIndex >= Object.keys(HardforksOrdered).indexOf('london'))\n\t\t\treturn !isNullish(tx.gasPrice) ? '0x0' : '0x2';\n\n\t\t// givenHardfork is Berlin, tx.accessList is undefined, assume type is 0x0\n\t\tif (hardforkIndex === Object.keys(HardforksOrdered).indexOf('berlin')) return '0x0';\n\t}\n\n\t// gasprice is defined\n\tif (!isNullish(tx.gasPrice)) {\n\t\tvalidateTxTypeAndHandleErrors(transactionType0x0Schema, tx, '0x0');\n\t\treturn '0x0';\n\t}\n\n\t// no transaction type can be inferred from properties, use default transaction type\n\treturn undefined;\n};\n\nexport const detectTransactionType = (\n\ttransaction: InternalTransaction,\n\tweb3Context?: Web3Context<EthExecutionAPI>,\n) =>\n\t(web3Context?.transactionTypeParser ?? defaultTransactionTypeParser)(\n\t\ttransaction as unknown as Record<string, unknown>\n\t);\n\nexport const detectRawTransactionType = (transaction: Uint8Array) =>\n\ttransaction[0] > 0x7f ? '0x0' : toHex(transaction[0]);\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Transaction, DataFormat, DEFAULT_RETURN_FORMAT, FormatType } from 'web3-types';\nimport { isNullish, ValidationSchemaInput } from 'web3-validator';\nimport { mergeDeep, format, bytesToHex, toHex } from 'web3-utils';\nimport { TransactionDataAndInputError } from 'web3-errors';\n\nimport { transactionInfoSchema, transactionSchema } from '../schemas.js';\n\nexport function formatTransaction<\n\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\tTransactionType extends Transaction = Transaction,\n>(\n\ttransaction: TransactionType,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\toptions: {\n\t\ttransactionSchema?: ValidationSchemaInput | typeof transactionSchema;\n\t\tfillInputAndData?: boolean;\n\t} = {\n\t\ttransactionSchema: transactionInfoSchema,\n\t\tfillInputAndData: false,\n\t},\n): FormatType<TransactionType, ReturnFormat> {\n\tlet formattedTransaction = mergeDeep({}, transaction as Record<string, unknown>) as Transaction;\n\tif (!isNullish(transaction?.common)) {\n\t\tformattedTransaction.common = { ...transaction.common };\n\t\tif (!isNullish(transaction.common?.customChain))\n\t\t\tformattedTransaction.common.customChain = { ...transaction.common.customChain };\n\t}\n\tformattedTransaction = format(\n\t\toptions.transactionSchema ?? transactionInfoSchema,\n\t\tformattedTransaction,\n\t\treturnFormat,\n\t);\n\tif (\n\t\t!isNullish(formattedTransaction.data) &&\n\t\t!isNullish(formattedTransaction.input) &&\n\t\t// Converting toHex is accounting for data and input being Uint8Arrays\n\t\t// since comparing Uint8Array is not as straightforward as comparing strings\n\t\ttoHex(formattedTransaction.data) !== toHex(formattedTransaction.input)\n\t)\n\t\tthrow new TransactionDataAndInputError({\n\t\t\tdata: bytesToHex(formattedTransaction.data),\n\t\t\tinput: bytesToHex(formattedTransaction.input),\n\t\t});\n\n\tif (options.fillInputAndData) {\n\t\tif (!isNullish(formattedTransaction.data)) {\n\t\t\tformattedTransaction.input = formattedTransaction.data;\n\t\t} else if (!isNullish(formattedTransaction.input)) {\n\t\t\tformattedTransaction.data = formattedTransaction.input;\n\t\t}\n\t}\n\n\tif (!isNullish(formattedTransaction.gasLimit)) {\n\t\tformattedTransaction.gas = formattedTransaction.gasLimit;\n\t\tdelete formattedTransaction.gasLimit;\n\t}\n\n\treturn formattedTransaction as FormatType<TransactionType, ReturnFormat>;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport { ContractExecutionError, Eip838ExecutionError, InvalidResponseError } from 'web3-errors';\nimport { decodeContractErrorData, isAbiErrorFragment } from 'web3-eth-abi';\nimport {\n\tAbiErrorFragment,\n\tContractAbi,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEthExecutionAPI,\n\tTransactionCall,\n} from 'web3-types';\n\n// eslint-disable-next-line import/no-cycle\nimport { call } from '../rpc_method_wrappers.js';\nimport { RevertReason, RevertReasonWithCustomError } from '../types.js';\n\nexport const parseTransactionError = (error: unknown, contractAbi?: ContractAbi) => {\n\tif (\n\t\terror instanceof ContractExecutionError &&\n\t\terror.innerError instanceof Eip838ExecutionError\n\t) {\n\t\tif (contractAbi !== undefined) {\n\t\t\tconst errorsAbi = contractAbi.filter(abi =>\n\t\t\t\tisAbiErrorFragment(abi),\n\t\t\t) as unknown as AbiErrorFragment[];\n\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\n\t\t\treturn {\n\t\t\t\treason: error.innerError.message,\n\t\t\t\tsignature: error.innerError.data?.slice(0, 10),\n\t\t\t\tdata: error.innerError.data?.substring(10),\n\t\t\t\tcustomErrorName: error.innerError.errorName,\n\t\t\t\tcustomErrorDecodedSignature: error.innerError.errorSignature,\n\t\t\t\tcustomErrorArguments: error.innerError.errorArgs,\n\t\t\t} as RevertReasonWithCustomError;\n\t\t}\n\n\t\treturn {\n\t\t\treason: error.innerError.message,\n\t\t\tsignature: error.innerError.data?.slice(0, 10),\n\t\t\tdata: error.innerError.data?.substring(10),\n\t\t} as RevertReason;\n\t}\n\n\tif (\n\t\terror instanceof InvalidResponseError &&\n\t\t!Array.isArray(error.innerError) &&\n\t\terror.innerError !== undefined\n\t) {\n\t\treturn error.innerError.message;\n\t}\n\n\tthrow error;\n};\n\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\nexport async function getRevertReason<\n\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: TransactionCall,\n\tcontractAbi?: ContractAbi,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n): Promise<undefined | RevertReason | RevertReasonWithCustomError | string> {\n\ttry {\n\t\tawait call(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n\t\treturn undefined;\n\t} catch (error) {\n\t\treturn parseTransactionError(error, contractAbi);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport {\n\tTransactionRevertedWithoutReasonError,\n\tTransactionRevertInstructionError,\n\tTransactionRevertWithCustomError,\n} from 'web3-errors';\nimport {\n\tDataFormat,\n\tFormatType,\n\tContractAbi,\n\tTransactionCall,\n\tTransactionReceipt,\n} from 'web3-types';\nimport { RevertReason, RevertReasonWithCustomError } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason, parseTransactionError } from './get_revert_reason.js';\n\nexport async function getTransactionError<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context,\n\ttransactionFormatted?: TransactionCall,\n\ttransactionReceiptFormatted?: FormatType<TransactionReceipt, ReturnFormat>,\n\treceivedError?: unknown,\n\tcontractAbi?: ContractAbi,\n\tknownReason?: string | RevertReason | RevertReasonWithCustomError,\n) {\n\tlet _reason: string | RevertReason | RevertReasonWithCustomError | undefined = knownReason;\n\n\tif (_reason === undefined) {\n\t\tif (receivedError !== undefined) {\n\t\t\t_reason = parseTransactionError(receivedError);\n\t\t} else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n\t\t\t_reason = await getRevertReason(web3Context, transactionFormatted, contractAbi);\n\t\t}\n\t}\n\n\tlet error:\n\t\t| TransactionRevertedWithoutReasonError<FormatType<TransactionReceipt, ReturnFormat>>\n\t\t| TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>\n\t\t| TransactionRevertWithCustomError<FormatType<TransactionReceipt, ReturnFormat>>;\n\tif (_reason === undefined) {\n\t\terror = new TransactionRevertedWithoutReasonError<\n\t\t\tFormatType<TransactionReceipt, ReturnFormat>\n\t\t>(transactionReceiptFormatted);\n\t} else if (typeof _reason === 'string') {\n\t\terror = new TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\t_reason,\n\t\t\tundefined,\n\t\t\ttransactionReceiptFormatted,\n\t\t);\n\t} else if (\n\t\t(_reason as RevertReasonWithCustomError).customErrorName !== undefined &&\n\t\t(_reason as RevertReasonWithCustomError).customErrorDecodedSignature !== undefined &&\n\t\t(_reason as RevertReasonWithCustomError).customErrorArguments !== undefined\n\t) {\n\t\tconst reasonWithCustomError: RevertReasonWithCustomError =\n\t\t\t_reason as RevertReasonWithCustomError;\n\t\terror = new TransactionRevertWithCustomError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\treasonWithCustomError.reason,\n\t\t\treasonWithCustomError.customErrorName,\n\t\t\treasonWithCustomError.customErrorDecodedSignature,\n\t\t\treasonWithCustomError.customErrorArguments,\n\t\t\treasonWithCustomError.signature,\n\t\t\ttransactionReceiptFormatted,\n\t\t\treasonWithCustomError.data,\n\t\t);\n\t} else {\n\t\terror = new TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\t_reason.reason,\n\t\t\t_reason.signature,\n\t\t\ttransactionReceiptFormatted,\n\t\t\t_reason.data,\n\t\t);\n\t}\n\n\treturn error;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport {\n\tEthExecutionAPI,\n\tNumbers,\n\tTransaction,\n\tDataFormat,\n\tFormatType,\n\tETH_DATA_FORMAT,\n} from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { Eip1559NotSupportedError, UnsupportedTransactionTypeError } from 'web3-errors';\nimport { format } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { getBlock, getGasPrice } from '../rpc_method_wrappers.js';\nimport { InternalTransaction } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionType } from './transaction_builder.js';\n\nasync function getEip1559GasPricing<ReturnFormat extends DataFormat>(\n\ttransaction: FormatType<Transaction, typeof ETH_DATA_FORMAT>,\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n): Promise<FormatType<{ maxPriorityFeePerGas?: Numbers; maxFeePerGas?: Numbers }, ReturnFormat>> {\n\tconst block = await getBlock(web3Context, web3Context.defaultBlock, false, returnFormat);\n\n\tif (isNullish(block.baseFeePerGas)) throw new Eip1559NotSupportedError();\n\n\tif (!isNullish(transaction.gasPrice)) {\n\t\tconst convertedTransactionGasPrice = format(\n\t\t\t{ format: 'uint' },\n\t\t\ttransaction.gasPrice as Numbers,\n\t\t\treturnFormat,\n\t\t);\n\n\t\treturn {\n\t\t\tmaxPriorityFeePerGas: convertedTransactionGasPrice,\n\t\t\tmaxFeePerGas: convertedTransactionGasPrice,\n\t\t};\n\t}\n\treturn {\n\t\tmaxPriorityFeePerGas: format(\n\t\t\t{ format: 'uint' },\n\t\t\ttransaction.maxPriorityFeePerGas ?? web3Context.defaultMaxPriorityFeePerGas,\n\t\t\treturnFormat,\n\t\t),\n\t\tmaxFeePerGas: format(\n\t\t\t{ format: 'uint' },\n\t\t\t(transaction.maxFeePerGas ??\n\t\t\t\tBigInt(block.baseFeePerGas) * BigInt(2) +\n\t\t\t\t\tBigInt(\n\t\t\t\t\t\ttransaction.maxPriorityFeePerGas ?? web3Context.defaultMaxPriorityFeePerGas,\n\t\t\t\t\t)) as Numbers,\n\t\t\treturnFormat,\n\t\t),\n\t};\n}\n\nexport async function getTransactionGasPricing<ReturnFormat extends DataFormat>(\n\ttransaction: InternalTransaction,\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\treturnFormat: ReturnFormat,\n): Promise<\n\t| FormatType<\n\t\t\t{ gasPrice?: Numbers; maxPriorityFeePerGas?: Numbers; maxFeePerGas?: Numbers },\n\t\t\tReturnFormat\n\t  >\n\t| undefined\n> {\n\tconst transactionType = getTransactionType(transaction, web3Context);\n\tif (!isNullish(transactionType)) {\n\t\tif (transactionType.startsWith('-'))\n\t\t\tthrow new UnsupportedTransactionTypeError(transactionType);\n\n\t\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n\t\tif (Number(transactionType) < 0 || Number(transactionType) > 127)\n\t\t\tthrow new UnsupportedTransactionTypeError(transactionType);\n\n\t\tif (\n\t\t\tisNullish(transaction.gasPrice) &&\n\t\t\t(transactionType === '0x0' || transactionType === '0x1')\n\t\t)\n\t\t\treturn {\n\t\t\t\tgasPrice: await getGasPrice(web3Context, returnFormat),\n\t\t\t\tmaxPriorityFeePerGas: undefined,\n\t\t\t\tmaxFeePerGas: undefined,\n\t\t\t};\n\n\t\tif (transactionType === '0x2') {\n\t\t\treturn {\n\t\t\t\tgasPrice: undefined,\n\t\t\t\t...(await getEip1559GasPricing(transaction, web3Context, returnFormat)),\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tEthExecutionAPI,\n\tHexString,\n\tPopulatedUnsignedEip1559Transaction,\n\tPopulatedUnsignedEip2930Transaction,\n\tPopulatedUnsignedTransaction,\n\tTransaction,\n\tValidChains,\n\tFormatType,\n\tETH_DATA_FORMAT,\n} from 'web3-types';\nimport { Web3Context } from 'web3-core';\nimport { toNumber } from 'web3-utils';\nimport { TransactionFactory, TxOptions, Common } from 'web3-eth-accounts';\nimport { isNullish } from 'web3-validator';\nimport { validateTransactionForSigning } from '../validation.js';\nimport { formatTransaction } from './format_transaction.js';\nimport { transactionBuilder } from './transaction_builder.js';\n\nconst getEthereumjsTxDataFromTransaction = (\n\ttransaction: FormatType<PopulatedUnsignedTransaction, typeof ETH_DATA_FORMAT>,\n) => ({\n\tnonce: transaction.nonce,\n\tgasPrice: transaction.gasPrice,\n\tgasLimit: transaction.gasLimit ?? transaction.gas,\n\tto: transaction.to,\n\tvalue: transaction.value,\n\tdata: transaction.data ?? transaction.input,\n\ttype: transaction.type,\n\tchainId: transaction.chainId,\n\taccessList: (\n\t\ttransaction as FormatType<PopulatedUnsignedEip2930Transaction, typeof ETH_DATA_FORMAT>\n\t).accessList,\n\tmaxPriorityFeePerGas: (\n\t\ttransaction as FormatType<PopulatedUnsignedEip1559Transaction, typeof ETH_DATA_FORMAT>\n\t).maxPriorityFeePerGas,\n\tmaxFeePerGas: (\n\t\ttransaction as FormatType<PopulatedUnsignedEip1559Transaction, typeof ETH_DATA_FORMAT>\n\t).maxFeePerGas,\n});\n\nconst getEthereumjsTransactionOptions = (\n\ttransaction: FormatType<PopulatedUnsignedTransaction, typeof ETH_DATA_FORMAT>,\n\tweb3Context: Web3Context<EthExecutionAPI>,\n) => {\n\tconst hasTransactionSigningOptions =\n\t\t(!isNullish(transaction.chain) && !isNullish(transaction.hardfork)) ||\n\t\t!isNullish(transaction.common);\n\n\tlet common;\n\tif (!hasTransactionSigningOptions) {\n\t\t// if defaultcommon is specified, use that.\n\t\tif (web3Context.defaultCommon) {\n\t\t\tcommon = web3Context.defaultCommon;\n\n\t\t\tif (isNullish(common.hardfork))\n\t\t\t\tcommon.hardfork = transaction.hardfork ?? web3Context.defaultHardfork;\n\t\t\tif (isNullish(common.baseChain))\n\t\t\t\tcommon.baseChain = web3Context.defaultChain as ValidChains;\n\t\t} else {\n\t\t\tcommon = Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: 'custom-network',\n\t\t\t\t\tchainId: toNumber(transaction.chainId) as number,\n\t\t\t\t\tnetworkId: !isNullish(transaction.networkId)\n\t\t\t\t\t\t? (toNumber(transaction.networkId) as number)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdefaultHardfork: transaction.hardfork ?? web3Context.defaultHardfork,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbaseChain: web3Context.defaultChain,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t} else {\n\t\tconst name =\n\t\t\ttransaction?.common?.customChain?.name ?? transaction.chain ?? 'custom-network';\n\t\tconst chainId = toNumber(\n\t\t\ttransaction?.common?.customChain?.chainId ?? transaction?.chainId,\n\t\t) as number;\n\t\tconst networkId = toNumber(\n\t\t\ttransaction?.common?.customChain?.networkId ?? transaction?.networkId,\n\t\t) as number;\n\t\tconst defaultHardfork =\n\t\t\ttransaction?.common?.hardfork ?? transaction?.hardfork ?? web3Context.defaultHardfork;\n\t\tconst baseChain =\n\t\t\ttransaction.common?.baseChain ?? transaction.chain ?? web3Context.defaultChain;\n\n\t\tif (chainId && networkId && name) {\n\t\t\tcommon = Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tchainId,\n\t\t\t\t\tnetworkId,\n\t\t\t\t\tdefaultHardfork,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbaseChain,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\treturn { common } as TxOptions;\n};\n\nexport const prepareTransactionForSigning = async (\n\ttransaction: Transaction,\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tprivateKey?: HexString | Uint8Array,\n\tfillGasPrice = false,\n\tfillGasLimit = true,\n) => {\n\tconst populatedTransaction = (await transactionBuilder({\n\t\ttransaction,\n\t\tweb3Context,\n\t\tprivateKey,\n\t\tfillGasPrice,\n\t\tfillGasLimit,\n\t})) as unknown as PopulatedUnsignedTransaction;\n\tconst formattedTransaction = formatTransaction(\n\t\tpopulatedTransaction,\n\t\tETH_DATA_FORMAT,\n\t) as unknown as FormatType<PopulatedUnsignedTransaction, typeof ETH_DATA_FORMAT>;\n\tvalidateTransactionForSigning(\n\t\tformattedTransaction as unknown as FormatType<Transaction, typeof ETH_DATA_FORMAT>,\n\t);\n\n\treturn TransactionFactory.fromTxData(\n\t\tgetEthereumjsTxDataFromTransaction(formattedTransaction),\n\t\tgetEthereumjsTransactionOptions(formattedTransaction, web3Context),\n\t);\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { EthExecutionAPI, Bytes, Web3BaseProvider, BlockHeaderOutput } from 'web3-types';\nimport { Web3Context } from 'web3-core';\nimport { rejectIfConditionAtInterval } from 'web3-utils';\n\nimport { TransactionBlockTimeoutError } from 'web3-errors';\nimport { NUMBER_DATA_FORMAT } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getBlockNumber } from '../rpc_method_wrappers.js';\nimport { NewHeadsSubscription } from '../web3_subscriptions.js';\n\nexport interface ResourceCleaner {\n\tclean: () => void;\n}\n\nfunction resolveByPolling(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tstarterBlockNumber: number,\n\ttransactionHash?: Bytes,\n): [Promise<never>, ResourceCleaner] {\n\tconst pollingInterval = web3Context.transactionPollingInterval;\n\tconst [intervalId, promiseToError] =\n\t\trejectIfConditionAtInterval(async () => {\n\t\t\tlet lastBlockNumber;\n\t\t\ttry {\n\t\t\t\tlastBlockNumber = await getBlockNumber(web3Context, NUMBER_DATA_FORMAT);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('An error happen while trying to get the block number', error);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst numberOfBlocks = lastBlockNumber - starterBlockNumber;\n\t\t\tif (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n\t\t\t\treturn new TransactionBlockTimeoutError({\n\t\t\t\t\tstarterBlockNumber,\n\t\t\t\t\tnumberOfBlocks,\n\t\t\t\t\ttransactionHash,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}, pollingInterval);\n\n\tconst clean = () => {\n\t\tclearInterval(intervalId);\n\t};\n\n\treturn [promiseToError, { clean }];\n}\n\nasync function resolveBySubscription(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tstarterBlockNumber: number,\n\ttransactionHash?: Bytes,\n): Promise<[Promise<never>, ResourceCleaner]> {\n\t// The following variable will stay true except if the data arrived,\n\t//\tor if watching started after an error had occurred.\n\tlet needToWatchLater = true;\n\n\tlet subscription: NewHeadsSubscription;\n\tlet resourceCleaner: ResourceCleaner;\n\t// internal helper function\n\tfunction revertToPolling(\n\t\treject: (value: Error | PromiseLike<Error>) => void,\n\t\tpreviousError?: Error,\n\t) {\n\t\tif (previousError) {\n\t\t\tconsole.warn('error happened at subscription. So revert to polling...', previousError);\n\t\t}\n\t\tresourceCleaner.clean();\n\n\t\tneedToWatchLater = false;\n\t\tconst [promiseToError, newResourceCleaner] = resolveByPolling(\n\t\t\tweb3Context,\n\t\t\tstarterBlockNumber,\n\t\t\ttransactionHash,\n\t\t);\n\t\tresourceCleaner.clean = newResourceCleaner.clean;\n\t\tpromiseToError.catch(error => reject(error as Error));\n\t}\n\ttry {\n\t\tsubscription = (await web3Context.subscriptionManager?.subscribe(\n\t\t\t'newHeads',\n\t\t)) as unknown as NewHeadsSubscription;\n\t\tresourceCleaner = {\n\t\t\tclean: () => {\n\t\t\t\t// Remove the subscription, if it was not removed somewhere\n\t\t\t\t// \telse by calling, for example, subscriptionManager.clear()\n\t\t\t\tif (subscription.id) {\n\t\t\t\t\tweb3Context.subscriptionManager\n\t\t\t\t\t\t?.removeSubscription(subscription)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t// Subscription ended successfully\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\t// An error happened while ending subscription. But no need to take any action.\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} catch (error) {\n\t\treturn resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n\t}\n\tconst promiseToError: Promise<never> = new Promise((_, reject) => {\n\t\ttry {\n\t\t\tsubscription.on('data', (lastBlockHeader: BlockHeaderOutput) => {\n\t\t\t\tneedToWatchLater = false;\n\t\t\t\tif (!lastBlockHeader?.number) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst numberOfBlocks = Number(\n\t\t\t\t\tBigInt(lastBlockHeader.number) - BigInt(starterBlockNumber),\n\t\t\t\t);\n\n\t\t\t\tif (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n\t\t\t\t\t// Transaction Block Timeout is known to be reached by subscribing to new heads\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew TransactionBlockTimeoutError({\n\t\t\t\t\t\t\tstarterBlockNumber,\n\t\t\t\t\t\t\tnumberOfBlocks,\n\t\t\t\t\t\t\ttransactionHash,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tsubscription.on('error', error => {\n\t\t\t\trevertToPolling(reject, error);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\trevertToPolling(reject, error as Error);\n\t\t}\n\n\t\t// Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n\t\tsetTimeout(() => {\n\t\t\tif (needToWatchLater) {\n\t\t\t\trevertToPolling(reject);\n\t\t\t}\n\t\t}, web3Context.blockHeaderTimeout * 1000);\n\t});\n\n\treturn [promiseToError, resourceCleaner];\n}\n\n/* TODO: After merge, there will be constant block mining time (exactly 12 second each block, except slot missed that currently happens in <1% of slots. ) so we can optimize following function\nfor POS NWs, we can skip checking getBlockNumber(); after interval and calculate only based on time  that certain num of blocked are mined after that for internal double check, can do one getBlockNumber() call and timeout. \n*/\nexport async function rejectIfBlockTimeout(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionHash?: Bytes,\n): Promise<[Promise<never>, ResourceCleaner]> {\n\tconst { provider } = web3Context.requestManager;\n\tlet callingRes: [Promise<never>, ResourceCleaner];\n\tconst starterBlockNumber = await getBlockNumber(web3Context, NUMBER_DATA_FORMAT);\n\t// TODO: once https://github.com/web3/web3.js/issues/5521 is implemented, remove checking for `enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout`\n\tif (\n\t\t(provider as Web3BaseProvider).supportsSubscriptions?.() &&\n\t\tweb3Context.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout\n\t) {\n\t\tcallingRes = await resolveBySubscription(web3Context, starterBlockNumber, transactionHash);\n\t} else {\n\t\tcallingRes = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n\t}\n\treturn callingRes;\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport {\n\tETH_DATA_FORMAT,\n\tFormatType,\n\tDataFormat,\n\tEthExecutionAPI,\n\tTransactionWithSenderAPI,\n\tWeb3BaseWalletAccount,\n\tHexString,\n\tTransactionReceipt,\n\tTransaction,\n\tTransactionCall,\n\tTransactionWithFromLocalWalletIndex,\n\tTransactionWithToLocalWalletIndex,\n\tTransactionWithFromAndToLocalWalletIndex,\n\tLogsInput,\n\tTransactionHash,\n\tContractAbiWithSignature,\n} from 'web3-types';\nimport { Web3Context, Web3EventEmitter, Web3PromiEvent } from 'web3-core';\nimport { isNullish } from 'web3-validator';\nimport {\n\tContractExecutionError,\n\tInvalidResponseError,\n\tTransactionRevertedWithoutReasonError,\n\tTransactionRevertInstructionError,\n\tTransactionRevertWithCustomError,\n} from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n\nimport {\n\tSendSignedTransactionEvents,\n\tSendTransactionEvents,\n\tSendTransactionOptions,\n} from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { watchTransactionForConfirmations } from './watch_transaction_for_confirmations.js';\nimport { ALL_EVENTS_ABI } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionError } from './get_transaction_error.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason } from './get_revert_reason.js';\nimport { decodeEventABI } from './decoding.js';\n\nexport class SendTxHelper<\n\tReturnFormat extends DataFormat,\n\tResolveType = FormatType<TransactionReceipt, ReturnFormat>,\n\tTxType =\n\t\t| Transaction\n\t\t| TransactionWithFromLocalWalletIndex\n\t\t| TransactionWithToLocalWalletIndex\n\t\t| TransactionWithFromAndToLocalWalletIndex,\n> {\n\tprivate readonly web3Context: Web3Context<EthExecutionAPI>;\n\tprivate readonly promiEvent: Web3PromiEvent<\n\t\tResolveType,\n\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>\n\t>;\n\tprivate readonly options: SendTransactionOptions<ResolveType> = {\n\t\tcheckRevertBeforeSending: true,\n\t};\n\tprivate readonly returnFormat: ReturnFormat;\n\tpublic constructor({\n\t\toptions,\n\t\tweb3Context,\n\t\tpromiEvent,\n\t\treturnFormat,\n\t}: {\n\t\tweb3Context: Web3Context<EthExecutionAPI>;\n\t\toptions: SendTransactionOptions<ResolveType>;\n\t\tpromiEvent: Web3PromiEvent<\n\t\t\tResolveType,\n\t\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>\n\t\t>;\n\t\treturnFormat: ReturnFormat;\n\t}) {\n\t\tthis.options = options;\n\t\tthis.web3Context = web3Context;\n\t\tthis.promiEvent = promiEvent;\n\t\tthis.returnFormat = returnFormat;\n\t}\n\n\tpublic getReceiptWithEvents(data: TransactionReceipt): ResolveType {\n\t\tconst result = { ...(data ?? {}) };\n\t\tif (this.options?.contractAbi && result.logs && result.logs.length > 0) {\n\t\t\tresult.events = {};\n\t\t\tfor (const log of result.logs) {\n\t\t\t\tconst event = decodeEventABI(\n\t\t\t\t\tALL_EVENTS_ABI,\n\t\t\t\t\tlog as LogsInput,\n\t\t\t\t\tthis.options?.contractAbi as ContractAbiWithSignature,\n\t\t\t\t\tthis.returnFormat,\n\t\t\t\t);\n\t\t\t\tif (event.event) {\n\t\t\t\t\tresult.events[event.event] = event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result as unknown as ResolveType;\n\t}\n\n\tpublic async checkRevertBeforeSending(tx: TransactionCall) {\n\t\tif (this.options.checkRevertBeforeSending !== false) {\n\t\t\tconst reason = await getRevertReason(this.web3Context, tx, this.options.contractAbi);\n\t\t\tif (reason !== undefined) {\n\t\t\t\tthrow await getTransactionError<ReturnFormat>(\n\t\t\t\t\tthis.web3Context,\n\t\t\t\t\ttx,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis.options.contractAbi,\n\t\t\t\t\treason,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic emitSending(tx: TxType | HexString) {\n\t\tif (this.promiEvent.listenerCount('sending') > 0) {\n\t\t\tthis.promiEvent.emit('sending', tx);\n\t\t}\n\t}\n\n\tpublic async populateGasPrice({\n\t\ttransactionFormatted,\n\t\ttransaction,\n\t}: {\n\t\ttransactionFormatted: TxType;\n\t\ttransaction: TxType;\n\t}): Promise<TxType> {\n\t\tlet result = transactionFormatted;\n\t\tif (\n\t\t\t!this.options?.ignoreGasPricing &&\n\t\t\tisNullish((transactionFormatted as Transaction).gasPrice) &&\n\t\t\t(isNullish((transaction as Transaction).maxPriorityFeePerGas) ||\n\t\t\t\tisNullish((transaction as Transaction).maxFeePerGas))\n\t\t) {\n\t\t\tresult = {\n\t\t\t\t...transactionFormatted,\n\t\t\t\t// TODO gasPrice, maxPriorityFeePerGas, maxFeePerGas\n\t\t\t\t// should not be included if undefined, but currently are\n\t\t\t\t...(await getTransactionGasPricing(\n\t\t\t\t\ttransactionFormatted,\n\t\t\t\t\tthis.web3Context,\n\t\t\t\t\tETH_DATA_FORMAT,\n\t\t\t\t)),\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async signAndSend({\n\t\twallet,\n\t\ttx,\n\t}: {\n\t\twallet: Web3BaseWalletAccount | undefined;\n\t\ttx: TxType;\n\t}) {\n\t\tif (wallet) {\n\t\t\tconst signedTransaction = await wallet.signTransaction(tx);\n\n\t\t\treturn trySendTransaction(\n\t\t\t\tthis.web3Context,\n\t\t\t\tasync (): Promise<string> =>\n\t\t\t\t\tethRpcMethods.sendRawTransaction(\n\t\t\t\t\t\tthis.web3Context.requestManager,\n\t\t\t\t\t\tsignedTransaction.rawTransaction,\n\t\t\t\t\t),\n\t\t\t\tsignedTransaction.transactionHash,\n\t\t\t);\n\t\t}\n\t\treturn trySendTransaction(\n\t\t\tthis.web3Context,\n\t\t\tasync (): Promise<string> =>\n\t\t\t\tethRpcMethods.sendTransaction(\n\t\t\t\t\tthis.web3Context.requestManager,\n\t\t\t\t\ttx as Partial<TransactionWithSenderAPI>,\n\t\t\t\t),\n\t\t);\n\t}\n\n\tpublic emitSent(tx: TxType | HexString) {\n\t\tif (this.promiEvent.listenerCount('sent') > 0) {\n\t\t\tthis.promiEvent.emit('sent', tx);\n\t\t}\n\t}\n\tpublic emitTransactionHash(hash: string & Uint8Array) {\n\t\tif (this.promiEvent.listenerCount('transactionHash') > 0) {\n\t\t\tthis.promiEvent.emit('transactionHash', hash);\n\t\t}\n\t}\n\n\tpublic emitReceipt(receipt: ResolveType) {\n\t\tif (this.promiEvent.listenerCount('receipt') > 0) {\n\t\t\t(\n\t\t\t\tthis.promiEvent as Web3EventEmitter<\n\t\t\t\t\tSendTransactionEvents<ReturnFormat> | SendSignedTransactionEvents<ReturnFormat>\n\t\t\t\t>\n\t\t\t).emit(\n\t\t\t\t'receipt',\n\t\t\t\t// @ts-expect-error unknown type fix\n\t\t\t\treceipt,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async handleError({ error, tx }: { error: unknown; tx: TransactionCall }) {\n\t\tlet _error = error;\n\n\t\tif (_error instanceof ContractExecutionError && this.web3Context.handleRevert) {\n\t\t\t_error = await getTransactionError(\n\t\t\t\tthis.web3Context,\n\t\t\t\ttx,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tthis.options?.contractAbi,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(_error instanceof InvalidResponseError ||\n\t\t\t\t_error instanceof ContractExecutionError ||\n\t\t\t\t_error instanceof TransactionRevertWithCustomError ||\n\t\t\t\t_error instanceof TransactionRevertedWithoutReasonError ||\n\t\t\t\t_error instanceof TransactionRevertInstructionError) &&\n\t\t\tthis.promiEvent.listenerCount('error') > 0\n\t\t) {\n\t\t\tthis.promiEvent.emit('error', _error);\n\t\t}\n\n\t\treturn _error;\n\t}\n\n\tpublic emitConfirmation({\n\t\treceipt,\n\t\ttransactionHash,\n\t}: {\n\t\treceipt: ResolveType;\n\t\ttransactionHash: TransactionHash;\n\t}) {\n\t\tif (this.promiEvent.listenerCount('confirmation') > 0) {\n\t\t\twatchTransactionForConfirmations<\n\t\t\t\tReturnFormat,\n\t\t\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>,\n\t\t\t\tResolveType\n\t\t\t>(\n\t\t\t\tthis.web3Context,\n\t\t\t\tthis.promiEvent,\n\t\t\t\treceipt as unknown as TransactionReceipt,\n\t\t\t\ttransactionHash,\n\t\t\t\tthis.returnFormat,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async handleResolve({ receipt, tx }: { receipt: ResolveType; tx: TransactionCall }) {\n\t\tif (this.options?.transactionResolver) {\n\t\t\treturn this.options?.transactionResolver(receipt as unknown as TransactionReceipt);\n\t\t}\n\t\tif ((receipt as unknown as TransactionReceipt).status === BigInt(0)) {\n\t\t\tconst error = await getTransactionError<ReturnFormat>(\n\t\t\t\tthis.web3Context,\n\t\t\t\ttx,\n\t\t\t\t// @ts-expect-error unknown type fix\n\t\t\t\treceipt,\n\t\t\t\tundefined,\n\t\t\t\tthis.options?.contractAbi,\n\t\t\t);\n\t\t\tif (this.promiEvent.listenerCount('error') > 0) {\n\t\t\t\tthis.promiEvent.emit('error', error);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn receipt;\n\t\t}\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tEthExecutionAPI,\n\tAddress,\n\tHexString,\n\tValidChains,\n\tHardfork,\n\tTransaction,\n\tTransactionWithFromLocalWalletIndex,\n\tTransactionWithToLocalWalletIndex,\n\tTransactionWithFromAndToLocalWalletIndex,\n\tCommon,\n\tWeb3NetAPI,\n\tNumbers,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tFormatType,\n\tETH_DATA_FORMAT,\n} from 'web3-types';\nimport { Web3Context } from 'web3-core';\nimport { privateKeyToAddress } from 'web3-eth-accounts';\nimport { getId } from 'web3-net';\nimport { isNullish, isNumber, isHexStrict, isAddress } from 'web3-validator';\nimport {\n\tInvalidTransactionWithSender,\n\tInvalidTransactionWithReceiver,\n\tLocalWalletNotAvailableError,\n\tTransactionDataAndInputError,\n\tUnableToPopulateNonceError,\n} from 'web3-errors';\nimport { bytesToHex, format } from 'web3-utils';\nimport { NUMBER_DATA_FORMAT } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getChainId, getTransactionCount, estimateGas } from '../rpc_method_wrappers.js';\nimport { detectTransactionType } from './detect_transaction_type.js';\nimport { transactionSchema } from '../schemas.js';\nimport { InternalTransaction } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\n\nexport const getTransactionFromOrToAttr = (\n\tattr: 'from' | 'to',\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction?:\n\t\t| Transaction\n\t\t| TransactionWithFromLocalWalletIndex\n\t\t| TransactionWithToLocalWalletIndex\n\t\t| TransactionWithFromAndToLocalWalletIndex,\n\tprivateKey?: HexString | Uint8Array,\n): Address | undefined => {\n\tif (transaction !== undefined && attr in transaction && transaction[attr] !== undefined) {\n\t\tif (typeof transaction[attr] === 'string' && isAddress(transaction[attr] as string)) {\n\t\t\treturn transaction[attr] as Address;\n\t\t}\n\t\tif (!isHexStrict(transaction[attr] as string) && isNumber(transaction[attr] as Numbers)) {\n\t\t\tif (web3Context.wallet) {\n\t\t\t\tconst account = web3Context.wallet.get(\n\t\t\t\t\tformat({ format: 'uint' }, transaction[attr] as Numbers, NUMBER_DATA_FORMAT),\n\t\t\t\t);\n\n\t\t\t\tif (!isNullish(account)) {\n\t\t\t\t\treturn account.address;\n\t\t\t\t}\n\n\t\t\t\tthrow new LocalWalletNotAvailableError();\n\t\t\t}\n\t\t\tthrow new LocalWalletNotAvailableError();\n\t\t} else {\n\t\t\tthrow attr === 'from'\n\t\t\t\t? new InvalidTransactionWithSender(transaction.from)\n\t\t\t\t: // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\t\t\t  new InvalidTransactionWithReceiver(transaction.to);\n\t\t}\n\t}\n\tif (attr === 'from') {\n\t\tif (!isNullish(privateKey)) return privateKeyToAddress(privateKey);\n\t\tif (!isNullish(web3Context.defaultAccount)) return web3Context.defaultAccount;\n\t}\n\n\treturn undefined;\n};\n\nexport const getTransactionNonce = async <ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\taddress?: Address,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n) => {\n\tif (isNullish(address)) {\n\t\t// TODO if (web3.eth.accounts.wallet) use address from local wallet\n\t\tthrow new UnableToPopulateNonceError();\n\t}\n\n\treturn getTransactionCount(web3Context, address, web3Context.defaultBlock, returnFormat);\n};\n\nexport const getTransactionType = (\n\ttransaction: FormatType<Transaction, typeof ETH_DATA_FORMAT>,\n\tweb3Context: Web3Context<EthExecutionAPI>,\n) => {\n\tconst inferredType = detectTransactionType(transaction, web3Context);\n\tif (!isNullish(inferredType)) return inferredType;\n\tif (!isNullish(web3Context.defaultTransactionType))\n\t\treturn format({ format: 'uint' }, web3Context.defaultTransactionType, ETH_DATA_FORMAT);\n\n\treturn undefined;\n};\n\n// Keep in mind that the order the properties of populateTransaction get populated matters\n// as some of the properties are dependent on others\nexport async function defaultTransactionBuilder<ReturnType = Transaction>(options: {\n\ttransaction: Transaction;\n\tweb3Context: Web3Context<EthExecutionAPI & Web3NetAPI>;\n\tprivateKey?: HexString | Uint8Array;\n\tfillGasPrice?: boolean;\n\tfillGasLimit?: boolean;\n}): Promise<ReturnType> {\n\tlet populatedTransaction = format(\n\t\ttransactionSchema,\n\t\toptions.transaction,\n\t\tDEFAULT_RETURN_FORMAT,\n\t) as InternalTransaction;\n\n\tif (isNullish(populatedTransaction.from)) {\n\t\tpopulatedTransaction.from = getTransactionFromOrToAttr(\n\t\t\t'from',\n\t\t\toptions.web3Context,\n\t\t\tundefined,\n\t\t\toptions.privateKey,\n\t\t);\n\t}\n\n\t// TODO: Debug why need to typecase getTransactionNonce\n\tif (isNullish(populatedTransaction.nonce)) {\n\t\tpopulatedTransaction.nonce = await getTransactionNonce(\n\t\t\toptions.web3Context,\n\t\t\tpopulatedTransaction.from,\n\t\t\tETH_DATA_FORMAT,\n\t\t);\n\t}\n\n\tif (isNullish(populatedTransaction.value)) {\n\t\tpopulatedTransaction.value = '0x0';\n\t}\n\n\tif (!isNullish(populatedTransaction.data)) {\n\t\tif (\n\t\t\t!isNullish(populatedTransaction.input) &&\n\t\t\tpopulatedTransaction.data !== populatedTransaction.input\n\t\t)\n\t\t\tthrow new TransactionDataAndInputError({\n\t\t\t\tdata: bytesToHex(populatedTransaction.data),\n\t\t\t\tinput: bytesToHex(populatedTransaction.input),\n\t\t\t});\n\n\t\tif (!populatedTransaction.data.startsWith('0x'))\n\t\t\tpopulatedTransaction.data = `0x${populatedTransaction.data}`;\n\t} else if (!isNullish(populatedTransaction.input)) {\n\t\tif (!populatedTransaction.input.startsWith('0x'))\n\t\t\tpopulatedTransaction.input = `0x${populatedTransaction.input}`;\n\t} else {\n\t\tpopulatedTransaction.input = '0x';\n\t}\n\n\tif (isNullish(populatedTransaction.common)) {\n\t\tif (options.web3Context.defaultCommon) {\n\t\t\tconst common = options.web3Context.defaultCommon as unknown as Common;\n\t\t\tconst chainId = common.customChain.chainId as string;\n\t\t\tconst networkId = common.customChain.networkId as string;\n\t\t\tconst name = common.customChain.name as string;\n\t\t\tpopulatedTransaction.common = {\n\t\t\t\t...common,\n\t\t\t\tcustomChain: { chainId, networkId, name },\n\t\t\t};\n\t\t}\n\n\t\tif (isNullish(populatedTransaction.chain)) {\n\t\t\tpopulatedTransaction.chain = options.web3Context.defaultChain as ValidChains;\n\t\t}\n\t\tif (isNullish(populatedTransaction.hardfork)) {\n\t\t\tpopulatedTransaction.hardfork = options.web3Context.defaultHardfork as Hardfork;\n\t\t}\n\t}\n\n\tif (\n\t\tisNullish(populatedTransaction.chainId) &&\n\t\tisNullish(populatedTransaction.common?.customChain.chainId)\n\t) {\n\t\tpopulatedTransaction.chainId = await getChainId(options.web3Context, ETH_DATA_FORMAT);\n\t}\n\n\tif (isNullish(populatedTransaction.networkId)) {\n\t\tpopulatedTransaction.networkId =\n\t\t\t(options.web3Context.defaultNetworkId as string) ??\n\t\t\t(await getId(options.web3Context, ETH_DATA_FORMAT));\n\t}\n\n\tif (isNullish(populatedTransaction.gasLimit) && !isNullish(populatedTransaction.gas)) {\n\t\tpopulatedTransaction.gasLimit = populatedTransaction.gas;\n\t}\n\n\tpopulatedTransaction.type = getTransactionType(populatedTransaction, options.web3Context);\n\tif (\n\t\tisNullish(populatedTransaction.accessList) &&\n\t\t(populatedTransaction.type === '0x1' || populatedTransaction.type === '0x2')\n\t) {\n\t\tpopulatedTransaction.accessList = [];\n\t}\n\tif (options.fillGasPrice)\n\t\tpopulatedTransaction = {\n\t\t\t...populatedTransaction,\n\t\t\t...(await getTransactionGasPricing(\n\t\t\t\tpopulatedTransaction,\n\t\t\t\toptions.web3Context,\n\t\t\t\tETH_DATA_FORMAT,\n\t\t\t)),\n\t\t};\n\tif (\n\t\tisNullish(populatedTransaction.gas) &&\n\t\tisNullish(populatedTransaction.gasLimit) &&\n\t\toptions.fillGasLimit\n\t) {\n\t\tconst fillGasLimit = await estimateGas(\n\t\t\toptions.web3Context,\n\t\t\tpopulatedTransaction,\n\t\t\t'latest',\n\t\t\tETH_DATA_FORMAT,\n\t\t);\n\t\tpopulatedTransaction = {\n\t\t\t...populatedTransaction,\n\t\t\tgas: format({ format: 'uint' }, fillGasLimit as Numbers, ETH_DATA_FORMAT),\n\t\t};\n\t}\n\treturn populatedTransaction as ReturnType;\n}\n\nexport const transactionBuilder = async <ReturnType = Transaction>(\n\toptions: {\n\t\ttransaction: Transaction;\n\t\tweb3Context: Web3Context<EthExecutionAPI>;\n\t\tprivateKey?: HexString | Uint8Array;\n\t\tfillGasPrice?: boolean;\n\t\tfillGasLimit?: boolean;\n\t},\n\t// eslint-disable-next-line @typescript-eslint/require-await\n) =>\n\t(options.web3Context.transactionBuilder ?? defaultTransactionBuilder)({\n\t\t...options,\n\t\ttransaction: options.transaction,\n\t}) as unknown as ReturnType;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { EthExecutionAPI, Bytes } from 'web3-types';\nimport { AsyncFunction, rejectIfTimeout } from 'web3-utils';\nimport { TransactionSendTimeoutError } from 'web3-errors';\n\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */\nexport async function trySendTransaction(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tsendTransactionFunc: AsyncFunction<string>,\n\ttransactionHash?: Bytes,\n): Promise<string> {\n\tconst [timeoutId, rejectOnTimeout] = rejectIfTimeout(\n\t\tweb3Context.transactionSendTimeout,\n\t\tnew TransactionSendTimeoutError({\n\t\t\tnumberOfSeconds: web3Context.transactionSendTimeout / 1000,\n\t\t\ttransactionHash,\n\t\t}),\n\t);\n\n\tconst [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = await rejectIfBlockTimeout(\n\t\tweb3Context,\n\t\ttransactionHash,\n\t);\n\n\ttry {\n\t\t// If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n\t\treturn await Promise.race([\n\t\t\tsendTransactionFunc(), // this is the function that will send the transaction\n\t\t\trejectOnTimeout, // this will throw an error on Transaction Send Timeout\n\t\t\trejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n\t\t]);\n\t} finally {\n\t\tclearTimeout(timeoutId);\n\t\tblockTimeoutResourceCleaner.clean();\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport { TransactionPollingTimeoutError } from 'web3-errors';\nimport { EthExecutionAPI, Bytes, TransactionReceipt, DataFormat } from 'web3-types';\n\n// eslint-disable-next-line import/no-cycle\nimport { pollTillDefinedAndReturnIntervalId, rejectIfTimeout } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionReceipt } from '../rpc_method_wrappers.js';\n\nexport async function waitForTransactionReceipt<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionHash: Bytes,\n\treturnFormat: ReturnFormat,\n): Promise<TransactionReceipt> {\n\n\tconst pollingInterval =\n\t\tweb3Context.transactionReceiptPollingInterval ?? web3Context.transactionPollingInterval;\n\n\tconst [awaitableTransactionReceipt, IntervalId] = pollTillDefinedAndReturnIntervalId(async () => {\n\t\ttry {\n\t\t\treturn getTransactionReceipt(web3Context, transactionHash, returnFormat);\n\t\t} catch (error) {\n\t\t\tconsole.warn('An error happen while trying to get the transaction receipt', error);\n\t\t\treturn undefined;\n\t\t}\n\t}, pollingInterval);\n\n\tconst [timeoutId, rejectOnTimeout] = rejectIfTimeout(\n\t\tweb3Context.transactionPollingTimeout,\n\t\tnew TransactionPollingTimeoutError({\n\t\t\tnumberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n\t\t\ttransactionHash,\n\t\t}),\n\t);\n\n\tconst [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = await rejectIfBlockTimeout(\n\t\tweb3Context,\n\t\ttransactionHash,\n\t);\n\n\ttry {\n\t\t// If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n\t\treturn await Promise.race([\n\t\t\tawaitableTransactionReceipt,\n\t\t\trejectOnTimeout, // this will throw an error on Transaction Polling Timeout\n\t\t\trejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n\t\t]);\n\t} finally {\n\t\tif(timeoutId)\n\t\t\tclearTimeout(timeoutId);\n\t\tif(IntervalId)\n\t\t\tclearInterval(IntervalId);\n\t\tblockTimeoutResourceCleaner.clean();\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes, EthExecutionAPI, TransactionReceipt } from 'web3-types';\nimport { Web3Context, Web3PromiEvent } from 'web3-core';\nimport { format, numberToHex } from 'web3-utils';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n\nimport { DataFormat } from 'web3-types';\nimport { SendSignedTransactionEvents, SendTransactionEvents } from '../types.js';\nimport { transactionReceiptSchema } from '../schemas.js';\n\nexport type Web3PromiEventEventTypeBase<ReturnFormat extends DataFormat> =\n\t| SendTransactionEvents<ReturnFormat>\n\t| SendSignedTransactionEvents<ReturnFormat>;\n\nexport type WaitProps<ReturnFormat extends DataFormat, ResolveType = TransactionReceipt> = {\n\tweb3Context: Web3Context<EthExecutionAPI>;\n\ttransactionReceipt: TransactionReceipt;\n\ttransactionPromiEvent: Web3PromiEvent<ResolveType, Web3PromiEventEventTypeBase<ReturnFormat>>;\n\treturnFormat: ReturnFormat;\n};\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider does not support subscription.\n * And it is also used by `watchTransactionBySubscription`, as a fallback, if the subscription failed for any reason.\n */\nexport const watchTransactionByPolling = <\n\tReturnFormat extends DataFormat,\n\tResolveType = TransactionReceipt,\n>({\n\tweb3Context,\n\ttransactionReceipt,\n\ttransactionPromiEvent,\n\treturnFormat,\n}: WaitProps<ReturnFormat, ResolveType>) => {\n\t// Having a transactionReceipt means that the transaction has already been included\n\t// in at least one block, so we start with 1\n\tlet confirmations = 1;\n\tconst intervalId = setInterval(() => {\n\t\t(async () => {\n\t\t\tif (confirmations >= web3Context.transactionConfirmationBlocks)\n\t\t\t\tclearInterval(intervalId);\n\n\t\t\tconst nextBlock = await ethRpcMethods.getBlockByNumber(\n\t\t\t\tweb3Context.requestManager,\n\t\t\t\tnumberToHex(BigInt(transactionReceipt.blockNumber) + BigInt(confirmations)),\n\t\t\t\tfalse,\n\t\t\t);\n\n\t\t\tif (nextBlock?.hash) {\n\t\t\t\tconfirmations += 1;\n\n\t\t\t\ttransactionPromiEvent.emit('confirmation', {\n\t\t\t\t\tconfirmations: format({ format: 'uint' }, confirmations, returnFormat),\n\t\t\t\t\treceipt: format(transactionReceiptSchema, transactionReceipt, returnFormat),\n\t\t\t\t\tlatestBlockHash: format(\n\t\t\t\t\t\t{ format: 'bytes32' },\n\t\t\t\t\t\tnextBlock.hash as Bytes,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\t\t})() as unknown;\n\t}, web3Context.transactionReceiptPollingInterval ?? web3Context.transactionPollingInterval);\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes, Numbers, BlockHeaderOutput, TransactionReceipt } from 'web3-types';\nimport { format } from 'web3-utils';\n\nimport { DataFormat } from 'web3-types';\nimport { NewHeadsSubscription } from '../web3_subscriptions.js';\nimport { transactionReceiptSchema } from '../schemas.js';\nimport { WaitProps, watchTransactionByPolling } from './watch_transaction_by_pooling.js';\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider supports subscription.\n */\nexport const watchTransactionBySubscription = <\n\tReturnFormat extends DataFormat,\n\tResolveType = TransactionReceipt,\n>({\n\tweb3Context,\n\ttransactionReceipt,\n\ttransactionPromiEvent,\n\treturnFormat,\n}: WaitProps<ReturnFormat, ResolveType>) => {\n\t// The following variable will stay true except if the data arrived,\n\t//\tor if watching started after an error had occurred.\n\tlet needToWatchLater = true;\n\tlet lastCaughtBlockHash: string;\n\tsetImmediate(() => {\n\t\tweb3Context.subscriptionManager\n\t\t\t?.subscribe('newHeads')\n\t\t\t.then((subscription: NewHeadsSubscription) => {\n\t\t\t\tsubscription.on('data', async (newBlockHeader: BlockHeaderOutput) => {\n\t\t\t\t\tneedToWatchLater = false;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!newBlockHeader?.number ||\n\t\t\t\t\t\t// For some cases, the on-data event is fired couple times for the same block!\n\t\t\t\t\t\t// This needs investigation but seems to be because of multiple `subscription.on('data'...)` even this should not cause that.\n\t\t\t\t\t\tlastCaughtBlockHash === newBlockHeader?.parentHash\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlastCaughtBlockHash = newBlockHeader?.parentHash as string;\n\n\t\t\t\t\tconst confirmations =\n\t\t\t\t\t\tBigInt(newBlockHeader.number) -\n\t\t\t\t\t\tBigInt(transactionReceipt.blockNumber) +\n\t\t\t\t\t\tBigInt(1);\n\n\t\t\t\t\ttransactionPromiEvent.emit('confirmation', {\n\t\t\t\t\t\tconfirmations: format(\n\t\t\t\t\t\t\t{ format: 'uint' },\n\t\t\t\t\t\t\tconfirmations as Numbers,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t),\n\t\t\t\t\t\treceipt: format(transactionReceiptSchema, transactionReceipt, returnFormat),\n\t\t\t\t\t\tlatestBlockHash: format(\n\t\t\t\t\t\t\t{ format: 'bytes32' },\n\t\t\t\t\t\t\tnewBlockHeader.parentHash as Bytes,\n\t\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t\tif (confirmations >= web3Context.transactionConfirmationBlocks) {\n\t\t\t\t\t\tawait web3Context.subscriptionManager?.removeSubscription(subscription);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsubscription.on('error', async () => {\n\t\t\t\t\tawait web3Context.subscriptionManager?.removeSubscription(subscription);\n\n\t\t\t\t\tneedToWatchLater = false;\n\t\t\t\t\twatchTransactionByPolling({\n\t\t\t\t\t\tweb3Context,\n\t\t\t\t\t\ttransactionReceipt,\n\t\t\t\t\t\ttransactionPromiEvent,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tneedToWatchLater = false;\n\t\t\t\twatchTransactionByPolling({\n\t\t\t\t\tweb3Context,\n\t\t\t\t\ttransactionReceipt,\n\t\t\t\t\ttransactionPromiEvent,\n\t\t\t\t\treturnFormat,\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\t// Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n\tsetTimeout(() => {\n\t\tif (needToWatchLater) {\n\t\t\twatchTransactionByPolling({\n\t\t\t\tweb3Context,\n\t\t\t\ttransactionReceipt,\n\t\t\t\ttransactionPromiEvent,\n\t\t\t\treturnFormat,\n\t\t\t});\n\t\t}\n\t}, web3Context.blockHeaderTimeout * 1000);\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Bytes, EthExecutionAPI, Web3BaseProvider, TransactionReceipt } from 'web3-types';\nimport { Web3Context, Web3PromiEvent } from 'web3-core';\nimport { format } from 'web3-utils';\nimport { isNullish } from 'web3-validator';\n\nimport {\n\tTransactionMissingReceiptOrBlockHashError,\n\tTransactionReceiptMissingBlockNumberError,\n} from 'web3-errors';\nimport { DataFormat } from 'web3-types';\nimport { transactionReceiptSchema } from '../schemas.js';\nimport {\n\twatchTransactionByPolling,\n\tWeb3PromiEventEventTypeBase,\n} from './watch_transaction_by_pooling.js';\nimport { watchTransactionBySubscription } from './watch_transaction_by_subscription.js';\n\nexport function watchTransactionForConfirmations<\n\tReturnFormat extends DataFormat,\n\tWeb3PromiEventEventType extends Web3PromiEventEventTypeBase<ReturnFormat>,\n\tResolveType = TransactionReceipt,\n>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionPromiEvent: Web3PromiEvent<ResolveType, Web3PromiEventEventType>,\n\ttransactionReceipt: TransactionReceipt,\n\ttransactionHash: Bytes,\n\treturnFormat: ReturnFormat,\n) {\n\tif (isNullish(transactionReceipt) || isNullish(transactionReceipt.blockHash))\n\t\tthrow new TransactionMissingReceiptOrBlockHashError({\n\t\t\treceipt: transactionReceipt,\n\t\t\tblockHash: format({ format: 'bytes32' }, transactionReceipt?.blockHash, returnFormat),\n\t\t\ttransactionHash: format({ format: 'bytes32' }, transactionHash, returnFormat),\n\t\t});\n\n\tif (!transactionReceipt.blockNumber)\n\t\tthrow new TransactionReceiptMissingBlockNumberError({ receipt: transactionReceipt });\n\n\t// As we have the receipt, it's the first confirmation that tx is accepted.\n\ttransactionPromiEvent.emit('confirmation', {\n\t\tconfirmations: format({ format: 'uint' }, 1, returnFormat),\n\t\treceipt: format(transactionReceiptSchema, transactionReceipt, returnFormat),\n\t\tlatestBlockHash: format({ format: 'bytes32' }, transactionReceipt.blockHash, returnFormat),\n\t});\n\n\t// so a subscription for newBlockHeaders can be made instead of polling\n\tconst provider: Web3BaseProvider = web3Context.requestManager.provider as Web3BaseProvider;\n\tif (provider && 'supportsSubscriptions' in provider && provider.supportsSubscriptions()) {\n\t\twatchTransactionBySubscription({\n\t\t\tweb3Context,\n\t\t\ttransactionReceipt,\n\t\t\ttransactionPromiEvent,\n\t\t\treturnFormat,\n\t\t});\n\t} else {\n\t\twatchTransactionByPolling({\n\t\t\tweb3Context,\n\t\t\ttransactionReceipt,\n\t\t\ttransactionPromiEvent,\n\t\t\treturnFormat,\n\t\t});\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tAccessList,\n\tAccessListEntry,\n\tBaseTransactionAPI,\n\tTransaction1559UnsignedAPI,\n\tTransaction2930UnsignedAPI,\n\tTransactionCall,\n\tTransactionLegacyUnsignedAPI,\n\tTransaction,\n\tTransactionWithSenderAPI,\n\tETH_DATA_FORMAT,\n} from 'web3-types';\nimport { isAddress, isHexStrict, isHexString32Bytes, isNullish, isUInt } from 'web3-validator';\nimport {\n\tChainMismatchError,\n\tHardforkMismatchError,\n\tChainIdMismatchError,\n\tCommonOrChainAndHardforkError,\n\tEip1559GasPriceError,\n\tInvalidGasOrGasPrice,\n\tInvalidMaxPriorityFeePerGasOrMaxFeePerGas,\n\tInvalidNonceOrChainIdError,\n\tInvalidTransactionCall,\n\tInvalidTransactionObjectError,\n\tInvalidTransactionWithSender,\n\tMissingChainOrHardforkError,\n\tMissingCustomChainError,\n\tMissingCustomChainIdError,\n\tMissingGasError,\n\tTransactionGasMismatchError,\n\tUnsupportedFeeMarketError,\n} from 'web3-errors';\nimport { formatTransaction } from './utils/format_transaction.js';\nimport { InternalTransaction } from './types.js';\n\nexport function isBaseTransaction(value: BaseTransactionAPI): boolean {\n\tif (!isNullish(value.to) && !isAddress(value.to)) return false;\n\tif (!isHexStrict(value.type) && !isNullish(value.type) && value.type.length !== 2) return false;\n\tif (!isHexStrict(value.nonce)) return false;\n\tif (!isHexStrict(value.gas)) return false;\n\tif (!isHexStrict(value.value)) return false;\n\tif (!isHexStrict(value.input)) return false;\n\tif (value.chainId && !isHexStrict(value.chainId)) return false;\n\n\treturn true;\n}\n\nexport function isAccessListEntry(value: AccessListEntry): boolean {\n\tif (!isNullish(value.address) && !isAddress(value.address)) return false;\n\tif (\n\t\t!isNullish(value.storageKeys) &&\n\t\t!value.storageKeys.every(storageKey => isHexString32Bytes(storageKey))\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function isAccessList(value: AccessList): boolean {\n\tif (\n\t\t!Array.isArray(value) ||\n\t\t!value.every(accessListEntry => isAccessListEntry(accessListEntry))\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function isTransaction1559Unsigned(value: Transaction1559UnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.maxFeePerGas)) return false;\n\tif (!isHexStrict(value.maxPriorityFeePerGas)) return false;\n\tif (!isAccessList(value.accessList)) return false;\n\n\treturn true;\n}\n\nexport function isTransaction2930Unsigned(value: Transaction2930UnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.gasPrice)) return false;\n\tif (!isAccessList(value.accessList)) return false;\n\n\treturn true;\n}\n\nexport function isTransactionLegacyUnsigned(value: TransactionLegacyUnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.gasPrice)) return false;\n\n\treturn true;\n}\n\nexport function isTransactionWithSender(value: TransactionWithSenderAPI): boolean {\n\tif (!isAddress(value.from)) return false;\n\tif (!isBaseTransaction(value)) return false;\n\tif (\n\t\t!isTransaction1559Unsigned(value as Transaction1559UnsignedAPI) &&\n\t\t!isTransaction2930Unsigned(value as Transaction2930UnsignedAPI) &&\n\t\t!isTransactionLegacyUnsigned(value as TransactionLegacyUnsignedAPI)\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function validateTransactionWithSender(value: TransactionWithSenderAPI) {\n\tif (!isTransactionWithSender(value)) throw new InvalidTransactionWithSender(value);\n}\n\nexport function isTransactionCall(value: TransactionCall): boolean {\n\tif (!isNullish(value.from) && !isAddress(value.from)) return false;\n\tif (!isAddress(value.to)) return false;\n\tif (!isNullish(value.gas) && !isHexStrict(value.gas)) return false;\n\tif (!isNullish(value.gasPrice) && !isHexStrict(value.gasPrice)) return false;\n\tif (!isNullish(value.value) && !isHexStrict(value.value)) return false;\n\tif (!isNullish(value.data) && !isHexStrict(value.data)) return false;\n\tif (!isNullish(value.input) && !isHexStrict(value.input)) return false;\n\tif (!isNullish(value.type)) return false;\n\tif (isTransaction1559Unsigned(value as Transaction1559UnsignedAPI)) return false;\n\tif (isTransaction2930Unsigned(value as Transaction2930UnsignedAPI)) return false;\n\n\treturn true;\n}\n\nexport function validateTransactionCall(value: TransactionCall) {\n\tif (!isTransactionCall(value)) throw new InvalidTransactionCall(value);\n}\n\nexport const validateCustomChainInfo = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common)) {\n\t\tif (isNullish(transaction.common.customChain)) throw new MissingCustomChainError();\n\t\tif (isNullish(transaction.common.customChain.chainId))\n\t\t\tthrow new MissingCustomChainIdError();\n\t\tif (\n\t\t\t!isNullish(transaction.chainId) &&\n\t\t\ttransaction.chainId !== transaction.common.customChain.chainId\n\t\t)\n\t\t\tthrow new ChainIdMismatchError({\n\t\t\t\ttxChainId: transaction.chainId,\n\t\t\t\tcustomChainId: transaction.common.customChain.chainId,\n\t\t\t});\n\t}\n};\nexport const validateChainInfo = (transaction: InternalTransaction) => {\n\tif (\n\t\t!isNullish(transaction.common) &&\n\t\t!isNullish(transaction.chain) &&\n\t\t!isNullish(transaction.hardfork)\n\t) {\n\t\tthrow new CommonOrChainAndHardforkError();\n\t}\n\tif (\n\t\t(!isNullish(transaction.chain) && isNullish(transaction.hardfork)) ||\n\t\t(!isNullish(transaction.hardfork) && isNullish(transaction.chain))\n\t)\n\t\tthrow new MissingChainOrHardforkError({\n\t\t\tchain: transaction.chain,\n\t\t\thardfork: transaction.hardfork,\n\t\t});\n};\nexport const validateBaseChain = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common))\n\t\tif (!isNullish(transaction.common.baseChain))\n\t\t\tif (\n\t\t\t\t!isNullish(transaction.chain) &&\n\t\t\t\ttransaction.chain !== transaction.common.baseChain\n\t\t\t) {\n\t\t\t\tthrow new ChainMismatchError({\n\t\t\t\t\ttxChain: transaction.chain,\n\t\t\t\t\tbaseChain: transaction.common.baseChain,\n\t\t\t\t});\n\t\t\t}\n};\nexport const validateHardfork = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common))\n\t\tif (!isNullish(transaction.common.hardfork))\n\t\t\tif (\n\t\t\t\t!isNullish(transaction.hardfork) &&\n\t\t\t\ttransaction.hardfork !== transaction.common.hardfork\n\t\t\t) {\n\t\t\t\tthrow new HardforkMismatchError({\n\t\t\t\t\ttxHardfork: transaction.hardfork,\n\t\t\t\t\tcommonHardfork: transaction.common.hardfork,\n\t\t\t\t});\n\t\t\t}\n};\n\nexport const validateLegacyGas = (transaction: InternalTransaction) => {\n\tif (\n\t\t// This check is verifying gas and gasPrice aren't less than 0.\n\t\tisNullish(transaction.gas) ||\n\t\t!isUInt(transaction.gas) ||\n\t\tisNullish(transaction.gasPrice) ||\n\t\t!isUInt(transaction.gasPrice)\n\t)\n\t\tthrow new InvalidGasOrGasPrice({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t});\n\tif (!isNullish(transaction.maxFeePerGas) || !isNullish(transaction.maxPriorityFeePerGas))\n\t\tthrow new UnsupportedFeeMarketError({\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t});\n};\n\nexport const validateFeeMarketGas = (transaction: InternalTransaction) => {\n\t// These errors come from 1.x, so they must be checked before\n\t// InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n\t// for the same code executing in 1.x\n\tif (!isNullish(transaction.gasPrice) && transaction.type === '0x2')\n\t\tthrow new Eip1559GasPriceError(transaction.gasPrice);\n\tif (transaction.type === '0x0' || transaction.type === '0x1')\n\t\tthrow new UnsupportedFeeMarketError({\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t});\n\n\tif (\n\t\tisNullish(transaction.maxFeePerGas) ||\n\t\t!isUInt(transaction.maxFeePerGas) ||\n\t\tisNullish(transaction.maxPriorityFeePerGas) ||\n\t\t!isUInt(transaction.maxPriorityFeePerGas)\n\t)\n\t\tthrow new InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n};\n\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nexport const validateGas = (transaction: InternalTransaction) => {\n\tconst gasPresent = !isNullish(transaction.gas) || !isNullish(transaction.gasLimit);\n\tconst legacyGasPresent = gasPresent && !isNullish(transaction.gasPrice);\n\tconst feeMarketGasPresent =\n\t\tgasPresent &&\n\t\t!isNullish(transaction.maxPriorityFeePerGas) &&\n\t\t!isNullish(transaction.maxFeePerGas);\n\n\tif (!legacyGasPresent && !feeMarketGasPresent)\n\t\tthrow new MissingGasError({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n\n\tif (legacyGasPresent && feeMarketGasPresent)\n\t\tthrow new TransactionGasMismatchError({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n\n\t(legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n\t(!isNullish(transaction.type) && transaction.type > '0x1'\n\t\t? validateFeeMarketGas\n\t\t: validateLegacyGas)(transaction);\n};\n\nexport const validateTransactionForSigning = (\n\ttransaction: InternalTransaction,\n\toverrideMethod?: (transaction: InternalTransaction) => void,\n) => {\n\tif (!isNullish(overrideMethod)) {\n\t\toverrideMethod(transaction);\n\t\treturn;\n\t}\n\n\tif (typeof transaction !== 'object' || isNullish(transaction))\n\t\tthrow new InvalidTransactionObjectError(transaction);\n\n\tvalidateCustomChainInfo(transaction);\n\tvalidateChainInfo(transaction);\n\tvalidateBaseChain(transaction);\n\tvalidateHardfork(transaction);\n\n\tconst formattedTransaction = formatTransaction(transaction as Transaction, ETH_DATA_FORMAT);\n\tvalidateGas(formattedTransaction);\n\n\tif (\n\t\tisNullish(formattedTransaction.nonce) ||\n\t\tisNullish(formattedTransaction.chainId) ||\n\t\tformattedTransaction.nonce.startsWith('-') ||\n\t\tformattedTransaction.chainId.startsWith('-')\n\t)\n\t\tthrow new InvalidNonceOrChainIdError({\n\t\t\tnonce: transaction.nonce,\n\t\t\tchainId: transaction.chainId,\n\t\t});\n};\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\n\nimport {\n\tSupportedProviders,\n\tAddress,\n\tBytes,\n\tFilter,\n\tHexString32Bytes,\n\tHexString8Bytes,\n\tNumbers,\n\tBlockNumberOrTag,\n\tLogsOutput,\n\tTransaction,\n\tTransactionCall,\n\tWeb3EthExecutionAPI,\n\tTransactionWithFromLocalWalletIndex,\n\tTransactionWithToLocalWalletIndex,\n\tTransactionWithFromAndToLocalWalletIndex,\n\tTransactionForAccessList,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEip712TypedData,\n} from 'web3-types';\nimport { isSupportedProvider, Web3Context, Web3ContextInitOptions } from 'web3-core';\nimport { TransactionNotFound } from 'web3-errors';\nimport { toChecksumAddress, isNullish } from 'web3-utils';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\nimport { SendTransactionOptions } from './types.js';\nimport {\n\tLogsSubscription,\n\tNewPendingTransactionsSubscription,\n\tNewHeadsSubscription,\n\tSyncingSubscription,\n} from './web3_subscriptions.js';\n\nexport type RegisteredSubscription = {\n\tlogs: typeof LogsSubscription;\n\tnewPendingTransactions: typeof NewPendingTransactionsSubscription;\n\tpendingTransactions: typeof NewPendingTransactionsSubscription;\n\tnewHeads: typeof NewHeadsSubscription;\n\tnewBlockHeaders: typeof NewHeadsSubscription;\n\tsyncing: typeof SyncingSubscription;\n};\n\nexport const registeredSubscriptions = {\n\tlogs: LogsSubscription,\n\tnewPendingTransactions: NewPendingTransactionsSubscription,\n\tnewHeads: NewHeadsSubscription,\n\tsyncing: SyncingSubscription,\n\tpendingTransactions: NewPendingTransactionsSubscription, // the same as newPendingTransactions. just for support API like in version 1.x\n\tnewBlockHeaders: NewHeadsSubscription, // the same as newHeads. just for support API like in version 1.x\n};\n\nexport class Web3Eth extends Web3Context<Web3EthExecutionAPI, RegisteredSubscription> {\n\tpublic constructor(\n\t\tproviderOrContext?: SupportedProviders<any> | Web3ContextInitOptions | string,\n\t) {\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders<any>)\n\t\t) {\n\t\t\tsuper({\n\t\t\t\tprovider: providerOrContext as SupportedProviders<any>,\n\t\t\t\tregisteredSubscriptions,\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ((providerOrContext as Web3ContextInitOptions).registeredSubscriptions) {\n\t\t\tsuper(providerOrContext as Web3ContextInitOptions);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper({\n\t\t\t...(providerOrContext as Web3ContextInitOptions),\n\t\t\tregisteredSubscriptions,\n\t\t});\n\t}\n\n\t/**\n\t * @returns Returns the ethereum protocol version of the node.\n\t *\n\t * ```ts\n\t * web3.eth.getProtocolVersion().then(console.log);\n\t * > \"63\"\n\t * ```\n\t */\n\tpublic async getProtocolVersion() {\n\t\treturn ethRpcMethods.getProtocolVersion(this.requestManager);\n\t}\n\n\t// TODO Add returnFormat parameter\n\t/**\n\t * Checks if the node is currently syncing.\n\t *\n\t * @returns Either a {@link SyncingStatusAPI}, or `false`.\n\t *\n\t * ```ts\n\t * web3.eth.isSyncing().then(console.log);\n\t * > {\n\t *     startingBlock: 100,\n\t *     currentBlock: 312,\n\t *     highestBlock: 512,\n\t *     knownStates: 234566,\n\t *     pulledStates: 123455\n\t * }\n\t * ```\n\t */\n\tpublic async isSyncing() {\n\t\treturn ethRpcMethods.getSyncing(this.requestManager);\n\t}\n\n\t// TODO consider adding returnFormat parameter (to format address as bytes)\n\t/**\n\t * @returns Returns the coinbase address to which mining rewards will go.\n\t *\n\t * ```ts\n\t * web3.eth.getCoinbase().then(console.log);\n\t * > \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\"\n\t * ```\n\t */\n\tpublic async getCoinbase() {\n\t\treturn ethRpcMethods.getCoinbase(this.requestManager);\n\t}\n\n\t/**\n\t * Checks whether the node is mining or not.\n\t *\n\t * @returns `true` if the node is mining, otherwise `false`.\n\t *\n\t * ```ts\n\t * web3.eth.isMining().then(console.log);\n\t * > true\n\t * ```\n\t */\n\tpublic async isMining() {\n\t\treturn ethRpcMethods.getMining(this.requestManager);\n\t}\n\n\t/**\n\t * @deprecated Will be removed in the future, please use {@link Web3Eth.getHashRate} method instead.\n\t *\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The number of hashes per second that the node is mining with.\n\t *\n\t * ```ts\n\t * web3.eth.getHashrate().then(console.log);\n\t * > 493736n\n\t *\n\t * web3.eth.getHashrate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > \"0x788a8\"\n\t * ```\n\t */\n\tpublic async getHashrate<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn this.getHashRate(returnFormat);\n\t}\n\n\t/**\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The number of hashes per second that the node is mining with.\n\t *\n\t * ```ts\n\t * web3.eth.getHashRate().then(console.log);\n\t * > 493736n\n\t *\n\t * web3.eth.getHashRate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > \"0x788a8\"\n\t * ```\n\t */\n\tpublic async getHashRate<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getHashRate(this, returnFormat);\n\t}\n\n\t/**\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The gas price determined by the last few blocks median gas price.\n\t *\n\t * ```ts\n\t * web3.eth.getGasPrice().then(console.log);\n\t * > 20000000000n\n\t *\n\t * web3.eth.getGasPrice({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > \"0x4a817c800\"\n\t * ```\n\t */\n\tpublic async getGasPrice<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getGasPrice(this, returnFormat);\n\t}\n\n\t/**\n\t * @returns A list of accounts the node controls (addresses are checksummed).\n\t *\n\t * ```ts\n\t * web3.eth.getAccounts().then(console.log);\n\t * > [\"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", \"0xDCc6960376d6C6dEa93647383FfB245CfCed97Cf\"]\n\t * ```\n\t */\n\tpublic async getAccounts() {\n\t\tconst hexAddresses = (await ethRpcMethods.getAccounts(this.requestManager)) ?? [];\n\t\treturn hexAddresses.map(address => toChecksumAddress(address));\n\t}\n\n\t/**\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The current block number.\n\t *\n\t * ```ts\n\t * web3.eth.getBlockNumber().then(console.log);\n\t * > 2744n\n\t *\n\t * web3.eth.getBlockNumber({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > \"0xab8\"\n\t * ```\n\t */\n\tpublic async getBlockNumber<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getBlockNumber(this, returnFormat);\n\t}\n\n\t/**\n\t * Get the balance of an address at a given block.\n\t *\n\t * @param address The address to get the balance of.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the balance query.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The current balance for the given address in `wei`.\n\t *\n\t * ```ts\n\t * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n\t * > 1000000000000n\n\t *\n\t * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n\t * > \"0xe8d4a51000\"\n\t * ```\n\t */\n\tpublic async getBalance<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\taddress: Address,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getBalance(this, address, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * Get the storage at a specific position of an address.\n\t *\n\t * @param address The address to get the storage from.\n\t * @param storageSlot The index position of the storage.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the storage query.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The value in storage at the given position.\n\t *\n\t * ```ts\n\t * web3.eth.getStorageAt(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\", 0).then(console.log);\n\t * > \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"\n\t *\n\t * web3.eth.getStorageAt(\n\t *      \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\",\n\t *      0,\n\t *      undefined,\n\t *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n\t * ).then(console.log);\n\t * > Uint8Array(31) [\n\t *       3, 52,  86, 115,  33,  35, 255, 255,\n\t *       35, 66,  52,  45, 209,  35,  66,  67,\n\t *       67, 36,  35,  66,  52, 253,  35,  79,\n\t *       210, 63, 212, 242,  61,  66,  52\n\t *    ]\n\t * ```\n\t */\n\tpublic async getStorageAt<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\taddress: Address,\n\t\tstorageSlot: Numbers,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getStorageAt(\n\t\t\tthis,\n\t\t\taddress,\n\t\t\tstorageSlot,\n\t\t\tblockNumber,\n\t\t\treturnFormat,\n\t\t);\n\t}\n\n\t/**\n\t * Get the code at a specific address.\n\t *\n\t * @param address The address to get the code from.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the code query.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The [data](https://ethereum.org/en/developers/docs/transactions/#the-data-field) at the provided `address`.\n\t *\n\t * ```ts\n\t * web3.eth.getCode(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\").then(console.log);\n\t * > \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\"\n\t *\n\t * web3.eth.getCode(\n\t *      \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n\t *      undefined,\n\t *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n\t * ).then(console.log);\n\t * > Uint8Array(50) [\n\t *   96,  1,  96,   0, 128, 53, 129, 26, 129, 129, 129,\n\t *   20, 96,  18,  87, 131,  1,   0, 91,  96,  27,  96,\n\t *   1, 53,  96,  37,  86, 91, 128, 96,   0,  82,  96,\n\t *   32, 96,   0, 242,  91, 96,   0, 96,   7, 130,   2,\n\t *   144, 80, 145, 144,  80, 86\n\t * ]\n\t * ```\n\t */\n\tpublic async getCode<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\taddress: Address,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getCode(this, address, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * Retrieves a {@link Block} matching the provided block number, block hash or block tag.\n\t *\n\t * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n\t * @param hydrated If specified `true`, the returned block will contain all transactions as objects. If `false` it will only contain transaction hashes.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted (does not format transaction objects or hashes).\n\t * @returns A {@link Block} object matching the provided block number or block hash.\n\t *\n\t * ```ts\n\t * web3.eth.getBlock(0).then(console.log);\n\t * > {\n\t *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n\t *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n\t *    miner: '0x0000000000000000000000000000000000000000',\n\t *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n\t *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *    difficulty: 1n,\n\t *    number: 0n,\n\t *    gasLimit: 30000000n,\n\t *    gasUsed: 0n,\n\t *    timestamp: 1658281638n,\n\t *    extraData: '0x',\n\t *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    nonce: 0n,\n\t *    totalDifficulty: 1n,\n\t *    baseFeePerGas: 1000000000n,\n\t *    size: 514n,\n\t *    transactions: [],\n\t *    uncles: []\n\t *  }\n\t *\n\t * web3.eth.getBlock(\n\t *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n\t *      false,\n\t *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > {\n\t *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n\t *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n\t *    miner: '0x0000000000000000000000000000000000000000',\n\t *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n\t *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *    difficulty: 1,\n\t *    number: 0,\n\t *    gasLimit: 30000000,\n\t *    gasUsed: 0,\n\t *    timestamp: 1658281638,\n\t *    extraData: '0x',\n\t *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    nonce: 0,\n\t *    totalDifficulty: 1,\n\t *    baseFeePerGas: 1000000000,\n\t *    size: 514,\n\t *    transactions: [],\n\t *    uncles: []\n\t *  }\n\t * ```\n\t */\n\tpublic async getBlock<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tblock: HexString32Bytes | BlockNumberOrTag = this.defaultBlock,\n\t\thydrated = false,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getBlock(this, block, hydrated, returnFormat);\n\t}\n\n\t/**\n\t * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The number of transactions in the provided block.\n\t *\n\t * ```ts\n\t * web3.eth.getBlockTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n\t * > 1n\n\t *\n\t * web3.eth.getBlockTransactionCount(\n\t *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > 1\n\t * ```\n\t */\n\tpublic async getBlockTransactionCount<\n\t\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\t>(\n\t\tblock: HexString32Bytes | BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getBlockTransactionCount(this, block, returnFormat);\n\t}\n\n\t/**\n\t * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The number of [uncles](https://ethereum.org/en/glossary/#ommer) in the provided block.\n\t *\n\t * ```ts\n\t * web3.eth.getBlockUncleCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n\t * > 1n\n\t *\n\t * web3.eth.getBlockUncleCount(\n\t *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > 1\n\t * ```\n\t */\n\tpublic async getBlockUncleCount<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tblock: HexString32Bytes | BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getBlockUncleCount(this, block, returnFormat);\n\t}\n\n\t/**\n\t *\n\t * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n\t * @param uncleIndex The index position of the uncle.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns A blocks [uncle](https://ethereum.org/en/glossary/#ommer) by a given uncle index position.\n\t *\n\t * ```ts\n\t * web3.eth.getUncle(0, 1).then(console.log);\n\t * > {\n\t *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n\t *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n\t *    miner: '0x0000000000000000000000000000000000000000',\n\t *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n\t *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *    difficulty: 1n,\n\t *    number: 0n,\n\t *    gasLimit: 30000000n,\n\t *    gasUsed: 0n,\n\t *    timestamp: 1658281638n,\n\t *    extraData: '0x',\n\t *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    nonce: 0n,\n\t *    totalDifficulty: 1n,\n\t *    baseFeePerGas: 1000000000n,\n\t *    size: 514n,\n\t *    transactions: [],\n\t *    uncles: []\n\t *  }\n\t *\n\t * web3.eth.getUncle(\n\t *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n\t *      1,\n\t *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > {\n\t *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n\t *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n\t *    miner: '0x0000000000000000000000000000000000000000',\n\t *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n\t *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n\t *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *    difficulty: 1,\n\t *    number: 0,\n\t *    gasLimit: 30000000,\n\t *    gasUsed: 0,\n\t *    timestamp: 1658281638,\n\t *    extraData: '0x',\n\t *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *    nonce: 0,\n\t *    totalDifficulty: 1,\n\t *    baseFeePerGas: 1000000000,\n\t *    size: 514,\n\t *    transactions: [],\n\t *    uncles: []\n\t *  }\n\t * ```\n\t */\n\tpublic async getUncle<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tblock: HexString32Bytes | BlockNumberOrTag = this.defaultBlock,\n\t\tuncleIndex: Numbers,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getUncle(this, block, uncleIndex, returnFormat);\n\t}\n\n\t/**\n\t * @param transactionHash The hash of the desired transaction.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The desired transaction object.\n\t *\n\t * ```ts\n\t * web3.eth.getTransaction('0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc').then(console.log);\n\t * {\n\t *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *    type: 0n,\n\t *    nonce: 0n,\n\t *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n\t *    blockNumber: 1n,\n\t *    transactionIndex: 0n,\n\t *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *    value: 1n,\n\t *    gas: 90000n,\n\t *    gasPrice: 2000000000n,\n\t *    input: '0x',\n\t *    v: 2709n,\n\t *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *  }\n\t *\n\t * web3.eth.getTransaction(\n\t *     web3.utils.hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * {\n\t *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *    type: 0,\n\t *    nonce: 0,\n\t *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n\t *    blockNumber: 1,\n\t *    transactionIndex: 0,\n\t *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *    value: 1,\n\t *    gas: 90000,\n\t *    gasPrice: 2000000000,\n\t *    input: '0x',\n\t *    v: 2709,\n\t *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *  }\n\t * ```\n\t */\n\tpublic async getTransaction<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransactionHash: Bytes,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\tconst response = await rpcMethodsWrappers.getTransaction(\n\t\t\tthis,\n\t\t\ttransactionHash,\n\t\t\treturnFormat,\n\t\t);\n\n\t\tif (!response) throw new TransactionNotFound();\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns A list of pending transactions.\n\t *\n\t * ```ts\n\t * web3.eth.getPendingTransactions().then(console.log);\n\t * > [\n\t *      {\n\t *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *          type: 0n,\n\t *          nonce: 0n,\n\t *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *          blockNumber: null,\n\t *          transactionIndex: 0n,\n\t *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *          value: 1n,\n\t *          gas: 90000n,\n\t *          gasPrice: 2000000000n,\n\t *          input: '0x',\n\t *          v: 2709n,\n\t *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *      },\n\t *      {\n\t *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n\t *          type: 0n,\n\t *          nonce: 1n,\n\t *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *          blockNumber: null,\n\t *          transactionIndex: 0n,\n\t *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *          value: 1n,\n\t *          gas: 90000n,\n\t *          gasPrice: 2000000000n,\n\t *          input: '0x',\n\t *          v: 2710n,\n\t *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n\t *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n\t *      }\n\t *   ]\n\t *\n\t * * web3.eth.getPendingTransactions({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > [\n\t *      {\n\t *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *          type: 0,\n\t *          nonce: 0,\n\t *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *          blockNumber: null,\n\t *          transactionIndex: 0,\n\t *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *          value: 1,\n\t *          gas: 90000,\n\t *          gasPrice: 2000000000,\n\t *          input: '0x',\n\t *          v: 2709,\n\t *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *      },\n\t *      {\n\t *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n\t *          type: 0,\n\t *          nonce: 1,\n\t *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n\t *          blockNumber: null,\n\t *          transactionIndex: 0,\n\t *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *          value: 1,\n\t *          gas: 90000,\n\t *          gasPrice: 2000000000,\n\t *          input: '0x',\n\t *          v: 2710,\n\t *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n\t *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n\t *      }\n\t *   ]\n\t * ```\n\t */\n\tpublic async getPendingTransactions<\n\t\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\t>(returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat) {\n\t\treturn rpcMethodsWrappers.getPendingTransactions(this, returnFormat);\n\t}\n\n\t/**\n\t * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n\t * @param transactionIndex The index position of the transaction.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The desired transaction object.\n\t *\n\t * ```ts\n\t * web3.eth.getTransactionFromBlock('0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00', 0).then(console.log);\n\t * {\n\t *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *    type: 0n,\n\t *    nonce: 0n,\n\t *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n\t *    blockNumber: 1n,\n\t *    transactionIndex: 0n,\n\t *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *    value: 1n,\n\t *    gas: 90000n,\n\t *    gasPrice: 2000000000n,\n\t *    input: '0x',\n\t *    v: 2709n,\n\t *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *  }\n\t *\n\t * web3.eth.getTransactionFromBlock(\n\t *     hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n\t *     0,\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * {\n\t *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n\t *    type: 0,\n\t *    nonce: 0,\n\t *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n\t *    blockNumber: 1,\n\t *    transactionIndex: 0,\n\t *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *    value: 1,\n\t *    gas: 90000,\n\t *    gasPrice: 2000000000,\n\t *    input: '0x',\n\t *    v: 2709,\n\t *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n\t *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n\t *  }\n\t * ```\n\t */\n\tpublic async getTransactionFromBlock<\n\t\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\t>(\n\t\tblock: HexString32Bytes | BlockNumberOrTag = this.defaultBlock,\n\t\ttransactionIndex: Numbers,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getTransactionFromBlock(\n\t\t\tthis,\n\t\t\tblock,\n\t\t\ttransactionIndex,\n\t\t\treturnFormat,\n\t\t);\n\t}\n\n\t/**\n\t * @param transactionHash Hash of the transaction to retrieve the receipt for.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The desired {@link TransactionReceipt} object.\n\t *\n\t * ```ts\n\t * web3.eth.getTransactionReceipt(\"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\").then(console.log);\n\t * > {\n\t *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n\t *      transactionIndex: 0n,\n\t *      blockNumber: 2n,\n\t *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n\t *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *      cumulativeGasUsed: 21000n,\n\t *      gasUsed: 21000n,\n\t *      logs: [],\n\t *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *      status: 1n,\n\t *      effectiveGasPrice: 2000000000n,\n\t *      type: 0n\n\t *  }\n\t *\n\t * web3.eth.getTransactionReceipt(\n\t *      \"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\",\n\t *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > {\n\t *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n\t *      transactionIndex: 0,\n\t *      blockNumber: 2,\n\t *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n\t *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *      cumulativeGasUsed: 21000,\n\t *      gasUsed: 21000,\n\t *      logs: [],\n\t *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *      status: 1,\n\t *      effectiveGasPrice: 2000000000,\n\t *      type: 0n\n\t *  }\n\t * ```\n\t */\n\tpublic async getTransactionReceipt<\n\t\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\t>(transactionHash: Bytes, returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat) {\n\t\tconst response = await rpcMethodsWrappers.getTransactionReceipt(\n\t\t\tthis,\n\t\t\ttransactionHash,\n\t\t\treturnFormat,\n\t\t);\n\n\t\tif (!response) throw new TransactionNotFound();\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * @param address The address to get the number of transactions for.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the query.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The number of transactions sent from the provided address.\n\t *\n\t * ```ts\n\t * web3.eth.getTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n\t * > 1n\n\t *\n\t * web3.eth.getTransactionCount(\n\t *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n\t *     undefined,\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > 1\n\t * ```\n\t */\n\tpublic async getTransactionCount<\n\t\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\t>(\n\t\taddress: Address,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getTransactionCount(this, address, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * @param transaction The {@link Transaction}, {@link TransactionWithFromLocalWalletIndex}, {@link TransactionWithToLocalWalletIndex} or {@link TransactionWithFromAndToLocalWalletIndex} to send. __Note:__ In the `to` and `from` fields when hex strings are used, it is assumed they are addresses, for any other form (number, string number, etc.) it is assumed they are wallet indexes.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @param options A configuration object used to change the behavior of the `sendTransaction` method.\n\t * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n\t * ```ts\n\t * const transaction = {\n\t *   from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n\t *   to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n\t *   value: '0x1'\n\t * }\n\t *\n\t * const transactionHash = await web3.eth.sendTransaction(transaction);\n\t * console.log(transactionHash);\n\t * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n\t *\n\t * web3.eth.sendTransaction(transaction).then(console.log);\n\t * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n\t *\n\t * web3.eth.sendTransaction(transaction).catch(console.log);\n\t * > <Some TransactionError>\n\t *\n\t * // Example using options.ignoreGasPricing = true\n\t * web3.eth.sendTransaction(transaction, undefined, { ignoreGasPricing: true }).then(console.log);\n\t * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n\t * ```\n\t *\n\t *\n\t * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n\t * - `sending`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n\t * > {\n\t *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n\t *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n\t *    value: '0x1',\n\t *    gasPrice: '0x77359400',\n\t *    maxPriorityFeePerGas: undefined,\n\t *    maxFeePerGas: undefined\n\t * }\n\t * ```\n\t * - `sent`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('sent', sentTransaction => console.log(sentTransaction));\n\t * > {\n\t *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n\t *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n\t *    value: '0x1',\n\t *    gasPrice: '0x77359400',\n\t *    maxPriorityFeePerGas: undefined,\n\t *    maxFeePerGas: undefined\n\t * }\n\t * ```\n\t * - `transactionHash`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('transactionHash', transactionHash => console.log(transactionHash));\n\t * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n\t * ```\n\t * - `receipt`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('receipt', receipt => console.log(receipt));\n\t * > {\n\t *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n\t *      transactionIndex: 0n,\n\t *      blockNumber: 2n,\n\t *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n\t *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *      cumulativeGasUsed: 21000n,\n\t *      gasUsed: 21000n,\n\t *      logs: [],\n\t *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *      status: 1n,\n\t *      effectiveGasPrice: 2000000000n,\n\t *      type: 0n\n\t * }\n\t * ```\n\t * - `confirmation`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('confirmation', confirmation => console.log(confirmation));\n\t * > {\n\t *     confirmations: 1n,\n\t *     receipt: {\n\t *         transactionHash: '0xb4a3a35ae0f3e77ef0ff7be42010d948d011b21a4e341072ee18717b67e99ab8',\n\t *         transactionIndex: 0n,\n\t *         blockNumber: 5n,\n\t *         blockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548',\n\t *         from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n\t *         to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n\t *         cumulativeGasUsed: 21000n,\n\t *         gasUsed: 21000n,\n\t *         logs: [],\n\t *         logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *         status: 1n,\n\t *         effectiveGasPrice: 2000000000n,\n\t *         type: 0n\n\t *     },\n\t *     latestBlockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548'\n\t * }\n\t * ```\n\t * - `error`\n\t * ```ts\n\t * web3.eth.sendTransaction(transaction).on('error', error => console.log);\n\t * > <Some TransactionError>\n\t * ```\n\t */\n\tpublic sendTransaction<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction:\n\t\t\t| Transaction\n\t\t\t| TransactionWithFromLocalWalletIndex\n\t\t\t| TransactionWithToLocalWalletIndex\n\t\t\t| TransactionWithFromAndToLocalWalletIndex,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\toptions?: SendTransactionOptions,\n\t) {\n\t\treturn rpcMethodsWrappers.sendTransaction(this, transaction, returnFormat, options);\n\t}\n\n\t/**\n\t * @param transaction Signed transaction in one of the valid {@link Bytes} format.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n\t * ```ts\n\t * const signedTransaction = \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n\t *\n\t * const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction);\n\t * console.log(transactionHash);\n\t * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n\t *\n\t * web3.eth.sendSignedTransaction(signedTransaction).then(console.log);\n\t * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n\t *\n\t * web3.eth.sendSignedTransaction(signedTransaction).catch(console.log);\n\t * > <Some TransactionError>\n\t * ```\n\t *\n\t *\n\t * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n\t * - `sending`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n\t * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n\t * ```\n\t * - `sent`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('sent', sentTransaction => console.log(sentTransaction));\n\t * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n\t * ```\n\t * - `transactionHash`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('transactionHash', transactionHash => console.log(transactionHash));\n\t * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n\t * ```\n\t * - `receipt`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('receipt', receipt => console.log(receipt));\n\t * > {\n\t *      blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n\t *      blockNumber: 1n,\n\t *      cumulativeGasUsed: 21000n,\n\t *      effectiveGasPrice: 1000000001n,\n\t *      from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *      gasUsed: 21000n,\n\t *      logs: [],\n\t *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *      status: 1n,\n\t *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *      transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n\t *      transactionIndex: 0n,\n\t *      type: 0n\n\t * }\n\t * ```\n\t * - `confirmation`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('confirmation', confirmation => console.log(confirmation));\n\t * > {\n\t *     confirmations: 1n,\n\t *     receipt: {\n\t *          blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n\t *          blockNumber: 1n,\n\t *          cumulativeGasUsed: 21000n,\n\t *          effectiveGasPrice: 1000000001n,\n\t *          from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *          gasUsed: 21000n,\n\t *          logs: [],\n\t *          logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t *          status: 1n,\n\t *          to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *          transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n\t *          transactionIndex: 0n,\n\t *          type: 0n\n\t *     },\n\t *     latestBlockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081'\n\t * }\n\t * ```\n\t * - `error`\n\t * ```ts\n\t * web3.eth.sendSignedTransaction(signedTransaction).on('error', error => console.log(error));\n\t * > <Some TransactionError>\n\t * ```\n\t */\n\tpublic sendSignedTransaction<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction: Bytes,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\toptions?: SendTransactionOptions,\n\t) {\n\t\treturn rpcMethodsWrappers.sendSignedTransaction(this, transaction, returnFormat, options);\n\t}\n\n\t/**\n\t * @param message Data to sign in one of the valid {@link Bytes} format.\n\t * @param address Address to sign data with, can be an address or the index of a local wallet.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns The signed `message`.\n\t *\n\t * ```ts\n\t * // Using an unlocked account managed by connected RPC client\n\t * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\").then(console.log);\n\t * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n\t *\n\t * // Using an unlocked account managed by connected RPC client\n\t * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.UINT8ARRAY }).then(console.log);\n\t * > Uint8Array(65) [\n\t *    48, 117,  94, 214,  83, 150, 250, 207, 134, 197,  62,\n\t *    98,  23, 197,  43,  77, 174, 190, 114, 170,  73,  65,\n\t *   216, 150,  53,  64, 157, 228, 201, 199, 249,  70, 109,\n\t *    78, 154, 174, 199, 151, 127,   5, 233,  35, 136, 155,\n\t *    51, 192, 208, 221,  39, 215,  34, 107, 110, 111,  86,\n\t *   206, 115, 116, 101, 197, 207, 208,  75, 228,   0\n\t * ]\n\t * ```\n\t *\n\t * // Using an indexed account managed by local Web3 wallet\n\t * web3.eth.sign(\"0x48656c6c6f20776f726c64\", 0).then(console.log);\n\t * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n\t */\n\tpublic async sign<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tmessage: Bytes,\n\t\taddress: Address,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.sign(this, message, address, returnFormat);\n\t}\n\n\t/**\n\t * @param transaction The transaction object to sign.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n\t * @returns {@link SignedTransactionInfoAPI}, an object containing the [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n\t *\n\t * ```ts\n\t * const transaction = {\n\t *      from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n\t *      to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n\t *      value: '0x1',\n\t *      gas: '21000',\n\t *      gasPrice: await web3Eth.getGasPrice(),\n\t *      nonce: '0x1',\n\t *      type: '0x0'\n\t * }\n\t *\n\t * web3.eth.signTransaction(transaction).then(console.log);\n\t * > {\n\t *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n\t *   tx: {\n\t *      type: 0n,\n\t *      nonce: 1n,\n\t *      gasPrice: 1000000001n,\n\t *      gas: 21000n,\n\t *      value: 1n,\n\t *      v: 2710n,\n\t *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n\t *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n\t *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *      data: '0x'\n\t *   }\n\t * }\n\t *\n\t * web3.eth.signTransaction(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > {\n\t *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n\t *   tx: {\n\t *      type: 0,\n\t *      nonce: 1,\n\t *      gasPrice: 1000000001,\n\t *      gas: 21000,\n\t *      value: 1,\n\t *      v: 2710,\n\t *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n\t *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n\t *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n\t *      data: '0x'\n\t *   }\n\t * }\n\t * ```\n\t */\n\tpublic async signTransaction<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction: Transaction,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.signTransaction(this, transaction, returnFormat);\n\t}\n\n\t// TODO Decide what to do with transaction.to\n\t// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n\t/**\n\t * Executes a message call within the EVM without creating a transaction.\n\t * It does not publish anything to the blockchain and does not consume any gas.\n\t *\n\t * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns The returned data of the call, e.g. a smart contract function's return value.\n\t */\n\tpublic async call<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction: TransactionCall,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.call(this, transaction, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * Simulates the transaction within the EVM to estimate the amount of gas to be used by the transaction.\n\t * The transaction will not be added to the blockchain, and actual gas usage can vary when interacting\n\t * with a contract as a result of updating the contract's state.\n\t *\n\t * @param transaction The {@link Transaction} object to estimate the gas for.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns The used gas for the simulated transaction execution.\n\t *\n\t * ```ts\n\t * const transaction = {\n\t *       from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n\t *       to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n\t *       value: '0x1',\n\t *       nonce: '0x1',\n\t *       type: '0x0'\n\t * }\n\t *\n\t * web3.eth.estimateGas(transaction).then(console.log);\n\t * > 21000n\n\t *\n\t * web3.eth.estimateGas(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > 21000\n\t * ```\n\t */\n\tpublic async estimateGas<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction: Transaction,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.estimateGas(this, transaction, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * Gets past logs, matching the provided `filter`.\n\t *\n\t * @param filter A {@link Filter} object containing the properties for the desired logs.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n\t *\n\t * ```ts\n\t * web3.eth.getPastLogs({\n\t *      address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n\t *      topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n\t *  }).then(console.log);\n\t * > [{\n\t *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *       logIndex: 0n,\n\t *       transactionIndex: 0n,\n\t *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *       blockNumber: 1234n,\n\t *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t *   },\n\t *   {...}]\n\t *\n\t * web3.eth.getPastLogs(\n\t *     {\n\t *       address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n\t *       topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n\t *     },\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > [{\n\t *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *       logIndex: 0,\n\t *       transactionIndex: 0,\n\t *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *       blockNumber: 1234,\n\t *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t *   },\n\t *   {...}]\n\t * ```\n\t */\n\tpublic async getPastLogs<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tfilter: Filter,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getLogs(this, filter, returnFormat);\n\t}\n\n\t/**\n\t * Gets work for miners to mine on. Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').\n\t *\n\t * @returns The mining work as an array of strings with the following structure:\n\t *\n\t * String 32 Bytes - at index 0: current block header pow-hash\n\t * String 32 Bytes - at index 1: the seed hash used for the DAG.\n\t * String 32 Bytes - at index 2: the boundary condition ('target'), 2^256 / difficulty.\n\t *\n\t * ```ts\n\t * web3.eth.getWork().then(console.log);\n\t * > [\n\t *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n\t *     \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n\t *     \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n\t * ]\n\t * ```\n\t */\n\tpublic async getWork() {\n\t\treturn ethRpcMethods.getWork(this.requestManager);\n\t}\n\n\t/**\n\t * Used for submitting a proof-of-work solution.\n\t *\n\t * @param nonce The nonce found (8 bytes).\n\t * @param hash  The header’s pow-hash (32 bytes).\n\t * @param digest The mix digest (32 bytes).\n\t * @returns Returns `true` if the provided solution is valid, otherwise `false`.\n\t *\n\t * ```ts\n\t * web3.eth.submitWork([\n\t *     \"0x0000000000000001\",\n\t *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n\t *     \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"\n\t * ]).then(console.log);\n\t * > true\n\t * ```\n\t */\n\tpublic async submitWork(\n\t\tnonce: HexString8Bytes,\n\t\thash: HexString32Bytes,\n\t\tdigest: HexString32Bytes,\n\t) {\n\t\treturn ethRpcMethods.submitWork(this.requestManager, nonce, hash, digest);\n\t}\n\n\t// TODO - Format addresses\n\t/**\n\t * This method will request/enable the accounts from the current environment and for supporting [EIP 1102](https://eips.ethereum.org/EIPS/eip-1102)\n\t * This method will only work if you’re using the injected provider from a application like Metamask, Status or TrustWallet.\n\t * It doesn’t work if you’re connected to a node with a default Web3.js provider (WebsocketProvider, HttpProvider and IpcProvider).\n\t * For more information about the behavior of this method please read [EIP-1102](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md): Opt-in account exposure.\n\t *\n\t * @returns An array of enabled accounts.\n\t *\n\t * ```ts\n\t * web3.eth.requestAccounts().then(console.log);\n\t * > ['0aae0B295369a9FD31d5F28D9Ec85E40f4cb692BAf', '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe']\n\t * ```\n\t */\n\tpublic async requestAccounts() {\n\t\treturn ethRpcMethods.requestAccounts(this.requestManager);\n\t}\n\n\t/**\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns The chain ID of the current connected node as described in the [EIP-695](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-695.md).\n\t *\n\t * ```ts\n\t * web3.eth.getChainId().then(console.log);\n\t * > 61n\n\t *\n\t * web3.eth.getChainId({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > 61\n\t * ```\n\t */\n\tpublic async getChainId<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getChainId(this, returnFormat);\n\t}\n\n\t/**\n\t * @returns The current client version.\n\t *\n\t * ```ts\n\t * web3.eth.getNodeInfo().then(console.log);\n\t * > \"Mist/v0.9.3/darwin/go1.4.1\"\n\t * ```\n\t */\n\tpublic async getNodeInfo() {\n\t\treturn ethRpcMethods.getNodeInfo(this.requestManager);\n\t}\n\n\t/**\n\t * @param address The Address of the account or contract.\n\t * @param storageKeys Array of storage-keys which should be proofed and included. See {@link web3.getStorageAt}.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns The account and storage-values of the specified account including the Merkle-proof as described in [EIP-1186](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1186.md).\n\t *\n\t * ```ts\n\t * web3.eth.getProof(\n\t *     \"0x1234567890123456789012345678901234567890\",\n\t *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n\t *     \"latest\"\n\t * ).then(console.log);\n\t * > {\n\t *     \"address\": \"0x1234567890123456789012345678901234567890\",\n\t *     \"accountProof\": [\n\t *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n\t *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n\t *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n\t *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n\t *     ],\n\t *     \"balance\": 0n,\n\t *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n\t *     \"nonce\": 0n,\n\t *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n\t *     \"storageProof\": [\n\t *         {\n\t *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n\t *             \"value\": 0n,\n\t *             \"proof\": []\n\t *         },\n\t *         {\n\t *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n\t *             \"value\": 0n,\n\t *             \"proof\": []\n\t *         }\n\t *     ]\n\t * }\n\t *\n\t * web3.eth.getProof(\n\t *     \"0x1234567890123456789012345678901234567890\",\n\t *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n\t *     undefined,\n\t *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n\t * ).then(console.log);\n\t * > {\n\t *     \"address\": \"0x1234567890123456789012345678901234567890\",\n\t *     \"accountProof\": [\n\t *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n\t *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n\t *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n\t *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n\t *     ],\n\t *     \"balance\": 0,\n\t *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n\t *     \"nonce\": 0,\n\t *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n\t *     \"storageProof\": [\n\t *         {\n\t *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n\t *             \"value\": 0,\n\t *             \"proof\": []\n\t *         },\n\t *         {\n\t *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n\t *             \"value\": 0,\n\t *             \"proof\": []\n\t *         }\n\t *     ]\n\t * }\n\t * ```\n\t */\n\tpublic async getProof<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\taddress: Address,\n\t\tstorageKeys: Bytes[],\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getProof(this, address, storageKeys, blockNumber, returnFormat);\n\t}\n\n\t// TODO Throwing an error with Geth, but not Infura\n\t// TODO gasUsedRatio and reward not formatting\n\t/**\n\t * @param blockCount Number of blocks in the requested range. Between `1` and `1024` blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n\t * @param newestBlock Highest number block of the requested range.\n\t * @param rewardPercentiles A monotonically increasing list of percentile values to sample from each block’s effective priority fees per gas in ascending order, weighted by gas used. Example: `['0', '25', '50', '75', '100']` or `['0', '0.5', '1', '1.5', '3', '80']`\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t * @returns `baseFeePerGas` and transaction effective `priorityFeePerGas` history for the requested block range if available.\n\t * The range between `headBlock - 4` and `headBlock` is guaranteed to be available while retrieving data from the `pending` block and older history are optional to support.\n\t * For pre-EIP-1559 blocks the `gasPrice`s are returned as `rewards` and zeroes are returned for the `baseFeePerGas`.\n\t *\n\t * ```ts\n\t * web3.eth.getFeeHistory(4, 'pending', [0, 25, 75, 100]).then(console.log);\n\t * > {\n\t *     baseFeePerGas: [\n\t *         22983878621n,\n\t *         21417903463n,\n\t *         19989260230n,\n\t *         17770954829n,\n\t *         18850641304n\n\t *     ],\n\t *     gasUsedRatio: [\n\t *         0.22746546666666667,\n\t *         0.2331871,\n\t *         0.05610054885262125,\n\t *         0.7430227268212117\n\t *     ],\n\t *     oldestBlock: 15216343n,\n\t *     reward: [\n\t *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n\t *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n\t *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n\t *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n\t *     ]\n\t * }\n\t *\n\t * web3.eth.getFeeHistory(4, BlockTags.LATEST, [0, 25, 75, 100], { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n\t * > {\n\t *     baseFeePerGas: [\n\t *         22983878621,\n\t *         21417903463,\n\t *         19989260230,\n\t *         17770954829,\n\t *         18850641304\n\t *     ],\n\t *     gasUsedRatio: [\n\t *         0.22746546666666667,\n\t *         0.2331871,\n\t *         0.05610054885262125,\n\t *         0.7430227268212117\n\t *     ],\n\t *     oldestBlock: 15216343,\n\t *     reward: [\n\t *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n\t *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n\t *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n\t *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n\t *     ]\n\t * }\n\t * ```\n\t */\n\tpublic async getFeeHistory<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tblockCount: Numbers,\n\t\tnewestBlock: BlockNumberOrTag = this.defaultBlock,\n\t\trewardPercentiles: Numbers[],\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getFeeHistory(\n\t\t\tthis,\n\t\t\tblockCount,\n\t\t\tnewestBlock,\n\t\t\trewardPercentiles,\n\t\t\treturnFormat,\n\t\t);\n\t}\n\n\t/**\n\t * This method generates an access list for a transaction.\n\t *\n\t * @param transaction - A transaction object where all properties are optional except `from`, however it's recommended to include the `to` property.\n\t * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the createAccessList should be formatted.\n\t * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n\t * @example\n\t * ```ts\n\t * web3.eth.createAccessList({\n\t * from: '0xDe95305a63302C3aa4d3A9B42654659AeA72b694',\n\t * data: '0x9a67c8b100000000000000000000000000000000000000000000000000000000000004d0',\n\t * gasPrice: '0x3b9aca00',\n\t * gas: '0x3d0900',\n\t * to: '0x940b25304947ae863568B3804434EC77E2160b87'\n\t * })\n\t * .then(console.log);\n\t *\n\t * > {\n\t *  \"accessList\": [\n\t *     {\n\t *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n\t *       \"storageKeys\": [\n\t *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n\t *       ]\n\t *     }\n\t *   ],\n\t *   \"gasUsed\": \"0x7671\"\n\t * }\n\t * ```\n\t */\n\tpublic async createAccessList<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\ttransaction: TransactionForAccessList,\n\t\tblockNumber: BlockNumberOrTag = this.defaultBlock,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.createAccessList(this, transaction, blockNumber, returnFormat);\n\t}\n\n\t/**\n\t * This method sends EIP-712 typed data to the RPC provider to be signed.\n\t *\n\t * @param address The address that corresponds with the private key used to sign the typed data.\n\t * @param typedData The EIP-712 typed data object.\n\t * @param useLegacy A boolean flag determining whether the RPC call uses the legacy method `eth_signTypedData` or the newer method `eth_signTypedData_v4`\n\t * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the signed typed data should be formatted.\n\t * @returns The signed typed data.\n\t */\n\tpublic async signTypedData<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\taddress: Address,\n\t\ttypedData: Eip712TypedData,\n\t\tuseLegacy = false,\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.signTypedData(this, address, typedData, useLegacy, returnFormat);\n\t}\n\n\t/**\n\t * Lets you subscribe to specific events in the blockchain.\n\t *\n\t * @param name - The subscription you want to subscribe to.\n\t * @param args - Optional additional parameters, depending on the subscription type.\n\t * @returns A subscription object of type {@link RegisteredSubscription}. The object contains:\n\t *  - subscription.id: The subscription id, used to identify and unsubscribing the subscription.\n\t *  - subscription.subscribe(): Can be used to re-subscribe with the same parameters.\n\t *  - subscription.unsubscribe(): Unsubscribes the subscription and returns TRUE in the callback if successful.\n\t *  - subscription.args: The subscription arguments, used when re-subscribing.\n\t *\n\t *\n\t * You can use the subscription object to listen on:\n\t *\n\t * - on(\"data\") - Fires on each incoming log with the log object as argument.\n\t * - on(\"changed\") - Fires on each log which was removed from the blockchain. The log will have the additional property \"removed: true\".\n\t * - on(\"error\") - Fires when an error in the subscription occurs.\n\t * - on(\"connected\") - Fires once after the subscription successfully connected. Returns the subscription id.\n\t *\n\t * @example **Subscribe to Smart Contract events**\n\t * ```ts\n\t * // Subscribe to `logs`\n\t * const logSubscription = web3.eth.subscribe('logs', {\n\t *     address: '0x1234567890123456789012345678901234567890',\n\t *     topics: ['0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234']\n\t * });\n\t * logSubscription.on('data', (data: any) => console.log(data));\n\t * logSubscription.on('error', (error: any) => console.log(error));\n\t *\n\t * ```\n\t *\n\t * @example **Subscribe to new block headers**\n\t * ```ts\n\t * // Subscribe to `newBlockHeaders`\n\t * const newBlocksSubscription = await web3.eth.subscribe('newBlockHeaders');\n\t *\n\t * newBlocksSubscription.on('data', async blockhead => {\n\t * \tconsole.log('New block header: ', blockhead);\n\t *\n\t * \t// You do not need the next line, if you like to keep notified for every new block\n\t * \tawait newBlocksSubscription.unsubscribe();\n\t * \tconsole.log('Unsubscribed from new block headers.');\n\t * });\n\t * newBlocksSubscription.on('error', error =>\n\t * \tconsole.log('Error when subscribing to New block header: ', error),\n\t * );\n\t * ```\n\t */\n\tpublic async subscribe<\n\t\tT extends keyof RegisteredSubscription,\n\t\tReturnType extends DataFormat = DataFormat,\n\t>(\n\t\tname: T,\n\t\targs?: ConstructorParameters<RegisteredSubscription[T]>[0],\n\t\treturnFormat: ReturnType = DEFAULT_RETURN_FORMAT as ReturnType,\n\t): Promise<InstanceType<RegisteredSubscription[T]>> {\n\t\tconst subscription = await this.subscriptionManager?.subscribe(name, args, returnFormat);\n\t\tif (\n\t\t\tsubscription instanceof LogsSubscription &&\n\t\t\tname === 'logs' &&\n\t\t\ttypeof args === 'object' &&\n\t\t\t!isNullish(args.fromBlock) &&\n\t\t\tNumber.isFinite(Number(args.fromBlock))\n\t\t) {\n\t\t\tsetImmediate(() => {\n\t\t\t\tthis.getPastLogs(args)\n\t\t\t\t\t.then(logs => {\n\t\t\t\t\t\tfor (const log of logs) {\n\t\t\t\t\t\t\tsubscription._processSubscriptionResult(log as LogsOutput);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tsubscription._processSubscriptionError(e as Error);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn subscription;\n\t}\n\n\tprivate static shouldClearSubscription({ sub }: { sub: unknown }): boolean {\n\t\treturn !(sub instanceof SyncingSubscription);\n\t}\n\n\t/**\n\t * Resets subscriptions.\n\t *\n\t * @param notClearSyncing If `true` it keeps the `syncing` subscription.\n\t * @returns A promise to an array of subscription ids that were cleared.\n\t *\n\t * ```ts\n\t * web3.eth.clearSubscriptions().then(console.log);\n\t * > [...] An array of subscription ids that were cleared\n\t * ```\n\t */\n\tpublic clearSubscriptions(notClearSyncing = false): Promise<string[]> | undefined {\n\t\treturn this.subscriptionManager?.unsubscribe(\n\t\t\t// eslint-disable-next-line\n\t\t\tnotClearSyncing ? Web3Eth.shouldClearSubscription : undefined,\n\t\t);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable-next-line max-classes-per-file */\nimport { format } from 'web3-utils';\n\nimport {\n\tSyncOutput,\n\tAddress,\n\tBlockNumberOrTag,\n\tHexString,\n\tTopic,\n\tBlockHeaderOutput,\n\tLogsOutput,\n} from 'web3-types';\nimport { Web3Subscription } from 'web3-core';\nimport { blockHeaderSchema, logSchema, syncSchema } from './schemas.js';\n\n/**\n * ## subscribe('logs')\n * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n *\n * You can subscribe to logs matching a given filter object, which can take the following parameters:\n * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n *\n */\nexport class LogsSubscription extends Web3Subscription<\n\t{\n\t\tdata: LogsOutput;\n\t},\n\t{\n\t\treadonly fromBlock?: BlockNumberOrTag;\n\t\treadonly address?: Address | Address[];\n\t\treadonly topics?: Topic[];\n\t}\n> {\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['logs', this.args];\n\t}\n\n\tprotected formatSubscriptionResult(data: LogsOutput) {\n\t\treturn format(logSchema, data, super.returnFormat);\n\t}\n}\n\n/**\n * ## subscribe('pendingTransactions')\n * Subscribes to incoming pending transactions.\n *\n * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n * @example\n * ```ts\n * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n * ```\n */\nexport class NewPendingTransactionsSubscription extends Web3Subscription<{\n\tdata: HexString;\n}> {\n\t// eslint-disable-next-line\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['newPendingTransactions'];\n\t}\n\n\tprotected formatSubscriptionResult(data: string) {\n\t\treturn format({ format: 'string' }, data, super.returnFormat);\n\t}\n}\n\n/**\n * ## subscribe('newHeads') ( same as subscribe('newBlockHeaders'))\n *\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n *\n * The structure of a returned block header is {@link BlockHeaderOutput}:\n * @example\n * ```ts\n * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n *  'data',\n * console.log\n * );\n * >{\n * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n * miner: '0x0000000000000000000000000000000000000000',\n * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n * difficulty: 2n,\n * number: 21n,\n * gasLimit: 11738125n,\n * gasUsed: 830006n,\n * timestamp: 1678797237n,\n * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n * nonce: 0n\n * }\n * ```\n */\nexport class NewHeadsSubscription extends Web3Subscription<{\n\tdata: BlockHeaderOutput;\n}> {\n\t// eslint-disable-next-line\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['newHeads'];\n\t}\n\n\tprotected formatSubscriptionResult(data: BlockHeaderOutput): BlockHeaderOutput {\n\t\treturn format(blockHeaderSchema, data, super.returnFormat);\n\t}\n}\n\n/**\n * ## subscribe('syncing')\n *\n * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n * @example\n * ```ts\n * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n * > `true` // when syncing\n *\n * (await web3.eth.subscribe('syncing')).on('data', console.log);\n * > {\n *      startingBlock: 0,\n *      currentBlock: 0,\n *      highestBlock: 0,\n *      pulledStates: 0,\n *      knownStates: 0\n *   }\n * ```\n */\nexport class SyncingSubscription extends Web3Subscription<{\n\tdata: SyncOutput;\n\tchanged: boolean;\n}> {\n\t// eslint-disable-next-line\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['syncing'];\n\t}\n\n\tpublic _processSubscriptionResult(\n\t\tdata:\n\t\t\t| {\n\t\t\t\t\tsyncing: boolean;\n\t\t\t\t\tstatus: SyncOutput;\n\t\t\t  }\n\t\t\t| boolean,\n\t) {\n\t\tif (typeof data === 'boolean') {\n\t\t\tthis.emit('changed', data);\n\t\t} else {\n\t\t\tconst mappedData: SyncOutput = Object.fromEntries(\n\t\t\t\tObject.entries(data.status).map(([key, value]) => [\n\t\t\t\t\tkey.charAt(0).toLowerCase() + key.substring(1),\n\t\t\t\t\tvalue,\n\t\t\t\t]),\n\t\t\t) as SyncOutput;\n\n\t\t\tthis.emit('changed', data.syncing);\n\t\t\tthis.emit('data', format(syncSchema, mappedData, super.returnFormat));\n\t\t}\n\t}\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3-net package allows you to interact with an Ethereum node’s network properties.\n *\n * ```ts\n * import Net from 'web3-net';\n *\n * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n * // or using the web3 umbrella package\n * import Web3 from 'web3';\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * // -> web3.eth.net\n *\n * // get the ID of the network\n * await web3.eth.net.getId();\n * > 5777n\n *\n * // get the peer count\n * await web3.eth.net.getPeerCount();\n * > 0n\n *\n * // Check if the node is listening for peers\n * await web3.eth.net.isListening();\n * > true\n * ```\n */\n\n/**\n *\n */\nimport { Net } from './net.js';\n\nexport * from './net.js';\nexport * from './rpc_method_wrappers.js';\n\nexport default Net;\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { DataFormat, DEFAULT_RETURN_FORMAT, Web3NetAPI } from 'web3-types';\n\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\n\nexport class Net extends Web3Context<Web3NetAPI> {\n\t/**\n\t * Gets the current network ID\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A Promise of the network ID.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getId();\n\t * > 1\n\t * ```\n\t */\n\tpublic async getId<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getId(this, returnFormat);\n\t}\n\n\t/**\n\t * Get the number of peers connected to.\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A promise of the number of the peers connected to.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getPeerCount();\n\t * > 0\n\t * ```\n\t */\n\tpublic async getPeerCount<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getPeerCount(this, returnFormat);\n\t}\n\n\t/**\n\t * Check if the node is listening for peers\n\t *\n\t * @returns A promise of a boolean if the node is listening to peers\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.isListening();\n\t * > true\n\t * ```\n\t */\n\tpublic async isListening() {\n\t\treturn rpcMethodsWrappers.isListening(this);\n\t}\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format } from 'web3-utils';\nimport { Web3Context } from 'web3-core';\nimport { DataFormat, Web3NetAPI } from 'web3-types';\nimport { netRpcMethods } from 'web3-rpc-methods';\n\nexport async function getId<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3NetAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await netRpcMethods.getId(web3Context.requestManager);\n\n\treturn format({ format: 'uint' }, response as unknown as number, returnFormat);\n}\n\nexport async function getPeerCount<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3NetAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await netRpcMethods.getPeerCount(web3Context.requestManager);\n\n\t// Data returned is number in hex format\n\treturn format({ format: 'uint' }, response as unknown as number, returnFormat);\n}\n\nexport const isListening = async (web3Context: Web3Context<Web3NetAPI>) =>\n\tnetRpcMethods.isListening(web3Context.requestManager);\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport fetch from 'cross-fetch';\nimport {\n\tEthExecutionAPI,\n\tJsonRpcResponseWithResult,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APIReturnType,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n\tWeb3ProviderStatus,\n} from 'web3-types';\nimport { InvalidClientError, MethodNotImplementedError, ResponseError } from 'web3-errors';\nimport { HttpProviderOptions } from './types.js';\n\nexport { HttpProviderOptions } from './types.js';\n\nexport default class HttpProvider<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends Web3BaseProvider<API> {\n\tprivate readonly clientUrl: string;\n\tprivate readonly httpProviderOptions: HttpProviderOptions | undefined;\n\n\tpublic constructor(clientUrl: string, httpProviderOptions?: HttpProviderOptions) {\n\t\tsuper();\n\t\tif (!HttpProvider.validateClientUrl(clientUrl)) throw new InvalidClientError(clientUrl);\n\t\tthis.clientUrl = clientUrl;\n\t\tthis.httpProviderOptions = httpProviderOptions;\n\t}\n\n\tprivate static validateClientUrl(clientUrl: string): boolean {\n\t\treturn typeof clientUrl === 'string' ? /^http(s)?:\\/\\//i.test(clientUrl) : false;\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic getStatus(): Web3ProviderStatus {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic supportsSubscriptions() {\n\t\treturn false;\n\t}\n\n\tpublic async request<\n\t\tMethod extends Web3APIMethod<API>,\n\t\tResultType = Web3APIReturnType<API, Method>,\n\t>(\n\t\tpayload: Web3APIPayload<API, Method>,\n\t\trequestOptions?: RequestInit,\n\t): Promise<JsonRpcResponseWithResult<ResultType>> {\n\t\tconst providerOptionsCombined = {\n\t\t\t...this.httpProviderOptions?.providerOptions,\n\t\t\t...requestOptions,\n\t\t};\n\t\tconst response = await fetch(this.clientUrl, {\n\t\t\t...providerOptionsCombined,\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t...providerOptionsCombined.headers,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(payload),\n\t\t});\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tif (!response.ok) throw new ResponseError(await response.json());\n\n\t\treturn (await response.json()) as JsonRpcResponseWithResult<ResultType>;\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic on() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic removeListener() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic once() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic removeAllListeners() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic connect() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic disconnect() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic reset() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n\n\t/* eslint-disable class-methods-use-this */\n\tpublic reconnect() {\n\t\tthrow new MethodNotImplementedError();\n\t}\n}\n\nexport { HttpProvider };\n","// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  var global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    (typeof global !== 'undefined' && global);\n\n  var support = {\n    searchParams: 'URLSearchParams' in global,\n    iterable: 'Symbol' in global && 'iterator' in Symbol,\n    blob:\n      'FileReader' in global &&\n      'Blob' in global &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in global,\n    arrayBuffer: 'ArrayBuffer' in global\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          var isConsumed = consumed(this);\n          if (isConsumed) {\n            return isConsumed\n          }\n          if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n            return Promise.resolve(\n              this._bodyArrayBuffer.buffer.slice(\n                this._bodyArrayBuffer.byteOffset,\n                this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n              )\n            )\n          } else {\n            return Promise.resolve(this._bodyArrayBuffer)\n          }\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          headers.append(key, value);\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = global.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && global.location.href ? global.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer &&\n          request.headers.get('Content-Type') &&\n          request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!global.fetch) {\n    global.fetch = fetch;\n    global.Headers = Headers;\n    global.Request = Request;\n    global.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ClientRequestArgs } from 'http';\nimport WebSocket, { ClientOptions, CloseEvent } from 'isomorphic-ws';\nimport {\n\tEthExecutionAPI,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APISpec,\n\tWeb3ProviderStatus,\n} from 'web3-types';\nimport { isNullish, ReconnectOptions, SocketProvider } from 'web3-utils';\nimport { ConnectionNotOpenError } from 'web3-errors';\n\nexport { ClientRequestArgs } from 'http';\n\nexport { ClientOptions } from 'isomorphic-ws';\n\n/**\n * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.\n *\n * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{\n * \t\t\theaders: {\n * \t\t\t\t// to provide the API key if the Node requires the key to be inside the `headers` for example:\n * \t\t\t\t'x-api-key': '<Api key>',\n * \t\t\t},\n * \t\t},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n *\n * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.\n *  * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n */\nexport default class WebSocketProvider<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends SocketProvider<WebSocket.MessageEvent, WebSocket.CloseEvent, WebSocket.ErrorEvent, API> {\n\tprotected readonly _socketOptions?: ClientOptions | ClientRequestArgs;\n\n\tprotected _socketConnection?: WebSocket;\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _validateProviderPath(providerUrl: string): boolean {\n\t\treturn typeof providerUrl === 'string' ? /^ws(s)?:\\/\\//i.test(providerUrl) : false;\n\t}\n\n\t/**\n\t * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.\n\t * @param socketPath - The path to the Web Socket.\n\t * @param socketOptions - The options for the Web Socket client.\n\t * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n\t */\n\t// this constructor is to specify the type for `socketOptions` for a better intellisense.\n\t// eslint-disable-next-line no-useless-constructor\n\tpublic constructor(\n\t\tsocketPath: string,\n\t\tsocketOptions?: ClientOptions | ClientRequestArgs,\n\t\treconnectOptions?: Partial<ReconnectOptions>,\n\t) {\n\t\tsuper(socketPath, socketOptions, reconnectOptions);\n\t}\n\n\tpublic getStatus(): Web3ProviderStatus {\n\t\tif (this._socketConnection && !isNullish(this._socketConnection)) {\n\t\t\tswitch (this._socketConnection.readyState) {\n\t\t\t\tcase this._socketConnection.CONNECTING: {\n\t\t\t\t\treturn 'connecting';\n\t\t\t\t}\n\t\t\t\tcase this._socketConnection.OPEN: {\n\t\t\t\t\treturn 'connected';\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\treturn 'disconnected';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 'disconnected';\n\t}\n\n\tprotected _openSocketConnection() {\n\t\tthis._socketConnection = new WebSocket(\n\t\t\tthis._socketPath,\n\t\t\tundefined,\n\t\t\tthis._socketOptions && Object.keys(this._socketOptions).length === 0\n\t\t\t\t? undefined\n\t\t\t\t: this._socketOptions,\n\t\t);\n\t}\n\n\tprotected _closeSocketConnection(code?: number, data?: string) {\n\t\tthis._socketConnection?.close(code, data);\n\t}\n\n\tprotected _sendToSocket<Method extends Web3APIMethod<API>>(\n\t\tpayload: Web3APIPayload<API, Method>,\n\t): void {\n\t\tif (this.getStatus() === 'disconnected') {\n\t\t\tthrow new ConnectionNotOpenError();\n\t\t}\n\t\tthis._socketConnection?.send(JSON.stringify(payload));\n\t}\n\n\tprotected _parseResponses(event: WebSocket.MessageEvent) {\n\t\treturn this.chunkResponseParser.parseResponse(event.data as string);\n\t}\n\n\tprotected _addSocketListeners(): void {\n\t\tthis._socketConnection?.addEventListener('open', this._onOpenHandler);\n\t\tthis._socketConnection?.addEventListener('message', this._onMessageHandler);\n\t\tthis._socketConnection?.addEventListener('close', e => this._onCloseHandler(e));\n\t\tthis._socketConnection?.addEventListener('error', this._onErrorHandler);\n\t}\n\n\tprotected _removeSocketListeners(): void {\n\t\tthis._socketConnection?.removeEventListener('message', this._onMessageHandler);\n\t\tthis._socketConnection?.removeEventListener('open', this._onOpenHandler);\n\t\tthis._socketConnection?.removeEventListener('close', this._onCloseHandler);\n\t\t// note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection\n\t}\n\n\tprotected _onCloseEvent(event: CloseEvent): void {\n\t\tif (\n\t\t\tthis._reconnectOptions.autoReconnect &&\n\t\t\t(![1000, 1001].includes(event.code) || !event.wasClean)\n\t\t) {\n\t\t\tthis._reconnect();\n\t\t\treturn;\n\t\t}\n\t\tthis._clearQueues(event);\n\t\tthis._removeSocketListeners();\n\t\tthis._onDisconnect(event.code, event.reason);\n\t\t// disconnect was successful and can safely remove error listener\n\t\tthis._socketConnection?.removeEventListener('error', this._onErrorHandler);\n\t}\n}\n\nexport { WebSocketProvider };\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport {\n\tAddress,\n\tBlockNumberOrTag,\n\tFilter,\n\tHexString32Bytes,\n\tHexString8Bytes,\n\tHexStringBytes,\n\tTransactionCallAPI,\n\tTransactionWithSenderAPI,\n\tUint,\n\tUint256,\n\tWeb3EthExecutionAPI,\n} from 'web3-types';\nimport { Eip712TypedData } from 'web3-types/src/eth_types';\nimport { validator } from 'web3-validator';\n\nexport async function getProtocolVersion(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_protocolVersion',\n\t\tparams: [],\n\t});\n}\n\nexport async function getSyncing(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_syncing',\n\t\tparams: [],\n\t});\n}\n\nexport async function getCoinbase(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_coinbase',\n\t\tparams: [],\n\t});\n}\n\nexport async function getMining(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_mining',\n\t\tparams: [],\n\t});\n}\n\nexport async function getHashRate(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_hashrate',\n\t\tparams: [],\n\t});\n}\n\nexport async function getGasPrice(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_gasPrice',\n\t\tparams: [],\n\t});\n}\n\nexport async function getAccounts(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_accounts',\n\t\tparams: [],\n\t});\n}\n\nexport async function getBlockNumber(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_blockNumber',\n\t\tparams: [],\n\t});\n}\n\nexport async function getBalance(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getBalance',\n\t\tparams: [address, blockNumber],\n\t});\n}\n\nexport async function getStorageAt(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\tstorageSlot: Uint256,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['address', 'hex', 'blockNumberOrTag'], [address, storageSlot, blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getStorageAt',\n\t\tparams: [address, storageSlot, blockNumber],\n\t});\n}\n\nexport async function getTransactionCount(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getTransactionCount',\n\t\tparams: [address, blockNumber],\n\t});\n}\n\nexport async function getBlockTransactionCountByHash(\n\trequestManager: Web3RequestManager,\n\tblockHash: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes32'], [blockHash]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getBlockTransactionCountByHash',\n\t\tparams: [blockHash],\n\t});\n}\n\nexport async function getBlockTransactionCountByNumber(\n\trequestManager: Web3RequestManager,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['blockNumberOrTag'], [blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getBlockTransactionCountByNumber',\n\t\tparams: [blockNumber],\n\t});\n}\n\nexport async function getUncleCountByBlockHash(\n\trequestManager: Web3RequestManager,\n\tblockHash: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes32'], [blockHash]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getUncleCountByBlockHash',\n\t\tparams: [blockHash],\n\t});\n}\n\nexport async function getUncleCountByBlockNumber(\n\trequestManager: Web3RequestManager,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['blockNumberOrTag'], [blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getUncleCountByBlockNumber',\n\t\tparams: [blockNumber],\n\t});\n}\n\nexport async function getCode(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['address', 'blockNumberOrTag'], [address, blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getCode',\n\t\tparams: [address, blockNumber],\n\t});\n}\n\nexport async function sign(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\tmessage: HexStringBytes,\n) {\n\tvalidator.validate(['address', 'hex'], [address, message]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_sign',\n\t\tparams: [address, message],\n\t});\n}\n\n// TODO - Validation should be:\n// isTransactionWithSender(transaction)\n// ? validateTransactionWithSender(transaction)\n// : validateTransactionWithSender(transaction, true) with true being a isPartial flag\nexport async function signTransaction(\n\trequestManager: Web3RequestManager,\n\ttransaction: TransactionWithSenderAPI | Partial<TransactionWithSenderAPI>,\n) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_signTransaction',\n\t\tparams: [transaction],\n\t});\n}\n\n// TODO - Validation should be:\n// isTransactionWithSender(transaction)\n// ? validateTransactionWithSender(transaction)\n// : validateTransactionWithSender(transaction, true) with true being a isPartial flag\nexport async function sendTransaction(\n\trequestManager: Web3RequestManager,\n\ttransaction: TransactionWithSenderAPI | Partial<TransactionWithSenderAPI>,\n) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_sendTransaction',\n\t\tparams: [transaction],\n\t});\n}\n\nexport async function sendRawTransaction(\n\trequestManager: Web3RequestManager,\n\ttransaction: HexStringBytes,\n) {\n\tvalidator.validate(['hex'], [transaction]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_sendRawTransaction',\n\t\tparams: [transaction],\n\t});\n}\n\n// TODO - validate transaction\nexport async function call(\n\trequestManager: Web3RequestManager,\n\ttransaction: TransactionCallAPI,\n\tblockNumber: BlockNumberOrTag,\n) {\n\t// validateTransactionCall(transaction);\n\tvalidator.validate(['blockNumberOrTag'], [blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_call',\n\t\tparams: [transaction, blockNumber],\n\t});\n}\n\n// TODO Not sure how to best validate Partial<TransactionWithSender>\nexport async function estimateGas(\n\trequestManager: Web3RequestManager,\n\ttransaction: Partial<TransactionWithSenderAPI>,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['blockNumberOrTag'], [blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_estimateGas',\n\t\tparams: [transaction, blockNumber],\n\t});\n}\n\nexport async function getBlockByHash(\n\trequestManager: Web3RequestManager,\n\tblockHash: HexString32Bytes,\n\thydrated: boolean,\n) {\n\tvalidator.validate(['bytes32', 'bool'], [blockHash, hydrated]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getBlockByHash',\n\t\tparams: [blockHash, hydrated],\n\t});\n}\n\nexport async function getBlockByNumber(\n\trequestManager: Web3RequestManager,\n\tblockNumber: BlockNumberOrTag,\n\thydrated: boolean,\n) {\n\tvalidator.validate(['blockNumberOrTag', 'bool'], [blockNumber, hydrated]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getBlockByNumber',\n\t\tparams: [blockNumber, hydrated],\n\t});\n}\n\nexport async function getTransactionByHash(\n\trequestManager: Web3RequestManager,\n\ttransactionHash: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes32'], [transactionHash]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getTransactionByHash',\n\t\tparams: [transactionHash],\n\t});\n}\n\nexport async function getTransactionByBlockHashAndIndex(\n\trequestManager: Web3RequestManager,\n\tblockHash: HexString32Bytes,\n\ttransactionIndex: Uint,\n) {\n\tvalidator.validate(['bytes32', 'hex'], [blockHash, transactionIndex]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getTransactionByBlockHashAndIndex',\n\t\tparams: [blockHash, transactionIndex],\n\t});\n}\n\nexport async function getTransactionByBlockNumberAndIndex(\n\trequestManager: Web3RequestManager,\n\tblockNumber: BlockNumberOrTag,\n\ttransactionIndex: Uint,\n) {\n\tvalidator.validate(['blockNumberOrTag', 'hex'], [blockNumber, transactionIndex]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getTransactionByBlockNumberAndIndex',\n\t\tparams: [blockNumber, transactionIndex],\n\t});\n}\n\nexport async function getTransactionReceipt(\n\trequestManager: Web3RequestManager,\n\ttransactionHash: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes32'], [transactionHash]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getTransactionReceipt',\n\t\tparams: [transactionHash],\n\t});\n}\n\nexport async function getUncleByBlockHashAndIndex(\n\trequestManager: Web3RequestManager,\n\tblockHash: HexString32Bytes,\n\tuncleIndex: Uint,\n) {\n\tvalidator.validate(['bytes32', 'hex'], [blockHash, uncleIndex]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getUncleByBlockHashAndIndex',\n\t\tparams: [blockHash, uncleIndex],\n\t});\n}\n\nexport async function getUncleByBlockNumberAndIndex(\n\trequestManager: Web3RequestManager,\n\tblockNumber: BlockNumberOrTag,\n\tuncleIndex: Uint,\n) {\n\tvalidator.validate(['blockNumberOrTag', 'hex'], [blockNumber, uncleIndex]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getUncleByBlockNumberAndIndex',\n\t\tparams: [blockNumber, uncleIndex],\n\t});\n}\n\nexport async function getCompilers(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_getCompilers',\n\t\tparams: [],\n\t});\n}\n\nexport async function compileSolidity(requestManager: Web3RequestManager, code: string) {\n\tvalidator.validate(['string'], [code]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_compileSolidity',\n\t\tparams: [code],\n\t});\n}\n\nexport async function compileLLL(requestManager: Web3RequestManager, code: string) {\n\tvalidator.validate(['string'], [code]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_compileLLL',\n\t\tparams: [code],\n\t});\n}\n\nexport async function compileSerpent(requestManager: Web3RequestManager, code: string) {\n\tvalidator.validate(['string'], [code]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_compileSerpent',\n\t\tparams: [code],\n\t});\n}\n\nexport async function newFilter(requestManager: Web3RequestManager, filter: Filter) {\n\tvalidator.validate(['filter'], [filter]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_newFilter',\n\t\tparams: [filter],\n\t});\n}\n\nexport async function newBlockFilter(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_newBlockFilter',\n\t\tparams: [],\n\t});\n}\n\nexport async function newPendingTransactionFilter(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_newPendingTransactionFilter',\n\t\tparams: [],\n\t});\n}\n\nexport async function uninstallFilter(requestManager: Web3RequestManager, filterIdentifier: Uint) {\n\tvalidator.validate(['hex'], [filterIdentifier]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_uninstallFilter',\n\t\tparams: [filterIdentifier],\n\t});\n}\n\nexport async function getFilterChanges(requestManager: Web3RequestManager, filterIdentifier: Uint) {\n\tvalidator.validate(['hex'], [filterIdentifier]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getFilterChanges',\n\t\tparams: [filterIdentifier],\n\t});\n}\n\nexport async function getFilterLogs(requestManager: Web3RequestManager, filterIdentifier: Uint) {\n\tvalidator.validate(['hex'], [filterIdentifier]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getFilterLogs',\n\t\tparams: [filterIdentifier],\n\t});\n}\n\nexport async function getLogs(requestManager: Web3RequestManager, filter: Filter) {\n\tvalidator.validate(['filter'], [filter]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getLogs',\n\t\tparams: [filter],\n\t});\n}\n\nexport async function getWork(requestManager: Web3RequestManager) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_getWork',\n\t\tparams: [],\n\t});\n}\n\nexport async function submitWork(\n\trequestManager: Web3RequestManager,\n\tnonce: HexString8Bytes,\n\thash: HexString32Bytes,\n\tdigest: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes8', 'bytes32', 'bytes32'], [nonce, hash, digest]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_submitWork',\n\t\tparams: [nonce, hash, digest],\n\t});\n}\n\nexport async function submitHashrate(\n\trequestManager: Web3RequestManager,\n\thashRate: HexString32Bytes,\n\tid: HexString32Bytes,\n) {\n\tvalidator.validate(['bytes32', 'bytes32'], [hashRate, id]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_submitHashrate',\n\t\tparams: [hashRate, id],\n\t});\n}\n\nexport async function getFeeHistory(\n\trequestManager: Web3RequestManager,\n\tblockCount: Uint,\n\tnewestBlock: BlockNumberOrTag,\n\trewardPercentiles: number[],\n) {\n\tvalidator.validate(['hex', 'blockNumberOrTag'], [blockCount, newestBlock]);\n\n\tfor (const rewardPercentile of rewardPercentiles) {\n\t\tvalidator.validate(['number'], [rewardPercentile]);\n\t}\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_feeHistory',\n\t\tparams: [blockCount, newestBlock, rewardPercentiles],\n\t});\n}\n\nexport async function getPendingTransactions(\n\trequestManager: Web3RequestManager<Web3EthExecutionAPI>,\n) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_pendingTransactions',\n\t\tparams: [],\n\t});\n}\n\nexport async function requestAccounts(requestManager: Web3RequestManager<Web3EthExecutionAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_requestAccounts',\n\t\tparams: [],\n\t});\n}\n\nexport async function getChainId(requestManager: Web3RequestManager<Web3EthExecutionAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'eth_chainId',\n\t\tparams: [],\n\t});\n}\n\nexport async function getProof(\n\trequestManager: Web3RequestManager<Web3EthExecutionAPI>,\n\taddress: Address,\n\tstorageKeys: HexString32Bytes[],\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(\n\t\t['address', 'bytes32[]', 'blockNumberOrTag'],\n\t\t[address, storageKeys, blockNumber],\n\t);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_getProof',\n\t\tparams: [address, storageKeys, blockNumber],\n\t});\n}\n\nexport async function getNodeInfo(requestManager: Web3RequestManager<Web3EthExecutionAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'web3_clientVersion',\n\t\tparams: [],\n\t});\n}\n\nexport async function createAccessList(\n\trequestManager: Web3RequestManager,\n\ttransaction: TransactionWithSenderAPI | Partial<TransactionWithSenderAPI>,\n\tblockNumber: BlockNumberOrTag,\n) {\n\tvalidator.validate(['blockNumberOrTag'], [blockNumber]);\n\n\treturn requestManager.send({\n\t\tmethod: 'eth_createAccessList',\n\t\tparams: [transaction, blockNumber],\n\t});\n}\n\nexport async function signTypedData(\n\trequestManager: Web3RequestManager,\n\taddress: Address,\n\ttypedData: Eip712TypedData,\n\tuseLegacy = false,\n): Promise<string> {\n\t// TODO Add validation for typedData\n\tvalidator.validate(['address'], [address]);\n\n\treturn requestManager.send({\n\t\tmethod: `eth_signTypedData${useLegacy ? '' : '_v4'}`,\n\t\tparams: [address, typedData],\n\t});\n}\n","﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport * as ethRpcMethods from './eth_rpc_methods.js';\nimport * as netRpcMethods from './net_rpc_methods.js';\nimport * as personalRpcMethods from './personal_rpc_methods.js';\n\nexport { ethRpcMethods, netRpcMethods, personalRpcMethods };\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Web3NetAPI } from 'web3-types';\n\nexport async function getId(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_version',\n\t\tparams: [],\n\t});\n}\n\nexport async function getPeerCount(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_peerCount',\n\t\tparams: [],\n\t});\n}\n\nexport async function isListening(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_listening',\n\t\tparams: [],\n\t});\n}\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Address, EthPersonalAPI, HexString, Transaction } from 'web3-types';\n\nexport const getAccounts = async (requestManager: Web3RequestManager<EthPersonalAPI>) =>\n\trequestManager.send({\n\t\tmethod: 'personal_listAccounts',\n\t\tparams: [],\n\t});\n\nexport const newAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tpassword: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_newAccount',\n\t\tparams: [password],\n\t});\n\nexport const unlockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n\tpassword: string,\n\tunlockDuration: number,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_unlockAccount',\n\t\tparams: [address, password, unlockDuration],\n\t});\n\nexport const lockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_lockAccount',\n\t\tparams: [address],\n\t});\n\nexport const importRawKey = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tkeyData: HexString,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_importRawKey',\n\t\tparams: [keyData, passphrase],\n\t});\n\nexport const sendTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_sendTransaction',\n\t\tparams: [tx, passphrase],\n\t});\n\nexport const signTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_signTransaction',\n\t\tparams: [tx, passphrase],\n\t});\n\nexport const sign = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tdata: HexString,\n\taddress: Address,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_sign',\n\t\tparams: [data, address, passphrase],\n\t});\n\nexport const ecRecover = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tsignedData: HexString,\n\tsignature: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_ecRecover',\n\t\tparams: [signedData, signature],\n\t});\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tdecodeLog,\n\tdecodeParameter,\n\tdecodeParameters,\n\tencodeEventSignature,\n\tencodeFunctionCall,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n} from 'web3-eth-abi';\n\n/**\n * The object for `web3.abi`\n */\nexport default {\n\tencodeEventSignature,\n\tencodeFunctionCall,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tdecodeParameter,\n\tdecodeParameters,\n\tdecodeLog,\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { EthExecutionAPI, Bytes, Transaction, KeyStore, ETH_DATA_FORMAT } from 'web3-types';\nimport { format } from 'web3-utils';\nimport { Web3Context } from 'web3-core';\nimport { prepareTransactionForSigning } from 'web3-eth';\nimport {\n\tcreate,\n\tdecrypt,\n\tencrypt,\n\thashMessage,\n\tprivateKeyToAccount,\n\trecover,\n\trecoverTransaction,\n\tsignTransaction,\n\tsign,\n\tWallet,\n} from 'web3-eth-accounts';\n\n/**\n * Initialize the accounts module for the given context.\n *\n * To avoid multiple package dependencies for `web3-eth-accounts` we are creating\n * this function in `web3` package. In future the actual `web3-eth-accounts` package\n * should be converted to context aware.\n */\nexport const initAccountsForContext = (context: Web3Context<EthExecutionAPI>) => {\n\tconst signTransactionWithContext = async (transaction: Transaction, privateKey: Bytes) => {\n\t\tconst tx = await prepareTransactionForSigning(transaction, context);\n\n\t\tconst privateKeyBytes = format({ format: 'bytes' }, privateKey, ETH_DATA_FORMAT);\n\n\t\treturn signTransaction(tx, privateKeyBytes);\n\t};\n\n\tconst privateKeyToAccountWithContext = (privateKey: Uint8Array | string) => {\n\t\tconst account = privateKeyToAccount(privateKey);\n\n\t\treturn {\n\t\t\t...account,\n\t\t\tsignTransaction: async (transaction: Transaction) =>\n\t\t\t\tsignTransactionWithContext(transaction, account.privateKey),\n\t\t};\n\t};\n\n\tconst decryptWithContext = async (\n\t\tkeystore: KeyStore | string,\n\t\tpassword: string,\n\t\toptions?: Record<string, unknown>,\n\t) => {\n\t\tconst account = await decrypt(keystore, password, (options?.nonStrict as boolean) ?? true);\n\n\t\treturn {\n\t\t\t...account,\n\t\t\tsignTransaction: async (transaction: Transaction) =>\n\t\t\t\tsignTransactionWithContext(transaction, account.privateKey),\n\t\t};\n\t};\n\n\tconst createWithContext = () => {\n\t\tconst account = create();\n\n\t\treturn {\n\t\t\t...account,\n\t\t\tsignTransaction: async (transaction: Transaction) =>\n\t\t\t\tsignTransactionWithContext(transaction, account.privateKey),\n\t\t};\n\t};\n\n\tconst wallet = new Wallet({\n\t\tcreate: createWithContext,\n\t\tprivateKeyToAccount: privateKeyToAccountWithContext,\n\t\tdecrypt: decryptWithContext,\n\t});\n\n\treturn {\n\t\tsignTransaction: signTransactionWithContext,\n\t\tcreate: createWithContext,\n\t\tprivateKeyToAccount: privateKeyToAccountWithContext,\n\t\tdecrypt: decryptWithContext,\n\t\trecoverTransaction,\n\t\thashMessage,\n\t\tsign,\n\t\trecover,\n\t\tencrypt,\n\t\twallet,\n\t};\n};\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport * from 'web3-eth';\n\nexport * as abi from 'web3-eth-abi';\nexport * as accounts from 'web3-eth-accounts';\nexport * as contract from 'web3-eth-contract';\nexport * as ens from 'web3-eth-ens';\nexport * as personal from 'web3-eth-personal';\nexport * as iban from 'web3-eth-iban';\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * This is the main (or 'umbrella') class of the web3.js library.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * > Web3.utils\n * > Web3.version\n * > Web3.givenProvider\n * > Web3.providers\n * > Web3.modules\n * ```\n *\n * # Web3.modules\n *\n * ```ts\n * Web3.modules\n * ```\n *\n * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.\n *\n * #### Returns\n *\n *  `Object` A list of module constructors:\n *\n *\n *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network\n *\n *\n *  + `Net` - `Constructor`: The Net module for interacting with network properties.\n *\n *\n *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).\n *\n * #### Example\n *\n * ```ts\n * Web3.modules\n * > {\n *   \tEth: Eth(provider),\n *   \tNet: Net(provider),\n *   \tPersonal: Personal(provider),\n *   }\n * ```\n *\n * See details: {@link Web3.modules}\n *\n * # Web3 Instance\n *\n * The Web3 class is an umbrella package to house all Ethereum related modules.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * // \"Web3.givenProvider\" will be set if in an Ethereum supported browser.\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * > web3.eth\n * > web3.utils\n * > web3.version\n * ```\n *\n * ### version\n *\n * Contains the current package version of the web3.js library.\n *\n * #### Returns\n * //todo enable when functionality added\n * // @see Web3.version\n *\n * ### utils\n *\n * Static accessible property of the Web3 class and property of the instance as well.\n *\n * ```ts\n * Web3.utils\n * web3.utils\n * ```\n *\n * Utility functions are also exposed on the `Web3` class object diretly.\n *\n * //todo enable when implemented\n * //See details: {@link Web3.utils}\n *\n * ### setProvider\n *\n * ```ts\n * web3.setProvider(myProvider)\n * web3.eth.setProvider(myProvider)\n * ...\n * ```\n *\n * Will change the provider for its module.\n *\n * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.\n *\n * #### Parameters\n *  `Object`  - `myProvider`: a valid provider.\n *\n * #### Returns\n * `Boolean`\n *\n * See details: {@link Web3.setProvider}\n *\n * #### Example: Local Geth Node\n * ```ts\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3('http://localhost:8545');\n * // or\n * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n *\n * // change provider\n * web3.setProvider('ws://localhost:8546');\n * // or\n * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));\n *\n * //todo add IPC provider\n * ```\n *\n * #### Example: Remote Geth Node\n *\n * ```ts\n * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3(\"https://eth-mainnet.alchemyapi.io/v2/your-api-key\");\n * ```\n *\n * ### providers\n *\n * ```ts\n * web3.providers\n * web3.eth.providers\n * ```\n * Contains the current available providers.\n *\n * #### Returns\n *  `Object` with the following providers:\n *\n *\n *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.\n *\n *\n *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.\n *\n *\n *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.\n *\n *\n * #### Example\n * ```ts\n * import Web3 from 'web3';\n * // use the given Provider or instantiate a new websocket provider\n * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');\n * // or\n * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));\n *\n * // Using the IPC provider in node.js\n * var web3 = new Web3(new Web3.providers.IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path\n * // on windows the path is: \"\\\\\\\\.\\\\pipe\\\\geth.ipc\"\n * // on linux the path is: \"/users/myuser/.ethereum/geth.ipc\"\n * ```\n * #### Configuration\n *\n * ```ts\n *\n * //===\n * //Http\n * //===\n *\n * import Web3HttpProvider, { HttpProviderOptions } from \"web3-providers-http\";\n *\n * let options: HttpProviderOptions = {\n * \tproviderOptions: {\n * \t\tkeepalive: true,\n * \t\tcredentials: \"omit\",\n * \t\theaders: {\n * \t\t\t\"Access-Control-Allow-Origin\": \"*\",\n * \t\t},\n * \t},\n * };\n *\n *\n * var provider = new Web3HttpProvider(\"http://localhost:8545\", options);\n * web3.setProvider(provider);\n *\n * //===\n * //WebSockets\n * //===\n * import Web3WsProvider, {\n * \tClientOptions,\n * \tClientRequestArgs,\n * \tReconnectOptions,\n * } from \"web3-providers-ws\";\n *\n *\n * let clientOptions: ClientOptions = {\n * \t// Useful for credentialed urls, e.g: ws://username:password@localhost:8546\n * \theaders: {\n * \t\tauthorization: \"Basic username:password\",\n * \t},\n * \tmaxPayload: 100000000,\n * };\n *\n * // Enable auto reconnection\n * let reconnectOptions: ReconnectOptions = {\n * \tautoReconnect: true,\n * \tdelay: 5000, // ms\n * \tmaxAttempts: 5,\n * };\n *\n * //clientOptions and reconnectOptions are optional\n * //clientOptions: ClientOptions | ClientRequestArgs\n * let ws = new Web3WsProvider(\n * \"ws://localhost:8546\",\n * clientOptions,\n * reconnectOptions\n * );\n * web3.setProvider(ws);\n *\n * ```\n * More information for the Http and Websocket provider modules can be found here:\n *\n *\n * - {@link HttpProvider}\n *\n *\n * - {@link WebSocketProvider}\n *\n * See details: {@link Web3.providers}\n *\n *\n * ### givenProvider\n *\n * ```ts\n * web3.givenProvider\n * web3.eth.givenProvider\n * ...\n * ```\n * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.\n * Will return the given provider by the (browser) environment, otherwise `undefined`.\n *\n * #### Returns\n * `Object` -  The given provider set or `undefined`.\n *\n * See details: {@link Web3.givenProvider}\n *\n * ### currentProvider\n *\n * ```ts\n * web3.currentProvider\n * web3.eth.currentProvider\n * ...\n * ```\n * Will return the current provider, otherwise `undefined`.\n *\n * #### Returns\n * `Object`: The current provider, otherwise `undefined`.\n *\n * See details: {@link Web3.currentProvider}\n *\n * ### BatchRequest\n *\n * ```ts\n * new web3.BatchRequest()\n * new web3.BatchRequest()\n * ...\n * ```\n * Class to create and execute batch requests.\n *\n *  #### Parameters\n *  none\n *\n * #### Returns\n * `Object`: With the following methods:\n *\n * + `add(request)`: To add a request object to the batch call.\n *\n * + `execute()` : To execute the batch request.\n *\n * #### Example\n * ```ts\n * let request1: JsonRpcOptionalRequest = {\n * \tid: 10,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0xdc6bad79dab7ea733098f66f6c6f9dd008da3258\", 'latest'],\n * };\n * let request2: JsonRpcOptionalRequest = {\n * \tid: 11,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0x962f9a9c2a6c092474d24def35eccb3d9363265e\", 'latest'],\n * };\n *\n * const batch = new web3.BatchRequest();\n *\n *  batch.add(request1);\n *  batch.add(request2);\n * // add returns a deferred promise which can be used to run specific code after completion of each respective request.\n * //const request2Promise = batch.add(request2);\n *\n * const response = await batch.execute();\n * ```\n * See details: {@link Web3.BatchRequest}\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\n\nimport Web3 from './web3.js';\n\nexport * from './types.js';\nexport default Web3;\n\n/**\n * Named exports for all objects which are the default-exported-object in their packages\n */\nexport { Web3 };\nexport { Web3Context, Web3PluginBase, Web3EthPluginBase } from 'web3-core';\nexport { Web3Eth } from 'web3-eth';\nexport { Contract } from 'web3-eth-contract';\nexport { Iban } from 'web3-eth-iban';\nexport { Personal } from 'web3-eth-personal';\nexport { Net } from 'web3-net';\nexport { HttpProvider } from 'web3-providers-http';\nexport { WebSocketProvider } from 'web3-providers-ws';\nexport { Web3Validator } from 'web3-validator';\n\n/**\n * Export all packages grouped by name spaces\n */\nexport * as core from 'web3-core';\nexport * as errors from 'web3-errors';\nexport * as eth from './eth.exports.js';\nexport * as net from 'web3-net';\nexport * as providers from './providers.exports.js';\nexport * as rpcMethods from 'web3-rpc-methods';\nexport * as types from 'web3-types';\nexport * as utils from 'web3-utils';\nexport * as validator from 'web3-validator';\n\n/**\n * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).\n * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.\n * And the same for `web3-errors`. Because this package contains error classes and constants.\n */\nexport * from 'web3-errors';\nexport * from 'web3-types';\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport { Eip1193Provider, SocketProvider } from 'web3-utils';\n\nexport * as http from 'web3-providers-http';\nexport * as ws from 'web3-providers-ws';\n","/* eslint-disable header/header */ export const Web3PkgInfo = { version: '4.2.0' };\n","/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3Context,\n\tWeb3ContextInitOptions,\n\tWeb3ContextObject,\n\tWeb3SubscriptionConstructor,\n\tisSupportedProvider,\n} from 'web3-core';\nimport { Web3Eth, RegisteredSubscription, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish } from 'web3-utils';\nimport {\n\tAddress,\n\tContractAbi,\n\tContractInitOptions,\n\tEthExecutionAPI,\n\tSupportedProviders,\n} from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3EthInterface } from './types.js';\nimport { Web3PkgInfo } from './version.js';\n\nexport class Web3<\n\tCustomRegisteredSubscription extends {\n\t\t[key: string]: Web3SubscriptionConstructor<EthExecutionAPI>;\n\t} = RegisteredSubscription,\n> extends Web3Context<EthExecutionAPI, CustomRegisteredSubscription & RegisteredSubscription> {\n\tpublic static version = Web3PkgInfo.version;\n\tpublic static utils = utils;\n\tpublic static modules = {\n\t\tWeb3Eth,\n\t\tIban,\n\t\tNet,\n\t\tENS,\n\t\tPersonal,\n\t};\n\n\tpublic utils: typeof utils;\n\n\tpublic eth: Web3EthInterface;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<EthExecutionAPI>\n\t\t\t| Web3ContextInitOptions<EthExecutionAPI, CustomRegisteredSubscription>,\n\t) {\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n\t\t\t(typeof providerOrContext !== 'string' &&\n\t\t\t\t!isSupportedProvider(providerOrContext as SupportedProviders<EthExecutionAPI>) &&\n\t\t\t\t!(providerOrContext as Web3ContextInitOptions).provider)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!',\n\t\t\t);\n\t\t}\n\n\t\tlet contextInitOptions: Web3ContextInitOptions<EthExecutionAPI> = {};\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders)\n\t\t) {\n\t\t\tcontextInitOptions.provider = providerOrContext as\n\t\t\t\t| undefined\n\t\t\t\t| string\n\t\t\t\t| SupportedProviders;\n\t\t} else if (providerOrContext) {\n\t\t\tcontextInitOptions = providerOrContext as Web3ContextInitOptions;\n\t\t} else {\n\t\t\tcontextInitOptions = {};\n\t\t}\n\n\t\tcontextInitOptions.registeredSubscriptions = {\n\t\t\t// all the Eth standard subscriptions\n\t\t\t...registeredSubscriptions,\n\t\t\t// overridden and combined with any custom subscriptions\n\t\t\t...(contextInitOptions.registeredSubscriptions ?? {}),\n\t\t} as CustomRegisteredSubscription;\n\n\t\tsuper(contextInitOptions);\n\t\tconst accounts = initAccountsForContext(this);\n\n\t\t// Init protected properties\n\t\tthis._wallet = accounts.wallet;\n\t\tthis._accountProvider = accounts;\n\n\t\tthis.utils = utils;\n\n\t\t// Have to use local alias to initiate contract context\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tclass ContractBuilder<Abi extends ContractAbi> extends Contract<Abi> {\n\t\t\tpublic constructor(jsonInterface: Abi);\n\t\t\tpublic constructor(jsonInterface: Abi, address: Address);\n\t\t\tpublic constructor(jsonInterface: Abi, options: ContractInitOptions);\n\t\t\tpublic constructor(jsonInterface: Abi, address: Address, options: ContractInitOptions);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptions?: Address | ContractInitOptions,\n\t\t\t\toptions?: ContractInitOptions,\n\t\t\t) {\n\t\t\t\tif (typeof addressOrOptions === 'object' && typeof options === 'object') {\n\t\t\t\t\tthrow new InvalidMethodParamsError(\n\t\t\t\t\t\t'Should not provide options at both 2nd and 3rd parameters',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (isNullish(addressOrOptions)) {\n\t\t\t\t\tsuper(jsonInterface, options, self.getContextObject() as Web3ContextObject);\n\t\t\t\t} else if (typeof addressOrOptions === 'object') {\n\t\t\t\t\tsuper(\n\t\t\t\t\t\tjsonInterface,\n\t\t\t\t\t\taddressOrOptions,\n\t\t\t\t\t\tself.getContextObject() as Web3ContextObject,\n\t\t\t\t\t);\n\t\t\t\t} else if (typeof addressOrOptions === 'string') {\n\t\t\t\t\tsuper(\n\t\t\t\t\t\tjsonInterface,\n\t\t\t\t\t\taddressOrOptions,\n\t\t\t\t\t\toptions ?? {},\n\t\t\t\t\t\tself.getContextObject() as Web3ContextObject,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InvalidMethodParamsError();\n\t\t\t\t}\n\n\t\t\t\tsuper.subscribeToContextEvents(self);\n\t\t\t}\n\t\t}\n\n\t\tconst eth = self.use(Web3Eth);\n\n\t\t// Eth Module\n\t\tthis.eth = Object.assign(eth, {\n\t\t\t// ENS module\n\t\t\tens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n\n\t\t\t// Iban helpers\n\t\t\tIban,\n\n\t\t\tnet: self.use(Net),\n\t\t\tpersonal: self.use(Personal),\n\n\t\t\t// Contract helper and module\n\t\t\tContract: ContractBuilder,\n\n\t\t\t// ABI Helpers\n\t\t\tabi,\n\n\t\t\t// Accounts helper\n\t\t\taccounts,\n\t\t});\n\t}\n}\nexport default Web3;\n","'use strict';\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\n// created 2023-07-20T07:23:23.727Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 4aab629147f0d7e715ffac2cd3e2fcd0e6922ee059b78d717c265540d3bf5768\nvar r$1 = read_compressed_payload('');\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-07-20T07:23:23.727Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar r = read_compressed_payload('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');\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nconst SHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\nconst EXCLUSIONS = new Set(read_sorted(r));\r\nconst DECOMP = new Map();\r\nconst RECOMP = new Map();\r\nfor (let [cp, cps] of read_mapped(r)) {\r\n\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\tlet [a, b] = cps;\r\n\t\tlet bucket = RECOMP.get(a);\r\n\t\tif (!bucket) {\r\n\t\t\tbucket = new Map();\r\n\t\t\tRECOMP.set(a, bucket);\r\n\t\t}\r\n\t\tbucket.set(b, cp);\r\n\t}\r\n\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n}\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\n//console.time('init');\r\n\r\nconst STOP = 0x2E;\r\nconst FE0F = 0xFE0F;\r\nconst STOP_CH = '.';\r\nconst UNIQUE_PH = 1;\r\nconst HYPHEN = 0x2D;\r\n\r\nfunction read_set() {\r\n\treturn new Set(read_sorted(r$1));\r\n}\r\nconst MAPPED = new Map(read_mapped(r$1)); \r\nconst IGNORED = read_set(); // ignored characters are not valid, so just read raw codepoints\r\n/*\r\n// direct include from payload is smaller that the decompression code\r\nconst FENCED = new Map(read_array_while(() => {\r\n\tlet cp = r();\r\n\tif (cp) return [cp, read_str(r())];\r\n}));\r\n*/\r\n// 20230217: we still need all CM for proper error formatting\r\n// but norm only needs NSM subset that are potentially-valid\r\nconst CM = read_set();\r\nconst NSM = new Set(read_sorted(r$1).map(function(i) { return this[i]; }, [...CM]));\r\n/*\r\nconst CM_SORTED = read_sorted(r);\r\nconst NSM = new Set(read_sorted(r).map(i => CM_SORTED[i]));\r\nconst CM = new Set(CM_SORTED);\r\n*/\r\nconst ESCAPE = read_set(); // characters that should not be printed\r\nconst NFC_CHECK = read_set();\r\nconst CHUNKS = read_sorted_arrays(r$1);\r\nfunction read_chunked() {\r\n\t// deduplicated sets + uniques\r\n\treturn new Set([read_sorted(r$1).map(i => CHUNKS[i]), read_sorted(r$1)].flat(2));\r\n}\r\nconst UNRESTRICTED = r$1();\r\nconst GROUPS = read_array_while(i => {\r\n\t// minifier property mangling seems unsafe\r\n\t// so these are manually renamed to single chars\r\n\tlet N = read_array_while(r$1).map(x => x+0x60);\r\n\tif (N.length) {\r\n\t\tlet R = i >= UNRESTRICTED; // first arent restricted\r\n\t\tN[0] -= 32; // capitalize\r\n\t\tN = str_from_cps(N);\r\n\t\tif (R) N=`Restricted[${N}]`;\r\n\t\tlet P = read_chunked(); // primary\r\n\t\tlet Q = read_chunked(); // secondary\r\n\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t//let M = r()-1; // combining mark\r\n\t\tlet M = !r$1(); // not-whitelisted, check for NSM\r\n\t\t// code currently isn't needed\r\n\t\t/*if (M < 0) { // whitelisted\r\n\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\tlet i = r();\r\n\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t})];\r\n\t\t\t}));\r\n\t\t}*/\r\n\t\treturn {N, P, M, R, V: new Set(V)};\r\n\t}\r\n});\r\nconst WHOLE_VALID = read_set();\r\nconst WHOLE_MAP = new Map();\r\n// decode compressed wholes\r\n[...WHOLE_VALID, ...read_set()].sort((a, b) => a-b).map((cp, i, v) => {\r\n\tlet d = r$1(); \r\n\tlet w = v[i] = d ? v[i-d] : {V: [], M: new Map()};\r\n\tw.V.push(cp); // add to member set\r\n\tif (!WHOLE_VALID.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t}\r\n});\r\n// compute confusable-extent complements\r\nfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t// connect all groups that have each whole character\r\n\tlet recs = [];\r\n\tfor (let cp of V) {\r\n\t\tlet gs = GROUPS.filter(g => g.V.has(cp));\r\n\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\tif (!rec) {\r\n\t\t\trec = {G: new Set(), V: []};\r\n\t\t\trecs.push(rec);\r\n\t\t}\r\n\t\trec.V.push(cp);\r\n\t\tgs.forEach(g => rec.G.add(g));\r\n\t}\r\n\t// per character cache groups which are not a member of the extent\r\n\tlet union = recs.flatMap(({G}) => [...G]);\r\n\tfor (let {G, V} of recs) {\r\n\t\tlet complement = new Set(union.filter(g => !G.has(g)));\r\n\t\tfor (let cp of V) {\r\n\t\t\tM.set(cp, complement);\r\n\t\t}\r\n\t}\r\n}\r\nlet union = new Set(); // exists in 1+ groups\r\nlet multi = new Set(); // exists in 2+ groups\r\nfor (let g of GROUPS) {\r\n\tfor (let cp of g.V) {\r\n\t\t(union.has(cp) ? multi : union).add(cp);\r\n\t}\r\n}\r\n// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\nfor (let cp of union) {\r\n\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t}\r\n}\r\nconst VALID = new Set([...union, ...nfd(union)]); // possibly valid\r\n\r\n// decode emoji\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n// 20230719: emoji are now fully-expanded to avoid quirk logic \r\nconst EMOJI_LIST = read_trie(r$1).map(v => Emoji.from(v)).sort(compare_arrays);\r\nconst EMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\nfor (let cps of EMOJI_LIST) {\r\n\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t// example: beautified [A B] (eg. flag emoji) \r\n\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t//   after: error: both\r\n\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\tlet prev = [EMOJI_ROOT];\r\n\tfor (let cp of cps) {\r\n\t\tlet next = prev.map(node => {\r\n\t\t\tlet child = node.get(cp);\r\n\t\t\tif (!child) {\r\n\t\t\t\t// should this be object? \r\n\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\tchild = new Map();\r\n\t\t\t\tnode.set(cp, child);\r\n\t\t\t}\r\n\t\t\treturn child;\r\n\t\t});\r\n\t\tif (cp === FE0F) {\r\n\t\t\tprev.push(...next);\r\n\t\t} else {\r\n\t\t\tprev = next;\r\n\t\t}\r\n\t}\r\n\tfor (let x of prev) {\r\n\t\tx.V = cps;\r\n\t}\r\n}\r\n//console.timeEnd('init');\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('◌');\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`);\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\nfunction is_combining_mark(cp) {\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(process(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"‐\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// ξ => Ξ if not greek\r\n\t\tif (type !== 'Greek') { \r\n\t\t\tlet prev = 0;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet next = output.indexOf(0x3BE, prev);\r\n\t\t\t\tif (next < 0) break;\r\n\t\t\t\toutput[next] = 0x39E; \r\n\t\t\t\tprev = next + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\tlet norm;\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = process(input, nf, ef); // if we parse, we get [norm and mapped]\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} else {\r\n\t\t\t\tnorm = tokens.flat();\r\n\t\t\t\tcheck_leading_underscore(norm);\r\n\t\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji;\r\n\t\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t\t// only needed for ascii\r\n\t\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\t\tcheck_label_extension(norm);\r\n\t\t\t\t\t// cant have fenced\r\n\t\t\t\t\t// cant have cm\r\n\t\t\t\t\t// cant have wholes\r\n\t\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\t\ttype = 'ASCII';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 5. \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\t\tlet unique = [...new Set(chars)];\r\n\t\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\tinfo.output = norm;\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : [...set];\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaning groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => g.V.has(cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => g.V.has(cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => g.V.has(cp))) { \r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp));\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tlet {V, M} = g;\r\n\tfor (let cp of cps) {\r\n\t\tif (!V.has(cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.V].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc💩d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\nfunction process(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps);\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\t\t\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI, \r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten, \r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexports.ens_beautify = ens_beautify;\nexports.ens_emoji = ens_emoji;\nexports.ens_normalize = ens_normalize;\nexports.ens_normalize_fragment = ens_normalize_fragment;\nexports.ens_split = ens_split;\nexports.ens_tokenize = ens_tokenize;\nexports.is_combining_mark = is_combining_mark;\nexports.nfc = nfc;\nexports.nfd = nfd;\nexports.safe_str_from_cps = safe_str_from_cps;\nexports.should_escape = should_escape;\n","// src/regex.ts\nfunction execTyped(regex, string) {\n  const match = regex.exec(string);\n  return match?.groups;\n}\nvar bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\nvar integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nvar isTupleRegex = /^\\(.+?\\).*?$/;\n\nexport {\n  execTyped,\n  bytesRegex,\n  integerRegex,\n  isTupleRegex\n};\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nexport {\n  __publicField\n};\n","import {\n  bytesRegex,\n  execTyped,\n  integerRegex,\n  isTupleRegex\n} from \"./chunk-WP7KDV47.mjs\";\nimport {\n  __publicField\n} from \"./chunk-NHABU752.mjs\";\n\n// package.json\nvar name = \"abitype\";\nvar version = \"0.7.1\";\n\n// src/errors.ts\nvar BaseError = class extends Error {\n  constructor(shortMessage, args = {}) {\n    const details = args.cause instanceof BaseError ? args.cause.details : args.cause?.message ? args.cause.message : args.details;\n    const docsPath = args.cause instanceof BaseError ? args.cause.docsPath || args.docsPath : args.docsPath;\n    const message = [\n      shortMessage || \"An error occurred.\",\n      \"\",\n      ...args.metaMessages ? [...args.metaMessages, \"\"] : [],\n      ...docsPath ? [`Docs: https://abitype.dev${docsPath}`] : [],\n      ...details ? [`Details: ${details}`] : [],\n      `Version: ${name}@${version}`\n    ].join(\"\\n\");\n    super(message);\n    __publicField(this, \"details\");\n    __publicField(this, \"docsPath\");\n    __publicField(this, \"metaMessages\");\n    __publicField(this, \"shortMessage\");\n    __publicField(this, \"name\", \"AbiTypeError\");\n    if (args.cause)\n      this.cause = args.cause;\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = args.metaMessages;\n    this.shortMessage = shortMessage;\n  }\n};\n\n// src/narrow.ts\nfunction narrow(value) {\n  return value;\n}\n\n// src/human-readable/runtime/signatures.ts\nvar errorSignatureRegex = /^error (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isErrorSignature(signature) {\n  return errorSignatureRegex.test(signature);\n}\nfunction execErrorSignature(signature) {\n  return execTyped(\n    errorSignatureRegex,\n    signature\n  );\n}\nvar eventSignatureRegex = /^event (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)$/;\nfunction isEventSignature(signature) {\n  return eventSignatureRegex.test(signature);\n}\nfunction execEventSignature(signature) {\n  return execTyped(\n    eventSignatureRegex,\n    signature\n  );\n}\nvar functionSignatureRegex = /^function (?<name>[a-zA-Z0-9_]+)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns \\((?<returns>.*?)\\))?$/;\nfunction isFunctionSignature(signature) {\n  return functionSignatureRegex.test(signature);\n}\nfunction execFunctionSignature(signature) {\n  return execTyped(functionSignatureRegex, signature);\n}\nvar structSignatureRegex = /^struct (?<name>[a-zA-Z0-9_]+) \\{(?<properties>.*?)\\}$/;\nfunction isStructSignature(signature) {\n  return structSignatureRegex.test(signature);\n}\nfunction execStructSignature(signature) {\n  return execTyped(\n    structSignatureRegex,\n    signature\n  );\n}\nvar constructorSignatureRegex = /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/;\nfunction isConstructorSignature(signature) {\n  return constructorSignatureRegex.test(signature);\n}\nfunction execConstructorSignature(signature) {\n  return execTyped(constructorSignatureRegex, signature);\n}\nvar fallbackSignatureRegex = /^fallback\\(\\)$/;\nfunction isFallbackSignature(signature) {\n  return fallbackSignatureRegex.test(signature);\n}\nvar receiveSignatureRegex = /^receive\\(\\) external payable$/;\nfunction isReceiveSignature(signature) {\n  return receiveSignatureRegex.test(signature);\n}\nvar modifiers = /* @__PURE__ */ new Set([\n  \"memory\",\n  \"indexed\",\n  \"storage\",\n  \"calldata\"\n]);\nvar eventModifiers = /* @__PURE__ */ new Set([\"indexed\"]);\nvar functionModifiers = /* @__PURE__ */ new Set([\n  \"calldata\",\n  \"memory\",\n  \"storage\"\n]);\n\n// src/human-readable/runtime/cache.ts\nfunction getParameterCacheKey(param, type) {\n  if (type)\n    return `${type}:${param}`;\n  return param;\n}\nvar parameterCache = /* @__PURE__ */ new Map([\n  // Unnamed\n  [\"address\", { type: \"address\" }],\n  [\"bool\", { type: \"bool\" }],\n  [\"bytes\", { type: \"bytes\" }],\n  [\"bytes32\", { type: \"bytes32\" }],\n  [\"int\", { type: \"int256\" }],\n  [\"int256\", { type: \"int256\" }],\n  [\"string\", { type: \"string\" }],\n  [\"uint\", { type: \"uint256\" }],\n  [\"uint8\", { type: \"uint8\" }],\n  [\"uint16\", { type: \"uint16\" }],\n  [\"uint24\", { type: \"uint24\" }],\n  [\"uint32\", { type: \"uint32\" }],\n  [\"uint64\", { type: \"uint64\" }],\n  [\"uint96\", { type: \"uint96\" }],\n  [\"uint112\", { type: \"uint112\" }],\n  [\"uint160\", { type: \"uint160\" }],\n  [\"uint192\", { type: \"uint192\" }],\n  [\"uint256\", { type: \"uint256\" }],\n  // Named\n  [\"address owner\", { type: \"address\", name: \"owner\" }],\n  [\"address to\", { type: \"address\", name: \"to\" }],\n  [\"bool approved\", { type: \"bool\", name: \"approved\" }],\n  [\"bytes _data\", { type: \"bytes\", name: \"_data\" }],\n  [\"bytes data\", { type: \"bytes\", name: \"data\" }],\n  [\"bytes signature\", { type: \"bytes\", name: \"signature\" }],\n  [\"bytes32 hash\", { type: \"bytes32\", name: \"hash\" }],\n  [\"bytes32 r\", { type: \"bytes32\", name: \"r\" }],\n  [\"bytes32 root\", { type: \"bytes32\", name: \"root\" }],\n  [\"bytes32 s\", { type: \"bytes32\", name: \"s\" }],\n  [\"string name\", { type: \"string\", name: \"name\" }],\n  [\"string symbol\", { type: \"string\", name: \"symbol\" }],\n  [\"string tokenURI\", { type: \"string\", name: \"tokenURI\" }],\n  [\"uint tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint8 v\", { type: \"uint8\", name: \"v\" }],\n  [\"uint256 balance\", { type: \"uint256\", name: \"balance\" }],\n  [\"uint256 tokenId\", { type: \"uint256\", name: \"tokenId\" }],\n  [\"uint256 value\", { type: \"uint256\", name: \"value\" }],\n  // Indexed\n  [\n    \"event:address indexed from\",\n    { type: \"address\", name: \"from\", indexed: true }\n  ],\n  [\"event:address indexed to\", { type: \"address\", name: \"to\", indexed: true }],\n  [\n    \"event:uint indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ],\n  [\n    \"event:uint256 indexed tokenId\",\n    { type: \"uint256\", name: \"tokenId\", indexed: true }\n  ]\n]);\n\n// src/human-readable/runtime/utils.ts\nfunction parseSignature(signature, structs = {}) {\n  if (isFunctionSignature(signature)) {\n    const match = execFunctionSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid function signature.\", {\n        details: signature\n      });\n    const inputParams = splitParameters(match.parameters);\n    const inputs = [];\n    const inputLength = inputParams.length;\n    for (let i = 0; i < inputLength; i++) {\n      inputs.push(\n        parseAbiParameter(inputParams[i], {\n          modifiers: functionModifiers,\n          structs,\n          type: \"function\"\n        })\n      );\n    }\n    const outputs = [];\n    if (match.returns) {\n      const outputParams = splitParameters(match.returns);\n      const outputLength = outputParams.length;\n      for (let i = 0; i < outputLength; i++) {\n        outputs.push(\n          parseAbiParameter(outputParams[i], {\n            modifiers: functionModifiers,\n            structs,\n            type: \"function\"\n          })\n        );\n      }\n    }\n    return {\n      name: match.name,\n      type: \"function\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs,\n      outputs\n    };\n  }\n  if (isEventSignature(signature)) {\n    const match = execEventSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid event signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], {\n          modifiers: eventModifiers,\n          structs,\n          type: \"event\"\n        })\n      );\n    }\n    return { name: match.name, type: \"event\", inputs: abiParameters };\n  }\n  if (isErrorSignature(signature)) {\n    const match = execErrorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid error signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"error\" })\n      );\n    }\n    return { name: match.name, type: \"error\", inputs: abiParameters };\n  }\n  if (isConstructorSignature(signature)) {\n    const match = execConstructorSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid constructor signature.\", {\n        details: signature\n      });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(\n        parseAbiParameter(params[i], { structs, type: \"constructor\" })\n      );\n    }\n    return {\n      type: \"constructor\",\n      stateMutability: match.stateMutability ?? \"nonpayable\",\n      inputs: abiParameters\n    };\n  }\n  if (isFallbackSignature(signature))\n    return { type: \"fallback\" };\n  if (isReceiveSignature(signature))\n    return {\n      type: \"receive\",\n      stateMutability: \"payable\"\n    };\n  throw new BaseError(\"Unknown signature.\", {\n    details: signature\n  });\n}\nvar abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar abiParameterWithTupleRegex = /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z0-9_]+))?$/;\nvar dynamicIntegerRegex = /^u?int$/;\nfunction parseAbiParameter(param, options) {\n  const parameterCacheKey = getParameterCacheKey(param, options?.type);\n  if (parameterCache.has(parameterCacheKey))\n    return parameterCache.get(parameterCacheKey);\n  const isTuple = isTupleRegex.test(param);\n  const match = execTyped(\n    isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex,\n    param\n  );\n  if (!match)\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param\n    });\n  if (match.name && isSolidityKeyword(match.name))\n    throw new BaseError(\"Invalid ABI parameter.\", {\n      details: param,\n      metaMessages: [\n        `\"${match.name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`\n      ]\n    });\n  const name2 = match.name ? { name: match.name } : {};\n  const indexed = match.modifier === \"indexed\" ? { indexed: true } : {};\n  const structs = options?.structs ?? {};\n  let type;\n  let components = {};\n  if (isTuple) {\n    type = \"tuple\";\n    const params = splitParameters(match.type);\n    const components_ = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      components_.push(parseAbiParameter(params[i], { structs }));\n    }\n    components = { components: components_ };\n  } else if (match.type in structs) {\n    type = \"tuple\";\n    components = { components: structs[match.type] };\n  } else if (dynamicIntegerRegex.test(match.type)) {\n    type = `${match.type}256`;\n  } else {\n    type = match.type;\n    if (!(options?.type === \"struct\") && !isSolidityType(type))\n      throw new BaseError(\"Unknown type.\", {\n        metaMessages: [`Type \"${type}\" is not a valid ABI type.`]\n      });\n  }\n  if (match.modifier) {\n    if (!options?.modifiers?.has?.(match.modifier))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`\n        ]\n      });\n    if (functionModifiers.has(match.modifier) && !isValidDataLocation(type, !!match.array))\n      throw new BaseError(\"Invalid ABI parameter.\", {\n        details: param,\n        metaMessages: [\n          `Modifier \"${match.modifier}\" not allowed${options?.type ? ` in \"${options.type}\" type` : \"\"}.`,\n          `Data location can only be specified for array, struct, or mapping types, but \"${match.modifier}\" was given.`\n        ]\n      });\n  }\n  const abiParameter = {\n    type: `${type}${match.array ?? \"\"}`,\n    ...name2,\n    ...indexed,\n    ...components\n  };\n  parameterCache.set(parameterCacheKey, abiParameter);\n  return abiParameter;\n}\nfunction splitParameters(params, result = [], current = \"\", depth = 0) {\n  if (params === \"\") {\n    if (current === \"\")\n      return result;\n    if (depth !== 0)\n      throw new BaseError(\"Unbalanced parentheses.\", {\n        metaMessages: [\n          `\"${current.trim()}\" has too many ${depth > 0 ? \"opening\" : \"closing\"} parentheses.`\n        ],\n        details: `Depth \"${depth}\"`\n      });\n    return [...result, current.trim()];\n  }\n  const length = params.length;\n  for (let i = 0; i < length; i++) {\n    const char = params[i];\n    const tail = params.slice(i + 1);\n    switch (char) {\n      case \",\":\n        return depth === 0 ? splitParameters(tail, [...result, current.trim()]) : splitParameters(tail, result, `${current}${char}`, depth);\n      case \"(\":\n        return splitParameters(tail, result, `${current}${char}`, depth + 1);\n      case \")\":\n        return splitParameters(tail, result, `${current}${char}`, depth - 1);\n      default:\n        return splitParameters(tail, result, `${current}${char}`, depth);\n    }\n  }\n  return [];\n}\nfunction isSolidityType(type) {\n  return type === \"address\" || type === \"bool\" || type === \"function\" || type === \"string\" || bytesRegex.test(type) || integerRegex.test(type);\n}\nvar protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;\nfunction isSolidityKeyword(name2) {\n  return name2 === \"address\" || name2 === \"bool\" || name2 === \"function\" || name2 === \"string\" || name2 === \"tuple\" || bytesRegex.test(name2) || integerRegex.test(name2) || protectedKeywordsRegex.test(name2);\n}\nfunction isValidDataLocation(type, isArray) {\n  return isArray || type === \"bytes\" || type === \"string\" || type === \"tuple\";\n}\n\n// src/human-readable/runtime/structs.ts\nfunction parseStructs(signatures) {\n  const shallowStructs = {};\n  const signaturesLength = signatures.length;\n  for (let i = 0; i < signaturesLength; i++) {\n    const signature = signatures[i];\n    if (!isStructSignature(signature))\n      continue;\n    const match = execStructSignature(signature);\n    if (!match)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature\n      });\n    const properties = match.properties.split(\";\");\n    const components = [];\n    const propertiesLength = properties.length;\n    for (let k = 0; k < propertiesLength; k++) {\n      const property = properties[k];\n      const trimmed = property.trim();\n      if (!trimmed)\n        continue;\n      const abiParameter = parseAbiParameter(trimmed, {\n        type: \"struct\"\n      });\n      components.push(abiParameter);\n    }\n    if (!components.length)\n      throw new BaseError(\"Invalid struct signature.\", {\n        details: signature,\n        metaMessages: [\"No properties exist.\"]\n      });\n    shallowStructs[match.name] = components;\n  }\n  const resolvedStructs = {};\n  const entries = Object.entries(shallowStructs);\n  const entriesLength = entries.length;\n  for (let i = 0; i < entriesLength; i++) {\n    const [name2, parameters] = entries[i];\n    resolvedStructs[name2] = resolveStructs(parameters, shallowStructs);\n  }\n  return resolvedStructs;\n}\nvar typeWithoutTupleRegex = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\\[\\d*?\\])+?)?$/;\nfunction resolveStructs(abiParameters, structs, ancestors = /* @__PURE__ */ new Set()) {\n  const components = [];\n  const length = abiParameters.length;\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i];\n    const isTuple = isTupleRegex.test(abiParameter.type);\n    if (isTuple)\n      components.push(abiParameter);\n    else {\n      const match = execTyped(\n        typeWithoutTupleRegex,\n        abiParameter.type\n      );\n      if (!match?.type)\n        throw new BaseError(\"Invalid ABI parameter.\", {\n          details: JSON.stringify(abiParameter, null, 2),\n          metaMessages: [\"ABI parameter type is invalid.\"]\n        });\n      const { array, type } = match;\n      if (type in structs) {\n        if (ancestors.has(type))\n          throw new BaseError(\"Circular reference detected.\", {\n            metaMessages: [`Struct \"${type}\" is a circular reference.`]\n          });\n        components.push({\n          ...abiParameter,\n          type: `tuple${array ?? \"\"}`,\n          components: resolveStructs(\n            structs[type] ?? [],\n            structs,\n            /* @__PURE__ */ new Set([...ancestors, type])\n          )\n        });\n      } else {\n        if (isSolidityType(type))\n          components.push(abiParameter);\n        else\n          throw new BaseError(\"Unknown type.\", {\n            metaMessages: [\n              `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`\n            ]\n          });\n      }\n    }\n  }\n  return components;\n}\n\n// src/human-readable/parseAbi.ts\nfunction parseAbi(signatures) {\n  const structs = parseStructs(signatures);\n  const abi = [];\n  const length = signatures.length;\n  for (let i = 0; i < length; i++) {\n    const signature = signatures[i];\n    if (isStructSignature(signature))\n      continue;\n    abi.push(parseSignature(signature, structs));\n  }\n  return abi;\n}\n\n// src/human-readable/parseAbiItem.ts\nfunction parseAbiItem(signature) {\n  let abiItem;\n  if (typeof signature === \"string\")\n    abiItem = parseSignature(signature);\n  else {\n    const structs = parseStructs(signature);\n    const length = signature.length;\n    for (let i = 0; i < length; i++) {\n      const signature_ = signature[i];\n      if (isStructSignature(signature_))\n        continue;\n      abiItem = parseSignature(signature_, structs);\n      break;\n    }\n  }\n  if (!abiItem)\n    throw new BaseError(\"Failed to parse ABI item.\", {\n      details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiitem-1\"\n    });\n  return abiItem;\n}\n\n// src/human-readable/parseAbiParameter.ts\nfunction parseAbiParameter2(param) {\n  let abiParameter;\n  if (typeof param === \"string\")\n    abiParameter = parseAbiParameter(param, {\n      modifiers\n    });\n  else {\n    const structs = parseStructs(param);\n    const length = param.length;\n    for (let i = 0; i < length; i++) {\n      const signature = param[i];\n      if (isStructSignature(signature))\n        continue;\n      abiParameter = parseAbiParameter(signature, { modifiers, structs });\n      break;\n    }\n  }\n  if (!abiParameter)\n    throw new BaseError(\"Failed to parse ABI parameter.\", {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameter-1\"\n    });\n  return abiParameter;\n}\n\n// src/human-readable/parseAbiParameters.ts\nfunction parseAbiParameters(params) {\n  const abiParameters = [];\n  if (typeof params === \"string\") {\n    const parameters = splitParameters(params);\n    const length = parameters.length;\n    for (let i = 0; i < length; i++) {\n      abiParameters.push(parseAbiParameter(parameters[i], { modifiers }));\n    }\n  } else {\n    const structs = parseStructs(params);\n    const length = params.length;\n    for (let i = 0; i < length; i++) {\n      const signature = params[i];\n      if (isStructSignature(signature))\n        continue;\n      const parameters = splitParameters(signature);\n      const length2 = parameters.length;\n      for (let k = 0; k < length2; k++) {\n        abiParameters.push(\n          parseAbiParameter(parameters[k], { modifiers, structs })\n        );\n      }\n    }\n  }\n  if (abiParameters.length === 0)\n    throw new BaseError(\"Failed to parse ABI parameters.\", {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: \"/api/human.html#parseabiparameters-1\"\n    });\n  return abiParameters;\n}\nexport {\n  BaseError,\n  narrow,\n  parseAbi,\n  parseAbiItem,\n  parseAbiParameter2 as parseAbiParameter,\n  parseAbiParameters\n};\n"],"names":["toHexPaddedString","util","formatMemory","normalizeHexAddress","helpers","ui","VmProxy","vmContext","this","stateCopy","vm","vmTraces","txs","txsReceipt","hhLogs","processingHash","processingAddress","processingIndex","previousDepth","incr","eth","debug","getCode","address","cb","getTransaction","txHash","getTransactionReceipt","getTransactionFromBlock","blockNumber","txIndex","getBlockNumber","getStorageAt","position","traceTransaction","options","storageRangeAt","start","maxLength","preimage","hashedKey","providers","HttpProvider","url","currentProvider","host","storageCache","sha3Preimages","sha3","args","utils","apply","toHex","toAscii","fromAscii","fromDecimal","fromWei","toWei","toBigNumber","toBigInt","isAddress","txsMapBlock","blocks","lastMemoryUpdate","flagrecordVMSteps","callIncrement","BigInt","txRunning","setVM","evm","events","on","data","resolve","pushTrace","txProcessed","txWillProcess","releaseCurrentHash","ret","undefined","recordVMSteps","record","stateManager","shallowCopy","bytesToHex","hash","gas","return","structLogs","tx","toChecksumAddress","getSenderAddress","toString","to","gasLimit","value","processingAccount","self","dumpStorage","storage","console","log","lastOp","error","op","gasUsed","totalGasSpent","logs","l","execResult","topics","length","k","push","rawVMResponse","transactionHash","status","exceptionError","account","Address","fromString","createdAddress","checksumedAddress","contractAddress","returnValue","depth","previousOpcode","invalidDepthChange","step","stack","memory","opcode","name","pc","gasCost","fee","gasLeft","Object","keys","Uint8Array","payloadStart","parseInt","memoryStr","join","payload","substring","fnselectorStr","fnselectorStrInHex","fnselector","fnArgs","ConsoleLogs","iface","ethers","Interface","functionDesc","getFunction","sigHash","getSighash","includes","replace","consoleArgs","decodeFunctionData","map","constructor","isBigInt","getSha3Input","imageHash","getContractCode","then","result","setProvider","provider","latestBlockNumber","block","transactions","slot","keccak","toBytes","hexZeroPad","JSON","parse","stringify","nextKey","mes","memoryStart","memoryLength","memStartDec","memoryStartInt","memLengthDec","memoryLengthInt","i","Math","floor","maxIndex","emptyFill","sha3Input","slice","leftSize","size","Array","Web3Accounts","accounts","accountsKeys","_addAccount","privateKey","balance","privateToAddress","addressStr","nonce","getAccount","Account","putAccount","newAccount","crypto","randomBytes","isValidPrivate","methods","eth_accounts","bind","eth_getBalance","eth_sign","eth_chainId","_payload","params","message","Error","privateKeyToAccount","sign","signature","Blocks","_options","coinbase","eth_getBlockByNumber","eth_gasPrice","eth_coinbase","eth_blockNumber","eth_getBlockByHash","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getStorageAt","blockIndex","Number","isInteger","t","txByHash","receipt","currentVm","web3vm","blockHash","bigIntToHex","header","number","from","chainId","gasPrice","input","transactionIndex","TX_INDEX","b","baseFeePerGas","parentHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","miner","difficulty","totalDifficulty","extraData","timestamp","uncles","v","web3","Debug","debug_traceTransaction","debug_preimage","debug_storageRangeAt","Filters","eth_getLogs","eth_subscribe","eth_unsubscribe","results","logsManager","getLogsFor","subscriptionId","subscribe","unsubscribe","eth_newFilter","filterId","newFilter","eth_newBlockFilter","eth_newPendingTransactionFilter","eth_uninstallfilter","uninstallFilter","eth_getFilterChanges","getLogsForFilter","eth_getFilterLogs","version","require","web3_clientVersion","eth_protocolVersion","eth_syncing","eth_mining","eth_hashrate","web3_sha3","eth_getCompilers","eth_compileSolidity","eth_compileLLL","eth_compileSerpent","str","net_version","net_listening","net_peerCount","TxRunnerVM","execution","TxRunner","Transactions","tags","init","blocksData","api","logMessage","msg","logHtmlMessage","config","getUnpersistedProperty","key","get","detectNetwork","personalMode","txRunnerVMInstance","_","vmObject","txRunnerInstance","vmaccounts","eth_sendTransaction","eth_getTransactionReceipt","eth_getCode","eth_call","eth_estimateGas","eth_getTransactionCount","eth_getTransactionByHash","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getExecutionResultFromSimulator","eth_getHHLogsForTx","eth_getHashFromTagBySimulator","eth_registerCallId","eth_getStateDb","eth_getBlocksData","processTx","addBlock","trackTx","executionGasUsed","gasRefund","trackExecResult","exeResults","txBlock","blockByTxHash","getLogsByTxHash","r","cumulativeGasUsed","internalRunner","standaloneTx","abiCoder","AbiCoder","reason","decode","e","errorType","toNumber","getBaseFee","ceil","dir","comingCallId","run","_getCodeDB","tag","TxExecution","txExecution","runCall","txRunner","callbacks","callback","finalCallback","err","callFunction","constant","runTx","createContract","isCall","confirmationCb","network","gasEstimation","continueTxExecution","cancelCb","gasEstimationForceSend","promptCb","okCb","Provider","connected","VMContext","Accounts","merge","miscMethods","netMethods","initialized","pendingRequests","resetAccounts","serializedBlocks","req","sendAsync","_send","method","details","info","call","response","id","jsonrpc","Promise","reject","send","isConnected","disconnect","supportsSubscriptions","type","addListener","extend","remix","registerPlugin","Web3TestPlugin","requestManager","Web3PluginBase","Server","cliOptions","expressWs","express","app","wsApp","use","cors","bodyParser","urlencoded","extended","json","res","rpc","body","jsonResponse","ws","listen","port","ip","hasFlag","flag","process","argv","indexOf","addColor","gray","supportsColor","stdout","arg","write","stderr","getTimestamp","coloredTimestamp","time","warn","LogsManager","StateManagerCommonStorageDump","opts","keyHashes","getDb","_trie","database","db","putContractStorage","copyState","trie","flush","_getStorageTrie","stream","createReadStream","val","DefaultStateManager","CustomEthersStateManager","StaticJsonRpcProvider","JsonRpcProvider","blockTag","setBlockTag","newState","code","bytesToBigInt","isEmpty","proof","proofBuf","accountProof","proofNode","Trie","useKeyHashing","verifyProof","Buffer","keccak256","bytes","verified","codeHash","fromAccountData","hexToBytes","accountData","VMCommon","setHardforkBy","_hardfork","Common","fork","nodeUrl","stateDb","blockGasLimitDefault","blockGasLimit","currentFork","rawBlocks","createVm","hardfork","Map","entries","mapDb","MapDB","create","useRootPersistence","consensusType","ConsensusType","ProofOfWork","ProofOfStake","common","chain","serializedBlock","Block","fromRLPSerializedBlock","genesisBlock","isGenesis","fromBlockData","Date","getTime","Blockchain","validateBlocks","validateConsensus","blockchain","EVM","allowUnlimitedContractSize","VM","activatePrecompiles","splice","putBlock","getCurrentFork","genesis","checkBlock","execReult","async","genGenesisStateRoot","genesisState","genCommon","copy","td","isActivatedEIP","getGenesisStateRoot","chainGenesis","ChainGenesis","_deletedBlocks","DEFAULT_CHAIN","Chain","Mainnet","DEFAULT_HARDFORK","Hardfork","Chainstart","_hardforkByHeadBlockNumber","hardforkByHeadBlockNumber","_validateConsensus","_validateBlocks","_customGenesisState","dbManager","DBManager","AsyncEventEmitter","consensus","consensusAlgorithm","ConsensusAlgorithm","Casper","CasperConsensus","Clique","CliqueConsensus","Ethash","EthashConsensus","ProofOfAuthority","_heads","_lock","Lock","static","setup","genesisStateRoot","createGenesisBlock","genesisHash","numberToHash","BIGINT_0","dbGenesisBlock","getBlock","equalsBytes","dbOps","DBSetTD","DBSetBlockOrHeader","DBSaveLookups","batch","genesisInit","_genesisBlock","heads","getHeads","getHeadHeader","_headHeaderHash","getHeadBlock","_headBlockHash","latestHeader","_getHeader","getParentTD","checkAndTransitionHardForkByNumber","blockData","setHardfork","copiedBlockchain","getPrototypeOf","getOwnPropertyDescriptors","action","acquire","release","runWithLock","getHead","returnUndefinedIfNotSet","headHash","_putBlockOrHeader","headers","putHeader","canonicalHead","_deleteCanonicalChainReferences","BIGINT_1","ops","concat","_saveHeadOps","emit","item","oldHeads","assign","oldHeadHeaderHash","oldHeadBlockHash","BlockHeader","currentTd","validateBlock","getTotalDifficulty","parentTd","commonAncestor","ancestorHeaders","foundCommon","findCommonAncestor","_rebuildCanonical","DBSetHashToNumber","newBlock","height","parentHeader","errorStr","validateDifficulty","period","consensusConfig","validateGasLimit","dif","BIGINT_8","expectedBaseFee","londonHfBlock","hardforkBlock","London","isInitialEIP1559Block","param","calcNextBaseFee","expectedExcessBlobGas","calcNextExcessBlobGas","excessBlobGas","validateHeader","_validateUncleHeaders","validateData","parentBlock","validateBlobTransactions","uncleHeaders","all","uh","canonicalBlockMap","lowestUncleNumber","canonicalChainHashes","includedUncles","getBlocks","bytesToUnprefixedHex","uncleHash","blockId","hashToNumber","maxBlocks","skip","reverse","nextBlock","nextBlockNumber","hashes","max","mid","min","_delBlock","blockHeader","canonicalHash","safeNumberToHash","inCanonical","_delChild","DBOp","del","DBTarget","Header","Body","HashToNumber","TotalDifficulty","childHeader","getCanonicalHeader","onBlock","releaseLockOnCallback","headBlockNumber","blocksRanCounter","lastBlock","reorg","reorgWhileOnBlock","nextBlockMayBeReorged","catch","_e","_saveHeads","newHeader","Set","add","NumberToHash","listenerCount","currentNumber","currentCanonicalHash","staleHash","staleHeads","staleHeadBlock","loopCondition","hexHeads","fromEntries","entry","set","Heads","HeadHeader","HeadBlock","getHeader","values","algorithm","withdrawalsRoot","KECCAK256_RLP","concatBytes","withdrawals","createDebugLogger","CLIQUE_NONCE_AUTH","CLIQUE_NONCE_DROP","CLIQUE_SIGNERS_KEY","CLIQUE_VOTES_KEY","CLIQUE_BLOCK_SIGNERS_SNAPSHOT_KEY","CLIQUE_DIFF_INTURN","BIGINT_2","CLIQUE_DIFF_NOTURN","CLIQUE_SIGNER_HISTORY_BLOCK_LIMIT","_cliqueLatestSignerStates","_cliqueLatestVotes","_cliqueLatestBlockSigners","getCliqueLatestSignerStates","sort","a","getCliqueLatestVotes","getCliqueLatestBlockSigners","cliqueSaveGenesisSigners","valid","cliqueVerifySignature","cliqueActiveSigners","cliqueCheckRecentlySigned","cliqueIsEpochTransition","checkpointSigners","cliqueEpochTransitionSigners","activeSigners","cSigner","equals","signers","signerIndex","findIndex","cliqueSigner","inTurn","commonAncestorNumber","_cliqueDeleteSnapshots","canonicalHeader","_cliqueBuildSnapshots","genesisSignerState","cliqueUpdateSignerStates","cliqueUpdateVotes","signerState","known","find","limit","blockSigners","lastBlockNumber","blockLimit","states","lastItem","filter","state","formatted","bigIntToBytes","put","RLP","encode","signer","isZero","beneficiary","latestVote","round","lastEpochBlockNumber","epoch","cliqueSignerLimit","votes","vote","beneficiaryVotesAUTH","num","voteCMP","numBeneficiaryVotesAUTH","toType","TypeOutput","beneficiaryVotesDROP","numBeneficiaryVotesDROP","newSignerState","blockNum","seen","s","cliqueUpdateLatestBlockSigners","signerStates","addrs","signerVotes","getCanonicalHeadHeader","_ethash","verifyPOW","ethashCanonicalDifficulty","Cache","_cache","LRUCache","elem","delete","HEADS_KEY","HEAD_HEADER_KEY","HEAD_BLOCK_KEY","HEADER_PREFIX","utf8ToBytes","TD_SUFFIX","NUM_SUFFIX","BLOCK_HASH_PEFIX","BODY_PREFIX","bytesBE8","n","asUintN","tdKey","headerKey","bodyKey","numberToHashKey","hashToNumberKey","TD","blockBody","headerValue","serialize","executionWitness","bodyValue","raw","blockNumber8Byte","skipNumIndex","blockNumber8Bytes","_db","decodedHeads","unprefixedHexToBytes","getBody","transactionsTrie","KECCAK256_RLP_ARRAY","fromValuesArray","encodedHeader","headerValues","headerData","valuesArrayToHeaderData","dbOperationTarget","dbGetOperation","cacheString","dbKey","baseDBOp","keyEncoding","valueEncoding","convertedOps","convertedOp","updateCache","operationTarget","KeyEncoding","Bytes","ValueEncoding","String","dbOperation","cacheMap","xor","len","Miner","mineObject","ethash","currentNonce","stopMining","stop","iterations","solution","iterate","toJSON","mixHash","fromHeaderData","headerHash","loadEpoc","setTimeout","setLengthLeft","TWO_POW256","mix","cacheDB","dbOpts","cache","mkcache","cacheSize","seed","HASH_BYTES","o","keccak512","CACHE_ROUNDS","DataView","buffer","getUint32","calcDatasetItem","WORD_BYTES","mixView","setUint32","j","DATASET_PARENTS","cacheIndex","fnv","fnvBytes","fullSize","w","MIX_BYTES","bytesReverse","mixhashes","fill","ACCESSES","p","newdata","cmix","cmixView","c","cacheHash","reduce","arr","pad","rawHeader","epoc","getEpoc","findLastSeed","zeros","dbData","el","getCacheSize","getFullSize","foundEpoc","getSeed","getMiner","_verifyPOW","index","DATASET_BYTES_INIT","DATASET_BYTES_GROWTH","CACHE_BYTES_INIT","CACHE_BYTES_GROWTH","CACHE_MULTIPLIER","EPOCH_LENGTH","sz","isProbablyPrime","begin","end","x","y","rView","RangeError","u","f","g","fromBuffer","buf","randBytes","byteLength","forceLength","getRandomValues","subarray","randBytesSync","randBits","bitLength","bitLengthMod8","rndBytes","mask","randBitsSync","randBetween","interval","bitLen","rnd","_useWorkers","disableWorkers","worker","Worker","_isProbablyPrimeWorkerUrl","onmessage","event","_bcu","isPrime","terminate","onmessageerror","postMessage","_isProbablyPrime","firstPrimes","d","aux","m","z","modPow","workerCode","eGcd","modInv","toZn","_blob","Blob","window","URL","createObjectURL","prime","workerList","_onmessage","newWorker","pop","msgToWorker","workerURL","navigator","hardwareConcurrency","primeSync","defineProperty","exports","keccak384","keccak224","sha3_1","utils_js_1","wrapHash","keccak_224","keccak_256","keccak_384","keccak_512","__importDefault","mod","__esModule","bytesToUtf8","createView","assertBytes","assertBool","_assert_1","utils_1","default","bool","utils_2","enumerable","TypeError","TextDecoder","sliced","startsWith","webCrypto","globalThis","nodeRequire","module","node","web","FORMAT","MAGIC","VERSION","codeAnalysis","container","secCode","secData","secTerminator","computedContainerSize","sectionSizes","validOpcodes","opcodes","handlers","has","terminatingOpcodes","getEOFCode","codeStart","EOF","debugGas","debugPrecompiles","initializedRustBN","bn128","DEBUG","_bn128","_optsCached","supportedEIPs","eip","eips","supportedHardforks","allowUnlimitedInitCodeSize","_customOpcodes","customOpcodes","_customPrecompiles","customPrecompiles","journal","Journal","transientStorage","TransientStorage","getActiveOpcodes","_precompiles","getActivePrecompiles","_emit","topic","performanceLogger","EVMPerformanceLogger","precompiles","_opcodes","createOpts","initRustBN","DefaultBlockchain","getOpcodesForHF","_dynamicGasHandlers","dynamicGasHandlers","_handlers","_opcodeMap","opcodeMap","originAccessGas","accessWitness","touchTxOriginAndComputeGas","authcallOrigin","caller","OOGResult","errorMessage","delegatecall","_reduceSenderBalance","sendsValue","destAccessGas","touchTxExistingAndComputeGas","toAccount","absenceProofAccessGas","touchAndChargeProofOfAbsence","_addToBalance","_loadCode","exit","isCompiled","timer","callTimer","target","profiler","enabled","codeAddress","getPrecompileName","hasTimer","pauseTimer","startTimer","runPrecompile","stopTimer","unpauseTimer","runInterpreter","postMessageCleanup","EvmError","ERROR","INITCODE_SIZE_VIOLATION","_generateAddress","createdAddresses","contractCreateAccessGas","touchAndChargeContractCreateInit","KECCAK256_NULL","CREATE_COLLISION","clearContractStorage","newContractEvent","gteHardfork","SpuriousDragon","totalGas","returnFee","allowedCodeSize","CodestoreOOG","INVALID_BYTECODE_RESULT","eof1CodeAnalysisResults","INVALID_EOF_RESULT","Homestead","CodesizeExceedsMaximumError","COOGResult","createCompleteAccessGas","touchAndChargeContractCreateCompleted","byteCodeWriteAccessfee","touchCodeChunksRangeOnWriteAndChargeGas","putContractCode","contract","zero","env","callData","callValue","isStatic","_tx","origin","_block","defaultBlock","containerCode","chargeCodeAccesses","blobVersionedHashes","interpreter","Interpreter","selfdestruct","_result","interpreterRes","runState","REVERT","INVALID_EOF_FORMAT","_env","callerAccount","skipBalance","Message","salt","addWarmedAddress","checkpoint","repeat","_executeCall","_executeCreate","short","CODESTORE_OUT_OF_GAS","revert","commit","getPrecompile","_EVM","_debug","precompile","addr","generateAddress2","acc","newNonce","generateAddress","INSUFFICIENT_BALANCE","newBalance","MAX_INTEGER","VALUE_OVERFLOW","clear","getPerformanceLogs","getLogs","clearPerformanceLogs","Dao","TangerineWhistle","Byzantium","Constantinople","Petersburg","Istanbul","MuirGlacier","Berlin","ArrowGlacier","GrayGlacier","MergeForkIdTransition","Paris","Shanghai","Cancun","Prague","OUT_OF_GAS","gasUsedCreateCode","CODESIZE_EXCEEDS_MAXIMUM","EvmErrorResult","prevRandao","getBlobGasPrice","performanceLogs","profilerOpts","opDebuggers","_evm","_stateManager","_runState","programCounter","opCode","Memory","memoryWordCount","highestMemCost","Stack","returnStack","validJumps","cachedPushes","shouldDoJumpAnalysis","returnBytes","codeSections","cachedOpcodes","doJumpAnalysis","overheadTimer","opCodeObj","_getValidJumpDests","jumps","pushes","opcodesCached","opcodeInfo","StatelessVerkleStateManager","getAddress","checkChunkWitnessPresent","runStep","STOP","opcodeObj","opEntry","lookupOpInfo","opInfo","feeBigInt","dynamicGas","gasHandler","statelessGas","touchCodeChunksRangeOnReadAndChargeGas","_runStepHook","getGasLeft","isInvalid","INVALID_OPCODE","useGas","opFn","opHandler","isAsync","dynamicFee","eventObj","fullName","getStack","_store","hexStack","opTrace","extraSteps","amount","context","tstr","trap","refundGas","subRefund","REFUND_EXHAUSTED","addStipend","original","originalStorageCache","getContractStorage","transientStorageStore","transientStorageLoad","finish","returnData","getSelfBalance","getCallValue","getCallData","getCallDataSize","getCaller","getCodeSize","getReturnDataSize","getReturnData","getTxGasPrice","getTxOrigin","getBlockCoinbase","getBlockTimestamp","getBlockDifficulty","getBlockPrevRandao","getBlockGasLimit","getBlockBaseFee","baseFee","getBlobBaseFee","blobBaseFee","getChainId","_baseCall","auth","addressToSelfdestructHex","_getReturnCode","MAX_UINT64","toAddress","_selfDestruct","toSelf","doModify","modifyAccountFields","numberOfTopics","OUT_OF_RANGE","INTERNAL_ERROR","cleanJournal","journalHeight","startReportingAccessList","accessList","startReportingPreimages","preimages","touchAddress","deleteAccount","touchAccount","bytesAddress","getAppliedKey","touched","diffArr","journalDiff","finalI","diff","addressSet","slotsMap","touchedSet","delSlots","slots","delSlot","RIPEMD160_ADDRESS_STRING","alwaysWarmJournal","addressHex","addAlwaysWarmAddress","addToAccessList","stripHexPrefix","addAlwaysWarmSlot","slotStr","slotsSet","isWarmedAddress","warm","addressArr","isWarmedStorage","addWarmedStorage","addressSlotMap","addrSet","slotTime","bpsNormalizer","Timer","runTime","startTime","performance","now","pause","unpause","obj","output","field","gasPerSecond","calls","totalTime","avgTimePerCall","millionGasPerSecond","blocksPerSlot","dynamicGasUsed","staticGas","staticGasUsed","currentTimer","targetTimer","ceiling","CONTAINER_SIZE","offset","newSize","sizeDiff","expandBy","read","avoidCopy","loaded","defaults","_codeAddress","updateSstoreGasEIP1283","currentStorage","originalStorage","updateSstoreGasEIP2200","sstoreNoopCost","adjustSstoreGasEIP2929","sstoreInitRefund","sstoreCleanRefund","accessAddressEIP2929","chargeGas","isSelfdestructOrAuthcall","accessStorageEIP2929","isSstore","slotIsCold","defaultCost","costName","warmRead","coldSload","Opcode","freeze","hardforkOpcodes","eipOpcodes","createOpcodes","isNaN","getFullname","opcodeBuilder","handlersCopy","dynamicGasHandlersCopy","eipOps","toLowerCase","_code","logicFunction","opcodeName","gasFunction","opNumber","handler","INVALID","EIP3074MAGIC","popN","toTwos","fromTwos","base","exponent","BIGINT_96","BIGINT_2EXP96","BIGINT_160","BIGINT_2EXP160","BIGINT_224","BIGINT_2EXP224","exponentiation","BIGINT_31","signBit","BIGINT_7","pos","word","BIGINT_32","BIGINT_255","BIGINT_256","MAX_INTEGER_BIGINT","bComp","asIntN","isSigned","shiftedOutWidth","customCrypto","addressBigInt","addresstoBytes","getExternalBalance","memOffset","dataOffset","dataLength","getDataSlice","memOffsetNum","dataLengthNum","codeOffset","lengthNum","returnDataOffset","historyServeWindow","historyAddress","offsetNum","byte","keyBuf","storageLoad","valueBigInt","storageStore","dest","INVALID_JUMP","describeLocation","destNum","jumpIsValid","cond","INVALID_BEGINSUB","valueBN","INVALID_RETURNSUB","STATIC_STATE_CHANGE","INVALID_JUMPSUB","jumpSubIsValid","dst","src","numToPush","startOffset","endOffset","stackPos","dup","swap","memLength","topicsCount","topicsBuf","mem","messageGasLimit","create2","_currentGasLimit","toAddr","inOffset","inLength","outOffset","outLength","callStipend","writeCallOutput","callCode","callDelegate","authority","BIGINT_128","setLengthRight","yParity","SECP256K1_ORDER_DIV_2","AUTH_INVALID_S","paddedInvokerAddress","keccakFunction","msgHash","recover","ecrecoverFunction","ecrecover","BIGINT_27","addressBuffer","publicToAddress","expectedAddress","_valueExt","argsOffset","argsLength","retOffset","retLength","authcall","callStatic","selfdestructToAddressBigInt","selfdestructToAddress","selfDestruct","pushFn","dupFn","swapFn","logFn","_base","peek","trunc","expPricePerByte","subMemUsage","divCeil","_dataOffset","_codeOffset","codeEnd","codeSize","touchAddressOnReadAndComputeGas","CODE_SIZE_LEAF_KEY","getTreeIndexesForStorageSlot","treeIndex","subIndex","keyBytes","setLengthLeftStorage","updateSstoreGas","touchAddressOnWriteAndComputeGas","wordsCopied","BIGINT_3","_value","maxCallGas","currentGasLimit","deadAccount","touchAndChargeMessageCall","touchAndChargeValueTransfer","_salt","_address","AUTHCALL_UNSET","valueExt","AUTHCALL_NONZERO_VALUEEXT","selfdestructToaddressBigInt","deductGas","exists","logDynamicFunc","MASK_160","div","modulus","gasAllowed","BIGINT_64","newMemoryWordCount","words","quadCoeff","cost","currentHighestMemCost","abs","BIGINT_NEG1","N","bas","exp","precompile01","vBigInt","BIGINT_28","publicKey","precompile02","sha256Function","sha256","precompile03","ripemd160","precompile04","BIGINT_4","BIGINT_16","BIGINT_200","BIGINT_480","BIGINT_1024","BIGINT_3072","BIGINT_199680","maxInt","MAX_SAFE_INTEGER","maxSize","multComplexity","fac1","fac2","multComplexityEIP2565","getAdjustedExponentLength","expBytesStart","baseLen","expLen","firstExpBytes","firstExpBigInt","max32expLen","expLenMinus32OrZero","eightTimesExpLenMinus32OrZero","adjustedExpLen","expmod","power","modulo","precompile05","adjustedELen","bLen","eLen","mLen","maxLen","Gquaddivisor","bStart","bEnd","eStart","eEnd","mStart","mEnd","B","E","M","R","precompile06","inputData","ec_add","precompile07","ec_mul","precompile08","inputDataSize","ec_pairing","ADD64AA","o0","o1","ADD64AC","b0","b1","B2B_G","mw","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA8","SIGMA82","F","h","rounds","ri","precompile09","lastByte","byteOffset","hRaw","mRaw","tRaw","outputView","BLS_MODULUS","modulusBuffer","precompile0a","kzg","INVALID_INPUT_LENGTH","fieldElementsPerBlob","versionedHash","commitment","kzgProof","computeVersionedHash","INVALID_COMMITMENT","verifyKzgProof","INVALID_PROOF","INVALID_INPUTS","fieldElementsBuffer","PrecompileAvailabilityCheck","ripemdPrecompileAddress","precompileEntries","check","EIP","precompileMap","function","addressUnprefixedStr","maxHeight","_len","_maxHeight","STACK_OVERFLOW","STACK_UNDERFLOW","peekArray","head","storageCached","tmp","_storage","_changeJournal","_indices","addrString","keyStr","prevValue","lastCheckpoint","ripemd160_1","sha256_1","VERSION_LEAF_KEY","BALANCE_LEAF_KEY","NONCE_LEAF_KEY","CODE_KECCAK_LEAF_KEY","HEADER_STORAGE_OFFSET","CODE_OFFSET","VERKLE_NODE_WIDTH","MAIN_STORAGE_OFFSET","WitnessBranchReadCost","WitnessChunkReadCost","WitnessBranchWriteCost","WitnessChunkWriteCost","WitnessChunkFillCost","AccessedStateType","AccessWitness","stems","chunks","contact","startPc","endPc","chunkNum","getTreeIndicesForCodeChunk","touchAddressAndChargeGas","isWrite","stemRead","stemWrite","chunkRead","chunkWrite","chunkFill","accessedStemKey","getStem","accessedStemHex","accessedStem","accessedChunkKey","getKey","accessedChunkKeyHex","accessedChunk","chunkKey","chunkValue","stemKey","stem","thisStem","thisChunk","chunkIndex","accessedState","rawAccess","rawAccesses","decodeAccessedState","storageKey","chunkId","Version","Balance","Nonce","CodeHash","CodeSize","Storage","codeChunkIdx","Code","decodeValue","decodedValue","AccountCache","super","_diffCache","CacheType","LRU","_lruCache","updateAgeOnGet","_orderedMapCache","OrderedMap","_saveCachePreState","cacheKeyHex","diffMap","_checkpoints","oldElem","getElementByKey","accountRLP","setElement","_stats","writes","reads","hits","dels","items","eraseElementByKey","oldEntry","stats","reset","CodeCache","OriginalStorageCache","keyHex","StorageCache","addressStoragePreState","diffStorageMap","oldStorageMap","oldStorage","storageMap","higherHeightDiffMap","lowerHeightDiffMap","higherHeightStorageDiff","lowerHeightStorageDiff","dump","KECCAK256_RLP_EMPTY_ACCOUNT","RPCStateManager","getStateRoot","setStateRoot","_root","hasStateRoot","_provider","_blockTag","_contractCache","_storageCache","ORDERED_MAP","_accountCache","clearCaches","codeBytes","fetchFromProvider","dumpStorageRange","_startKey","_limit","localAccount","fromRlpSerializedAccount","rlp","getAccountFromProvider","storageRoot","storageHash","isContract","accountFields","storageSlots","generateCanonicalGenesis","_initState","RPCBlockChain","intToHex","CODEHASH_PREFIX","_checkpointCount","_storageTries","_prefixCodeHashes","prefixCodeHashes","_prefixStorageTrieKeys","prefixStorageTrieKeys","_accountCacheSettings","deactivate","accountCacheOpts","_storageCacheSettings","storageCacheOpts","_codeCacheSettings","codeCacheOpts","_codeCache","addressOrHash","storageTrie","keyPrefix","root","EMPTY_TRIE_ROOT","flushCheckpoints","_getAccountTrie","decoded","modifyTrie","_modifyContractStorage","done","encodedValue","unpadBytes","_writeContractStorage","addressBytes","KECCAK256_NULL_S","KECCAK256_RLP_S","createProof","storageProof","proofItem","safe","isArray","createFromProof","sm","addStorageProof","addProofData","fromProof","updateFromProof","rlpString","emptyBytes","notEmptyErrorMsg","invalidErrorMsg","stProof","storageValue","proofValue","reportedValue","clearCache","hasRoot","checkRoot","startKey","isSafeInteger","inRange","initState","addresses","downlevelCaches","PUSH_OFFSET","PUSH1","PUSH32","ZEROVALUE","_state","_postState","__","initVerkleExecutionWitness","_executionWitness","_proof","verkleProof","preStateRaw","stateDiff","flatMap","suffixDiffs","suffixDiffPairs","currentValue","suffix","padToEven","preState","postStateRaw","newValue","postState","getTreeKeyForVersion","getTreeKeyForBalance","getTreeKeyForNonce","getTreeKeyForCodeHash","getTreeKeyForCodeSize","getTreeKeyForCodeChunk","chunkifyCode","paddingLength","getTreeKeyForStorageSlot","codeSizeKey","codeSizeLE","bytesToInt32","accessedCode","codeChunk","actualChunk","codeHashKey","versionKey","versionChunk","balanceKey","nonceKey","balanceRaw","nonceRaw","codeHashRaw","balanceBuf","nonceBuf","getProof","parentVerkleRoot","updatedStateRoot","verifyUpdate","verkleRoot","verifyPostState","accessedChunks","postVerified","accesses","extraMeta","computedValue","getComputedValue","canonicalValue","decodedComputedValue","decodedCanonicalValue","displayComputedValue","displayCanonicalValue","canChunkKey","encodedAccount","balanceBigint","nonceBigint","chunkSize","___","CheckpointDB","checkpoints","setCheckpoints","keyValueMap","hasCheckpoints","batchOp","currentKeyValueMap","opStack","open","BaseVerkleNode","InternalNode","VerkleNodeType","Internal","children","NODE_WIDTH","copyOnWrite","cowChild","setChild","child","rawNode","nodeType","POINT_IDENTITY","getChildren","insert","resolver","insertStem","childIndex","LeafNode","insertMultiple","nextByteInExistingKey","newBranch","nextByteInInsertedKey","leafNode","setDepth","Leaf","c1","c2","getValue","nodeResolverFn","decodeRawNode","fromRawNode","decodeNode","isRawNode","ROOT_DB_KEY","matchingBytesLength","bytes1","bytes2","count","minLength","pedersenHash","pedersen_hash","keyValues","verify_update","address32","treeIndexBytes","int32ToBytes","treeStem","treeKey","PrioritizedTaskExecutor","maxPoolSize","currentPoolSize","queue","executeOrQueue","priority","fn","shift","finished","WalkController","onNode","tree","poolSize","taskExecutor","strategy","startWalk","lookupNode","processNode","allChildren","nodeRef","keyExtension","childKey","pushNodeToQueue","taskFinishedCallback","childNode","pushChildrenAtIndex","childRef","VerkleTree","_opts","EMPTY_TREE_ROOT","_hashLen","throwIfMissing","findLeafNode","keyLastByte","currentNode","currentKey","currentDepth","parentKey","parentIndex","parentNode","onFound","keyProgress","walkController","keyRemainder","remaining","childrenIndex","walkTree","newWalk","findPath","_formatNode","topLevel","remove","rootHash","includeCheckpoints","persistRoot","BYTE_SIZE","Bloom","bitvector","first2bytes","getUint16","loc","byteLoc","bitLoc","match","Boolean","multiCheck","every","or","bloom","BuildStatus","BlockBuilder","blobGasUsed","_minerValue","transactionResults","checkpointed","blockStatus","Pending","blockOpts","putBlockIntoBlockchain","Withdrawal","fromWithdrawalData","transactionReceipts","minerValue","checkStatus","Build","Reverted","getStatus","genTransactionsTrieRoot","txResult","receiptTrie","encodedReceipt","encodeReceipt","minerReward","reward","calculateMinerReward","rewardAccount","withdrawal","GWEI_TO_WEI","blobGasLimit","blobGasPerBlob","blockGasRemaining","BlobEIP4844Transaction","blobTx","blobs","numBlobs","skipHardForkValidation","txData","minimalFromNetworkWrapper","sealOpts","rewardMiner","processWithdrawals","genWithdrawalsTrieRoot","timestampBigInt","parentBeaconBlockRootBuf","parentBeaconBlockRoot","accumulateParentBeaconBlockRoot","numberBigInt","parentHashSanitized","accumulateParentBlockHash","buildBlock","blockBuilder","parentBeaconBlockRootAddress","enableProfiler","stateRootCPLabel","processTxsLabel","withdrawalsRewardsCommitLabel","entireBlockLabel","runBlock","reportAfterBlock","generateFields","generate","title","_setHardfork","setHardforkUsed","hardforkIsActiveOnBlock","_applyDAOHardfork","applyBlock","receiptsRoot","receipts","timeEnd","_genTxTrie","generatedFields","_errorMsg","afterBlockEvent","emitEVMProfile","skipBlockValidation","skipHeaderValidation","blockResults","applyTransactions","reportPreimages","assignWithdrawals","cleanup","assignBlockRewards","currentBlockNumber","forkTime","eipTimestamp","putBlockHash","ringKey","ancestor","historicalRootsLength","timestampIndex","timestampExtended","txResults","txIdx","maxGasLimit","gasLimitIsHigherThanBlock","txRes","skipNonce","blockGasUsed","ommers","ommer","calculateOmmerReward","ommerBlockNumber","heightDiff","ommersNum","niblingReward","totalNiblingReward","txType","encoded","cumulativeBlockGasUsed","TransactionType","Legacy","intToBytes","DAOAccountList","DAOConfig","DAOAccounts","DAORefundContract","DAORefundContractAddress","DAORefundAccount","blockErrorStr","errorMsg","initLabel","balanceNonceLabel","executionLabel","logsGasBalanceLabel","accountsCleanUpLabel","accessListLabel","journalCacheCleanUpLabel","receiptsLabel","entireTxLabel","execHardfork","preMergeHf","reportAfterTx","hfs","hardforks","preMergeIndex","hf","ttd","skipBlockGasLimitValidation","reportAccessList","supports","Capability","EIP2718TypedTransaction","EIP1559FeeMarket","castedTx","accessListItem","AccessListJSON","storageKeys","_runTx","stateAccesses","txAccesses","activePrecompiles","txBaseFee","maxFeePerGas","fromAccount","upfrontAwGas","contractTo","upFrontCost","getUpfrontCost","maxCost","blobGasPrice","totalblobGas","castTx","maxFeePerBlobGas","inclusionFeePerGas","getEffectivePriorityFee","txCost","blobGasCost","executionTimerPrecise","txLogsBloom","isBlobEIP4844Tx","maxRefundQuotient","maxRefund","amountSpent","actualTxCost","txCostDiff","minerAccount","addressPrefixed","slotPrefixed","generateTxReceipt","transaction","q","baseReceipt","txErrorStr","_isInitialized","didPassStateManager","evmOpts","evmCopy","profileTitle","totalMs","colOrder","colNames","padStr","leftpad","padStart","strLen","colLength","ins","headerLength","pv","cv","avgGas","mGasSAvg","bpSAvg","footer","getHash","hmac","msgs","createCurve","curveDef","defHash","weierstrass","_0n","_1n","wNAF","bits","constTimeNegate","condition","neg","negate","W","windows","windowSize","unsafeLadder","elm","ZERO","double","precomputeWindow","points","precomputes","BASE","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","validateField","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","validateDST","os2ip","bytesToNumberBE","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","H","outputLen","b_in_bytes","blockLen","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","pseudo_random_bytes","expand_message_xof","dkLen","update","digest","hash_to_field","_DST","log2p","L","len_in_bytes","prb","expand","elm_offset","tv","isogenyMap","COEFF","xNum","xDen","yNum","yDen","mul","createHasher","Point","mapToCurve","def","hashToCurve","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","_2n","_3n","_4n","_5n","_8n","_9n","_16n","pow","pow2","invert","gcd","tonelliShanks","legendreC","Q","S","Z","p1div4","tonelliFast","eql","sqr","Q1div2","tonelliSlow","ONE","t2","ge","FpSqrt","sqrt3mod4","sqrt5mod8","n2","nv","sub","isNegativeLE","FIELD_FIELDS","initial","MASK","BYTES","BITS","FpPow","FpInvertBatch","nums","lastMultiplied","is0","inverted","inv","reduceRight","FpDiv","lhs","rhs","FpIsSquare","legendreConst","_nBitLength","Field","isLE","redef","sqrtP","bitMask","isValid","isOdd","sqrN","addN","subN","mulN","sqrt","invertBatch","lst","cmov","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","FpSqrtOdd","FpSqrtEven","hashToPrivateScalar","groupOrder","ensureBytes","hashLen","minLen","u8a","hexes","hex","numberToHexUnpadded","hexToNumber","array","hexByte","numberToVarBytesBE","expectedLength","arrs","sum","forEach","equalBytes","b2","TextEncoder","bitGet","bitSet","u8n","u8fr","createHmacDrbg","qByteLen","hmacFn","reseed","gen","out","sl","genUntil","pred","validatorFns","bigint","boolean","string","object","validators","optValidators","checkField","fieldName","isOptional","checkVal","validatePointOpts","ut","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","DER","Err","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","shl","rhl","rl","weierstrassPoints","CURVE","point","isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","pointPrecomputes","assertPrjPoint","other","px","py","pz","toInv","multiply","_setWindowSize","left","right","hasEvenY","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wnaf","multiplyUnsafe","I","k1p","k2p","k1","k2","k1neg","k2neg","scalar","fake","f1p","f2p","normalizeZ","multiplyAndAddUnsafe","G","iz","ax","ay","zz","cofactor","toRawBytes","_bits","ProjectivePoint","validateOpts","bits2int","bits2int_modN","lowS","CURVE_ORDER","compressedLen","uncompressedLen","isValidFieldElement","modN","invN","cat","y2","isYOdd","isHeadOdd","numToNByteStr","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","rec","radj","prefix","fromHex","ir","u2","hasHighS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","randomPrivateKey","rand","precompute","getPublicKey","fromPrivateKey","isProbPub","getSharedSecret","privateA","publicB","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","prehash","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","privKey","drbg","verify","sg","_sig","fromDER","derError","fromCompact","is","SWUFpSqrtRatio","c3","c4","c5","c6","c7","sqrtRatio","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","mapToCurveSimpleSWU","A","tv6","instance","checkFinished","destroyed","assert","setBigUint64","view","_32n","_u32_max","wh","wl","SHA2","Hash","padOffset","take","dataView","roundClean","digestInto","oview","outLen","destroy","_cloneInto","HMAC","_key","iHash","oHash","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","C","D","W15","W2","s0","rotr","s1","sigma1","T1","sigma0","T2","SHA224","wrapConstructor","sha224","u8","u32","uint8a","nextTick","asyncLoop","iters","tick","ts","arrays","clone","isPlainObject","prototype","checkOpts","merged","hashConstructor","hashC","wrapConstructorWithOpts","hashCons","bytesLength","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","a1","a2","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","charCodeAt","pointToBytes","numTo32b","modP","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","schnorr","isoMap","htf","mapSWU","scalars","Rho","Id","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","er","rGroup","hbl","hbr","rr","sr","tl","tr","_superPropBase","property","hasOwnProperty","_get","Reflect","receiver","desc","getOwnPropertyDescriptor","arguments","wrap","deprecate","parsers","configurable","createParserGetter","writable","_urlencoded","_json","next","loadParser","parserName","parser","createError","iconv","onFinished","unpipe","zlib","_body","encoding","contentstream","inflate","encodingExists","toUpperCase","charset","_error","onfinished","createInflate","pipe","createGunzip","isFinished","resume","contentType","typeis","FIRST_CHAR_REGEXP","JSON_SYNTAX_CHAR","JSON_SYNTAX_REGEXP","reviver","strict","shouldParse","typeChecker","first","firstchar","createStrictSyntaxError","normalizeJsonSyntaxError","jsonParser","hasBody","getCharset","char","partial","SyntaxError","placeholder","exec","parameters","getOwnPropertyNames","checkType","rawParser","text","defaultCharset","textParser","queryparse","extendedparser","simpleparser","urlencodedParser","parameterLimit","isFinite","paramCount","parameterCount","arrayLimit","allowPrototypes","Infinity","maxKeys","formatArgs","save","load","useColors","chrome","local","localstorage","colors","document","documentElement","style","WebkitAppearance","firebug","exception","table","userAgent","RegExp","$1","formatters","namespace","humanize","color","lastC","Function","namespaces","removeItem","enable","localStorage","createDebug","coerce","disable","names","skips","prevTime","selectColor","curr","ms","prev","unshift","format","formatter","split","substr","test","long","fmtLong","fmtShort","parseFloat","plural","asyncHooks","tryRequireAsyncHooks","getRawBody","ICONV_ENCODING_MESSAGE_REGEXP","getDecoder","readStream","executor","onRead","halt","complete","sync","expected","_readableState","_decoder","decoder","readable","received","onAborted","onData","onEnd","invokeCallback","chunk","removeListener","AsyncResource","runInAsyncScope","Zstream","zlib_deflate","zlib_inflate","constants","NONE","DEFLATE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","GZIP_HEADER_ID1","GZIP_HEADER_ID2","Zlib","mode","dictionary","init_done","level","memLevel","windowBits","write_in_progress","pending_close","gzip_id_bytes_read","close","deflateEnd","strm","inflateEnd","in_off","in_len","out_off","out_len","_write","writeSync","equal","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","alloc","avail_in","next_in","avail_out","next_out","_process","_checkError","_afterSync","_after","next_expected_header_byte","deflate","Z_NEED_DICT","inflateSetDictionary","Z_OK","Z_DATA_ERROR","Z_STREAM_END","Z_BUF_ERROR","onerror","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_init","_setDictionary","_reset","deflateInit2","Z_DEFLATED","inflateInit2","deflateSetDictionary","deflateReset","inflateReset","Transform","binding","kMaxLength","kRangeErrorMessage","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","bkeys","bk","bkey","codes","Z_ERRNO","Z_STREAM_ERROR","Z_MEM_ERROR","Z_VERSION_ERROR","ckeys","ck","ckey","Deflate","Inflate","Gzip","Gunzip","DeflateRaw","InflateRaw","Unzip","createDeflate","createDeflateRaw","createInflateRaw","createGzip","createUnzip","zlibBuffer","deflateSync","zlibBufferSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","engine","buffers","nread","onError","flow","once","isBuffer","flushFlag","_finishFlushFlag","_processChunk","isValidFlushFlag","_this","_chunkSize","finishFlush","_flushFlag","_handle","_hadError","errno","_close","_buffer","allocUnsafe","_offset","_level","_strategy","inherits","_flush","_transform","kind","_this2","_writableState","ended","ending","needDrain","emitCloseNT","last","availInBefore","availOutBefore","inOff","availInAfter","availOutAfter","have","newReq","formatThousandsRegExp","formatDecimalsRegExp","kb","mb","gb","tb","pb","parseRegExp","mag","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","floatValue","colorSupport","alwaysReturn","hasBasic","has256","has16m","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","QESC_REGEXP","QUOTE_REGEXP","TYPE_REGEXP","qstring","getcontenttype","trim","ContentType","lastIndex","vary","preflightContinue","optionsSuccessStatus","isString","isOriginAllowed","allowedOrigin","configureOrigin","requestOrigin","isAllowed","configureMethods","configureCredentials","credentials","configureAllowedHeaders","allowedHeaders","configureExposedHeaders","exposedHeaders","configureMaxAge","maxAge","applyHeaders","setHeader","statusCode","middlewareWrapper","optionsCallback","corsMiddleware","corsOptions","originCallback","err2","CRC32","factory","DO_NOT_EXPORT_CRC","signed_crc_table","Int32Array","T0","slice_by_16_tables","T","TT","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","crc32_buf","crc32_str","depd","_file","_ignored","_namespace","_traced","_warned","wrapfunction","wrapproperty","prop","descriptor","EventEmitter","ReadStream","Stream","suppress","isFsReadStream","destroyReadStream","isZlibStream","destroyZlibStream","hasDestroy","isEventEmitter","removeAllListeners","noop","onOpenClose","closeZlibStream","_binding","_processing","_needDrain","onDrainClearBinding","_destroy","fd","stuff","cleanups","ee","listener","thunk","cancel","onevent","arg1","setPrototypeOf","statuses","toIdentifier","HttpError","createHttpErrorConstructor","isHttpError","createIsHttpErrorFunction","populateConstructorExports","codeClass","charAt","props","captureStackTrace","expose","createClientErrorConstructor","className","toClassName","ClientError","nameFunc","createServerErrorConstructor","ServerError","func","forEachCode","CodeError","ctor","superCtor","super_","TempCtor","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","SEQ_START","NODE_START","UNASSIGNED_NODE","DEF_CHAR","codecOptions","encodingName","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","_fillEncodeTable","encodeAdd","uChar","_setEncodeChar","defCharSB","defaultCharSingleByte","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","encoder","DBCSEncoder","DBCSDecoder","_getDecodeTrieNode","curAddr","writeTable","part","codeTrail","seq","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","nodeIdx","mbCode","codec","leadSurrogate","seqObj","newBuf","nextChar","resCode","subtable","findIdx","uChars","gbChars","prevBuf","prevBufOffset","seqStart","curByte","curSeq","ptr","uCodeLead","modules","enc","utf8","bomAware","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","_internal","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","InternalEncoder","InternalDecoder","StringDecoder","prevStr","completeQuads","bufIdx","contBytes","accBytes","fromCharCode","_sbcs","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","idx1","idx2","utf16be","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","buf2","utf16","Utf16Codec","Utf16Encoder","Utf16Decoder","addBOM","getEncoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","trail","asciiCharsLE","asciiCharsBE","utf7","Utf7Codec","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","lastI","b64str","canBeDecoded","utf7imap","Utf7IMAPCodec","Utf7IMAPEncoder","Utf7IMAPDecoder","base64AccumIdx","base64IMAPChars","BOMChar","PrependBOM","PrependBOMWrapper","StripBOM","StripBOMWrapper","pass","stripBOM","bomHandling","encodings","skipDecodeWarning","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","nodeVer","versions","nodeVerArr","ContainerIterator","iteratorType","iter","_node","Base","_length","empty","Container","_ContainerBase","_checkObject","_interopRequireDefault","_throwError","HashContainerIterator","_header","pre","_pre","throwIteratorAccessError","_next","HashContainer","_objMap","_originMap","HASH_TAG","Symbol","_head","_tail","_eraseNode","_set","isObject","checkObject","newTail","_findElementNode","eraseElementByIterator","eraseElementByPos","_Base","HashMapIterator","pointer","Proxy","HashMap","rBegin","rEnd","front","back","getElementByPos","iterator","_default","HashSetIterator","HashSet","PriorityQueue","cmp","_cmp","_priorityQueue","halfLength","parent","_pushDown","_pushUp","parentItem","minItem","top","updateItem","toArray","Queue","_first","_queue","element","capacity","_stack","RandomIterator","setElementByPos","SequentialContainer","_RandomIterator","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","newObj","hasPropertyDescriptor","DequeIterator","Deque","_bucketSize","_curFirst","_last","_curLast","_bucketNum","_map","needBucketNum","pushBack","_reAllocate","newMap","addBucketNum","_getElementIndex","curNodeBucketIndex","curNodePointerIndex","popBack","pushFront","popFront","cut","curBucket","curPointer","nextBucket","nextPointer","eraseElementByValue","unique","cur","shrinkToFit","LinkListIterator","LinkList","_insertNode","curNode","pHead","pTail","cnt","tmpNode","list","VectorIterator","Vector","_vector","TreeIterator","_left","_right","_parent","_subTreeSize","TreeNode","_color","preNode","nextNode","_rotateLeft","PP","V","_rotateRight","K","TreeNodeEnableIndex","_recount","_TreeNode","TreeContainer","enableIndex","_TreeNodeClass","_lowerBound","resNode","cmpResult","_upperBound","_reverseLowerBound","_reverseUpperBound","_eraseNodeSelfBalance","brother","swapNode","_inOrderTraversal","nodeList","_insertNodeSelfBalance","grandParent","uncle","GP","hint","minNode","compareToMin","maxNode","compareToMax","iterNode","iterCmpRes","preCmpRes","_getTreeNodeByKey","updateKeyByIterator","preKey","hasNoRight","isNormal","getHeight","traversal","_TreeIterator","OrderedMapIterator","lowerBound","upperBound","reverseLowerBound","reverseUpperBound","union","OrderedSetIterator","OrderedSet","_Deque","_HashMap","_HashSet","_LinkList","_OrderedMap","_OrderedSet","_PriorityQueue","_Queue","_Stack","_Vector","paramRegExp","textRegExp","tokenRegExp","qescRegExp","quoteRegExp","subtypeNameRegExp","typeNameRegExp","typeRegExp","subtype","splitType","lastIndexOf","recursive","main","_i","_merge","_recursiveMerge","isClone","isRecursive","extname","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","charsets","lookup","extension","extensions","types","populateMaps","mime","exts","path","preference","forEachMimeType","source","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","shouldUseNative","test1","test2","order2","test3","letter","symbols","defer","setImmediate","attachListener","socket","upgrade","attachFinishedListener","eeMsg","eeSocket","onFinish","onSocket","patchAssignSocket","attached","__onFinished","createListener","assignSocket","_assignSocket","TYPED_OK","Uint16Array","_has","sources","shrinkBuf","fnTyped","arraySet","src_offs","dest_offs","flattenChunks","fnUntyped","setTyped","Buf8","Buf16","Buf32","adler32","adler","s2","Z_TREES","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","Z_UNKNOWN","makeTable","crcTable","crc32","crc","trees","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","rank","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","hash_size","ins_h","hash_shift","hash_mask","deflate_stored","max_block_size","pending_buf_size","max_start","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","lm_init","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateSetHeader","deflateInit","old_flush","beg","hcrc","extra","comment","os","level_flags","bstate","_tr_align","_tr_stored_block","dictLength","avail","tmpDict","deflateInfo","BAD","TYPE","inflate_fast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","dist","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","inflate_table","CODES","LENS","DISTS","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","DEF_WBITS","zswap32","InflateState","havedict","flags","total","ncode","nlen","ndist","lens","work","lendyn","distdyn","was","inflateResetKeep","inflateReset2","inflateInit","virgin","lenfix","distfix","fixedtables","sym","updatewindow","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateGetHeader","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","table_index","drop","used","huff","base_index","offs","extra_index","STORED_BLOCK","STATIC_TREES","DYN_TREES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","bi_reverse","bi_flush","gen_bitlen","stree","xbits","overflow","gen_codes","next_code","tr_static_init","init_block","bi_windup","copy_block","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","scan_tree","prevlen","curlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","black_mask","static_init_done","stored_len","opt_lenb","static_lenb","ZStream","percentTwenties","Format","RFC1738","RFC3986","formats","allowDots","allowSparse","charsetSentinel","comma","delimiter","ignoreQueryPrefix","interpretNumericEntities","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","isoSentinel","parseValues","parseQueryStringValues","cleanStr","parts","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseObject","valuesParsed","leaf","cleanRoot","parseKeys","parseQueryStringKeys","givenKey","brackets","segment","normalizeParseOptions","isRegExp","tempObj","compact","getSideChannel","arrayPrefixGenerators","indices","pushToArray","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","encodeValuesOnly","serializeDate","date","skipNulls","isNonNullishPrimitive","sentinel","generateArrayPrefix","commaRoundTrip","sideChannel","tmpSc","findFlag","keyValue","valuesArray","valuesJoined","objKeys","adjustedPrefix","valueSideChannel","normalizeStringifyOptions","arrayFormat","joined","hexTable","compactQueue","compacted","arrayToObject","mergeTarget","targetItem","assignSingleSource","strWithoutPlus","unescape","decodeURIComponent","defaultEncoder","escape","refs","mapped","wasm","getObject","heap_next","dropObject","takeObject","cachedTextDecoder","ignoreBOM","fatal","cachedUint8Memory0","getUint8Memory0","getStringFromWasm0","addHeapObject","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","encodeInto","written","passStringToWasm0","malloc","realloc","cachedInt32Memory0","getInt32Memory0","debugString","description","builtInMatches","_assertClass","klass","fr_add","FrWrapper","ptr0","__destroy_into_raw","ptr1","__wrap","fr_sub","fr_mul","fr_div","fr_sqrt","retptr","__wbindgen_add_to_stack_pointer","r0","r1","r2","fr_square","passArray8ToWasm0","getArrayU8FromWasm0","stack_pointer","addBorrowedObject","commit_scalar_values","ElementWrapper","address_tree_index","js_root","js_proof","js_key_values","element_add","element_sub","handleError","__wbindgen_exn_store","__wbg_ptr","free","__wbg_elementwrapper_free","__wbindgen_malloc","len0","elementwrapper_fromBytes","elementwrapper_generator","element_wrapper","scalar_wrapper","elementwrapper_scalarMul","elementwrapper_zero","toHexString","deferred1_0","deferred1_1","elementwrapper_toHexString","__wbindgen_free","elementwrapper_toBytes","v1","mapToScalarField","elementwrapper_mapToScalarField","__wbg_frwrapper_free","frwrapper_fromBytes","__wbindgen_realloc","frwrapper_fromDecimalString","frwrapper__default","frwrapper_toHexString","frwrapper_toBytes","toSerializableWrapper","frwrapper_toSerializableWrapper","SerializableFrWrapper","__wbg_serializablefrwrapper_free","__wbg_load","imports","Response","WebAssembly","instantiateStreaming","arrayBuffer","instantiate","Instance","__wbg_get_imports","wbg","__wbindgen_object_drop_ref","arg0","__wbindgen_string_new","__wbindgen_json_serialize","len1","__wbg_log_ca2cef7e603e7b33","__wbindgen_is_null","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","__wbg_get_44be0491f933a435","__wbg_length_fff51ee6522a1a18","__wbg_next_ddb3312ca1c4e32a","__wbg_done_5c1f01fb660d73b5","__wbg_value_1695675138684bd5","__wbg_from_d7c216d4616bb368","__wbg_entries_b5bd4a28ac6701ef","__wbg_buffer_085ec1f694018c4f","__wbg_newwithbyteoffsetandlength_6da8e527659b86aa","arg2","__wbg_new_8125e318e6245eed","__wbg_set_5cf90238115182c3","__wbg_length_72e2208bbc0efc61","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbg_init_memory","maybe_memory","__wbg_finalize_init","__wbg_init","__wbindgen_wasm_module","initSync","Module","Request","fetch","_typeof","_wasm","_regeneratorRuntime","asyncIterator","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","rval","handle","_catch","delegateYield","asyncGeneratorStep","_throw","_asyncToGenerator","_ptr","input_hex","deferred2_0","deferred2_1","input_str","_ref","_callee","wasmInstance","_callee$","_context","compile","stringToBytes","bytesToString","bech32m","bech32","base58check","createBase58check","base58xmr","base58xrp","base58flickr","base58","base64urlnopad","base64url","base32crockford","base32hex","base32","base16","assertNumber","alphabet","digits","separator","padding","chr","normalize","convertRadix","carry","digit","digitBase","rounded","radix2carry","convertRadix2","radix","radix2","revPadding","unsafeWrapper","checksum","newChecksum","oldChecksum","genBase58","abc","XMR_BLOCK_LEN","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","chk","bechChecksum","encodingConst","genBech32","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","actualLength","lowered","sepIndex","endsWith","decodeUnsafe","decodeToBytes","CODERS","coderTypeError","global","nextHandle","tasksByHandle","currentlyRunningATask","doc","registerImmediate","task","clearImmediate","runIfPresent","installNextTickImplementation","canUsePostMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","random","onGlobalMessage","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","script","createElement","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","setProtoOf","mixinProperties","proto","GetIntrinsic","callBound","inspect","$TypeError","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","listGet","objects","listSet","listHas","$wm","$m","$o","$SyntaxError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","callee","calleeThrows","gOPDthrows","hasSymbols","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","ArrayBuffer","Atomics","decodeURI","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","ReferenceError","SharedArrayBuffer","Uint8ClampedArray","URIError","WeakRef","WeakSet","doEval","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","rePropName","reEscapeChar","stringToPath","quote","subString","getBaseIntrinsic","allowMissing","intrinsicName","alias","intrinsicBaseName","intrinsic","intrinsicRealName","skipFurtherCaching","isOwn","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","hasWeakMap","weakMapHas","hasWeakSet","weakSetHas","hasWeakRef","weakRefDeref","deref","booleanValueOf","valueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","isEnumerable","gPO","O","addNumericSeparator","sepRegex","int","intStr","dec","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","inspect_","quoteStyle","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","isElement","nodeName","attrs","attributes","wrapQuotes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBoolean","isDate","ys","protoTag","stringTag","toStr","constructorTag","defaultStyle","quoteChar","HTMLElement","getAttribute","trailer","lowbyte","joinedEntries","baseIndent","lineJoiner","isArr","syms","symMap","createMessageToStatusCodeMap","createStatusCodeList","redirect","retry","mapCode","getStatusCode","getStatusMessage","dateRegex","timespan","YYYY","YY","MM","DD","HH","mm","ss","utc","rest","token","typer","typeofrequest","hasbody","mimeMatch","types_","tryNormalizeType","actual","actualParts","expectedParts","normalizeType","hasPipeDataListeners","listeners","append","FIELD_NAME_REGEXP","fields","vals","fld","inputStorageKeysFormatter","numberToHex","outputProofFormatter","hexToNumberString","outputBigIntegerFormatter","inputBlockNumberFormatter","isNullish","isBlockTag","isHexStrict","inputDefaultBlockNumberFormatter","inputAddressFormatter","Iban","isDirect","iban","FormatterError","txInputOptionsFormatter","modifiedOptions","maxPriorityFeePerGas","inputCallFormatter","defaultAccount","inputTransactionFormatter","inputSignFormatter","utf8ToHex","outputTransactionFormatter","modifiedTx","inputTopicFormatter","isHex","fromUtf8","inputLogFormatter","mergeDeep","fromBlock","BlockTags","LATEST","toBlock","outputLogFormatter","modifiedLog","logIndex","shaId","sha3Raw","outputTransactionReceiptFormatter","modifiedReceipt","effectiveGasPrice","outputBlockFormatter","modifiedBlock","inputPostFormatter","post","modifiedPost","ttl","workToProve","outputPostFormatter","expiry","workProved","toUtf8","outputSyncingFormatter","modifiedResult","startingBlock","currentBlock","highestBlock","knownStates","pulledStates","isWeb3Provider","Web3BaseProvider","isLegacyRequestProvider","request","isEIP1193Provider","isLegacySendProvider","isLegacySendAsyncProvider","isSupportedProvider","isSupportSubscriptions","DEFAULT_BATCH_REQUEST_TIMEOUT","Web3BatchRequest","_requestManager","_requests","requests","jsonRpc","toPayload","promise","Web3DeferredPromise","execute","timeout","eagerStart","timeoutMessage","_processBatchRequest","OperationTimeoutError","_abortAllRequests","sendBatch","ResponseError","requestIds","responseIds","isResponseWithResult","isResponseWithError","OperationAbortError","Web3ConfigEvent","Web3Config","Web3EventEmitter","handleRevert","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingInterval","transactionPollingTimeout","transactionReceiptPollingInterval","transactionSendTimeout","transactionConfirmationPollingInterval","blockHeaderTimeout","maxListenersWarningThreshold","contractDataInputFill","defaultNetworkId","defaultChain","defaultHardfork","defaultCommon","defaultTransactionType","defaultMaxPriorityFeePerGas","enableExperimentalFeatures","useSubscriptionWhenCheckingBlockTimeout","useRpcCallSpecification","transactionBuilder","transactionTypeParser","setConfig","_triggerConfigChange","setMaxListenerWarningThreshold","baseChain","ConfigChainMismatchError","ConfigHardforkMismatchError","CONFIG_CHANGE","oldValue","Web3Context","providerOrContext","Web3RequestManager","_subscriptionManager","Web3SubscriptionManager","subscriptionManager","registeredSubscriptions","accountProvider","_accountProvider","wallet","_wallet","getContextObject","ContextRef","newContextChild","link","parentContext","plugin","pluginNamespace","ExistingPluginNamespaceError","_pluginObject","givenProvider","BatchRequest","extendObj","givenParams","Web3EthPluginBase","_emitter","eventName","off","eventNames","setMaxListeners","getMaxListeners","Web3PromiEvent","_promise","onfulfilled","onrejected","finally","onfinally","Web3RequestManagerEvent","availableProviders","WebsocketProvider","newProvider","ProviderError","BEFORE_PROVIDER_CHANGE","PROVIDER_CHANGED","_sendRequest","isBatchRequest","toBatchPayload","_processJsonRpcResponse","legacy","rejectWithError","resolveWithResponse","isPromise","responsePromise","_buildResponse","isResponseRpcError","rpcErrorResponse","rpcErrorsMap","RpcError","_isReverted","InvalidResponseError","isBatchResponse","ContractExecutionError","tolerateUnlinkedSubscription","_subscriptions","listenToProviderEvents","providerAsWebProvider","messageListener","SubscriptionError","subscription","processSubscriptionData","returnFormat","DEFAULT_RETURN_FORMAT","Klass","addSubscription","subscriptions","sendSubscriptionRequest","removeSubscription","sendUnsubscribeRequest","Web3Subscription","_returnFormat","_id","_lastBlock","_processSubscriptionResult","isResponseWithNotification","_buildSubscriptionParams","resubscribe","formatSubscriptionResult","_processSubscriptionError","encodeErrorSignature","functionName","isAbiErrorFragment","AbiError","jsonInterfaceMethodToString","encodeEventSignature","isAbiEventFragment","encodeFunctionSignature","isAbiFunctionFragment","encodeFunctionCall","jsonInterface","encodeParameters","inputs","STATIC_TYPES","_decodeParameter","inputType","clonedTopic","decodeParameter","decodeLog","clonedTopics","indexedInputs","nonIndexedInputs","indexed","decodedNonIndexedInputs","decodeParametersWith","__length__","decodedIndexedInputs","returnValues","indexedCounter","nonIndexedCounter","abi","encodeParameter","abis","loose","decodeParameters","internalErr","ADDRESS_BYTES_COUNT","ADDRESS_OFFSET","WORD_SIZE","encodeAddress","hexToUint8Array","dynamic","decodeAddress","_param","uint8ArrayToHexString","consumed","encodeArray","arrayItemParam","extractArrayType","encodedParams","encodeParamFromAbiParameter","dynamicItems","arrayLength","argumentsLength","encodingResult","encodeDynamicParams","encodedLength","encodeNumber","uint8ArrayConcat","decodeArray","lengthResult","decodeNumber","hasDynamicChild","isDynamic","offsetResult","decodedChildResult","decodeParamFromAbiParameter","encodeBoolean","toBool","InvalidBooleanError","decodeBool","numberResult","boolBytes","MAX_STATIC_BYTES_COUNT","encodeBytes","bytesToUint8Array","partsLength","decodeBytes","sizeString","remainingBytes","partsCount","decodeString","encodeTuple","decodeTuple","bigIntToUint8Array","hexValue","padLeft","uint8ArrayToBigInt","numberLimits","minimum","maximum","bytesLeft","hexToUtf8","narrowedInput","components","paramComponent","paramInput","paramName","dynamicConsumed","childParam","decodedResult","staticSize","dynamicSize","staticParams","dynamicParams","encodedParam","_loose","abiParams","toAbiParams","bytesArray","convertExternalAbiParameter","abiParam","isAbiParameter","parseAbiParameter","isSimplifiedStructFormat","structName","structInfo","mapStructNameAndType","mapStructToCoderFormat","arrayParenthesisStart","arrayParamType","decodeContractErrorData","errorsAbi","errorName","errorSignature","errorArgs","errorSha","errorAbi","setDecodedProperties","TYPE_REGEX","ARRAY_REGEX","getDependencies","typedData","dependencies","actualType","previous","_type","dependency","encodeType","primary","getTypeHash","getStructHash","encodeData","getMessage","EIP_191_PREFIX","domain","primaryType","encodeValue","arrayType","encodedData","_types","_values","isAbiFragment","isAbiConstructorFragment","struct","mapTypes","mappedTypes","modifiedType","isOddHexstring","formatOddHexstrings","formatParam","paramTypeBytes","paramTypeBytesArray","paramTypeNumber","paramTypeNumberArray","paramClone","leftPad","hexParam","paddedParam","rightPad","flattenTypes","includeTuple","puts","arrayBracket","parseAndValidatePrivateKey","ignoreLength","privateKeyUint8Array","PrivateKeyLengthError","InvalidPrivateKeyError","hashMessage","messageHex","messageBytes","preamble","ethMessage","signatureBytes","messageHash","signTransaction","signedTx","TransactionSigningError","validationErrors","validate","errorString","validationError","rawTx","getMessageToSign","rawTransaction","recoverTransaction","UndefinedRawTransactionError","TransactionFactory","fromSerializedData","signatureOrV","prefixedOrR","prefixed","signatureStr","InvalidSignatureError","V_INDEX","hashedMessage","ecPublicKey","publicHash","privateKeyToAddress","publicKeyHash","privateKeyToPublicKey","encrypt","password","InvalidPasswordError","uint8ArrayPassword","initializationVector","iv","IVLengthError","kdf","derivedKey","kdfparams","dklen","prf","PBKDF2IterationsError","pbkdf2Sync","scryptSync","InvalidKdfError","cipher","ciphertext","mac","uuidV4","cipherparams","decrypt","keystore","nonStrict","validator","validateJSONSchema","keyStoreSchema","KeyStoreVersionError","uint8ArraySalt","KeyDerivationError","crc32Uint8Array","_eips","_customChains","customChains","_chainParams","setChain","Merge","HARDFORK_CHANGES","setEIPs","chainParamsOrName","standardChainParams","_getChainParams","CustomChain","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","OptimisticEthereum","genesisJson","genesisParams","parseGethGenesis","mergeForkIdPostMerge","setForkHashes","initializedChains","_getInitializedChains","_chain","required","existing","hfChanges","getHardforkByBlockNumber","_blockNumber","_td","_timestamp","mergeIndex","doubleTTDHF","hfIndex","stepBack","hfStartIndex","minTimeStamp","maxTimeStamp","setHardforkByBlockNumber","_getHardfork","EIPs","minHF","minimumHardfork","requiredEIPs","paramByEIP","paramByHardfork","hfEIPs","valueEIP","eipParams","paramByBlock","hfBlock","activeOnBlock","hardforkGteHardfork","_hardfork1","hardfork2","hardfork1","posHf1","posHf2","hardforkTimestamp","eipBlock","hardforkTTD","isHardforkBlock","nextHardforkBlockOrTimestamp","currHfTimeOrBlock","nextHf","hfTimeOrBlock","nextHfBlock","nextHardforkBlock","isNextHardforkBlock","_calcForkHash","hfUint8Array","prevBlockOrTime","blockOrTime","hfBlockUint8Array","inputUint8Array","forkhash","intToUint8Array","forkHash","hardforkForForkHash","resArray","bootstrapNodes","dnsNetworks","chainName","chains","mainnet","goerli","sepolia","chainstart","homestead","dao","tangerineWhistle","spuriousDragon","byzantium","constantinople","petersburg","istanbul","muirGlacier","berlin","london","shanghai","arrowGlacier","grayGlacier","mergeForkIdTransition","isHexPrefixed","formatNonce","parseGethParams","genesisTimestamp","eip155Block","eip158Block","clique","blockperiodseconds","epochlength","forkMap","postMerge","isTimestamp","ShardingForkDev","forkMapRev","configHardforkNames","nameBlock","terminalTotalDifficulty","mergeConfig","postMergeIndex","latestHardfork","toUint8Array","isHexString","setLength","assertIsUint8Array","stripZeros","unpadUint8Array","bigIntToUnpaddedUint8Array","calculateSigRecovery","isValidSigRecovery","senderPubKey","outputType","bigInt","PrefixedHexString","properties","uint8ArrayEquals","_pubKey","sanitize","pubKey","BaseTransaction","dataFee","activeCapabilities","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","_getCommon","checkMaxInitCodeSize","capability","stringError","errors","verifySignature","_validateYParity","_validateHighS","txFee","getDataFee","toCreationAddress","txCreationFee","txDataZero","txDataNonZero","initCodeCost","getSenderPublicKey","hackApplied","EIP155ReplayProtection","_ecsign","_processSignature","chainIdBigInt","isSupportedChainId","cannotEqual","txDataKeys","_getSharedErrorPostfix","postfix","serialized","ethereumCryptography","SECP256K1_ORDER","TRANSACTION_TYPE","TRANSACTION_TYPE_UINT8ARRAY","FeeMarketEIP1559Transaction","accessListData","getAccessListData","verifyAccessList","_validateNotArray","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","prio","maxBase","getMessageToVerifySignature","fromTxData","accessListJSON","getAccessListJSON","AccessListEIP2930Transaction","emptyAccessList","Transaction","meetsEIP155","_v","chainIdDoubled","_validateTxV","_getMessageToSign","numSub","extraTxTypes","txClass","typeToInt","ExtraTransaction","fromSerializedTx","isAccessListUint8Array","firstItem","isAccessList","maxInitCodeSize","uint8arrayAccessList","newAccessList","storageItems","jsonItem","storageSlot","JSONItem","accessListStorageKeyCost","accessListAddressCost","Wallet","Web3BaseWallet","_addressMap","_defaultKeyName","setItem","numberOfAccounts","existAccount","addressOrIndex","encryptedWallets","keyName","getStorage","getItem","outputLength","encodeLength","inputBuf","safeSlice","decodeLength","parseHexByte","hexLength","lLength","firstByte","inputBytes","_decode","remainder","llength","innerRemainder","totalLength","cachedHexes","utf","integer","U32_MASK64","fromBig","le","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","pbkdf2Init","_password","asyncTick","DK","PRF","PRFSalt","pbkdf2Output","prfW","pbkdf2","ti","Ti","setInt32","pbkdf2Async","XorAndSalsa","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","maxmem","onProgress","blockSize","blockSize32","memUsed","B32","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","scrypt","scryptAsync","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","enableXOF","posOut","state32","writeInto","bufferOut","xofInto","xof","sha3_224","sha3_256","sha3_384","sha3_512","genShake","shake128","shake256","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","sha512_224","sha512_256","sha384","crypto_1","validateOpt","getBrowserKey","keyMode","wKey","subtle","importKey","counter","pkcs7PaddingEnabled","wOpt","createCipheriv","setAutoPadding","final","getPadding","cypherText","msgBytes","encrypted","decipher","createDecipheriv","pbkdf2_1","sha512_1","keylen","scrypt_1","secp256k1_1","contractSubscriptions","LogsSubscription","newHeads","NewHeadsSubscription","newBlockHeaders","Contract","addressOrOptionsOrContext","optionsOrContextOrReturnFormat","contextOrReturnFormat","isContractInitOptions","contractContext","isWeb3ContractContext","syncWithContext","_functions","ContractTransactionDataAndInputError","_overloadedMethodAbis","returnDataFormat","isDataFormat","_dataInputFill","dataInputFill","_parseAndSetJsonInterface","_parseAndSetAddress","_jsonInterface","subscribeToContextEvents","_events","_methods","newContract","_errorsInterface","deploy","deployOptions","stateMutability","_input","_data","Web3ContractError","contractOptions","deployData","_contractMethodDeploySend","estimateGas","_contractMethodEstimateGas","encodeABI","encodeMethodABI","getPastEvents","param1","param2","param3","ALL_EVENTS","ALL_EVENTS_ABI","encodeEventABI","decodedLogs","decodeEventABI","filterKeys","inputAbi","hashedIndexedString","functionsAbi","methodName","methodSignature","payable","abiFragment","contractMethod","_createContractMethod","eventSignature","_createContractEvent","allEvents","_getAbiParams","transformJsonDataToAbiFormat","abiArr","errorsAbis","methodAbi","internalErrorsAbis","arrayOfAbis","_abi","_a","Web3ValidatorError","_contractMethodCall","_contractMethodSend","createAccessList","_contractMethodCreateAccessList","getEthTxCallParams","decodeMethodReturn","innerError","getCreateAccessListParams","modifiedContractOptions","getSendTxParams","transactionToSend","sendTransaction","checkRevertBeforeSending","contractAbi","transactionResolver","getEstimateGasParams","contractThis","blockSchema","FMT_NUMBER","HEX","FMT_BYTES","anonymous","inputLength","outputs","dataInputEncodeMethodHelper","txParams","deploymentCall","dataInput","ENSRegistryAbi","internalType","PublicResolverAbi","interfaceIds","pubkey","contenthash","methodsInInterface","setAddr","setPubkey","setContenthash","registryAddresses","networkIds","ENS","registryAddr","registryAddress","_registry","Registry","_resolver","Resolver","getResolver","recordExists","getTTL","getOwner","ENSName","coinType","getPubkey","getContenthash","checkNetwork","_lastSyncCheck","syncInfo","isSyncing","ENSNetworkNotSyncedError","_detectedAddress","networkType","getId","ENSUnsupportedNetworkError","supportsInterface","interfaceId","customRegistryAddress","owner","namehash","registry","getResolverContractAdapter","checkInterfaceSupport","resolverContract","ResolverMethodMissingError","supported","interfaceIdParam","ens_normalize","inputName","labels","labelSha","base36","_iban","parsedBigInt","paddedBigInt","isIndirect","_mod9710","_iso13616Prepare","bban","countryCode","checkDigit","fromBban","institution","identifier","InvalidAddressError","padded","fromAddress","client","upperIban","modifiedIban","ibanObject","Personal","getAccounts","rpcWrappers","unlockAccount","unlockDuration","lockAccount","importRawKey","keyData","passphrase","ecRecover","signedData","personalRpcMethods","formattedTx","formatTransaction","ETH_DATA_FORMAT","dataToSign","signedDataString","NUMBER_DATA_FORMAT","NUMBER","detectTransactionType","Web3Eth","getProtocolVersion","web3Context","ethRpcMethods","getSyncing","getCoinbase","isMining","getMining","getHashRate","getGasPrice","getBalance","blockNumberFormatted","storageSlotFormatted","hydrated","blockHashFormatted","getBlockByHash","getBlockByNumber","getBlockTransactionCount","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getBlockUncleCount","getUncleCountByBlockHash","getUncleCountByBlockNumber","getUncle","uncleIndex","uncleIndexFormatted","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","transactionHashFormatted","getTransactionByHash","fillInputAndData","getPendingTransactions","transactionIndexFormatted","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","transactionReceiptSchema","getTransactionCount","promiEvent","sendTxHelper","SendTxHelper","transactionFormatted","getTransactionFromOrToAttr","populateGasPrice","emitSending","signAndSend","emitSent","emitTransactionHash","transactionReceipt","waitForTransactionReceipt","transactionReceiptFormatted","getReceiptWithEvents","emitReceipt","handleResolve","emitConfirmation","sendSignedTransaction","signedTransaction","signedTransactionFormattedHex","unSerializedTransaction","unSerializedTransactionWithFrom","txWithoutSigParams","trySendTransaction","sendRawTransaction","messageFormatted","signed","SignatureObjectSchema","SignatureError","decodeSignedTransaction","formattedFilter","logSchema","storageKeysFormatted","accountSchema","getFeeHistory","blockCount","newestBlock","rewardPercentiles","blockCountFormatted","newestBlockFormatted","rewardPercentilesFormatted","feeHistorySchema","accessListResultSchema","signTypedData","useLegacy","accessListItemSchema","accessListSchema","chainSchema","enum","hardforkSchema","customChainSchema","transactionSchema","oneOf","customChain","transactionInfoSchema","withdrawalsSchema","validatorIndex","blockHeaderSchema","author","excessDataGas","removed","syncSchema","oldestBlock","gasUsedRatio","storageProofSchema","encodedSignedTransaction","detectRawTransactionType","modifiedEvent","matchedEvent","argTopics","transactionType0x0Schema","transactionType0x1Schema","transactionType0x2Schema","validateTxTypeAndHandleErrors","txSchema","InvalidPropertiesForTransactionTypeError","defaultTransactionTypeParser","givenHardfork","hardforkIndex","HardforksOrdered","formattedTransaction","TransactionDataAndInputError","parseTransactionError","Eip838ExecutionError","customErrorName","customErrorDecodedSignature","customErrorArguments","getRevertReason","getTransactionError","receivedError","knownReason","_reason","TransactionRevertedWithoutReasonError","TransactionRevertInstructionError","reasonWithCustomError","TransactionRevertWithCustomError","getEip1559GasPricing","Eip1559NotSupportedError","convertedTransactionGasPrice","getTransactionGasPricing","transactionType","getTransactionType","UnsupportedTransactionTypeError","getEthereumjsTxDataFromTransaction","getEthereumjsTransactionOptions","hasTransactionSigningOptions","prepareTransactionForSigning","fillGasPrice","fillGasLimit","populatedTransaction","validateTransactionForSigning","resolveByPolling","starterBlockNumber","pollingInterval","intervalId","promiseToError","rejectIfConditionAtInterval","numberOfBlocks","TransactionBlockTimeoutError","clean","clearInterval","resolveBySubscription","needToWatchLater","resourceCleaner","revertToPolling","previousError","newResourceCleaner","lastBlockHeader","rejectIfBlockTimeout","callingRes","ignoreGasPricing","watchTransactionForConfirmations","attr","LocalWalletNotAvailableError","InvalidTransactionWithSender","InvalidTransactionWithReceiver","getTransactionNonce","UnableToPopulateNonceError","inferredType","defaultTransactionBuilder","sendTransactionFunc","timeoutId","rejectOnTimeout","rejectIfTimeout","TransactionSendTimeoutError","numberOfSeconds","rejectOnBlockTimeout","blockTimeoutResourceCleaner","race","clearTimeout","awaitableTransactionReceipt","IntervalId","pollTillDefinedAndReturnIntervalId","TransactionPollingTimeoutError","watchTransactionByPolling","transactionPromiEvent","confirmations","setInterval","latestBlockHash","watchTransactionBySubscription","lastCaughtBlockHash","newBlockHeader","TransactionMissingReceiptOrBlockHashError","TransactionReceiptMissingBlockNumberError","isBaseTransaction","isAccessListEntry","isHexString32Bytes","accessListEntry","isTransaction1559Unsigned","isTransaction2930Unsigned","isTransactionLegacyUnsigned","isTransactionWithSender","validateTransactionWithSender","isTransactionCall","validateTransactionCall","InvalidTransactionCall","validateCustomChainInfo","MissingCustomChainError","MissingCustomChainIdError","ChainIdMismatchError","txChainId","customChainId","validateChainInfo","CommonOrChainAndHardforkError","MissingChainOrHardforkError","validateBaseChain","ChainMismatchError","txChain","validateHardfork","HardforkMismatchError","txHardfork","commonHardfork","validateLegacyGas","isUInt","InvalidGasOrGasPrice","UnsupportedFeeMarketError","validateFeeMarketGas","Eip1559GasPriceError","InvalidMaxPriorityFeePerGasOrMaxFeePerGas","validateGas","gasPresent","legacyGasPresent","feeMarketGasPresent","MissingGasError","TransactionGasMismatchError","overrideMethod","InvalidTransactionObjectError","InvalidNonceOrChainIdError","newPendingTransactions","NewPendingTransactionsSubscription","syncing","SyncingSubscription","pendingTransactions","getHashrate","rpcMethodsWrappers","hexAddresses","TransactionNotFound","getPastLogs","getWork","submitWork","requestAccounts","getNodeInfo","clearSubscriptions","notClearSyncing","shouldClearSubscription","mappedData","Net","getPeerCount","isListening","netRpcMethods","clientUrl","httpProviderOptions","validateClientUrl","InvalidClientError","MethodNotImplementedError","requestOptions","providerOptionsCombined","providerOptions","ok","connect","reconnect","__global__","__globalThis__","DOMException","irrelevant","support","searchParams","iterable","blob","formData","isDataView","isPrototypeOf","viewClasses","isArrayBufferView","isView","normalizeName","normalizeValue","iteratorFor","Headers","thisArg","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","bufferClone","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","isConsumed","normalizeMethod","upcased","signal","referrer","reParamSearch","reQueryString","form","parseHeaders","rawHeaders","preProcessedHeaders","line","bodyInit","statusText","redirectStatuses","location","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","fixUrl","href","withCredentials","responseType","setRequestHeader","readyState","removeEventListener","polyfill","ponyfill","ctx","WebSocketProvider","SocketProvider","socketPath","socketOptions","reconnectOptions","_validateProviderPath","providerUrl","_socketConnection","CONNECTING","OPEN","_openSocketConnection","_socketPath","_socketOptions","_closeSocketConnection","_sendToSocket","ConnectionNotOpenError","_parseResponses","chunkResponseParser","parseResponse","_addSocketListeners","_onOpenHandler","_onMessageHandler","_onCloseHandler","_onErrorHandler","_removeSocketListeners","_onCloseEvent","_reconnectOptions","autoReconnect","wasClean","_reconnect","_clearQueues","_onDisconnect","WebSocket","MozWebSocket","getCompilers","compileSolidity","compileLLL","compileSerpent","newBlockFilter","newPendingTransactionFilter","filterIdentifier","getFilterChanges","getFilterLogs","submitHashrate","hashRate","rewardPercentile","initAccountsForContext","signTransactionWithContext","privateKeyBytes","privateKeyToAccountWithContext","decryptWithContext","createWithContext","Web3","Web3Validator","Eip1193Provider","Web3PkgInfo","contextInitOptions","ContractBuilder","addressOrOptions","InvalidMethodParamsError","ens","net","personal","decode_arithmetic","u16","symbol_count","pos_payload","read_width","read_buffer","read_bit","FULL","QRTR","register","range","read_payload","read_compressed_payload","unsafe_atob","width","read_deltas","read_sorted","read_sorted_arrays","read_array_while","read_mapped","read_linear_table","read_replacement_table","flat","read_transposed","dx","dy","vN","j_dy","read_trie","sorted","cps","saved","cp","r$1","FENCED","NSM_MAX","hex_cp","quote_cp","explode_cp","codePointAt","str_from_cps","fromCodePoint","compare_arrays","unpack_cc","packed","unpack_cp","SHIFTED_RANK","EXCLUSIONS","DECOMP","RECOMP","S0","L0","V0","L_COUNT","V_COUNT","T_COUNT","N_COUNT","S_COUNT","S1","L1","V1","is_hangul","compose_pair","recomp","decomposed","check_order","cc","s_index","l_index","v_index","t_index","prev_cc","composed_from_decomposed","prev_cp","composed","nfd","nfc","FE0F","STOP_CH","UNIQUE_PH","HYPHEN","read_set","MAPPED","IGNORED","CM","NSM","ESCAPE","NFC_CHECK","CHUNKS","read_chunked","UNRESTRICTED","GROUPS","WHOLE_VALID","WHOLE_MAP","recs","gs","complement","multi","VALID","Emoji","is_emoji","EMOJI_LIST","EMOJI_ROOT","safe_str_from_cps","quoter","is_combining_mark","should_escape","quoted_cp","bidi_qq","check_label_extension","check_leading_underscore","UNDERSCORE","check_fenced","error_placement","ens_emoji","ens_normalize_fragment","frag","decompose","nf","label","filter_fe0f","flatten","ens_beautify","ens_split","preserve_emoji","ef","norm","tokens","token_count","emoji","determine_group","check_group","check_whole","maker","shared","whole","groups","error_disallowed","error_group_member","quoted","gg","where","consume_emoji_reversed","eaten","TY_VALID","TY_MAPPED","TY_IGNORED","TY_DISALLOWED","TY_EMOJI","TY_NFC","TY_STOP","ens_tokenize","is_valid_or_mapped","requires_check","cps0","tokens0","collapse_valid_tokens","execTyped","regex","bytesRegex","integerRegex","isTupleRegex","__defProp","__defNormalProp","__publicField","BaseError","shortMessage","docsPath","metaMessages","narrow","errorSignatureRegex","isErrorSignature","execErrorSignature","eventSignatureRegex","isEventSignature","execEventSignature","functionSignatureRegex","isFunctionSignature","execFunctionSignature","structSignatureRegex","isStructSignature","execStructSignature","constructorSignatureRegex","isConstructorSignature","execConstructorSignature","fallbackSignatureRegex","isFallbackSignature","receiveSignatureRegex","isReceiveSignature","modifiers","eventModifiers","functionModifiers","getParameterCacheKey","parameterCache","parseSignature","structs","inputParams","splitParameters","returns","outputParams","abiParameters","abiParameterWithoutTupleRegex","abiParameterWithTupleRegex","dynamicIntegerRegex","parameterCacheKey","isTuple","isSolidityKeyword","name2","modifier","components_","isSolidityType","isValidDataLocation","abiParameter","current","protectedKeywordsRegex","parseStructs","signatures","shallowStructs","signaturesLength","propertiesLength","trimmed","resolvedStructs","entriesLength","resolveStructs","typeWithoutTupleRegex","ancestors","parseAbi","parseAbiItem","abiItem","signature_","parseAbiParameter2","parseAbiParameters","length2"],"sourceRoot":""}